{"version":3,"file":"comunica-browser.js","mappings":"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G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,KAAKC,EAAI,CAAC,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,IAAI,KAAKC,GAAK,CAAC,GAAG,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,GAAG,IAAIC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI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OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,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","sources":["webpack://Comunica/../../node_modules/asyncjoin/index.js","webpack://Comunica/../../node_modules/asyncjoin/join/DynamicNestedLoopJoin.js","webpack://Comunica/../../node_modules/asyncjoin/join/HashJoin.js","webpack://Comunica/../../node_modules/asyncjoin/join/NestedLoopJoin.js","webpack://Comunica/../../node_modules/asyncjoin/join/SymmetricHashJoin.js","webpack://Comunica/../../node_modules/asyncjoin/util/MergeIterator.js","webpack://Comunica/./engine-default.js","webpack://Comunica/QueryEngine.ts","webpack://Comunica/index-browser.ts","webpack://Comunica/ActorAbstractPath.ts","webpack://Comunica/PathVariableObjectIterator.ts","webpack://Comunica/index.ts","webpack://Comunica/ActorContextPreprocessConvertShortcuts.ts","webpack://Comunica/ActorContextPreprocessQuerySourceIdentify.ts","webpack://Comunica/ActorContextPreprocessQuerySourceSkolemize.ts","webpack://Comunica/QuerySourceSkolemized.ts","webpack://Comunica/utils.ts","webpack://Comunica/ActorContextPreprocessSetDefaults.ts","webpack://Comunica/ActorContextPreprocessSourceToDestination.ts","webpack://Comunica/ActorHashBindingsSha1.ts","webpack://Comunica/ActorHashQuadsSha1.ts","webpack://Comunica/ActorInitQuery-browser.ts","webpack://Comunica/ActorInitQueryBase.ts","webpack://Comunica/QueryEngineBase.ts","webpack://Comunica/ActorOptimizeQueryOperationAssignSourcesExhaustive.ts","webpack://Comunica/ActorOptimizeQueryOperationBgpToJoin.ts","webpack://Comunica/ActorOptimizeQueryOperationConstructDistinct.ts","webpack://Comunica/ActorOptimizeQueryOperationDescribeToConstructsSubject.ts","webpack://Comunica/ActorOptimizeQueryOperationFilterPushdown.ts","webpack://Comunica/ActorOptimizeQueryOperationGroupSources.ts","webpack://Comunica/ActorOptimizeQueryOperationJoinBgp.ts","webpack://Comunica/ActorOptimizeQueryOperationJoinConnected.ts","webpack://Comunica/ActorOptimizeQueryOperationPruneEmptySourceOperations.ts","webpack://Comunica/ActorOptimizeQueryOperationRewriteAdd.ts","webpack://Comunica/ActorOptimizeQueryOperationRewriteCopy.ts","webpack://Comunica/ActorOptimizeQueryOperationRewriteMove.ts","webpack://Comunica/ActorQueryOperationAsk.ts","webpack://Comunica/ActorQueryOperationBgpJoin.ts","webpack://Comunica/ActorQueryOperationConstruct.ts","webpack://Comunica/BindingsToQuadsIterator.ts","webpack://Comunica/ActorQueryOperationDistinctHash.ts","webpack://Comunica/ActorQueryOperationExtend.ts","webpack://Comunica/ActorQueryOperationFilter.ts","webpack://Comunica/ActorQueryOperationFromQuad.ts","webpack://Comunica/ActorQueryOperationGroup.ts","webpack://Comunica/GroupsState.ts","webpack://Comunica/ActorQueryOperationJoin.ts","webpack://Comunica/ActorQueryOperationLeftJoin.ts","webpack://Comunica/ActorQueryOperationMinus.ts","webpack://Comunica/ActorQueryOperationNop.ts","webpack://Comunica/ActorQueryOperationOrderBy.ts","webpack://Comunica/SortIterator.ts","webpack://Comunica/ActorQueryOperationPathAlt.ts","webpack://Comunica/ActorQueryOperationPathInv.ts","webpack://Comunica/ActorQueryOperationPathLink.ts","webpack://Comunica/ActorQueryOperationPathNps.ts","webpack://Comunica/ActorQueryOperationPathOneOrMore.ts","webpack://Comunica/ActorQueryOperationPathSeq.ts","webpack://Comunica/ActorQueryOperationPathZeroOrMore.ts","webpack://Comunica/ActorQueryOperationPathZeroOrOne.ts","webpack://Comunica/ActorQueryOperationProject.ts","webpack://Comunica/ActorQueryOperationReducedHash.ts","webpack://Comunica/ActorQueryOperationService.ts","webpack://Comunica/ActorQueryOperationSlice.ts","webpack://Comunica/ActorQueryOperationSource.ts","webpack://Comunica/ActorQueryOperationUnion.ts","webpack://Comunica/ActorQueryOperationClear.ts","webpack://Comunica/ActorQueryOperationUpdateCompositeUpdate.ts","webpack://Comunica/ActorQueryOperationCreate.ts","webpack://Comunica/ActorQueryOperationUpdateDeleteInsert.ts","webpack://Comunica/ActorQueryOperationDrop.ts","webpack://Comunica/ActorQueryOperationLoad.ts","webpack://Comunica/ActorQueryOperationValues.ts","webpack://Comunica/ActorQueryParseSparql.ts","webpack://Comunica/ActorQueryProcessSequential.ts","webpack://Comunica/ActorQuerySourceIdentifyRdfJs.ts","webpack://Comunica/QuerySourceRdfJs.ts","webpack://Comunica/ActorRdfJoinEntriesSortCardinality.ts","webpack://Comunica/ActorRdfJoinHash.ts","webpack://Comunica/ActorRdfJoinMultiBindSource.ts","webpack://Comunica/ActorRdfJoinMultiBind.ts","webpack://Comunica/ActorRdfJoinMultiEmpty.ts","webpack://Comunica/ActorRdfJoinMultiSmallestFilterBindings.ts","webpack://Comunica/ActorRdfJoinMultiSmallest.ts","webpack://Comunica/ActorRdfJoinNestedLoop.ts","webpack://Comunica/ActorRdfJoinNone.ts","webpack://Comunica/ActorRdfJoinSingle.ts","webpack://Comunica/ActorRdfJoinSymmetricHash.ts","webpack://Comunica/ActorRdfJoinMinusHashUndef.ts","webpack://Comunica/BindingsIndex.ts","webpack://Comunica/ActorRdfJoinMinusHash.ts","webpack://Comunica/ActorRdfJoinOptionalBind.ts","webpack://Comunica/ActorRdfJoinOptionalHash.ts","webpack://Comunica/BindingsIndexDef.ts","webpack://Comunica/BindingsIndexUndef.ts","webpack://Comunica/ActorRdfJoinOptionalNestedLoop.ts","webpack://Comunica/ActorRdfJoinSelectivityVariableCounting.ts","webpack://Comunica/ActorRdfMetadataAccumulateCanContainUndefs.ts","webpack://Comunica/ActorRdfMetadataAccumulateCardinality.ts","webpack://Comunica/ActorRdfMetadataAccumulatePageSize.ts","webpack://Comunica/ActorRdfMetadataAccumulateRequestTime.ts","webpack://Comunica/ActorRdfUpdateQuadsRdfJsStore.ts","webpack://Comunica/RdfJsQuadDestination.ts","webpack://Comunica/Bindings.ts","webpack://Comunica/BindingsFactory.ts","webpack://Comunica/bindingsToString.ts","webpack://Comunica/ActorContextPreprocess.ts","webpack://Comunica/ActorHashBindings.ts","webpack://Comunica/ActorHashQuads.ts","webpack://Comunica/ActorHttpInvalidate.ts","webpack://Comunica/ActorHttpInvalidateListenable.ts","webpack://Comunica/ActorInit.ts","webpack://Comunica/ActorOptimizeQueryOperation.ts","webpack://Comunica/ActorQueryOperation.ts","webpack://Comunica/ActorQueryOperationTyped.ts","webpack://Comunica/ActorQueryOperationTypedMediated.ts","webpack://Comunica/BusQueryOperation.ts","webpack://Comunica/ClosableIterator.ts","webpack://Comunica/ClosableTransformIterator.ts","webpack://Comunica/ActorQueryParse.ts","webpack://Comunica/ActorQueryProcess.ts","webpack://Comunica/ActorQuerySourceIdentify.ts","webpack://Comunica/Utils.ts","webpack://Comunica/ActorRdfJoinEntriesSort.ts","webpack://Comunica/ActorRdfJoinSelectivity.ts","webpack://Comunica/ActorRdfJoin.ts","webpack://Comunica/ChunkedIterator.ts","webpack://Comunica/instrumentIterator.ts","webpack://Comunica/ActorRdfMetadataAccumulate.ts","webpack://Comunica/ActorRdfUpdateQuads.ts","webpack://Comunica/ActorRdfUpdateQuadsDestination.ts","webpack://Comunica/Keys.ts","webpack://Comunica/ActionContext.ts","webpack://Comunica/ActionObserver.ts","webpack://Comunica/Actor.ts","webpack://Comunica/Bus.ts","webpack://Comunica/BusIndexed.ts","webpack://Comunica/ContextEntries.ts","webpack://Comunica/Mediator.ts","webpack://Comunica/BlankNodeBindingsScoped.ts","webpack://Comunica/BlankNodeScoped.ts","webpack://Comunica/Aggregator.ts","webpack://Comunica/Average.ts","webpack://Comunica/Count.ts","webpack://Comunica/GroupConcat.ts","webpack://Comunica/Max.ts","webpack://Comunica/Min.ts","webpack://Comunica/Sample.ts","webpack://Comunica/Sum.ts","webpack://Comunica/WildcardCountAggregator.ts","webpack://Comunica/AggregateEvaluator.ts","webpack://Comunica/AsyncAggregateEvaluator.ts","webpack://Comunica/AsyncEvaluator.ts","webpack://Comunica/SyncEvaluator.ts","webpack://Comunica/AsyncRecursiveEvaluator.ts","webpack://Comunica/BaseAggregateEvaluator.ts","webpack://Comunica/BaseExpressionEvaluator.ts","webpack://Comunica/SyncRecursiveEvaluator.ts","webpack://Comunica/Aggregate.ts","webpack://Comunica/AsyncExtension.ts","webpack://Comunica/Existence.ts","webpack://Comunica/Expressions.ts","webpack://Comunica/Named.ts","webpack://Comunica/Operator.ts","webpack://Comunica/SpecialOperator.ts","webpack://Comunica/SyncExtension.ts","webpack://Comunica/Term.ts","webpack://Comunica/Variable.ts","webpack://Comunica/Core.ts","webpack://Comunica/Helpers.ts","webpack://Comunica/NamedFunctions.ts","webpack://Comunica/OverloadTree.ts","webpack://Comunica/RegularFunctions.ts","webpack://Comunica/SpecialFunctions.ts","webpack://Comunica/XPathFunctions.ts","webpack://Comunica/AlgebraTransformer.ts","webpack://Comunica/TermTransformer.ts","webpack://Comunica/Consts.ts","webpack://Comunica/DateTimeHelpers.ts","webpack://Comunica/Errors.ts","webpack://Comunica/Ordering.ts","webpack://Comunica/Parsing.ts","webpack://Comunica/Serialization.ts","webpack://Comunica/SpecAlgos.ts","webpack://Comunica/TypeHandling.ts","webpack://Comunica/LoggerVoid.ts","webpack://Comunica/MediatorAll.ts","webpack://Comunica/MediatorCombinePipeline.ts","webpack://Comunica/MediatorCombineUnion.ts","webpack://Comunica/MediatorJoinCoefficientsFixed.ts","webpack://Comunica/MediatorNumber.ts","webpack://Comunica/MediatorRace.ts","webpack://Comunica/MetadataValidationState.ts","webpack://Comunica/Logger.ts","webpack://Comunica/../../node_modules/bignumber.js/bignumber.js","webpack://Comunica/../../node_modules/canonicalize/lib/canonicalize.js","webpack://Comunica/../../node_modules/event-emitter-promisify/dist/index.js","webpack://Comunica/../../node_modules/events/events.js","webpack://Comunica/../../node_modules/fast-deep-equal/es6/index.js","webpack://Comunica/../../node_modules/hash.js/lib/hash.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/common.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/hmac.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/ripemd.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/1.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/224.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/256.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/384.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/512.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/sha/common.js","webpack://Comunica/../../node_modules/hash.js/lib/hash/utils.js","webpack://Comunica/../../node_modules/immutable/dist/immutable.es.js","webpack://Comunica/../../node_modules/inherits/inherits_browser.js","webpack://Comunica/../../node_modules/minimalistic-assert/index.js","webpack://Comunica/../../node_modules/process/browser.js","webpack://Comunica/../../node_modules/rdf-data-factory/index.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/BlankNode.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/DataFactory.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/DefaultGraph.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/Literal.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/NamedNode.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/Quad.js","webpack://Comunica/../../node_modules/rdf-data-factory/lib/Variable.js","webpack://Comunica/../../node_modules/rdf-isomorphic/index.js","webpack://Comunica/../../node_modules/rdf-isomorphic/lib/RdfIsomorphic.js","webpack://Comunica/../../node_modules/rdf-string/index.js","webpack://Comunica/../../node_modules/rdf-string/lib/TermUtil.js","webpack://Comunica/../../node_modules/rdf-terms/index.js","webpack://Comunica/../../node_modules/rdf-terms/lib/QuadTermUtil.js","webpack://Comunica/../../node_modules/rdf-terms/lib/TermUtil.js","webpack://Comunica/../../node_modules/relative-to-absolute-iri/index.js","webpack://Comunica/../../node_modules/relative-to-absolute-iri/lib/Resolve.js","webpack://Comunica/../../node_modules/spark-md5/spark-md5.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/index.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/lib/algebra.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/lib/factory.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/lib/sparql.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/lib/sparqlAlgebra.js","webpack://Comunica/../../node_modules/sparqlalgebrajs/lib/util.js","webpack://Comunica/../../node_modules/sparqljs/lib/SparqlGenerator.js","webpack://Comunica/../../node_modules/sparqljs/lib/SparqlParser.js","webpack://Comunica/../../node_modules/sparqljs/lib/Wildcard.js","webpack://Comunica/../../node_modules/sparqljs/sparql.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/index.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/md5.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/native.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/nil.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/parse.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/regex.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/rng.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/sha1.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/stringify.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/v1.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/v3.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/v35.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/v4.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/v5.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/validate.js","webpack://Comunica/../../node_modules/uuid/dist/commonjs-browser/version.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/index.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/lib/algebra.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/lib/factory.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/lib/sparql.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/lib/sparqlAlgebra.js","webpack://Comunica/../../packages/actor-optimize-query-operation-construct-distinct/node_modules/sparqlalgebrajs/lib/util.js","webpack://Comunica/../../node_modules/asynciterator/dist/asynciterator.js","webpack://Comunica/../../node_modules/asynciterator/dist/linkedlist.js","webpack://Comunica/../../node_modules/asynciterator/dist/taskscheduler.js","webpack://Comunica/../../node_modules/lru-cache/dist/commonjs/index.js","webpack://Comunica/webpack/bootstrap","webpack://Comunica/webpack/runtime/define property getters","webpack://Comunica/webpack/runtime/hasOwnProperty shorthand","webpack://Comunica/webpack/runtime/make namespace object","webpack://Comunica/webpack/startup"],"sourcesContent":["\nconst DynamicNestedLoopJoin = require('./join/DynamicNestedLoopJoin');\nconst HashJoin = require('./join/HashJoin');\nconst NestedLoopJoin = require('./join/NestedLoopJoin');\nconst SymmetricHashJoin = require('./join/SymmetricHashJoin');\n\nconst MergeStream = require('./util/MergeIterator');\n\nmodule.exports = {\n    DynamicNestedLoopJoin,\n    HashJoin,\n    NestedLoopJoin,\n    SymmetricHashJoin,\n\n    MergeStream\n};","\nlet AsyncIterator = require('asynciterator');\nlet MultiTransformIterator = AsyncIterator.MultiTransformIterator;\nlet SimpleTransformIterator = AsyncIterator.SimpleTransformIterator;\n\n// Nested Loop Join, but the values of the inner loop are determined by each value of the outer loop, possibly reducing the number of necessary checks\nclass DynamicNestedLoopJoin extends MultiTransformIterator\n{\n    constructor (left, funRight, funJoin, options)\n    {\n        super(left, options);\n\n        this.funRight = funRight;\n        this.funJoin = funJoin;\n    }\n\n    _createTransformer (leftItem)\n    {\n        return new SimpleTransformIterator(this.funRight(leftItem), { transform: (rightItem, done, push) =>\n        {\n            let result = this.funJoin(leftItem, rightItem);\n            if (result !== null)\n                push(result);\n            done();\n        }});\n    }\n}\n\nmodule.exports = DynamicNestedLoopJoin;\n","\nlet AsyncIterator = require('asynciterator').AsyncIterator;\n\n// https://en.wikipedia.org/wiki/Hash_join\nclass HashJoin extends AsyncIterator\n{\n    constructor (left, right, funHash, funJoin)\n    {\n        super();\n\n        this.addedDataListener = false;\n        this.left = left;\n        this.right = right;\n        this.funHash = funHash;\n        this.funJoin = funJoin;\n\n        this.leftMap = new Map();\n\n        this.match    = null;\n        this.matches  = [];\n        this.matchIdx = 0;\n\n        this.left.on('error', (error) => this.destroy(error));\n        this.right.on('error', (error) => this.destroy(error));\n\n        this.readable = false;\n\n        this.left.on('end', allowJoining.bind(this));\n\n        function allowJoining ()\n        {\n            this.readable = true;\n            this.right.on('readable', () => this.readable = true);\n            this.right.on('end', () => { if (!this.hasResults()) this._end(); });\n        }\n\n        this.on('newListener', (eventName) =>\n        {\n            if (eventName === 'data')\n            {\n                this._addDataListenerIfNeeded();\n            }\n        });\n        if (this.left.readable)\n            this._addDataListenerIfNeeded();\n        this.left.on('readable', () => this._addDataListenerIfNeeded());\n    }\n\n    hasResults ()\n    {\n        return !this.right.ended || this.matchIdx < this.matches.length;\n    }\n\n    _end ()\n    {\n        super._end();\n        this.left.destroy();\n        this.right.destroy();\n    }\n\n    read ()\n    {\n        this._addDataListenerIfNeeded();\n\n        while(true) {\n            if (this.ended || !this.readable)\n                return null;\n\n            while (this.matchIdx < this.matches.length)\n            {\n                let item = this.matches[this.matchIdx++];\n                let result = this.funJoin(item, this.match);\n                if (result !== null)\n                    return result;\n            }\n\n            if (!this.hasResults())\n                this._end();\n\n            this.match = this.right.read();\n\n            if (this.match === null)\n            {\n                this.readable = false;\n                return null;\n            }\n\n            let hash = this.funHash(this.match);\n            this.matches = this.leftMap.get(hash) || [];\n            this.matchIdx = 0;\n        }\n    }\n\n    _addDataListenerIfNeeded() {\n        if (!this.addedDataListener)\n        {\n            this.addedDataListener = true;\n            this._addDataListener();\n        }\n    }\n\n    _addDataListener()\n    {\n        this.left.on('data', addItem.bind(this));\n\n        function addItem(item)\n        {\n            let hash = this.funHash(item);\n            if (!this.leftMap.has(hash))\n                this.leftMap.set(hash, []);\n            let arr = this.leftMap.get(hash);\n            arr.push(item);\n        }\n    }\n}\n\nmodule.exports = HashJoin;\n","\nconst { MultiTransformIterator, SimpleTransformIterator, scheduleTask } = require('asynciterator');\n\n// https://en.wikipedia.org/wiki/Nested_loop_join\nclass NestedLoopJoin extends MultiTransformIterator\n{\n    constructor (left, right, funJoin, options)\n    {\n        super(left, options);\n\n        this.right = right;\n        this.funJoin = funJoin; // function that joins 2 elements or returns null if join is not possible\n        this.on('end', () => this.right.close());\n    }\n\n    _end ()\n    {\n        super._end();\n        scheduleTask(() => this.right.destroy());\n    }\n\n    _createTransformer (leftItem)\n    {\n        return new SimpleTransformIterator(this.right.clone(), { transform: (rightItem, done, push) =>\n        {\n            let result = this.funJoin(leftItem, rightItem);\n            if (result !== null)\n                push(result);\n            done();\n        }});\n    }\n}\n\nmodule.exports = NestedLoopJoin;\n","\nlet AsyncIterator = require('asynciterator').AsyncIterator;\n\n// https://en.wikipedia.org/wiki/Symmetric_Hash_Join\nclass SymmetricHashJoin extends AsyncIterator\n{\n    constructor (left, right, funHash, funJoin)\n    {\n        super();\n\n        this.left  = left;\n        this.right = right;\n\n        this.funHash = funHash;\n        this.funJoin = funJoin;\n\n        this.usedLeft = false;\n        this.leftMap  = new Map();\n        this.rightMap = new Map();\n\n        this.on('end', () => this._cleanup() );\n\n        this.match    = null;\n        this.matches  = [];\n        this.matchIdx = 0;\n\n        if (this.left.readable || this.right.readable)\n        {\n            this.readable = true;\n        }\n\n        this.left.on('error', (error) => this.destroy(error));\n        this.right.on('error', (error) => this.destroy(error));\n\n        this.left.on('readable', () => this.readable = true);\n        this.right.on('readable', () => this.readable = true);\n\n        // this needs to be here since it's possible the left/right streams only get ended after there are no more results left\n        this.left.on ('end', () => { if (!this.hasResults()) this._end(); });\n        this.right.on('end', () => { if (!this.hasResults()) this._end(); });\n    }\n\n    hasResults()\n    {\n        // The \"!!this.match\" condition was added as a workaround to race\n        // conditions and/or duplicate \"end\" events that may lead to premature\n        // cleanups of the \"this.matches\" array.\n        // See https://github.com/joachimvh/asyncjoin/issues/7\n        return !this.left.ended  || !this.right.ended || (!!this.matches && this.matchIdx < this.matches.length);\n    }\n\n    _cleanup ()\n    {\n        // motivate garbage collector to remove these\n        this.leftMap = null;\n        this.rightMap = null;\n        this.matches = null;\n    }\n\n    _end ()\n    {\n        super._end();\n        this.left.destroy();\n        this.right.destroy();\n    }\n\n    read ()\n    {\n        while(true){\n            if (this.ended)\n                return null;\n\n            while (this.matchIdx < this.matches.length)\n            {\n                let item = this.matches[this.matchIdx++];\n                let result = this.usedLeft ? this.funJoin(this.match, item) : this.funJoin(item, this.match);\n                if (result !== null)\n                    return result;\n            }\n\n            if (!this.hasResults())\n                this._end();\n\n            let item = null;\n            // try both streams if the first one has no value\n            for (let i = 0; i < 2; ++i)\n            {\n                item = this.usedLeft ? this.right.read() : this.left.read();\n                this.usedLeft = !this.usedLeft; // try other stream next time\n\n                // found a result, no need to check the other stream this run\n                if (item !== null)\n                    break;\n            }\n\n            if (this.done || item === null)\n            {\n                this.readable = false;\n                return null;\n            }\n\n            let hash = this.funHash(item);\n\n            if (this.usedLeft && this.right.done) {\n                this.leftMap = null;\n            } else if (this.left.done) {\n                this.rightMap = null;\n            } else {\n                let map = this.usedLeft ? this.leftMap : this.rightMap;\n                if (!map.has(hash))\n                    map.set(hash, []);\n                let arr = map.get(hash);\n                arr.push(item);\n            }\n\n            this.match = item;\n            this.matches = (this.usedLeft ? this.rightMap : this.leftMap).get(hash) || [];\n            this.matchIdx = 0;\n        }\n    }\n}\n\nmodule.exports = SymmetricHashJoin;\n","\nlet AsyncIterator = require('asynciterator').AsyncIterator;\n\n// merges the contents of multiple streams\nclass MergeIterator extends AsyncIterator\n{\n    constructor (streams)\n    {\n        super();\n        \n        if (!Array.isArray(streams))\n            streams = Array.prototype.slice.call(arguments);\n        \n        this.streams = streams;\n        \n        for (let stream of streams)\n        {\n            stream.on('readable', () => this.emit('readable'));\n            stream.on('end', () => this._removeStream(stream));\n        }\n        \n        if (this.streams.length === 0)\n            this.close();\n        \n        this.idx = this.streams.length-1;\n    }\n    \n    _removeStream (stream)\n    {\n        let idx = this.streams.indexOf(stream);\n        if (idx < 0)\n            return;\n        \n        this.streams.splice(idx, 1);\n        if (this.idx >= this.streams.length)\n            --this.idx;\n        \n        if (this.streams.length === 0)\n            this._end();\n    }\n    \n    close ()\n    {\n        super.close();\n        for (let stream of this.streams)\n            stream.close();\n    }\n    \n    read ()\n    {\n        for (let attempts = 0; attempts < this.streams.length; ++attempts)\n        {\n            this.idx = (this.idx + 1) % this.streams.length;\n            let item = this.streams[this.idx].read();\n            if (item !== null)\n                return item;\n        }\n        \n        return null;\n    }\n}\n\nmodule.exports = MergeIterator;","module.exports = function(variables) {\nfunction getVariableValue(name) {\n  if (!variables || !(name in variables)) {\n    throw new Error('Undefined variable: ' + name);\n  }\n  return variables[name];\n}\nconst df_475_1 = new (require('@comunica/logger-void').LoggerVoid)();\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_init__3_0_0_components_ActorInit_jsonld_ActorInit_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-init/^3.0.0/components/ActorInit.jsonld#ActorInit_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-context-preprocess/^3.0.0/components/ActorContextPreprocess.jsonld#ActorContextPreprocess_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_bindings__3_0_0_components_ActorHashBindings_jsonld_ActorHashBindings_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-hash-bindings/^3.0.0/components/ActorHashBindings.jsonld#ActorHashBindings_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_quads__3_0_0_components_ActorHashQuads_jsonld_ActorHashQuads_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-hash-quads/^3.0.0/components/ActorHashQuads.jsonld#ActorHashQuads_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-optimize-query-operation/^3.0.0/components/ActorOptimizeQueryOperation.jsonld#ActorOptimizeQueryOperation_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_parse__3_0_0_components_ActorQueryParse_jsonld_ActorQueryParse_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-query-parse/^3.0.0/components/ActorQueryParse.jsonld#ActorQueryParse_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_entries_sort__3_0_0_components_ActorRdfJoinEntriesSort_jsonld_ActorRdfJoinEntriesSort_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-join-entries-sort/^3.0.0/components/ActorRdfJoinEntriesSort.jsonld#ActorRdfJoinEntriesSort_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_selectivity__3_0_0_components_ActorRdfJoinSelectivity_jsonld_ActorRdfJoinSelectivity_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-join-selectivity/^3.0.0/components/ActorRdfJoinSelectivity.jsonld#ActorRdfJoinSelectivity_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-metadata-accumulate/^3.0.0/components/ActorRdfMetadataAccumulate.jsonld#ActorRdfMetadataAccumulate_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_update_quads__3_0_0_components_ActorRdfUpdateQuads_jsonld_ActorRdfUpdateQuads_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-update-quads/^3.0.0/components/ActorRdfUpdateQuads.jsonld#ActorRdfUpdateQuads_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus = new (require('@comunica/bus-query-operation').BusQueryOperation)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-query-operation/^3.0.0/components/ActorQueryOperation.jsonld#ActorQueryOperation_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_process__3_0_0_components_ActorQueryProcess_jsonld_ActorQueryProcess_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-query-process/^3.0.0/components/ActorQueryProcess.jsonld#ActorQueryProcess_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_source_identify__3_0_0_components_ActorQuerySourceIdentify_jsonld_ActorQuerySourceIdentify_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-query-source-identify/^3.0.0/components/ActorQuerySourceIdentify.jsonld#ActorQuerySourceIdentify_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-rdf-join/^3.0.0/components/ActorRdfJoin.jsonld#ActorRdfJoin_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_http_invalidate__3_0_0_components_ActorHttpInvalidate_jsonld_ActorHttpInvalidate_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-http-invalidate/^3.0.0/components/ActorHttpInvalidate.jsonld#ActorHttpInvalidate_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_result_serialize__3_0_0_components_ActorQueryResultSerialize_jsonld_ActorQueryResultSerialize_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-query-result-serialize/^3.0.0/components/ActorQueryResultSerialize.jsonld#ActorQueryResultSerialize_default_bus'\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_merge_bindings_context__3_0_0_components_ActorMergeBindingsContext_jsonld_ActorMergeBindingsContext_default_bus = new (require('@comunica/core').Bus)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/bus-merge-bindings-context/^3.0.0/components/ActorMergeBindingsContext.jsonld#ActorMergeBindingsContext_default_bus'\n});\nconst urn_comunica_default_context_preprocess_actors_convert_shortcuts = new (require('@comunica/actor-context-preprocess-convert-shortcuts').ActorContextPreprocessConvertShortcuts)({\n  'contextKeyShortcuts': {\"baseIRI\":\"@comunica/actor-init-query:baseIRI\",\"datetime\":\"@comunica/actor-http-memento:datetime\",\"destination\":\"@comunica/bus-rdf-update-quads:destination\",\"distinctConstruct\":\"@comunica/actor-init-query:distinctConstruct\",\"explain\":\"@comunica/actor-init-query:explain\",\"extensionFunctionCreator\":\"@comunica/actor-init-query:extensionFunctionCreator\",\"extensionFunctions\":\"@comunica/actor-init-query:extensionFunctions\",\"fetch\":\"@comunica/bus-http:fetch\",\"functionArgumentsCache\":\"@comunica/actor-init-query:functionArgumentsCache\",\"httpAuth\":\"@comunica/bus-http:auth\",\"httpBodyTimeout\":\"@comunica/bus-http:http-body-timeout\",\"httpIncludeCredentials\":\"@comunica/bus-http:include-credentials\",\"httpProxyHandler\":\"@comunica/actor-http-proxy:httpProxyHandler\",\"httpRetryCount\":\"@comunica/bus-http:http-retry-count\",\"httpRetryDelay\":\"@comunica/bus-http:http-retry-delay\",\"httpRetryOnServerError\":\"@comunica/bus-http:http-retry-on-server-error\",\"httpTimeout\":\"@comunica/bus-http:http-timeout\",\"initialBindings\":\"@comunica/actor-init-query:initialBindings\",\"lenient\":\"@comunica/actor-init-query:lenient\",\"log\":\"@comunica/core:log\",\"noCache\":\"@comunica/actor-init-query:noCache\",\"queryFormat\":\"@comunica/actor-init-query:queryFormat\",\"queryTimestamp\":\"@comunica/actor-init-query:queryTimestamp\",\"readOnly\":\"@comunica/bus-query-operation:readOnly\",\"recoverBrokenLinks\":\"@comunica/bus-http-wayback:recover-broken-links\",\"sources\":\"@comunica/actor-init-query:querySourcesUnidentified\",\"traverse\":\"@comunica/bus-query-source-identify:traverse\",\"unionDefaultGraph\":\"@comunica/bus-query-operation:unionDefaultGraph\"},\n  'name': 'urn:comunica:default:context-preprocess/actors#convert-shortcuts',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus\n});\nconst urn_comunica_default_context_preprocess_actors_set_defaults = new (require('@comunica/actor-context-preprocess-set-defaults').ActorContextPreprocessSetDefaults)({\n  'logger': df_475_1,\n  'name': 'urn:comunica:default:context-preprocess/actors#set-defaults',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus\n});\nconst urn_comunica_default_context_preprocess_actors_source_to_destination = new (require('@comunica/actor-context-preprocess-source-to-destination').ActorContextPreprocessSourceToDestination)({\n  'name': 'urn:comunica:default:context-preprocess/actors#source-to-destination',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus\n});\nconst urn_comunica_default_context_preprocess_actors_query_source_skolemize = new (require('@comunica/actor-context-preprocess-query-source-skolemize').ActorContextPreprocessQuerySourceSkolemize)({\n  'name': 'urn:comunica:default:context-preprocess/actors#query-source-skolemize',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus\n});\nconst urn_comunica_default_context_preprocess_mediators_main = new (require('@comunica/mediator-combine-pipeline').MediatorCombinePipeline)({\n  'name': 'urn:comunica:default:context-preprocess/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus\n});\nconst urn_comunica_default_hash_bindings_actors_sha1 = new (require('@comunica/actor-hash-bindings-sha1').ActorHashBindingsSha1)({\n  'name': 'urn:comunica:default:hash-bindings/actors#sha1',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_bindings__3_0_0_components_ActorHashBindings_jsonld_ActorHashBindings_default_bus\n});\nconst urn_comunica_default_hash_bindings_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:hash-bindings/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_bindings__3_0_0_components_ActorHashBindings_jsonld_ActorHashBindings_default_bus\n});\nconst urn_comunica_default_hash_quads_actors_sha1 = new (require('@comunica/actor-hash-quads-sha1').ActorHashQuadsSha1)({\n  'name': 'urn:comunica:default:hash-quads/actors#sha1',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_quads__3_0_0_components_ActorHashQuads_jsonld_ActorHashQuads_default_bus\n});\nconst urn_comunica_default_hash_quads_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:hash-quads/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_quads__3_0_0_components_ActorHashQuads_jsonld_ActorHashQuads_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_rewrite_copy = new (require('@comunica/actor-optimize-query-operation-rewrite-copy').ActorOptimizeQueryOperationRewriteCopy)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#rewrite-copy',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_rewrite_move = new (require('@comunica/actor-optimize-query-operation-rewrite-move').ActorOptimizeQueryOperationRewriteMove)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#rewrite-move',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_rewrite_add = new (require('@comunica/actor-optimize-query-operation-rewrite-add').ActorOptimizeQueryOperationRewriteAdd)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#rewrite-add',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_group_sources = new (require('@comunica/actor-optimize-query-operation-group-sources').ActorOptimizeQueryOperationGroupSources)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#group-sources',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_construct_distinct = new (require('@comunica/actor-optimize-query-operation-construct-distinct').ActorOptimizeQueryOperationConstructDistinct)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#construct-distinct',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_mediators_main = new (require('@comunica/mediator-combine-pipeline').MediatorCombinePipeline)({\n  'filterErrors': true,\n  'name': 'urn:comunica:default:optimize-query-operation/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus\n});\nconst urn_comunica_default_query_parse_actors_sparql = new (require('@comunica/actor-query-parse-sparql').ActorQueryParseSparql)({\n  'prefixes': {\"dbpedia\":\"http://dbpedia.org/resource/\",\"dbpedia-owl\":\"http://dbpedia.org/ontology/\",\"dbpprop\":\"http://dbpedia.org/property/\",\"dc\":\"http://purl.org/dc/terms/\",\"dc11\":\"http://purl.org/dc/elements/1.1/\",\"dcterms\":\"http://purl.org/dc/terms/\",\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"geo\":\"http://www.w3.org/2003/01/geo/wgs84_pos#\",\"owl\":\"http://www.w3.org/2002/07/owl#\",\"rdf\":\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\"rdfs\":\"http://www.w3.org/2000/01/rdf-schema#\",\"schema\":\"http://schema.org/\",\"skos\":\"http://www.w3.org/2008/05/skos#\",\"xsd\":\"http://www.w3.org/2001/XMLSchema#\"},\n  'name': 'urn:comunica:default:query-parse/actors#sparql',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_parse__3_0_0_components_ActorQueryParse_jsonld_ActorQueryParse_default_bus\n});\nconst urn_comunica_default_query_parse_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:query-parse/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_parse__3_0_0_components_ActorQueryParse_jsonld_ActorQueryParse_default_bus\n});\nconst urn_comunica_default_rdf_join_entries_sort_actors_cardinality = new (require('@comunica/actor-rdf-join-entries-sort-cardinality').ActorRdfJoinEntriesSortCardinality)({\n  'name': 'urn:comunica:default:rdf-join-entries-sort/actors#cardinality',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_entries_sort__3_0_0_components_ActorRdfJoinEntriesSort_jsonld_ActorRdfJoinEntriesSort_default_bus\n});\nconst urn_comunica_default_rdf_join_entries_sort_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:rdf-join-entries-sort/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_entries_sort__3_0_0_components_ActorRdfJoinEntriesSort_jsonld_ActorRdfJoinEntriesSort_default_bus\n});\nconst urn_comunica_default_rdf_join_selectivity_actors_variable_counting = new (require('@comunica/actor-rdf-join-selectivity-variable-counting').ActorRdfJoinSelectivityVariableCounting)({\n  'name': 'urn:comunica:default:rdf-join-selectivity/actors#variable-counting',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_selectivity__3_0_0_components_ActorRdfJoinSelectivity_jsonld_ActorRdfJoinSelectivity_default_bus\n});\nconst urn_comunica_default_rdf_join_selectivity_mediators_main = new (require('@comunica/mediator-number').MediatorNumber)({\n  'field': 'accuracy',\n  'type': 'max',\n  'ignoreErrors': true,\n  'name': 'urn:comunica:default:rdf-join-selectivity/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_selectivity__3_0_0_components_ActorRdfJoinSelectivity_jsonld_ActorRdfJoinSelectivity_default_bus\n});\nconst urn_comunica_default_rdf_metadata_accumulate_actors_cancontainundefs = new (require('@comunica/actor-rdf-metadata-accumulate-cancontainundefs').ActorRdfMetadataAccumulateCanContainUndefs)({\n  'name': 'urn:comunica:default:rdf-metadata-accumulate/actors#cancontainundefs',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus\n});\nconst urn_comunica_default_rdf_metadata_accumulate_actors_cardinality = new (require('@comunica/actor-rdf-metadata-accumulate-cardinality').ActorRdfMetadataAccumulateCardinality)({\n  'name': 'urn:comunica:default:rdf-metadata-accumulate/actors#cardinality',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus\n});\nconst urn_comunica_default_rdf_metadata_accumulate_actors_pagesize = new (require('@comunica/actor-rdf-metadata-accumulate-pagesize').ActorRdfMetadataAccumulatePageSize)({\n  'name': 'urn:comunica:default:rdf-metadata-accumulate/actors#pagesize',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus\n});\nconst urn_comunica_default_rdf_metadata_accumulate_actors_requesttime = new (require('@comunica/actor-rdf-metadata-accumulate-requesttime').ActorRdfMetadataAccumulateRequestTime)({\n  'name': 'urn:comunica:default:rdf-metadata-accumulate/actors#requesttime',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus\n});\nconst urn_comunica_default_rdf_metadata_accumulate_mediators_main = new (require('@comunica/mediator-combine-union').MediatorCombineUnion)({\n  'field': 'metadata',\n  'name': 'urn:comunica:default:rdf-metadata-accumulate/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus\n});\nconst urn_comunica_default_rdf_update_quads_actors_rdfjs_store = new (require('@comunica/actor-rdf-update-quads-rdfjs-store').ActorRdfUpdateQuadsRdfJsStore)({\n  'name': 'urn:comunica:default:rdf-update-quads/actors#rdfjs-store',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_update_quads__3_0_0_components_ActorRdfUpdateQuads_jsonld_ActorRdfUpdateQuads_default_bus\n});\nconst urn_comunica_default_rdf_update_quads_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:rdf-update-quads/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_update_quads__3_0_0_components_ActorRdfUpdateQuads_jsonld_ActorRdfUpdateQuads_default_bus\n});\nconst urn_comunica_default_query_operation_actors_source = new (require('@comunica/actor-query-operation-source').ActorQueryOperationSource)({\n  'name': 'urn:comunica:default:query-operation/actors#source',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_mediators_main = new (require('@comunica/mediator-number').MediatorNumber)({\n  'field': 'httpRequests',\n  'type': 'min',\n  'ignoreErrors': true,\n  'name': 'urn:comunica:default:query-operation/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_process_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:query-process/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_process__3_0_0_components_ActorQueryProcess_jsonld_ActorQueryProcess_default_bus\n});\nconst urn_comunica_default_query_source_identify_mediators_main = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:query-source-identify/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_source_identify__3_0_0_components_ActorQuerySourceIdentify_jsonld_ActorQuerySourceIdentify_default_bus\n});\nconst urn_comunica_default_rdf_join_mediators_main = new (require('@comunica/mediator-join-coefficients-fixed').MediatorJoinCoefficientsFixed)({\n  'cpuWeight': 10,\n  'memoryWeight': 1,\n  'timeWeight': 2,\n  'ioWeight': 10,\n  'name': 'urn:comunica:default:rdf-join/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst https___linkedsoftwaredependencies_org_bundles_npm__comunica_actor_context_preprocess_query_source_identify__3_0_0_components_ActorContextPreprocessQuerySourceIdentify_jsonld_IActorContextPreprocessQuerySourceIdentifyArgs_default_invalidator = new (require('@comunica/bus-http-invalidate').ActorHttpInvalidateListenable)({\n  'name': 'https://linkedsoftwaredependencies.org/bundles/npm/@comunica/actor-context-preprocess-query-source-identify/^3.0.0/components/ActorContextPreprocessQuerySourceIdentify.jsonld#IActorContextPreprocessQuerySourceIdentifyArgs_default_invalidator',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_http_invalidate__3_0_0_components_ActorHttpInvalidate_jsonld_ActorHttpInvalidate_default_bus\n});\nconst urn_comunica_default_http_invalidate_mediators_main = new (require('@comunica/mediator-all').MediatorAll)({\n  'name': 'urn:comunica:default:http-invalidate/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_http_invalidate__3_0_0_components_ActorHttpInvalidate_jsonld_ActorHttpInvalidate_default_bus\n});\nconst urn_comunica_default_query_result_serialize_mediators_serialize = new (require('@comunica/mediator-race').MediatorRace)({\n  'name': 'urn:comunica:default:query-result-serialize/mediators#serialize',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_result_serialize__3_0_0_components_ActorQueryResultSerialize_jsonld_ActorQueryResultSerialize_default_bus\n});\nconst urn_comunica_default_query_result_serialize_mediators_mediaType = new (require('@comunica/mediator-combine-union').MediatorCombineUnion)({\n  'field': 'mediaTypes',\n  'name': 'urn:comunica:default:query-result-serialize/mediators#mediaType',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_result_serialize__3_0_0_components_ActorQueryResultSerialize_jsonld_ActorQueryResultSerialize_default_bus\n});\nconst urn_comunica_default_query_result_serialize_mediators_mediaTypeFormat = new (require('@comunica/mediator-combine-union').MediatorCombineUnion)({\n  'field': 'mediaTypeFormats',\n  'name': 'urn:comunica:default:query-result-serialize/mediators#mediaTypeFormat',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_result_serialize__3_0_0_components_ActorQueryResultSerialize_jsonld_ActorQueryResultSerialize_default_bus\n});\nconst urn_comunica_default_merge_bindings_context_mediators_main = new (require('@comunica/mediator-combine-union').MediatorCombineUnion)({\n  'field': 'mergeHandlers',\n  'name': 'urn:comunica:default:merge-bindings-context/mediators#main',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_merge_bindings_context__3_0_0_components_ActorMergeBindingsContext_jsonld_ActorMergeBindingsContext_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_single = new (require('@comunica/actor-rdf-join-inner-single').ActorRdfJoinSingle)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-single',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_multi_empty = new (require('@comunica/actor-rdf-join-inner-multi-empty').ActorRdfJoinMultiEmpty)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-multi-empty',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_multi_bind_source = new (require('@comunica/actor-rdf-join-inner-multi-bind-source').ActorRdfJoinMultiBindSource)({\n  'selectivityModifier': 0.0001,\n  'blockSize': 16,\n  'mediatorJoinEntriesSort': urn_comunica_default_rdf_join_entries_sort_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-multi-bind-source',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_hash = new (require('@comunica/actor-rdf-join-inner-hash').ActorRdfJoinHash)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-hash',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_symmetric_hash = new (require('@comunica/actor-rdf-join-inner-symmetrichash').ActorRdfJoinSymmetricHash)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-symmetric-hash',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_nested_loop = new (require('@comunica/actor-rdf-join-inner-nestedloop').ActorRdfJoinNestedLoop)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-nested-loop',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_minus_hash = new (require('@comunica/actor-rdf-join-minus-hash').ActorRdfJoinMinusHash)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#minus-hash',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_minus_hash_undef = new (require('@comunica/actor-rdf-join-minus-hash-undef').ActorRdfJoinMinusHashUndef)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#minus-hash-undef',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_hash_def_nonblocking = new (require('@comunica/actor-rdf-join-optional-hash').ActorRdfJoinOptionalHash)({\n  'canHandleUndefs': false,\n  'blocking': false,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-hash-def-nonblocking',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_hash_def_blocking = new (require('@comunica/actor-rdf-join-optional-hash').ActorRdfJoinOptionalHash)({\n  'canHandleUndefs': false,\n  'blocking': true,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-hash-def-blocking',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_hash_undef_nonblocking = new (require('@comunica/actor-rdf-join-optional-hash').ActorRdfJoinOptionalHash)({\n  'canHandleUndefs': true,\n  'blocking': false,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-hash-undef-nonblocking',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_hash_undef_blocking = new (require('@comunica/actor-rdf-join-optional-hash').ActorRdfJoinOptionalHash)({\n  'canHandleUndefs': true,\n  'blocking': true,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-hash-undef-blocking',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_nested_loop = new (require('@comunica/actor-rdf-join-optional-nestedloop').ActorRdfJoinOptionalNestedLoop)({\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-nested-loop',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_query_operation_actors_ask = new (require('@comunica/actor-query-operation-ask').ActorQueryOperationAsk)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#ask',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_bgp = new (require('@comunica/actor-query-operation-bgp-join').ActorQueryOperationBgpJoin)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#bgp',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_construct = new (require('@comunica/actor-query-operation-construct').ActorQueryOperationConstruct)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#construct',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_distinct = new (require('@comunica/actor-query-operation-distinct-hash').ActorQueryOperationDistinctHash)({\n  'mediatorHashBindings': urn_comunica_default_hash_bindings_mediators_main,\n  'mediatorHashQuads': urn_comunica_default_hash_quads_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#distinct',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_from = new (require('@comunica/actor-query-operation-from-quad').ActorQueryOperationFromQuad)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#from',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_project = new (require('@comunica/actor-query-operation-project').ActorQueryOperationProject)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#project',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_reduced = new (require('@comunica/actor-query-operation-reduced-hash').ActorQueryOperationReducedHash)({\n  'mediatorHashBindings': urn_comunica_default_hash_bindings_mediators_main,\n  'cacheSize': 100,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#reduced',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_slice = new (require('@comunica/actor-query-operation-slice').ActorQueryOperationSlice)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#slice',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_union = new (require('@comunica/actor-query-operation-union').ActorQueryOperationUnion)({\n  'mediatorRdfMetadataAccumulate': urn_comunica_default_rdf_metadata_accumulate_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#union',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_alt = new (require('@comunica/actor-query-operation-path-alt').ActorQueryOperationPathAlt)({\n  'mediatorRdfMetadataAccumulate': urn_comunica_default_rdf_metadata_accumulate_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-alt',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_inv = new (require('@comunica/actor-query-operation-path-inv').ActorQueryOperationPathInv)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-inv',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_link = new (require('@comunica/actor-query-operation-path-link').ActorQueryOperationPathLink)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-link',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_nps = new (require('@comunica/actor-query-operation-path-nps').ActorQueryOperationPathNps)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-nps',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_clear = new (require('@comunica/actor-query-operation-update-clear').ActorQueryOperationClear)({\n  'mediatorUpdateQuads': urn_comunica_default_rdf_update_quads_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-clear',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_composite = new (require('@comunica/actor-query-operation-update-compositeupdate').ActorQueryOperationUpdateCompositeUpdate)({\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-composite',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_create = new (require('@comunica/actor-query-operation-update-create').ActorQueryOperationCreate)({\n  'mediatorUpdateQuads': urn_comunica_default_rdf_update_quads_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-create',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_drop = new (require('@comunica/actor-query-operation-update-drop').ActorQueryOperationDrop)({\n  'mediatorUpdateQuads': urn_comunica_default_rdf_update_quads_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-drop',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_load = new (require('@comunica/actor-query-operation-update-load').ActorQueryOperationLoad)({\n  'mediatorUpdateQuads': urn_comunica_default_rdf_update_quads_mediators_main,\n  'mediatorQuerySourceIdentify': urn_comunica_default_query_source_identify_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-load',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_join = new (require('@comunica/actor-query-operation-join').ActorQueryOperationJoin)({\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#join',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_minus = new (require('@comunica/actor-query-operation-minus').ActorQueryOperationMinus)({\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#minus',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_seq = new (require('@comunica/actor-query-operation-path-seq').ActorQueryOperationPathSeq)({\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-seq',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_multi_smallest = new (require('@comunica/actor-rdf-join-inner-multi-smallest').ActorRdfJoinMultiSmallest)({\n  'mediatorJoinEntriesSort': urn_comunica_default_rdf_join_entries_sort_mediators_main,\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-multi-smallest',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_multi_smallest_filter_bindings = new (require('@comunica/actor-rdf-join-inner-multi-smallest-filter-bindings').ActorRdfJoinMultiSmallestFilterBindings)({\n  'selectivityModifier': 0.0001,\n  'blockSize': 64,\n  'mediatorJoinEntriesSort': urn_comunica_default_rdf_join_entries_sort_mediators_main,\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-multi-smallest-filter-bindings',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_filter_pushdown = new (require('@comunica/actor-optimize-query-operation-filter-pushdown').ActorOptimizeQueryOperationFilterPushdown)({\n  'aggressivePushdown': false,\n  'maxIterations': 10,\n  'splitConjunctive': true,\n  'mergeConjunctive': true,\n  'pushIntoLeftJoins': true,\n  'pushEqualityIntoPatterns': true,\n  'name': 'urn:comunica:default:optimize-query-operation/actors#filter-pushdown',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_group_sources\n]\n});\nconst urn_comunica_default_context_preprocess_actors_query_source_identify = new (require('@comunica/actor-context-preprocess-query-source-identify').ActorContextPreprocessQuerySourceIdentify)({\n  'cacheSize': 100,\n  'httpInvalidator': https___linkedsoftwaredependencies_org_bundles_npm__comunica_actor_context_preprocess_query_source_identify__3_0_0_components_ActorContextPreprocessQuerySourceIdentify_jsonld_IActorContextPreprocessQuerySourceIdentifyArgs_default_invalidator,\n  'mediatorQuerySourceIdentify': urn_comunica_default_query_source_identify_mediators_main,\n  'mediatorContextPreprocess': urn_comunica_default_context_preprocess_mediators_main,\n  'name': 'urn:comunica:default:context-preprocess/actors#query-source-identify',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus,\n  'beforeActors': [\n  urn_comunica_default_context_preprocess_actors_query_source_skolemize\n]\n});\nconst urn_comunica_default_init_actors_query = new (require('@comunica/actor-init-query').ActorInitQuery)({\n  'mediatorQueryProcess': urn_comunica_default_query_process_mediators_main,\n  'mediatorQueryResultSerialize': urn_comunica_default_query_result_serialize_mediators_serialize,\n  'mediatorQueryResultSerializeMediaTypeCombiner': urn_comunica_default_query_result_serialize_mediators_mediaType,\n  'mediatorQueryResultSerializeMediaTypeFormatCombiner': urn_comunica_default_query_result_serialize_mediators_mediaTypeFormat,\n  'mediatorHttpInvalidate': urn_comunica_default_http_invalidate_mediators_main,\n  'defaultQueryInputFormat': 'sparql',\n  'allowNoSources': false,\n  'name': 'urn:comunica:default:init/actors#query',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_init__3_0_0_components_ActorInit_jsonld_ActorInit_default_bus\n});\nconst urn_comunica_default_query_operation_actors_extend = new (require('@comunica/actor-query-operation-extend').ActorQueryOperationExtend)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#extend',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_filter = new (require('@comunica/actor-query-operation-filter').ActorQueryOperationFilter)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#filter',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_group = new (require('@comunica/actor-query-operation-group').ActorQueryOperationGroup)({\n  'mediatorHashBindings': urn_comunica_default_hash_bindings_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#group',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_leftjoin = new (require('@comunica/actor-query-operation-leftjoin').ActorQueryOperationLeftJoin)({\n  'mediatorJoin': urn_comunica_default_rdf_join_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#leftjoin',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_nop = new (require('@comunica/actor-query-operation-nop').ActorQueryOperationNop)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#nop',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_orderby = new (require('@comunica/actor-query-operation-orderby').ActorQueryOperationOrderBy)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#orderby',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_service = new (require('@comunica/actor-query-operation-service').ActorQueryOperationService)({\n  'forceSparqlEndpoint': false,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQuerySourceIdentify': urn_comunica_default_query_source_identify_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#service',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_values = new (require('@comunica/actor-query-operation-values').ActorQueryOperationValues)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#values',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_one_or_more = new (require('@comunica/actor-query-operation-path-one-or-more').ActorQueryOperationPathOneOrMore)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-one-or-more',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_zero_or_more = new (require('@comunica/actor-query-operation-path-zero-or-more').ActorQueryOperationPathZeroOrMore)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-zero-or-more',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_path_zero_or_one = new (require('@comunica/actor-query-operation-path-zero-or-one').ActorQueryOperationPathZeroOrOne)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#path-zero-or-one',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_operation_actors_update_delete_insert = new (require('@comunica/actor-query-operation-update-deleteinsert').ActorQueryOperationUpdateDeleteInsert)({\n  'mediatorUpdateQuads': urn_comunica_default_rdf_update_quads_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'name': 'urn:comunica:default:query-operation/actors#update-delete-insert',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus\n});\nconst urn_comunica_default_query_process_actors_sequential = new (require('@comunica/actor-query-process-sequential').ActorQueryProcessSequential)({\n  'mediatorContextPreprocess': urn_comunica_default_context_preprocess_mediators_main,\n  'mediatorQueryParse': urn_comunica_default_query_parse_mediators_main,\n  'mediatorOptimizeQueryOperation': urn_comunica_default_optimize_query_operation_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'name': 'urn:comunica:default:query-process/actors#sequential',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_process__3_0_0_components_ActorQueryProcess_jsonld_ActorQueryProcess_default_bus\n});\nconst urn_comunica_default_query_source_identify_actors_rdfjs = new (require('@comunica/actor-query-source-identify-rdfjs').ActorQuerySourceIdentifyRdfJs)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'name': 'urn:comunica:default:query-source-identify/actors#rdfjs',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_source_identify__3_0_0_components_ActorQuerySourceIdentify_jsonld_ActorQuerySourceIdentify_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_none = new (require('@comunica/actor-rdf-join-inner-none').ActorRdfJoinNone)({\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-none',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_inner_multi_bind = new (require('@comunica/actor-rdf-join-inner-multi-bind').ActorRdfJoinMultiBind)({\n  'bindOrder': 'depth-first',\n  'selectivityModifier': 0.0001,\n  'minMaxCardinalityRatio': 60,\n  'mediatorJoinEntriesSort': urn_comunica_default_rdf_join_entries_sort_mediators_main,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#inner-multi-bind',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_rdf_join_actors_optional_bind = new (require('@comunica/actor-rdf-join-optional-bind').ActorRdfJoinOptionalBind)({\n  'bindOrder': 'depth-first',\n  'selectivityModifier': 0.000001,\n  'mediatorQueryOperation': urn_comunica_default_query_operation_mediators_main,\n  'mediatorMergeBindingsContext': urn_comunica_default_merge_bindings_context_mediators_main,\n  'mediatorJoinSelectivity': urn_comunica_default_rdf_join_selectivity_mediators_main,\n  'name': 'urn:comunica:default:rdf-join/actors#optional-bind',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus\n});\nconst urn_comunica_default_optimize_query_operation_actors_prune_empty_source_operations = new (require('@comunica/actor-optimize-query-operation-prune-empty-source-operations').ActorOptimizeQueryOperationPruneEmptySourceOperations)({\n  'useAskIfSupported': false,\n  'name': 'urn:comunica:default:optimize-query-operation/actors#prune-empty-source-operations',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_filter_pushdown\n]\n});\nconst urn_comunica_default_optimize_query_operation_actors_join_connected = new (require('@comunica/actor-optimize-query-operation-join-connected').ActorOptimizeQueryOperationJoinConnected)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#join-connected',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_prune_empty_source_operations\n]\n});\nconst urn_comunica_default_optimize_query_operation_actors_bgp_to_join = new (require('@comunica/actor-optimize-query-operation-bgp-to-join').ActorOptimizeQueryOperationBgpToJoin)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#bgp-to-join',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_join_connected\n]\n});\nconst urn_comunica_default_optimize_query_operation_actors_join_bgp = new (require('@comunica/actor-optimize-query-operation-join-bgp').ActorOptimizeQueryOperationJoinBgp)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#join-bgp',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_bgp_to_join\n]\n});\nconst urn_comunica_default_optimize_query_operation_actors_assign_sources_exhaustive = new (require('@comunica/actor-optimize-query-operation-assign-sources-exhaustive').ActorOptimizeQueryOperationAssignSourcesExhaustive)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#assign-sources-exhaustive',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_join_bgp\n]\n});\nconst urn_comunica_default_optimize_query_operation_actors_describe_to_constructs_subject = new (require('@comunica/actor-optimize-query-operation-describe-to-constructs-subject').ActorOptimizeQueryOperationDescribeToConstructsSubject)({\n  'name': 'urn:comunica:default:optimize-query-operation/actors#describe-to-constructs-subject',\n  'bus': https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus,\n  'beforeActors': [\n  urn_comunica_default_optimize_query_operation_actors_assign_sources_exhaustive\n]\n});\nconst urn_comunica_default_Runner = (https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_init__3_0_0_components_ActorInit_jsonld_ActorInit_default_bus, [\n  urn_comunica_default_context_preprocess_actors_convert_shortcuts,\n  urn_comunica_default_context_preprocess_actors_set_defaults,\n  urn_comunica_default_context_preprocess_actors_source_to_destination,\n  urn_comunica_default_context_preprocess_actors_query_source_identify,\n  urn_comunica_default_context_preprocess_actors_query_source_skolemize,\n  urn_comunica_default_hash_bindings_actors_sha1,\n  urn_comunica_default_hash_quads_actors_sha1,\n  urn_comunica_default_init_actors_query,\n  urn_comunica_default_optimize_query_operation_actors_rewrite_copy,\n  urn_comunica_default_optimize_query_operation_actors_rewrite_move,\n  urn_comunica_default_optimize_query_operation_actors_rewrite_add,\n  urn_comunica_default_optimize_query_operation_actors_describe_to_constructs_subject,\n  urn_comunica_default_optimize_query_operation_actors_assign_sources_exhaustive,\n  urn_comunica_default_optimize_query_operation_actors_join_bgp,\n  urn_comunica_default_optimize_query_operation_actors_bgp_to_join,\n  urn_comunica_default_optimize_query_operation_actors_join_connected,\n  urn_comunica_default_optimize_query_operation_actors_prune_empty_source_operations,\n  urn_comunica_default_optimize_query_operation_actors_filter_pushdown,\n  urn_comunica_default_optimize_query_operation_actors_group_sources,\n  urn_comunica_default_optimize_query_operation_actors_construct_distinct,\n  urn_comunica_default_query_parse_actors_sparql,\n  urn_comunica_default_rdf_join_entries_sort_actors_cardinality,\n  urn_comunica_default_rdf_join_selectivity_actors_variable_counting,\n  urn_comunica_default_rdf_metadata_accumulate_actors_cancontainundefs,\n  urn_comunica_default_rdf_metadata_accumulate_actors_cardinality,\n  urn_comunica_default_rdf_metadata_accumulate_actors_pagesize,\n  urn_comunica_default_rdf_metadata_accumulate_actors_requesttime,\n  urn_comunica_default_rdf_update_quads_actors_rdfjs_store,\n  urn_comunica_default_query_operation_actors_ask,\n  urn_comunica_default_query_operation_actors_bgp,\n  urn_comunica_default_query_operation_actors_construct,\n  urn_comunica_default_query_operation_actors_distinct,\n  urn_comunica_default_query_operation_actors_extend,\n  urn_comunica_default_query_operation_actors_filter,\n  urn_comunica_default_query_operation_actors_from,\n  urn_comunica_default_query_operation_actors_group,\n  urn_comunica_default_query_operation_actors_join,\n  urn_comunica_default_query_operation_actors_leftjoin,\n  urn_comunica_default_query_operation_actors_minus,\n  urn_comunica_default_query_operation_actors_nop,\n  urn_comunica_default_query_operation_actors_orderby,\n  urn_comunica_default_query_operation_actors_project,\n  urn_comunica_default_query_operation_actors_reduced,\n  urn_comunica_default_query_operation_actors_service,\n  urn_comunica_default_query_operation_actors_slice,\n  urn_comunica_default_query_operation_actors_source,\n  urn_comunica_default_query_operation_actors_union,\n  urn_comunica_default_query_operation_actors_values,\n  urn_comunica_default_query_operation_actors_path_alt,\n  urn_comunica_default_query_operation_actors_path_inv,\n  urn_comunica_default_query_operation_actors_path_link,\n  urn_comunica_default_query_operation_actors_path_nps,\n  urn_comunica_default_query_operation_actors_path_one_or_more,\n  urn_comunica_default_query_operation_actors_path_seq,\n  urn_comunica_default_query_operation_actors_path_zero_or_more,\n  urn_comunica_default_query_operation_actors_path_zero_or_one,\n  urn_comunica_default_query_operation_actors_update_clear,\n  urn_comunica_default_query_operation_actors_update_composite,\n  urn_comunica_default_query_operation_actors_update_create,\n  urn_comunica_default_query_operation_actors_update_delete_insert,\n  urn_comunica_default_query_operation_actors_update_drop,\n  urn_comunica_default_query_operation_actors_update_load,\n  urn_comunica_default_query_process_actors_sequential,\n  urn_comunica_default_query_source_identify_actors_rdfjs,\n  urn_comunica_default_rdf_join_actors_inner_none,\n  urn_comunica_default_rdf_join_actors_inner_single,\n  urn_comunica_default_rdf_join_actors_inner_multi_empty,\n  urn_comunica_default_rdf_join_actors_inner_multi_bind_source,\n  urn_comunica_default_rdf_join_actors_inner_multi_bind,\n  urn_comunica_default_rdf_join_actors_inner_hash,\n  urn_comunica_default_rdf_join_actors_inner_symmetric_hash,\n  urn_comunica_default_rdf_join_actors_inner_nested_loop,\n  urn_comunica_default_rdf_join_actors_inner_multi_smallest,\n  urn_comunica_default_rdf_join_actors_inner_multi_smallest_filter_bindings,\n  urn_comunica_default_rdf_join_actors_minus_hash,\n  urn_comunica_default_rdf_join_actors_minus_hash_undef,\n  urn_comunica_default_rdf_join_actors_optional_bind,\n  urn_comunica_default_rdf_join_actors_optional_hash_def_nonblocking,\n  urn_comunica_default_rdf_join_actors_optional_hash_def_blocking,\n  urn_comunica_default_rdf_join_actors_optional_hash_undef_nonblocking,\n  urn_comunica_default_rdf_join_actors_optional_hash_undef_blocking,\n  urn_comunica_default_rdf_join_actors_optional_nested_loop\n]);\nreturn urn_comunica_default_init_actors_query;\n}\n\n","import { QueryEngineBase } from '@comunica/actor-init-query';\nimport type { ActorInitQueryBase } from '@comunica/actor-init-query';\nimport type { IQueryContextCommon } from '@comunica/types';\n\n// eslint-disable-next-line import/extensions,ts/no-require-imports,ts/no-var-requires\nconst engineDefault = require('../engine-default.js');\n\n/**\n * A Comunica SPARQL query engine.\n */\nexport class QueryEngine<QueryContext extends IQueryContextCommon = IQueryContextCommon>\n  extends QueryEngineBase<QueryContext> {\n  public constructor(engine: ActorInitQueryBase = engineDefault()) {\n    super(engine);\n  }\n}\n","/* eslint-disable unicorn/filename-case */\n/* eslint-enable unicorn/filename-case */\nexport * from './QueryEngine';\n","import type { BindingsFactory } from '@comunica/bindings-factory';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  IQueryOperationResultBindings,\n  Bindings,\n  IActionContext,\n  MetadataBindings,\n  IQuerySourceWrapper,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport {\n  BufferedIterator,\n  MultiTransformIterator,\n  TransformIterator,\n  EmptyIterator,\n} from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { termToString } from 'rdf-string';\nimport { Algebra, Factory } from 'sparqlalgebrajs';\nimport { PathVariableObjectIterator } from './PathVariableObjectIterator';\n\nconst DF = new DataFactory();\n\n/**\n * An abstract actor that handles Path operations.\n *\n * Provides multiple helper functions used by the Path operation actors.\n */\nexport abstract class ActorAbstractPath extends ActorQueryOperationTypedMediated<Algebra.Path> {\n  protected static readonly FACTORY: Factory = new Factory();\n\n  protected readonly predicateType: string;\n\n  protected constructor(args: IActorQueryOperationTypedMediatedArgs, predicateType: string) {\n    super(args, 'path');\n    this.predicateType = predicateType;\n  }\n\n  public async testOperation(operation: Algebra.Path, _context: IActionContext): Promise<IActorTest> {\n    if (operation.predicate.type !== this.predicateType) {\n      throw new Error(`This Actor only supports ${this.predicateType} Path operations.`);\n    }\n\n    return true;\n  }\n\n  // Generates a variable that does not yet occur in the path\n  public generateVariable(path?: Algebra.Path, name?: string): RDF.Variable {\n    if (!name) {\n      return this.generateVariable(path, 'b');\n    }\n\n    // Path predicates can't contain variables\n    if (path && (path.subject.value === name || path.object.value === name)) {\n      return this.generateVariable(path, `${name}b`);\n    }\n\n    return DF.variable(name);\n  }\n\n  // Such connectivity matching does not introduce duplicates (it does not incorporate any count of the number\n  // of ways the connection can be made) even if the repeated path itself would otherwise result in duplicates.\n  // https://www.w3.org/TR/sparql11-query/#propertypaths\n  public async isPathArbitraryLengthDistinct(context: IActionContext, path: Algebra.Path):\n  Promise<{ context: IActionContext; operation: IQueryOperationResultBindings | undefined }> {\n    if (!context.get(KeysQueryOperation.isPathArbitraryLengthDistinctKey)) {\n      context = context.set(KeysQueryOperation.isPathArbitraryLengthDistinctKey, true);\n      return { context, operation: ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate({\n        operation: ActorAbstractPath.FACTORY.createDistinct(path),\n        context,\n      })) };\n    }\n\n    context = context.set(KeysQueryOperation.isPathArbitraryLengthDistinctKey, false);\n    return { context, operation: undefined };\n  }\n\n  private async predicateStarGraphVariable(\n    subject: RDF.Term,\n    object: RDF.Variable,\n    predicate: Algebra.PropertyPathSymbol,\n    graph: RDF.Variable,\n    context: IActionContext,\n    bindingsFactory: BindingsFactory,\n  ): Promise<IPathResultStream> {\n    const sources = this.getPathSources(predicate);\n    // TODO: refactor this with an iterator just like PathVariableObjectIterator so we handle backpressure correctly\n    // Construct path to obtain all graphs where subject exists\n    const predVar = this.generateVariable(ActorAbstractPath.FACTORY\n      .createPath(subject, predicate, object, graph));\n    const findGraphs = ActorAbstractPath.FACTORY.createUnion([\n      this.assignPatternSources(ActorAbstractPath.FACTORY.createPattern(subject, predVar, object, graph), sources),\n      this.assignPatternSources(ActorAbstractPath.FACTORY.createPattern(object, predVar, subject, graph), sources),\n    ]);\n    const results = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ context, operation: findGraphs }),\n    );\n\n    const passedGraphs: Set<string> = new Set();\n\n    const bindingsStream = new MultiTransformIterator<Bindings, Bindings>(\n      results.bindingsStream,\n      {\n        multiTransform: (bindings: Bindings) => {\n          // Extract the graph and start a predicate* search starting from subject in each graph\n          const graphValue: RDF.Term = bindings.get(graph)!;\n          if (passedGraphs.has(graphValue.value)) {\n            return new EmptyIterator();\n          }\n          passedGraphs.add(graphValue.value);\n          return new TransformIterator<Bindings>(\n            async() => {\n              const it = new BufferedIterator<RDF.Term>();\n              await this.getObjectsPredicateStar(subject, predicate, graphValue, context, {}, it, { count: 0 });\n              return it.transform<Bindings>({\n                transform(item, next, push) {\n                  push(bindingsFactory.bindings([\n                    [ object, item ],\n                    [ graph, graphValue ],\n                  ]));\n                  next();\n                },\n              });\n            },\n            { maxBufferSize: 128 },\n          );\n        },\n        autoStart: false,\n      },\n    );\n\n    return {\n      bindingsStream,\n      metadata: results.metadata,\n    };\n  }\n\n  /**\n   * Returns an iterator with Bindings of the query subject predicate* ?o or subject predicate+ ?o\n   * If graph is a variable, it will also be in those bindings\n   * @param {Term} subject Term of where we start the predicate* search.\n   * @param {Algebra.PropertyPathSymbol} predicate Predicate of the *-path.\n   * @param {Variable} object Variable of the zeroOrMore-query.\n   * @param {Term} graph The graph in which we search for the pattern. (Possibly a variable)\n   * @param {ActionContext} context The context to pass to sub-opertations\n   * @param emitFirstSubject If the path operation is predicate*, otherwise it is predicate+.\n   * @return {Promise<AsyncIterator<Bindings>} Iterator to where all bindings of query should have been pushed.\n   */\n  public async getObjectsPredicateStarEval(\n    subject: RDF.Term,\n    predicate: Algebra.PropertyPathSymbol,\n    object: RDF.Variable,\n    graph: RDF.Term,\n    context: IActionContext,\n    emitFirstSubject: boolean,\n    bindingsFactory: BindingsFactory,\n  ): Promise<IPathResultStream> {\n    if (graph.termType === 'Variable') {\n      return this.predicateStarGraphVariable(subject, object, predicate, graph, context, bindingsFactory);\n    }\n\n    const it = new PathVariableObjectIterator(\n      subject,\n      predicate,\n      graph,\n      context,\n      this.mediatorQueryOperation,\n      emitFirstSubject,\n    );\n\n    const bindingsStream = it.transform<Bindings>({\n      autoStart: false,\n      transform(item, next, push) {\n        push(bindingsFactory.bindings([[ object, item ]]));\n        next();\n      },\n    });\n\n    return {\n      bindingsStream,\n      async metadata() {\n        const metadata: MetadataBindings = await new Promise((resolve) => {\n          it.getProperty('metadata', (metadataInner: any) => resolve(metadataInner()));\n        });\n        // Increment cardinality by one, because we always have at least one result once we reach this stage.\n        // See the transformation above where we push a single binding.\n        metadata.cardinality.value++;\n        return metadata;\n      },\n    };\n  }\n\n  /**\n   * Pushes all terms to iterator `it` that are a solution of object predicate* ?o.\n   * @param {Term} object Term of where we start the predicate* search.\n   * @param {Algebra.PropertyPathSymbol} predicate Predicate of the *-path.\n   * @param {Term} graph The graph in which we search for the pattern.\n   * @param {ActionContext} context\n   * @param {Record<string, Term>} termHashes Remembers the objects we've already searched for.\n   * @param {BufferedIterator<Term>} it Iterator to push terms to.\n   * @param {any} counter Counts how many searches are in progress to close it when needed (when counter == 0).\n   * @return {Promise<IPathResultStream['metadata']>} The results metadata.\n   */\n  public async getObjectsPredicateStar(\n    object: RDF.Term,\n    predicate: Algebra.PropertyPathSymbol,\n    graph: RDF.Term,\n    context: IActionContext,\n    termHashes: Record<string, RDF.Term>,\n    it: BufferedIterator<RDF.Term>,\n    counter: any,\n  ): Promise<IPathResultStream['metadata'] | undefined> {\n    const termString = termToString(object);\n    if (termHashes[termString]) {\n      return;\n    }\n\n    (<any> it)._push(object);\n    termHashes[termString] = object;\n    counter.count++;\n\n    const thisVariable = this.generateVariable();\n    const path = ActorAbstractPath.FACTORY.createPath(object, predicate, thisVariable, graph);\n    const results = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation: path, context }),\n    );\n    // TODO: fixme\n    // eslint-disable-next-line ts/no-misused-promises\n    results.bindingsStream.on('data', async(bindings: Bindings) => {\n      const result = bindings.get(thisVariable);\n      await this.getObjectsPredicateStar(result!, predicate, graph, context, termHashes, it, counter);\n    });\n    results.bindingsStream.on('end', () => {\n      if (--counter.count === 0) {\n        it.close();\n      }\n    });\n\n    return results.metadata;\n  }\n\n  /**\n   * Pushes all terms to iterator `it` that are a solution of ?s predicate* ?o.\n   * @param {string} subjectVar String representation of subjectVariable\n   * @param {string} objectVar String representation of objectVariable\n   * @param {Term} subjectVal Term of where we start the predicate* search.\n   * @param {Term} objectVal Found solution for an object, start for the new step.\n   * @param {Algebra.PropertyPathSymbol} predicate Predicate of the *-path.\n   * @param {Term} graph The graph in which we search for the pattern.\n   * @param {ActionContext} context\n   * @param {{[id: string]: Promise<Term[]>}} termHashesGlobal\n   * Remembers solutions for when objectVal is already been calculated, can be reused when same objectVal occurs\n   * @param {{[id: string]: Term}} termHashesCurrentSubject\n   * Remembers the pairs we've already searched for, can stop searching if so.\n   * @param {BufferedIterator<Bindings>} it Iterator to push terms to.\n   * @param {any} counter Counts how many searches are in progress to close it when needed (when counter == 0).\n   * @return {Promise<void>} All solutions of query should have been pushed to it by then.\n   */\n  // Let the iterator `it` emit all bindings of size 2, with subjectStringVariable as value subjectVal\n  // and objectStringVariable as value all nodes reachable through predicate* beginning at objectVal\n  public async getSubjectAndObjectBindingsPredicateStar(\n    subjectVar: RDF.Variable,\n    objectVar: RDF.Variable,\n    subjectVal: RDF.Term,\n    objectVal: RDF.Term,\n    predicate: Algebra.PropertyPathSymbol,\n    graph: RDF.Term,\n    context: IActionContext,\n    termHashesGlobal: Record<string, Promise<RDF.Term[]>>,\n    termHashesCurrentSubject: Record<string, boolean>,\n    it: BufferedIterator<Bindings>,\n    counter: any,\n    bindingsFactory: BindingsFactory,\n  ): Promise<void> {\n    const termString = termToString(objectVal) + termToString(graph);\n\n    // If this combination of subject and object already done, return nothing\n    if (termHashesCurrentSubject[termString]) {\n      return;\n    }\n\n    counter.count++;\n    termHashesCurrentSubject[termString] = true;\n    (<any> it)._push(bindingsFactory.bindings([\n      [ subjectVar, subjectVal ],\n      [ objectVar, objectVal ],\n    ]));\n\n    // If every reachable node from object has already been calculated, use these for current subject too\n    if (termString in termHashesGlobal) {\n      const objects = await termHashesGlobal[termString];\n      for (const object of objects) {\n        await this.getSubjectAndObjectBindingsPredicateStar(\n          subjectVar,\n          objectVar,\n          subjectVal,\n          object,\n          predicate,\n          graph,\n          context,\n          termHashesGlobal,\n          termHashesCurrentSubject,\n          it,\n          counter,\n          bindingsFactory,\n        );\n      }\n      if (--counter.count === 0) {\n        it.close();\n      }\n\n      return;\n    }\n\n    // Construct promise to calculate all reachable nodes from this object\n    // TODO: fixme\n    // eslint-disable-next-line no-async-promise-executor,ts/no-misused-promises\n    const promise = new Promise<RDF.Term[]>(async(resolve, reject) => {\n      const objectsArray: RDF.Term[] = [];\n\n      // Construct path that leads us one step through predicate\n      const thisVariable = this.generateVariable();\n      const path = ActorAbstractPath.FACTORY.createPath(objectVal, predicate, thisVariable, graph);\n      const results = ActorQueryOperation.getSafeBindings(\n        await this.mediatorQueryOperation.mediate({ operation: path, context }),\n      );\n\n      // Recursive call on all neighbours\n      // TODO: fixme\n      // eslint-disable-next-line ts/no-misused-promises\n      results.bindingsStream.on('data', async(bindings: RDF.Bindings) => {\n        const result: RDF.Term = bindings.get(thisVariable)!;\n        objectsArray.push(result);\n        await this.getSubjectAndObjectBindingsPredicateStar(\n          subjectVar,\n          objectVar,\n          subjectVal,\n          result,\n          predicate,\n          graph,\n          context,\n          termHashesGlobal,\n          termHashesCurrentSubject,\n          it,\n          counter,\n          bindingsFactory,\n        );\n      });\n      results.bindingsStream.on('error', reject);\n      results.bindingsStream.on('end', () => {\n        if (--counter.count === 0) {\n          it.close();\n        }\n        resolve(objectsArray);\n      });\n    });\n\n    // Set it in the termHashesGlobal when this object occurs again they can wait for this promise\n    termHashesGlobal[termString] = promise;\n  }\n\n  /**\n   * Find all sources recursively contained in the given path operation.\n   * @param operation\n   */\n  public getPathSources(operation: Algebra.PropertyPathSymbol): IQuerySourceWrapper[] {\n    switch (operation.type) {\n      case Algebra.types.ALT:\n      case Algebra.types.SEQ:\n        return operation.input\n          .flatMap((subOp: Algebra.PropertyPathSymbol) => this.getPathSources(subOp));\n      case Algebra.types.INV:\n      case Algebra.types.ONE_OR_MORE_PATH:\n      case Algebra.types.ZERO_OR_MORE_PATH:\n      case Algebra.types.ZERO_OR_ONE_PATH:\n        return this.getPathSources(operation.path);\n      case Algebra.types.LINK:\n      case Algebra.types.NPS: {\n        const source = ActorQueryOperation.getOperationSource(operation);\n        if (!source) {\n          throw new Error(`Could not find a required source on a link path operation`);\n        }\n        return [ source ];\n      }\n    }\n  }\n\n  public assignPatternSources(pattern: Algebra.Pattern, sources: IQuerySourceWrapper[]): Algebra.Operation {\n    if (sources.length === 0) {\n      throw new Error(`Attempted to assign zero sources to a pattern during property path handling`);\n    }\n    if (sources.length === 1) {\n      return ActorQueryOperation.assignOperationSource(pattern, sources[0]);\n    }\n    return ActorAbstractPath.FACTORY.createUnion(sources\n      .map(source => ActorQueryOperation.assignOperationSource(pattern, source)), true);\n  }\n}\n\nexport interface IPathResultStream {\n  bindingsStream: AsyncIterator<Bindings>;\n  metadata: () => Promise<MetadataBindings>;\n}\n","import type { MediatorQueryOperation } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { BufferedIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { termToString } from 'rdf-string';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { Factory } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\nconst FACTORY = new Factory();\n\n/**\n * An iterator that implements the multi-length property path operation (* and +)\n * for a fixed subject and predicate, and a variable object.\n */\nexport class PathVariableObjectIterator extends BufferedIterator<RDF.Term> {\n  private readonly termHashes: Map<string, RDF.Term> = new Map();\n  private readonly runningOperations: AsyncIterator<RDF.Term>[] = [];\n  private readonly pendingOperations: { variable: RDF.Variable; operation: Algebra.Path }[] = [];\n\n  public constructor(\n    private readonly subject: RDF.Term,\n    private readonly predicate: Algebra.PropertyPathSymbol,\n    private readonly graph: RDF.Term,\n    private readonly context: IActionContext,\n    private readonly mediatorQueryOperation: MediatorQueryOperation,\n    emitFirstSubject: boolean,\n    private readonly maxRunningOperations = 16,\n  ) {\n    // The autoStart flag must be true to kickstart metadata collection\n    super({ autoStart: true });\n\n    // Push the subject as starting point\n    this._push(this.subject, emitFirstSubject);\n  }\n\n  protected override _end(destroy?: boolean): void {\n    // Close all running iterators\n    for (const it of this.runningOperations) {\n      it.destroy();\n    }\n\n    super._end(destroy);\n  }\n\n  protected override _push(item: RDF.Term, pushAsResult = true): void {\n    let termString;\n    if (pushAsResult) {\n      // Don't push if this subject was already found\n      termString = termToString(item);\n      if (this.termHashes.has(termString)) {\n        return;\n      }\n    }\n\n    // Add a pending path operation for this item\n    const variable = DF.variable('b');\n    this.pendingOperations.push({\n      variable,\n      operation: FACTORY.createPath(item, this.predicate, variable, this.graph),\n    });\n\n    // Otherwise, push the subject\n    if (termString) {\n      this.termHashes.set(termString, item);\n      super._push(item);\n    }\n  }\n\n  protected override _read(count: number, done: () => void): void {\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this;\n    (async function() {\n      // Open as many operations as possible\n      while (self.runningOperations.length < self.maxRunningOperations) {\n        if (self.pendingOperations.length === 0) {\n          break;\n        }\n\n        const pendingOperation = self.pendingOperations.pop()!;\n        const results = ActorQueryOperation.getSafeBindings(\n          await self.mediatorQueryOperation.mediate({ operation: pendingOperation.operation, context: self.context }),\n        );\n        const runningOperation = results.bindingsStream.transform<RDF.Term>({\n          autoStart: false,\n          transform(bindings, next, push) {\n            const newTerm: RDF.Term = bindings.get(pendingOperation.variable)!;\n            push(newTerm);\n            next();\n          },\n        });\n        if (!runningOperation.done) {\n          self.runningOperations.push(runningOperation);\n          runningOperation.on('error', error => self.destroy(error));\n          runningOperation.on('readable', () => {\n            self.readable = true;\n            self._fillBufferAsync();\n          });\n          runningOperation.on('end', () => {\n            self.runningOperations.splice(self.runningOperations.indexOf(runningOperation), 1);\n            self.readable = true;\n            self._fillBufferAsync();\n          });\n        }\n\n        self.setProperty('metadata', results.metadata);\n      }\n\n      // Try to read `count` items (based on UnionIterator)\n      let lastCount = 0;\n      let item: RDF.Term | null;\n      // eslint-disable-next-line no-cond-assign\n      while (lastCount !== (lastCount = count)) {\n        // Prioritize the operations that have been added first\n        for (let i = 0; i < self.runningOperations.length && count > 0; i++) {\n          // eslint-disable-next-line no-cond-assign\n          if ((item = self.runningOperations[i].read()) !== null) {\n            count--;\n            self._push(item);\n          }\n        }\n      }\n\n      // Close if everything has been read\n      if (self.runningOperations.length === 0 && self.pendingOperations.length === 0) {\n        self.close();\n      }\n    })().then(() => {\n      done();\n    }, error => this.destroy(error));\n  }\n}\n","export * from './ActorAbstractPath';\nexport * from './PathVariableObjectIterator';\n","import type { IActorContextPreprocessOutput, IActorContextPreprocessArgs } from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport type { IAction, IActorTest } from '@comunica/core';\nimport { ActionContextKey } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\n\n/**\n * A comunica Convert Shortcuts Context Preprocess Actor.\n */\nexport class ActorContextPreprocessConvertShortcuts extends ActorContextPreprocess {\n  public readonly contextKeyShortcuts: Record<string, string>;\n\n  public constructor(args: IActorContextPreprocessConvertShortcutsArgs) {\n    super(args);\n  }\n\n  public async test(_action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IAction): Promise<IActorContextPreprocessOutput> {\n    return {\n      context: ActorContextPreprocessConvertShortcuts.expandShortcuts(action.context, this.contextKeyShortcuts),\n    };\n  }\n\n  public static expandShortcuts(context: IActionContext, contextKeyShortcuts: Record<string, string>): IActionContext {\n    for (const key of context.keys()) {\n      if (contextKeyShortcuts[key.name]) {\n        context = context\n          .set(new ActionContextKey(contextKeyShortcuts[key.name]), context.get(key))\n          .delete(key);\n      }\n    }\n    return context;\n  }\n}\n\nexport interface IActorContextPreprocessConvertShortcutsArgs extends IActorContextPreprocessArgs {\n  /**\n   * A record of context shortcuts to full context keys (as defined in @comunica/context-entries).\n   * @range {json}\n   * @default {{\n   *   \"sources\": \"@comunica/actor-init-query:querySourcesUnidentified\",\n   *   \"destination\": \"@comunica/bus-rdf-update-quads:destination\",\n   *   \"initialBindings\": \"@comunica/actor-init-query:initialBindings\",\n   *   \"queryFormat\": \"@comunica/actor-init-query:queryFormat\",\n   *   \"baseIRI\": \"@comunica/actor-init-query:baseIRI\",\n   *   \"log\": \"@comunica/core:log\",\n   *   \"datetime\": \"@comunica/actor-http-memento:datetime\",\n   *   \"queryTimestamp\": \"@comunica/actor-init-query:queryTimestamp\",\n   *   \"httpProxyHandler\": \"@comunica/actor-http-proxy:httpProxyHandler\",\n   *   \"lenient\": \"@comunica/actor-init-query:lenient\",\n   *   \"httpIncludeCredentials\": \"@comunica/bus-http:include-credentials\",\n   *   \"httpAuth\": \"@comunica/bus-http:auth\",\n   *   \"httpTimeout\": \"@comunica/bus-http:http-timeout\",\n   *   \"httpBodyTimeout\": \"@comunica/bus-http:http-body-timeout\",\n   *   \"httpRetryCount\": \"@comunica/bus-http:http-retry-count\",\n   *   \"httpRetryDelay\": \"@comunica/bus-http:http-retry-delay\",\n   *   \"httpRetryOnServerError\": \"@comunica/bus-http:http-retry-on-server-error\",\n   *   \"fetch\": \"@comunica/bus-http:fetch\",\n   *   \"recoverBrokenLinks\": \"@comunica/bus-http-wayback:recover-broken-links\",\n   *   \"readOnly\": \"@comunica/bus-query-operation:readOnly\",\n   *   \"extensionFunctions\": \"@comunica/actor-init-query:extensionFunctions\",\n   *   \"extensionFunctionCreator\": \"@comunica/actor-init-query:extensionFunctionCreator\",\n   *   \"functionArgumentsCache\": \"@comunica/actor-init-query:functionArgumentsCache\",\n   *   \"explain\": \"@comunica/actor-init-query:explain\",\n   *   \"unionDefaultGraph\": \"@comunica/bus-query-operation:unionDefaultGraph\",\n   *   \"traverse\": \"@comunica/bus-query-source-identify:traverse\",\n   *   \"noCache\": \"@comunica/actor-init-query:noCache\",\n   *   \"distinctConstruct\": \"@comunica/actor-init-query:distinctConstruct\"\n   * }}\n   */\n  contextKeyShortcuts: Record<string, string>;\n}\n","import type {\n  IActorContextPreprocessOutput,\n  IActorContextPreprocessArgs,\n  MediatorContextPreprocess,\n} from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport type { ActorHttpInvalidateListenable, IActionHttpInvalidate } from '@comunica/bus-http-invalidate';\nimport type { MediatorQuerySourceIdentify } from '@comunica/bus-query-source-identify';\nimport { KeysInitQuery, KeysQueryOperation } from '@comunica/context-entries';\nimport type { IAction, IActorTest } from '@comunica/core';\nimport { ActionContext } from '@comunica/core';\nimport type {\n  IQuerySourceWrapper,\n  QuerySourceUnidentified,\n  QuerySourceUnidentifiedExpanded,\n  IActionContext,\n  IQuerySourceUnidentifiedExpanded,\n} from '@comunica/types';\nimport { LRUCache } from 'lru-cache';\n\n/**\n * A comunica Query Source Identify Context Preprocess Actor.\n */\nexport class ActorContextPreprocessQuerySourceIdentify extends ActorContextPreprocess {\n  public readonly cacheSize: number;\n  public readonly httpInvalidator: ActorHttpInvalidateListenable;\n  public readonly mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n  public readonly mediatorContextPreprocess: MediatorContextPreprocess;\n  public readonly cache?: LRUCache<string, Promise<IQuerySourceWrapper>>;\n\n  public constructor(args: IActorContextPreprocessQuerySourceIdentifyArgs) {\n    super(args);\n    this.cache = this.cacheSize ? new LRUCache<string, any>({ max: this.cacheSize }) : undefined;\n    const cache = this.cache;\n    if (cache) {\n      this.httpInvalidator.addInvalidateListener(\n        ({ url }: IActionHttpInvalidate) => url ? cache.delete(url) : cache.clear(),\n      );\n    }\n  }\n\n  public async test(_action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IAction): Promise<IActorContextPreprocessOutput> {\n    let context = action.context;\n\n    // Rewrite sources\n    if (context.has(KeysInitQuery.querySourcesUnidentified)) {\n      const querySourcesUnidentified: QuerySourceUnidentified[] = action.context\n        .get(KeysInitQuery.querySourcesUnidentified)!;\n      const querySourcesUnidentifiedExpanded = await Promise.all(querySourcesUnidentified\n        .map(querySource => this.expandSource(querySource)));\n      const querySources: IQuerySourceWrapper[] = await Promise.all(querySourcesUnidentifiedExpanded\n        .map(async querySourceUnidentified => this.identifySource(querySourceUnidentified, action.context)));\n      context = action.context\n        .delete(KeysInitQuery.querySourcesUnidentified)\n        .set(KeysQueryOperation.querySources, querySources);\n    }\n\n    return { context };\n  }\n\n  public async expandSource(querySource: QuerySourceUnidentified): Promise<QuerySourceUnidentifiedExpanded> {\n    if (typeof querySource === 'string' || 'match' in querySource) {\n      return { value: querySource };\n    }\n    return {\n      ...<Omit<IQuerySourceUnidentifiedExpanded, 'context'>>querySource,\n      context: (await this.mediatorContextPreprocess.mediate({\n        context: ActionContext.ensureActionContext(querySource.context ?? {}),\n      })).context,\n    };\n  }\n\n  public identifySource(\n    querySourceUnidentified: QuerySourceUnidentifiedExpanded,\n    context: IActionContext,\n  ): Promise<IQuerySourceWrapper> {\n    let sourcePromise: Promise<IQuerySourceWrapper> | undefined;\n\n    // Try to read from cache\n    // Only sources based on string values (e.g. URLs) are supported!\n    if (typeof querySourceUnidentified.value === 'string' && this.cache) {\n      sourcePromise = this.cache.get(querySourceUnidentified.value)!;\n    }\n\n    // If not in cache, identify the source\n    if (!sourcePromise) {\n      sourcePromise = this.mediatorQuerySourceIdentify.mediate({ querySourceUnidentified, context })\n        .then(({ querySource }) => querySource);\n\n      // Set in cache\n      if (typeof querySourceUnidentified.value === 'string' && this.cache) {\n        this.cache.set(querySourceUnidentified.value, sourcePromise);\n      }\n    }\n\n    return sourcePromise;\n  }\n}\n\nexport interface IActorContextPreprocessQuerySourceIdentifyArgs extends IActorContextPreprocessArgs {\n  /**\n   * The maximum number of entries in the LRU cache, set to 0 to disable.\n   * @range {integer}\n   * @default {100}\n   */\n  cacheSize: number;\n  /* eslint-disable max-len */\n  /**\n   * An actor that listens to HTTP invalidation events\n   * @default {<default_invalidator> a <npmd:@comunica/bus-http-invalidate/^3.0.0/components/ActorHttpInvalidateListenable.jsonld#ActorHttpInvalidateListenable>}\n   */\n  httpInvalidator: ActorHttpInvalidateListenable;\n  /* eslint-enable max-len */\n  /**\n   * Mediator for identifying query sources.\n   */\n  mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n  /**\n   * The context processing combinator\n   */\n  mediatorContextPreprocess: MediatorContextPreprocess;\n}\n","import type { IActorContextPreprocessOutput, IActorContextPreprocessArgs } from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport { KeysQueryOperation, KeysQuerySourceIdentify } from '@comunica/context-entries';\nimport type { IActorTest, IAction } from '@comunica/core';\nimport type { IQuerySourceWrapper, QuerySourceReference } from '@comunica/types';\nimport { QuerySourceSkolemized } from './QuerySourceSkolemized';\nimport { getSourceId } from './utils';\n\n/**\n * A comunica Query Source Skolemize Context Preprocess Actor.\n */\nexport class ActorContextPreprocessQuerySourceSkolemize extends ActorContextPreprocess {\n  public constructor(args: IActorContextPreprocessArgs) {\n    super(args);\n  }\n\n  public async test(_action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IAction): Promise<IActorContextPreprocessOutput> {\n    let context = action.context;\n\n    // Wrap sources in skolemized sources\n    if (context.has(KeysQueryOperation.querySources)) {\n      // Determine map of source id's\n      if (!context.has(KeysQuerySourceIdentify.sourceIds)) {\n        context = context.set(KeysQuerySourceIdentify.sourceIds, new Map());\n      }\n      const sourceIds: Map<QuerySourceReference, string> = context.getSafe(KeysQuerySourceIdentify.sourceIds);\n\n      let sources: IQuerySourceWrapper[] = context.getSafe(KeysQueryOperation.querySources);\n      sources = sources.map(sourceWrapper => ({\n        source: new QuerySourceSkolemized(sourceWrapper.source, getSourceId(sourceIds, sourceWrapper.source)),\n        context: sourceWrapper.context,\n      }));\n      context = context.set(KeysQueryOperation.querySources, sources);\n    }\n\n    return { context };\n  }\n}\n","import { MetadataValidationState } from '@comunica/metadata';\nimport type {\n  BindingsStream,\n  FragmentSelectorShape,\n  IActionContext,\n  IQueryBindingsOptions,\n  IQuerySource,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { ArrayIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { deskolemizeOperation, skolemizeBindingsStream, skolemizeQuadStream } from './utils';\n\n/**\n * A IQuerySource wrapper that skolemizes outgoing quads and bindings.\n */\nexport class QuerySourceSkolemized implements IQuerySource {\n  /**\n   * The query source to wrap over.\n   */\n  public readonly innerSource: IQuerySource;\n  /**\n   * ID of the inner source, see KeysRdfResolveQuadPattern.sourceIds.\n   */\n  public readonly sourceId: string;\n\n  public constructor(innerSource: IQuerySource, sourceId: string) {\n    this.innerSource = innerSource;\n    this.sourceId = sourceId;\n  }\n\n  public async getSelectorShape(context: IActionContext): Promise<FragmentSelectorShape> {\n    return this.innerSource.getSelectorShape(context);\n  }\n\n  public queryBindings(\n    operation: Algebra.Operation,\n    context: IActionContext,\n    options: IQueryBindingsOptions | undefined,\n  ): BindingsStream {\n    const operationMapped = deskolemizeOperation(operation, this.sourceId);\n    if (!operationMapped) {\n      const it: BindingsStream = new ArrayIterator<RDF.Bindings>([], { autoStart: false });\n      it.setProperty('metadata', {\n        state: new MetadataValidationState(),\n        cardinality: { type: 'exact', value: 0 },\n        canContainUndefs: false,\n        variables: [],\n      });\n      return it;\n    }\n    return skolemizeBindingsStream(this.innerSource.queryBindings(operationMapped, context, options), this.sourceId);\n  }\n\n  public queryBoolean(operation: Algebra.Ask, context: IActionContext): Promise<boolean> {\n    return this.innerSource.queryBoolean(operation, context);\n  }\n\n  public queryQuads(operation: Algebra.Operation, context: IActionContext): AsyncIterator<RDF.Quad> {\n    const operationMapped = deskolemizeOperation(operation, this.sourceId);\n    if (!operationMapped) {\n      const it: AsyncIterator<RDF.Quad> = new ArrayIterator<RDF.Quad>([], { autoStart: false });\n      it.setProperty('metadata', {\n        state: new MetadataValidationState(),\n        cardinality: { type: 'exact', value: 0 },\n      });\n      return it;\n    }\n    return skolemizeQuadStream(this.innerSource.queryQuads(operationMapped, context), this.sourceId);\n  }\n\n  public queryVoid(operation: Algebra.Update, context: IActionContext): Promise<void> {\n    return this.innerSource.queryVoid(operation, context);\n  }\n\n  public get referenceValue(): string | RDF.Source {\n    return this.innerSource.referenceValue;\n  }\n\n  public toString(): string {\n    return `${this.innerSource.toString()}(SkolemID:${this.sourceId})`;\n  }\n}\n","import { BlankNodeScoped } from '@comunica/data-factory';\nimport type {\n  BindingsStream,\n  IQuerySource,\n  MetadataBindings,\n  MetadataQuads,\n  QuerySourceReference,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { mapTermsNested } from 'rdf-terms';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\nexport const SKOLEM_PREFIX = 'urn:comunica_skolem:source_';\n\n/**\n * Get the unique, deterministic id for the given source.\n * @param sourceIds ID's of datasources, see KeysRdfResolveQuadPattern.sourceIds.\n * @param source A data source.\n * @return The id of the given source.\n */\nexport function getSourceId(sourceIds: Map<QuerySourceReference, string>, source: IQuerySource): string {\n  let sourceId = sourceIds.get(source.referenceValue);\n  if (sourceId === undefined) {\n    sourceId = `${sourceIds.size}`;\n    sourceIds.set(source.referenceValue, sourceId);\n  }\n  return sourceId;\n}\n\n/**\n * If the given term is a blank node, return a deterministic named node for it\n * based on the source id and the blank node value.\n * @param term Any RDF term.\n * @param sourceId A source identifier.\n * @return If the given term was a blank node, this will return a skolemized named node, otherwise the original term.\n */\nexport function skolemizeTerm(term: RDF.Term, sourceId: string): RDF.Term | BlankNodeScoped {\n  if (term.termType === 'BlankNode') {\n    return new BlankNodeScoped(`bc_${sourceId}_${term.value}`, DF.namedNode(`${SKOLEM_PREFIX}${sourceId}:${term.value}`));\n  }\n  return term;\n}\n\n/**\n * Skolemize all terms in the given quad.\n * @param quad An RDF quad.\n * @param sourceId A source identifier.\n * @return The skolemized quad.\n */\nexport function skolemizeQuad<Q extends RDF.BaseQuad = RDF.Quad>(quad: Q, sourceId: string): Q {\n  return mapTermsNested(quad, term => skolemizeTerm(term, sourceId));\n}\n\n/**\n * Skolemize all terms in the given bindings.\n * @param bindings An RDF bindings object.\n * @param sourceId A source identifier.\n * @return The skolemized bindings.\n */\nexport function skolemizeBindings(bindings: RDF.Bindings, sourceId: string): RDF.Bindings {\n  return bindings.map((term) => {\n    if (term.termType === 'Quad') {\n      return skolemizeQuad(term, sourceId);\n    }\n    return skolemizeTerm(term, sourceId);\n  });\n}\n\n/**\n * Skolemize all terms in the given quad stream.\n * @param iterator An RDF quad stream.\n * @param sourceId A source identifier.\n * @return The skolemized quad stream.\n */\nexport function skolemizeQuadStream(iterator: AsyncIterator<RDF.Quad>, sourceId: string): AsyncIterator<RDF.Quad> {\n  const ret = iterator.map(quad => skolemizeQuad(quad, sourceId));\n  function inheritMetadata(): void {\n    iterator.getProperty('metadata', (metadata: MetadataQuads) => {\n      ret.setProperty('metadata', metadata);\n      metadata.state.addInvalidateListener(inheritMetadata);\n    });\n  }\n  inheritMetadata();\n  return ret;\n}\n\n/**\n * Skolemize all terms in the given bindings stream.\n * @param iterator An RDF bindings stream.\n * @param sourceId A source identifier.\n * @return The skolemized bindings stream.\n */\nexport function skolemizeBindingsStream(iterator: BindingsStream, sourceId: string): BindingsStream {\n  const ret = iterator.map(bindings => skolemizeBindings(bindings, sourceId));\n  function inheritMetadata(): void {\n    iterator.getProperty('metadata', (metadata: MetadataBindings) => {\n      ret.setProperty('metadata', metadata);\n      metadata.state.addInvalidateListener(inheritMetadata);\n    });\n  }\n  inheritMetadata();\n  return ret;\n}\n\n/**\n * If a given term was a skolemized named node for the given source id,\n * deskolemize it again to a blank node.\n * If the given term was a skolemized named node for another source, return false.\n * If the given term was not a skolemized named node, return the original term.\n * @param term Any RDF term.\n * @param sourceId A source identifier.\n */\nexport function deskolemizeTerm(term: RDF.Term, sourceId: string): RDF.Term | null {\n  if (term.termType === 'BlankNode' && 'skolemized' in term) {\n    term = (<BlankNodeScoped> term).skolemized;\n  }\n  if (term.termType === 'NamedNode' && term.value.startsWith(SKOLEM_PREFIX)) {\n    const colonSeparator = term.value.indexOf(':', SKOLEM_PREFIX.length);\n    const termSourceId = term.value.slice(SKOLEM_PREFIX.length, colonSeparator);\n    // We had a skolemized term\n    if (termSourceId === sourceId) {\n      // It came from the correct source\n      const termLabel = term.value.slice(colonSeparator + 1, term.value.length);\n      return DF.blankNode(termLabel);\n    }\n    // It came from a different source\n    return null;\n  }\n  return term;\n}\n\nexport function deskolemizeTermNestedThrowing(term: RDF.Term, sourceId: string): RDF.Term {\n  if (term.termType === 'Quad') {\n    return mapTermsNested(term, (subTerm) => {\n      const deskolemized = deskolemizeTerm(subTerm, sourceId);\n      if (!deskolemized) {\n        throw new Error(`Skolemized term is not in scope for this source`);\n      }\n      return deskolemized;\n    });\n  }\n  const ret = deskolemizeTerm(term, sourceId);\n  if (ret === null) {\n    throw new Error(`Skolemized term is not in scope for this source`);\n  }\n  return ret;\n}\n\n/**\n * Deskolemize all terms in the given quad.\n * @param quad An RDF quad.\n * @param sourceId A source identifier.\n * @return The deskolemized quad.\n */\nexport function deskolemizeQuad<Q extends RDF.BaseQuad = RDF.Quad>(quad: Q, sourceId: string): Q {\n  return mapTermsNested(quad, (term: RDF.Term): RDF.Term => {\n    const newTerm = deskolemizeTerm(term, sourceId);\n    // If the term was skolemized in a different source then don't deskolemize it\n    return newTerm ?? term;\n  });\n}\n\n/**\n * Deskolemize all terms in the given quad.\n * Will return undefined if there is at least one blank node not in scope for this sourceId.\n * @param operation An algebra operation.\n * @param sourceId A source identifier.\n */\nexport function deskolemizeOperation<O extends Algebra.Operation>(operation: O, sourceId: string): O | undefined {\n  try {\n    return <O> Util.mapOperation(operation, {\n      [Algebra.types.PATTERN](op, factory) {\n        return {\n          result: Object.assign(factory.createPattern(\n            deskolemizeTermNestedThrowing(op.subject, sourceId),\n            deskolemizeTermNestedThrowing(op.predicate, sourceId),\n            deskolemizeTermNestedThrowing(op.object, sourceId),\n            deskolemizeTermNestedThrowing(op.graph, sourceId),\n          ), { metadata: op.metadata }),\n          recurse: false,\n        };\n      },\n      [Algebra.types.PATH](op, factory) {\n        return {\n          result: Object.assign(factory.createPath(\n            deskolemizeTermNestedThrowing(op.subject, sourceId),\n            op.predicate,\n            deskolemizeTermNestedThrowing(op.object, sourceId),\n            deskolemizeTermNestedThrowing(op.graph, sourceId),\n          ), { metadata: op.metadata }),\n          recurse: false,\n        };\n      },\n    });\n  } catch {\n    // Return undefined for skolemized terms not in scope for this source\n  }\n}\n","import type {\n  IActorContextPreprocessOutput,\n  IActorContextPreprocessArgs,\n  IActionContextPreprocess,\n} from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport { KeysCore, KeysInitQuery, KeysQuerySourceIdentify } from '@comunica/context-entries';\nimport type { IAction, IActorTest } from '@comunica/core';\nimport type { FunctionArgumentsCache, Logger } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\n\n/**\n * A comunica Set Defaults Context Preprocess Actor.\n */\nexport class ActorContextPreprocessSetDefaults extends ActorContextPreprocess {\n  private readonly defaultFunctionArgumentsCache: FunctionArgumentsCache;\n  public readonly logger: Logger;\n\n  public constructor(args: IActorContextPreprocessSetDefaultsArgs) {\n    super(args);\n    this.defaultFunctionArgumentsCache = {};\n  }\n\n  public async test(_action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionContextPreprocess): Promise<IActorContextPreprocessOutput> {\n    let context = action.context;\n\n    if (action.initialize) {\n      // Set default values\n      context = context\n        .setDefault(KeysInitQuery.queryTimestamp, new Date())\n        .setDefault(KeysQuerySourceIdentify.sourceIds, new Map())\n        .setDefault(KeysCore.log, this.logger)\n        .setDefault(KeysInitQuery.functionArgumentsCache, this.defaultFunctionArgumentsCache)\n        .setDefault(KeysQuerySourceIdentify.hypermediaSourcesAggregatedStores, new Map());\n\n      // Handle default query format\n      let queryFormat: RDF.QueryFormat = { language: 'sparql', version: '1.1' };\n      if (context.has(KeysInitQuery.queryFormat)) {\n        queryFormat = context.get(KeysInitQuery.queryFormat)!;\n        if (queryFormat.language === 'graphql') {\n          context = context.setDefault(KeysInitQuery.graphqlSingularizeVariables, {});\n        }\n      } else {\n        context = context.set(KeysInitQuery.queryFormat, queryFormat);\n      }\n    }\n\n    return { context };\n  }\n}\n\nexport interface IActorContextPreprocessSetDefaultsArgs extends IActorContextPreprocessArgs {\n  /**\n   * The logger of this actor\n   * @default {a <npmd:@comunica/logger-void/^3.0.0/components/LoggerVoid.jsonld#LoggerVoid>}\n   */\n  logger: Logger;\n}\n","import type { IActorContextPreprocessOutput, IActorContextPreprocessArgs } from '@comunica/bus-context-preprocess';\nimport { ActorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport { KeysInitQuery, KeysRdfUpdateQuads } from '@comunica/context-entries';\nimport type { IActorTest, IAction } from '@comunica/core';\nimport type { QuerySourceUnidentified } from '@comunica/types';\n\n/**\n * A comunica Source To Destination Context Preprocess Actor.\n */\nexport class ActorContextPreprocessSourceToDestination extends ActorContextPreprocess {\n  public constructor(args: IActorContextPreprocessArgs) {\n    super(args);\n  }\n\n  public async test(_action: IAction): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IAction): Promise<IActorContextPreprocessOutput> {\n    if (action.context.get(KeysInitQuery.querySourcesUnidentified) &&\n      !action.context.get(KeysRdfUpdateQuads.destination)) {\n      const sources: QuerySourceUnidentified[] = action.context.get(KeysInitQuery.querySourcesUnidentified)!;\n      if (sources.length === 1) {\n        return { context: action.context.set(KeysRdfUpdateQuads.destination, sources[0]) };\n      }\n    }\n    return action;\n  }\n}\n","import type { IActionHashBindings, IActorHashBindingsOutput } from '@comunica/bus-hash-bindings';\nimport { ActorHashBindings } from '@comunica/bus-hash-bindings';\nimport type { IActorTest } from '@comunica/core';\nimport { sha1 } from 'hash.js';\nimport { termToString } from 'rdf-string';\n\n// eslint-disable-next-line ts/no-require-imports,ts/no-var-requires\nconst canonicalize = require('canonicalize');\n\n/**\n * A comunica Memento Http Actor.\n */\nexport class ActorHashBindingsSha1 extends ActorHashBindings {\n  public async test(action: IActionHashBindings): Promise<IActorTest> {\n    if (!action.allowHashCollisions) {\n      throw new Error(`Actor ${this.name} can not provide hash functions without hash collisions`);\n    }\n    return true;\n  }\n\n  public async run(_action: IActionHashBindings): Promise<IActorHashBindingsOutput> {\n    return {\n      hashFunction: bindings => sha1()\n        .update(canonicalize(Object.fromEntries([ ...bindings ]\n          .map(([ key, value ]) => [ termToString(key), termToString(value) ]))))\n        .digest('hex'),\n      hashCollisions: true,\n    };\n  }\n}\n","import type { IActionHashQuads, IActorHashQuadsOutput } from '@comunica/bus-hash-quads';\nimport { ActorHashQuads } from '@comunica/bus-hash-quads';\nimport type { IActorTest } from '@comunica/core';\nimport { sha1 } from 'hash.js';\nimport { quadToStringQuad } from 'rdf-string';\n\n/**\n * A comunica Memento Http Actor.\n */\nexport class ActorHashQuadsSha1 extends ActorHashQuads {\n  public async test(action: IActionHashQuads): Promise<IActorTest> {\n    if (!action.allowHashCollisions) {\n      throw new Error(`Actor ${this.name} can not provide hash functions without hash collisions`);\n    }\n    return true;\n  }\n\n  public async run(_action: IActionHashQuads): Promise<IActorHashQuadsOutput> {\n    return {\n      hashFunction: quad => sha1()\n        .update(JSON.stringify(quadToStringQuad(quad)))\n        .digest('hex'),\n      hashCollisions: true,\n    };\n  }\n}\n","/* eslint-disable unicorn/filename-case */\n/* eslint-enable unicorn/filename-case */\nimport { ActorInitQueryBase } from './ActorInitQueryBase';\n\n/* istanbul ignore next */\nif (typeof process === 'undefined') {\n  // Polyfills process.nextTick for readable-stream\n  globalThis.process = require('process/');\n}\n\nexport class ActorInitQuery extends ActorInitQueryBase {}\n","import type { MediatorHttpInvalidate } from '@comunica/bus-http-invalidate';\nimport type { IActionInit, IActorInitArgs, IActorOutputInit } from '@comunica/bus-init';\nimport { ActorInit } from '@comunica/bus-init';\nimport type { MediatorQueryProcess } from '@comunica/bus-query-process';\nimport type {\n  MediatorQueryResultSerializeHandle,\n  MediatorQueryResultSerializeMediaTypes,\n  MediatorQueryResultSerializeMediaTypeFormats,\n} from '@comunica/bus-query-result-serialize';\nimport type { IActorTest } from '@comunica/core';\n\n/**\n * A browser-safe comunica Query Init Actor.\n */\nexport class ActorInitQueryBase extends ActorInit implements IActorInitQueryBaseArgs {\n  public readonly mediatorQueryResultSerialize: MediatorQueryResultSerializeHandle;\n  public readonly mediatorQueryResultSerializeMediaTypeCombiner: MediatorQueryResultSerializeMediaTypes;\n  public readonly mediatorQueryResultSerializeMediaTypeFormatCombiner: MediatorQueryResultSerializeMediaTypeFormats;\n  public readonly mediatorHttpInvalidate: MediatorHttpInvalidate;\n  public readonly mediatorQueryProcess: MediatorQueryProcess;\n\n  public readonly queryString?: string;\n  public readonly defaultQueryInputFormat?: string;\n  public readonly allowNoSources?: boolean;\n  public readonly context?: string;\n\n  public async test(_action: IActionInit): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(_action: IActionInit): Promise<IActorOutputInit> {\n    throw new Error('ActorInitSparql#run is not supported in the browser.');\n  }\n}\n\nexport interface IActorInitQueryBaseArgs extends IActorInitArgs {\n  /**\n   * The query process mediator\n   */\n  mediatorQueryProcess: MediatorQueryProcess;\n  /**\n   * The query serialize mediator\n   */\n  mediatorQueryResultSerialize: MediatorQueryResultSerializeHandle;\n  /**\n   * The query serialize media type combinator\n   */\n  mediatorQueryResultSerializeMediaTypeCombiner: MediatorQueryResultSerializeMediaTypes;\n  /**\n   * The query serialize media type format combinator\n   */\n  mediatorQueryResultSerializeMediaTypeFormatCombiner: MediatorQueryResultSerializeMediaTypeFormats;\n  /**\n   * The HTTP cache invalidation mediator\n   */\n  mediatorHttpInvalidate: MediatorHttpInvalidate;\n\n  /**\n   * A SPARQL query string\n   */\n  queryString?: string;\n  /**\n   * The default query input format\n   * @default {sparql}\n   */\n  defaultQueryInputFormat?: string;\n  /**\n   * If it should be allowed that the user passes no sources.\n   * @default {false}\n   */\n  allowNoSources?: boolean;\n  /**\n   * A JSON string of a query operation context\n   */\n  context?: string;\n}\n","import type { IActionSparqlSerialize, IActorQueryResultSerializeOutput } from '@comunica/bus-query-result-serialize';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport { ActionContext } from '@comunica/core';\nimport type {\n  IActionContext,\n  IQueryOperationResult,\n  IQueryEngine,\n  IQueryExplained,\n  QueryFormatType,\n  QueryType,\n  QueryExplainMode,\n  BindingsStream,\n  QueryAlgebraContext,\n  QueryStringContext,\n  IQueryBindingsEnhanced,\n  IQueryQuadsEnhanced,\n  QueryEnhanced,\n  IQueryContextCommon,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport type { ActorInitQueryBase } from './ActorInitQueryBase';\n\n/**\n * Base implementation of a Comunica query engine.\n */\nexport class QueryEngineBase<\n  // eslint-disable-next-line unused-imports/no-unused-vars\n  QueryContext extends IQueryContextCommon = IQueryContextCommon,\n  QueryStringContextInner extends RDF.QueryStringContext = QueryStringContext,\n  QueryAlgebraContextInner extends RDF.QueryAlgebraContext = QueryAlgebraContext,\n>\nimplements IQueryEngine<QueryStringContextInner, QueryAlgebraContextInner> {\n  private readonly actorInitQuery: ActorInitQueryBase;\n\n  public constructor(actorInitQuery: ActorInitQueryBase) {\n    this.actorInitQuery = actorInitQuery;\n  }\n\n  public async queryBindings<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<BindingsStream> {\n    return this.queryOfType<QueryFormatTypeInner, IQueryBindingsEnhanced>(query, context, 'bindings');\n  }\n\n  public async queryQuads<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<AsyncIterator<RDF.Quad> & RDF.ResultStream<RDF.Quad>> {\n    return this.queryOfType<QueryFormatTypeInner, IQueryQuadsEnhanced>(query, context, 'quads');\n  }\n\n  public async queryBoolean<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<boolean> {\n    return this.queryOfType<QueryFormatTypeInner, RDF.QueryBoolean>(query, context, 'boolean');\n  }\n\n  public async queryVoid<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<void> {\n    return this.queryOfType<QueryFormatTypeInner, RDF.QueryVoid>(query, context, 'void');\n  }\n\n  protected async queryOfType<QueryFormatTypeInner extends QueryFormatType, QueryTypeOut extends QueryEnhanced>(\n    query: QueryFormatTypeInner,\n    context: undefined | (QueryFormatTypeInner extends string ?\n      QueryStringContextInner : QueryAlgebraContextInner),\n    expectedType: QueryTypeOut['resultType'],\n  ): Promise<ReturnType<QueryTypeOut['execute']>> {\n    const result = await this.query<QueryFormatTypeInner>(query, context);\n    if (result.resultType === expectedType) {\n      return <ReturnType<QueryTypeOut['execute']>> await result.execute();\n    }\n    throw new Error(`Query result type '${expectedType}' was expected, while '${result.resultType}' was found.`);\n  }\n\n  /**\n   * Evaluate the given query\n   * @param query A query string or algebra.\n   * @param context An optional query context.\n   * @return {Promise<QueryType>} A promise that resolves to the query output.\n   */\n  public async query<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<QueryType> {\n    const output = await this.queryOrExplain(query, context);\n    if ('explain' in output) {\n      throw new Error(`Tried to explain a query when in query-only mode`);\n    }\n    return output;\n  }\n\n  /**\n   * Explain the given query\n   * @param query A query string or algebra.\n   * @param context An optional query context.\n   * @param explainMode The explain mode.\n   * @return {Promise<QueryType | IQueryExplained>} A promise that resolves to\n   *                                                               the query output or explanation.\n   */\n  public async explain<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n    explainMode: QueryExplainMode,\n  ): Promise<IQueryExplained> {\n    context.explain = explainMode;\n    const output = await this.queryOrExplain(query, context);\n    return <IQueryExplained> output;\n  }\n\n  /**\n   * Evaluate or explain the given query\n   * @param query A query string or algebra.\n   * @param context An optional query context.\n   * @return {Promise<QueryType | IQueryExplained>} A promise that resolves to\n   *                                                               the query output or explanation.\n   */\n  public async queryOrExplain<QueryFormatTypeInner extends QueryFormatType>(\n    query: QueryFormatTypeInner,\n    context?: QueryFormatTypeInner extends string ? QueryStringContextInner : QueryAlgebraContextInner,\n  ): Promise<QueryType | IQueryExplained> {\n    const actionContext: IActionContext = ActionContext.ensureActionContext(context);\n\n    // Invalidate caches if cache argument is set to false\n    if (actionContext.get(KeysInitQuery.noCache)) {\n      await this.invalidateHttpCache();\n    }\n\n    // Invoke query process\n    const { result } = await this.actorInitQuery.mediatorQueryProcess.mediate({ query, context: actionContext });\n    if ('explain' in result) {\n      return result;\n    }\n    return QueryEngineBase.internalToFinalResult(result);\n  }\n\n  /**\n   * @param context An optional context.\n   * @return {Promise<{[p: string]: number}>} All available SPARQL (weighted) result media types.\n   */\n  public async getResultMediaTypes(context?: any): Promise<Record<string, number>> {\n    context = ActionContext.ensureActionContext(context);\n    return (await this.actorInitQuery.mediatorQueryResultSerializeMediaTypeCombiner\n      .mediate({ context, mediaTypes: true })).mediaTypes;\n  }\n\n  /**\n   * @param context An optional context.\n   * @return {Promise<{[p: string]: number}>} All available SPARQL result media type formats.\n   */\n  public async getResultMediaTypeFormats(context?: any): Promise<Record<string, string>> {\n    context = ActionContext.ensureActionContext(context);\n    return (await this.actorInitQuery.mediatorQueryResultSerializeMediaTypeFormatCombiner\n      .mediate({ context, mediaTypeFormats: true })).mediaTypeFormats;\n  }\n\n  /**\n   * Convert a query result to a string stream based on a certain media type.\n   * @param {IQueryOperationResult} queryResult A query result.\n   * @param {string} mediaType A media type.\n   * @param {ActionContext} context An optional context.\n   * @return {Promise<IActorQueryResultSerializeOutput>} A text stream.\n   */\n  public async resultToString(queryResult: RDF.Query<any>, mediaType?: string, context?: any):\n  Promise<IActorQueryResultSerializeOutput> {\n    context = ActionContext.ensureActionContext(context);\n    if (!mediaType) {\n      switch (queryResult.resultType) {\n        case 'bindings':\n          mediaType = 'application/json';\n          break;\n        case 'quads':\n          mediaType = 'application/trig';\n          break;\n        default:\n          mediaType = 'simple';\n          break;\n      }\n    }\n    const handle: IActionSparqlSerialize = { ...await QueryEngineBase.finalToInternalResult(queryResult), context };\n    return (await this.actorInitQuery.mediatorQueryResultSerialize\n      .mediate({ context, handle, handleMediaType: mediaType })).handle;\n  }\n\n  /**\n   * Invalidate all internal caches related to the given page URL.\n   * If no page URL is given, then all pages will be invalidated.\n   * @param {string} url The page URL to invalidate.\n   * @param context An optional ActionContext to pass to the actors.\n   * @return {Promise<any>} A promise resolving when the caches have been invalidated.\n   */\n  public invalidateHttpCache(url?: string, context?: any): Promise<any> {\n    context = ActionContext.ensureActionContext(context);\n    return this.actorInitQuery.mediatorHttpInvalidate.mediate({ url, context });\n  }\n\n  /**\n   * Convert an internal query result to a final one.\n   * @param internalResult An intermediary query result.\n   */\n  public static internalToFinalResult(internalResult: IQueryOperationResult): QueryType {\n    switch (internalResult.type) {\n      case 'bindings':\n        return {\n          resultType: 'bindings',\n          execute: async() => internalResult.bindingsStream,\n          metadata: async() => <any> await internalResult.metadata(),\n          context: internalResult.context,\n        };\n      case 'quads':\n        return {\n          resultType: 'quads',\n          execute: async() => internalResult.quadStream,\n          metadata: async() => <any> await internalResult.metadata(),\n          context: internalResult.context,\n        };\n      case 'boolean':\n        return {\n          resultType: 'boolean',\n          execute: async() => internalResult.execute(),\n          context: internalResult.context,\n        };\n      case 'void':\n        return {\n          resultType: 'void',\n          execute: async() => internalResult.execute(),\n          context: internalResult.context,\n        };\n    }\n  }\n\n  /**\n   * Convert a final query result to an internal one.\n   * @param finalResult A final query result.\n   */\n  public static async finalToInternalResult(finalResult: RDF.Query<any>): Promise<IQueryOperationResult> {\n    switch (finalResult.resultType) {\n      case 'bindings':\n        return {\n          type: 'bindings',\n          bindingsStream: <BindingsStream> await finalResult.execute(),\n          metadata: async() => <any> await finalResult.metadata(),\n        };\n      case 'quads':\n        return {\n          type: 'quads',\n          quadStream: <AsyncIterator<RDF.Quad>> await finalResult.execute(),\n          metadata: async() => <any> await finalResult.metadata(),\n        };\n      case 'boolean':\n        return {\n          type: 'boolean',\n          execute: () => finalResult.execute(),\n        };\n      case 'void':\n        return {\n          type: 'void',\n          execute: () => finalResult.execute(),\n        };\n    }\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport { getDataDestinationValue } from '@comunica/bus-rdf-update-quads';\nimport { KeysInitQuery, KeysQueryOperation, KeysRdfUpdateQuads } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type { IDataDestination, IQuerySourceWrapper } from '@comunica/types';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Assign Sources Exhaustive Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationAssignSourcesExhaustive extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const sources: IQuerySourceWrapper[] = action.context.get(KeysQueryOperation.querySources) ?? [];\n    if (sources.length === 0) {\n      return { operation: action.operation, context: action.context };\n    }\n    if (sources.length === 1) {\n      const sourceWrapper = sources[0];\n      const destination: IDataDestination | undefined = action.context.get(KeysRdfUpdateQuads.destination);\n      if (!destination || sourceWrapper.source.referenceValue === getDataDestinationValue(destination)) {\n        try {\n          const shape = await sourceWrapper.source.getSelectorShape(action.context);\n          if (ActorQueryOperation.doesShapeAcceptOperation(shape, action.operation)) {\n            return {\n              operation: ActorQueryOperation.assignOperationSource(action.operation, sourceWrapper),\n              context: action.context,\n            };\n          }\n        } catch {\n          // Fallback to the default case when the selector shape does not exist,\n          // which can occur for a non-existent destination.\n        }\n      }\n    }\n    return {\n      operation: this.assignExhaustive(action.operation, sources),\n      // We only keep queryString in the context if we only have a single source that accepts the full operation.\n      // In that case, the queryString can be sent to the source as-is.\n      context: action.context\n        .delete(KeysInitQuery.queryString),\n    };\n  }\n\n  /**\n   * Assign the given sources to the leaves in the given query operation.\n   * Leaves will be wrapped in a union operation and duplicated for every source.\n   * The input operation will not be modified.\n   * @param operation The input operation.\n   * @param sources The sources to assign.\n   */\n  public assignExhaustive(operation: Algebra.Operation, sources: IQuerySourceWrapper[]): Algebra.Operation {\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this;\n    return Util.mapOperation(operation, {\n      [Algebra.types.PATTERN](subOperation, factory) {\n        if (sources.length === 1) {\n          return {\n            result: ActorQueryOperation.assignOperationSource(subOperation, sources[0]),\n            recurse: false,\n          };\n        }\n        return {\n          result: factory.createUnion(sources\n            .map(source => ActorQueryOperation.assignOperationSource(subOperation, source))),\n          recurse: false,\n        };\n      },\n      [Algebra.types.LINK](subOperation, factory) {\n        if (sources.length === 1) {\n          return {\n            result: ActorQueryOperation.assignOperationSource(subOperation, sources[0]),\n            recurse: false,\n          };\n        }\n        return {\n          result: factory.createAlt(sources\n            .map(source => ActorQueryOperation.assignOperationSource(subOperation, source))),\n          recurse: false,\n        };\n      },\n      [Algebra.types.NPS](subOperation, factory) {\n        if (sources.length === 1) {\n          return {\n            result: ActorQueryOperation.assignOperationSource(subOperation, sources[0]),\n            recurse: false,\n          };\n        }\n        return {\n          result: factory.createAlt(sources\n            .map(source => ActorQueryOperation.assignOperationSource(subOperation, source))),\n          recurse: false,\n        };\n      },\n      [Algebra.types.SERVICE](subOperation) {\n        return {\n          result: subOperation,\n          recurse: false,\n        };\n      },\n      [Algebra.types.CONSTRUCT](subOperation, factory) {\n        return {\n          result: factory.createConstruct(\n            self.assignExhaustive(subOperation.input, sources),\n            subOperation.template,\n          ),\n          recurse: false,\n        };\n      },\n      [Algebra.types.DELETE_INSERT](subOperation, factory) {\n        return {\n          result: factory.createDeleteInsert(\n            subOperation.delete,\n            subOperation.insert,\n            subOperation.where ? self.assignExhaustive(subOperation.where, sources) : undefined,\n          ),\n          recurse: false,\n        };\n      },\n    });\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { Algebra, Factory } from 'sparqlalgebrajs';\nimport { Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica BGP to Join Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationBgpToJoin extends ActorOptimizeQueryOperation {\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      bgp(op: Algebra.Bgp, factory: Factory) {\n        return {\n          recurse: false,\n          result: factory.createJoin(op.patterns),\n        };\n      },\n    });\n    return { operation, context: action.context };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport { KeysInitQuery } from '@comunica/context-entries/lib/Keys';\nimport type { IActorTest } from '@comunica/core';\nimport type { Algebra, Factory } from 'sparqlalgebrajs';\nimport { Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Construct Distinct Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationConstructDistinct extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    if (!action.context.has(KeysInitQuery.distinctConstruct)) {\n      throw new Error(`${this.name} was not enabled by the query.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      construct(op: Algebra.Construct, factory: Factory) {\n        return {\n          recurse: false,\n          result: factory.createDistinct(factory.createConstruct(op.input, op.template)),\n        };\n      },\n    });\n    return { operation, context: action.context.delete(KeysInitQuery.distinctConstruct) };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Algebra, Factory } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory<RDF.BaseQuad>();\nconst AF = new Factory();\n\n/**\n * A comunica Describe To Constructs Subject Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationDescribeToConstructsSubject extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    if (action.operation.type !== Algebra.types.DESCRIBE) {\n      throw new Error(`Actor ${this.name} only supports describe operations, but got ${action.operation.type}`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operationOriginal: Algebra.Describe = <Algebra.Describe> action.operation;\n\n    // Create separate construct queries for all non-variable terms\n    const operations: Algebra.Construct[] = operationOriginal.terms\n      .filter(term => term.termType !== 'Variable')\n      .map((term: RDF.Term) => {\n        // Transform each term to a separate construct operation with S ?p ?o patterns (BGP) for all terms\n        const patterns: RDF.BaseQuad[] = [\n          DF.quad(term, DF.variable('__predicate'), DF.variable('__object')),\n        ];\n\n        // eslint-disable-next-line unicorn/no-array-for-each\n        patterns.forEach((templatePattern: any) => templatePattern.type = 'pattern');\n        const templateOperation: Algebra.Operation = {\n          type: Algebra.types.BGP,\n          patterns: <Algebra.Pattern[]> patterns,\n        };\n\n        // Create a construct query\n        return <Algebra.Construct> {\n          input: templateOperation,\n          template: <Algebra.Pattern[]> patterns,\n          type: 'construct',\n        };\n      });\n\n    // If we have variables in the term list,\n    // create one separate construct operation to determine these variables using the input pattern.\n    if (operations.length !== operationOriginal.terms.length) {\n      let variablePatterns: Algebra.Pattern[] = [];\n      operationOriginal.terms\n        .filter(term => term.termType === 'Variable')\n        // eslint-disable-next-line unicorn/no-array-for-each\n        .forEach((term: RDF.Term, i: number) => {\n          // Transform each term to an S ?p ?o pattern in a non-conflicting way\n          const patterns: RDF.BaseQuad[] = [\n            DF.quad(term, DF.variable(`__predicate${i}`), DF.variable(`__object${i}`)),\n          ];\n\n          // eslint-disable-next-line unicorn/no-array-for-each\n          patterns.forEach((templatePattern: any) => templatePattern.type = 'pattern');\n          variablePatterns = [ ...variablePatterns, ...<Algebra.Pattern[]> patterns ];\n        });\n\n      // Add a single construct for the variables\n      // This requires a join between the input pattern and our variable patterns that form a simple BGP\n      operations.push({\n        input: {\n          type: Algebra.types.JOIN,\n          input: [\n            operationOriginal.input,\n            { type: Algebra.types.BGP, patterns: variablePatterns },\n          ],\n        },\n        template: variablePatterns,\n        type: Algebra.types.CONSTRUCT,\n      });\n    }\n\n    // Union the construct operations\n    const operation = AF.createUnion(operations, false);\n\n    return { operation, context: action.context };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationArgs,\n  IActorOptimizeQueryOperationOutput,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { FragmentSelectorShape, IActionContext, IQuerySourceWrapper } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { mapTermsNested, uniqTerms } from 'rdf-terms';\nimport type { Factory } from 'sparqlalgebrajs';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Filter Pushdown Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationFilterPushdown extends ActorOptimizeQueryOperation {\n  private readonly aggressivePushdown: boolean;\n  private readonly maxIterations: number;\n  private readonly splitConjunctive: boolean;\n  private readonly mergeConjunctive: boolean;\n  private readonly pushIntoLeftJoins: boolean;\n  private readonly pushEqualityIntoPatterns: boolean;\n\n  public constructor(args: IActorOptimizeQueryOperationFilterPushdownArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    let operation: Algebra.Operation = action.operation;\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this;\n\n    // Split conjunctive filters into nested filters\n    if (this.splitConjunctive) {\n      operation = Util.mapOperation(operation, {\n        filter(op: Algebra.Filter, factory: Factory) {\n          // Split conjunctive filters into separate filters\n          if (op.expression.expressionType === Algebra.expressionTypes.OPERATOR && op.expression.operator === '&&') {\n            self.logDebug(action.context, `Split conjunctive filter into ${op.expression.args.length} nested filters`);\n            return {\n              recurse: true,\n              result: op.expression.args\n                .reduce((operation, expression) => factory.createFilter(operation, expression), op.input),\n            };\n          }\n          return {\n            recurse: true,\n            result: op,\n          };\n        },\n      });\n    }\n\n    // Collect selector shapes of all operations\n    const sources = this.getSources(operation);\n    // eslint-disable-next-line ts/no-unnecessary-type-assertion\n    const sourceShapes = new Map(<[IQuerySourceWrapper, FragmentSelectorShape][]> await Promise.all(sources\n      .map(async source => [ source, await source.source.getSelectorShape(action.context) ])));\n\n    // Push down all filters\n    // We loop until no more filters can be pushed down.\n    let repeat = true;\n    let iterations = 0;\n    while (repeat && iterations < this.maxIterations) {\n      repeat = false;\n      operation = Util.mapOperation(operation, {\n        filter(op: Algebra.Filter, factory: Factory) {\n          // Check if the filter must be pushed down\n          if (!self.shouldAttemptPushDown(op, sources, sourceShapes)) {\n            return {\n              recurse: true,\n              result: op,\n            };\n          }\n\n          // For all filter expressions in the operation,\n          // we attempt to push them down as deep as possible into the algebra.\n          const variables = self.getExpressionVariables(op.expression);\n          const [ isModified, result ] = self\n            .filterPushdown(op.expression, variables, op.input, factory, action.context);\n          if (isModified) {\n            repeat = true;\n          }\n          return {\n            recurse: true,\n            result,\n          };\n        },\n      });\n      iterations++;\n    }\n\n    if (iterations > 1) {\n      self.logDebug(action.context, `Pushed down filters in ${iterations} iterations`);\n    }\n\n    // Merge nested filters into conjunctive filters\n    if (this.mergeConjunctive) {\n      operation = Util.mapOperation(operation, {\n        filter(op: Algebra.Filter, factory: Factory) {\n          if (op.input.type === Algebra.types.FILTER) {\n            const { nestedExpressions, input } = self.getNestedFilterExpressions(op);\n            self.logDebug(action.context, `Merge ${nestedExpressions.length} nested filters into conjunctive filter`);\n            return {\n              recurse: true,\n              result: factory.createFilter(\n                input,\n                nestedExpressions.slice(1).reduce((previous, current) =>\n                  factory.createOperatorExpression('&&', [ previous, current ]), nestedExpressions[0]),\n              ),\n            };\n          }\n          return {\n            recurse: true,\n            result: op,\n          };\n        },\n      });\n    }\n\n    return { operation, context: action.context };\n  }\n\n  /**\n   * Check if the given filter operation must be attempted to push down, based on the following criteria:\n   * - Always push down if aggressive mode is enabled\n   * - Push down if the filter is extremely selective\n   * - Push down if federated and at least one accepts the filter\n   * @param operation The filter operation\n   * @param sources The query sources in the operation\n   * @param sourceShapes A mapping of sources to selector shapes.\n   */\n  public shouldAttemptPushDown(\n    operation: Algebra.Filter,\n    sources: IQuerySourceWrapper[],\n    sourceShapes: Map<IQuerySourceWrapper, FragmentSelectorShape>,\n  ): boolean {\n    // Always push down if aggressive mode is enabled\n    if (this.aggressivePushdown) {\n      return true;\n    }\n\n    // Push down if the filter is extremely selective\n    const expression = operation.expression;\n    if (expression.expressionType === Algebra.expressionTypes.OPERATOR &&\n      expression.operator === '=' &&\n      ((expression.args[0].expressionType === 'term' && expression.args[0].term.termType !== 'Variable' &&\n          expression.args[1].expressionType === 'term' && expression.args[1].term.termType === 'Variable') ||\n        (expression.args[0].expressionType === 'term' && expression.args[0].term.termType === 'Variable' &&\n          expression.args[1].expressionType === 'term' && expression.args[1].term.termType !== 'Variable'))) {\n      return true;\n    }\n\n    // Push down if federated and at least one accepts the filter\n    if (sources.some(source => ActorQueryOperation.doesShapeAcceptOperation(sourceShapes.get(source)!, operation))) {\n      return true;\n    }\n\n    // Don't push down in all other cases\n    return false;\n  }\n\n  /**\n   * Collected all sources that are defined within the given operation of children recursively.\n   * @param operation An operation.\n   */\n  public getSources(operation: Algebra.Operation): IQuerySourceWrapper[] {\n    const sources = new Set<IQuerySourceWrapper>();\n    const sourceAdder = (subOperation: Algebra.Operation): boolean => {\n      const src = ActorQueryOperation.getOperationSource(subOperation);\n      if (src) {\n        sources.add(src);\n      }\n      return false;\n    };\n    Util.recurseOperation(operation, {\n      [Algebra.types.PATTERN]: sourceAdder,\n      [Algebra.types.LINK]: sourceAdder,\n      [Algebra.types.NPS]: sourceAdder,\n      [Algebra.types.SERVICE]: sourceAdder,\n    });\n    return [ ...sources ];\n  }\n\n  /**\n   * Get all variables inside the given expression.\n   * @param expression An expression.\n   * @return An array of variables, or undefined if the expression is unsupported for pushdown.\n   */\n  public getExpressionVariables(expression: Algebra.Expression): RDF.Variable[] {\n    switch (expression.expressionType) {\n      case Algebra.expressionTypes.AGGREGATE:\n      case Algebra.expressionTypes.WILDCARD:\n        throw new Error(`Getting expression variables is not supported for ${expression.expressionType}`);\n      case Algebra.expressionTypes.EXISTENCE:\n        return Util.inScopeVariables(expression.input);\n      case Algebra.expressionTypes.NAMED:\n        return [];\n      case Algebra.expressionTypes.OPERATOR:\n        return uniqTerms(expression.args.flatMap(arg => this.getExpressionVariables(arg)));\n      case Algebra.expressionTypes.TERM:\n        if (expression.term.termType === 'Variable') {\n          return [ expression.term ];\n        }\n        return [];\n    }\n  }\n\n  protected getOverlappingOperations(\n    operation: Algebra.Operation,\n    expressionVariables: RDF.Variable[],\n  ): {\n      fullyOverlapping: Algebra.Operation[];\n      partiallyOverlapping: Algebra.Operation[];\n      notOverlapping: Algebra.Operation[];\n    } {\n    const fullyOverlapping: Algebra.Operation[] = [];\n    const partiallyOverlapping: Algebra.Operation[] = [];\n    const notOverlapping: Algebra.Operation[] = [];\n    for (const input of operation.input) {\n      const inputVariables = Util.inScopeVariables(input);\n      if (this.variablesSubSetOf(expressionVariables, inputVariables)) {\n        fullyOverlapping.push(input);\n      } else if (this.variablesIntersect(expressionVariables, inputVariables)) {\n        partiallyOverlapping.push(input);\n      } else {\n        notOverlapping.push(input);\n      }\n    }\n\n    return {\n      fullyOverlapping,\n      partiallyOverlapping,\n      notOverlapping,\n    };\n  }\n\n  /**\n   * Recursively push down the given expression into the given operation if possible.\n   * Different operators have different semantics for choosing whether or not to push down,\n   * and how this pushdown is done.\n   * For every passed operator, it is checked whether or not the filter will have any effect on the operation.\n   * If not, the filter is voided.\n   * @param expression An expression to push down.\n   * @param expressionVariables The variables inside the given expression.\n   * @param operation The operation to push down into.\n   * @param factory An algebra factory.\n   * @param context The action context.\n   * @return A tuple indicating if the operation was modified and the modified operation.\n   */\n  public filterPushdown(\n    expression: Algebra.Expression,\n    expressionVariables: RDF.Variable[],\n    operation: Algebra.Operation,\n    factory: Factory,\n    context: IActionContext,\n  ): [ boolean, Algebra.Operation ] {\n    // Void false expressions\n    if (this.isExpressionFalse(expression)) {\n      return [ true, factory.createUnion([]) ];\n    }\n\n    // Don't push down (NOT) EXISTS\n    if (expression.type === Algebra.types.EXPRESSION &&\n      expression.expressionType === Algebra.expressionTypes.EXISTENCE) {\n      return [ false, factory.createFilter(operation, expression) ];\n    }\n\n    switch (operation.type) {\n      case Algebra.types.EXTEND:\n        // Pass if the variable is not part of the expression\n        if (!this.variablesIntersect([ operation.variable ], expressionVariables)) {\n          return [ true, factory.createExtend(\n            this.filterPushdown(expression, expressionVariables, operation.input, factory, context)[1],\n            operation.variable,\n            operation.expression,\n          ) ];\n        }\n        return [ false, factory.createFilter(operation, expression) ];\n      case Algebra.types.FILTER: {\n        // Always pass\n        const [ isModified, result ] = this\n          .filterPushdown(expression, expressionVariables, operation.input, factory, context);\n        return [ isModified, factory.createFilter(result, operation.expression) ];\n      }\n      case Algebra.types.JOIN: {\n        // Don't push down for empty join\n        if (operation.input.length === 0) {\n          return [ false, factory.createFilter(operation, expression) ];\n        }\n\n        // Determine overlapping operations\n        const {\n          fullyOverlapping,\n          partiallyOverlapping,\n          notOverlapping,\n        } = this.getOverlappingOperations(operation, expressionVariables);\n\n        const joins: Algebra.Operation[] = [];\n        let isModified = false;\n        if (fullyOverlapping.length > 0) {\n          isModified = true;\n          joins.push(factory.createJoin(fullyOverlapping\n            .map(input => this.filterPushdown(expression, expressionVariables, input, factory, context)[1])));\n        }\n        if (partiallyOverlapping.length > 0) {\n          joins.push(factory.createFilter(factory.createJoin(partiallyOverlapping, false), expression));\n        }\n        if (notOverlapping.length > 0) {\n          joins.push(...notOverlapping);\n        }\n\n        if (joins.length > 1) {\n          isModified = true;\n        }\n\n        if (isModified) {\n          this.logDebug(context, `Push down filter across join entries with ${fullyOverlapping.length} fully overlapping, ${partiallyOverlapping.length} partially overlapping, and ${notOverlapping.length} not overlapping`);\n        }\n\n        return [ isModified, joins.length === 1 ? joins[0] : factory.createJoin(joins) ];\n      }\n      case Algebra.types.NOP:\n        return [ true, operation ];\n      case Algebra.types.PROJECT:\n        // Push down if variables overlap\n        if (this.variablesIntersect(operation.variables, expressionVariables)) {\n          return [ true, factory.createProject(\n            this.filterPushdown(expression, expressionVariables, operation.input, factory, context)[1],\n            operation.variables,\n          ) ];\n        }\n        // Void expression otherwise\n        return [ true, operation ];\n      case Algebra.types.UNION: {\n        // Determine overlapping operations\n        const {\n          fullyOverlapping,\n          partiallyOverlapping,\n          notOverlapping,\n        } = this.getOverlappingOperations(operation, expressionVariables);\n\n        const unions: Algebra.Operation[] = [];\n        let isModified = false;\n        if (fullyOverlapping.length > 0) {\n          isModified = true;\n          unions.push(factory.createUnion(fullyOverlapping\n            .map(input => this.filterPushdown(expression, expressionVariables, input, factory, context)[1])));\n        }\n        if (partiallyOverlapping.length > 0) {\n          unions.push(factory.createFilter(factory.createUnion(partiallyOverlapping, false), expression));\n        }\n        if (notOverlapping.length > 0) {\n          unions.push(...notOverlapping);\n        }\n\n        if (unions.length > 1) {\n          isModified = true;\n        }\n\n        if (isModified) {\n          this.logDebug(context, `Push down filter across union entries with ${fullyOverlapping.length} fully overlapping, ${partiallyOverlapping.length} partially overlapping, and ${notOverlapping.length} not overlapping`);\n        }\n\n        return [ isModified, unions.length === 1 ? unions[0] : factory.createUnion(unions) ];\n      }\n      case Algebra.types.VALUES:\n        // Only keep filter if it overlaps with the variables\n        if (this.variablesIntersect(operation.variables, expressionVariables)) {\n          return [ false, factory.createFilter(operation, expression) ];\n        }\n        return [ true, operation ];\n      case Algebra.types.LEFT_JOIN: {\n        if (this.pushIntoLeftJoins) {\n          const rightVariables = Util.inScopeVariables(operation.input[1]);\n          if (!this.variablesIntersect(expressionVariables, rightVariables)) {\n            // If filter *only* applies to left entry of optional, push it down into that.\n            this.logDebug(context, `Push down filter into left join`);\n            return [ true, factory.createLeftJoin(\n              this.filterPushdown(expression, expressionVariables, operation.input[0], factory, context)[1],\n              operation.input[1],\n              operation.expression,\n            ) ];\n          }\n        }\n\n        // Don't push down in all other cases\n        return [ false, factory.createFilter(operation, expression) ];\n      }\n      case Algebra.types.PATTERN: {\n        if (this.pushEqualityIntoPatterns) {\n          // Try to push simple FILTER(?s = <iri>) expressions into the pattern\n          const pushableResult = this.getEqualityExpressionPushableIntoPattern(expression);\n          if (pushableResult) {\n            let isModified = false;\n            const originalMetadata = operation.metadata;\n            operation = mapTermsNested(operation, (value) => {\n              if (value.equals(pushableResult.variable)) {\n                isModified = true;\n                return pushableResult.term;\n              }\n              return value;\n            });\n            operation.type = Algebra.types.PATTERN;\n            operation.metadata = originalMetadata;\n            if (isModified) {\n              this.logDebug(context, `Push down filter into pattern for ?${pushableResult.variable.value}`);\n              return [ true, operation ];\n            }\n          }\n        }\n\n        // Don't push down in all other cases\n        return [ false, factory.createFilter(operation, expression) ];\n      }\n      case Algebra.types.PATH: {\n        if (this.pushEqualityIntoPatterns) {\n          // Try to push simple FILTER(?s = <iri>) expressions into the path\n          const pushableResult = this.getEqualityExpressionPushableIntoPattern(expression);\n          if (pushableResult &&\n            (operation.subject.equals(pushableResult.variable) || operation.object.equals(pushableResult.variable))) {\n            this.logDebug(context, `Push down filter into path for ?${pushableResult.variable.value}`);\n            const originalMetadata = operation.metadata;\n            operation = factory.createPath(\n              operation.subject.equals(pushableResult.variable) ? pushableResult.term : operation.subject,\n              operation.predicate,\n              operation.object.equals(pushableResult.variable) ? pushableResult.term : operation.object,\n            );\n            operation.metadata = originalMetadata;\n            return [ true, operation ];\n          }\n        }\n\n        // Don't push down in all other cases\n        return [ false, factory.createFilter(operation, expression) ];\n      }\n      case Algebra.types.MINUS:\n      case Algebra.types.ALT:\n      case Algebra.types.ASK:\n      case Algebra.types.BGP:\n      case Algebra.types.CONSTRUCT:\n      case Algebra.types.DESCRIBE:\n      case Algebra.types.DISTINCT:\n      case Algebra.types.EXPRESSION:\n      case Algebra.types.FROM:\n      case Algebra.types.GRAPH:\n      case Algebra.types.GROUP:\n      case Algebra.types.INV:\n      case Algebra.types.LINK:\n      case Algebra.types.NPS:\n      case Algebra.types.ONE_OR_MORE_PATH:\n      case Algebra.types.ORDER_BY:\n      case Algebra.types.REDUCED:\n      case Algebra.types.SEQ:\n      case Algebra.types.SERVICE:\n      case Algebra.types.SLICE:\n      case Algebra.types.ZERO_OR_MORE_PATH:\n      case Algebra.types.ZERO_OR_ONE_PATH:\n      case Algebra.types.COMPOSITE_UPDATE:\n      case Algebra.types.DELETE_INSERT:\n      case Algebra.types.LOAD:\n      case Algebra.types.CLEAR:\n      case Algebra.types.CREATE:\n      case Algebra.types.DROP:\n      case Algebra.types.ADD:\n      case Algebra.types.MOVE:\n      case Algebra.types.COPY:\n        // Operations that do not support pushing down\n        // Left-join and minus might be possible to support in the future.\n        return [ false, factory.createFilter(operation, expression) ];\n    }\n  }\n\n  /**\n   * Check if the given expression is a simple equals operation with one variable and one non-literal\n   * (or literal with canonical lexical form) term that can be pushed into a pattern.\n   * @param expression The current expression.\n   * @return The variable and term to fill into the pattern, or undefined.\n   */\n  public getEqualityExpressionPushableIntoPattern(\n    expression: Algebra.Expression,\n  ): { variable: RDF.Variable; term: RDF.Term } | undefined {\n    if (expression.expressionType === Algebra.expressionTypes.OPERATOR && expression.operator === '=') {\n      if (expression.args[0].expressionType === 'term' && expression.args[0].term.termType !== 'Variable' &&\n        (expression.args[0].term.termType !== 'Literal' ||\n          this.isLiteralWithCanonicalLexicalForm(expression.args[0].term)) &&\n        expression.args[1].expressionType === 'term' && expression.args[1].term.termType === 'Variable') {\n        return {\n          variable: expression.args[1].term,\n          term: expression.args[0].term,\n        };\n      }\n      if (expression.args[0].expressionType === 'term' && expression.args[0].term.termType === 'Variable' &&\n        expression.args[1].expressionType === 'term' && expression.args[1].term.termType !== 'Variable' &&\n        (expression.args[1].term.termType !== 'Literal' ||\n          this.isLiteralWithCanonicalLexicalForm(expression.args[1].term))) {\n        return {\n          variable: expression.args[0].term,\n          term: expression.args[1].term,\n        };\n      }\n    }\n  }\n\n  /**\n   * Check if the given term is a literal with datatype that where all values\n   * can only have one possible lexical representation.\n   * In other words, no variants of values exist that should be considered equal.\n   * For example: \"01\"^xsd:number and \"1\"^xsd:number will return false.\n   * @param term An RDF term.\n   * @protected\n   */\n  protected isLiteralWithCanonicalLexicalForm(term: RDF.Term): boolean {\n    if (term.termType === 'Literal') {\n      switch (term.datatype.value) {\n        case 'http://www.w3.org/2001/XMLSchema#string':\n        case 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString':\n        case 'http://www.w3.org/2001/XMLSchema#normalizedString':\n        case 'http://www.w3.org/2001/XMLSchema#anyURI':\n        case 'http://www.w3.org/2001/XMLSchema#base64Binary':\n        case 'http://www.w3.org/2001/XMLSchema#language':\n        case 'http://www.w3.org/2001/XMLSchema#Name':\n        case 'http://www.w3.org/2001/XMLSchema#NCName':\n        case 'http://www.w3.org/2001/XMLSchema#NMTOKEN':\n        case 'http://www.w3.org/2001/XMLSchema#token':\n        case 'http://www.w3.org/2001/XMLSchema#hexBinary':\n          return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if there is an overlap between the two given lists of variables.\n   * @param varsA A list of variables.\n   * @param varsB A list of variables.\n   */\n  public variablesIntersect(varsA: RDF.Variable[], varsB: RDF.Variable[]): boolean {\n    return varsA.some(varA => varsB.some(varB => varA.equals(varB)));\n  }\n\n  /**\n   * Check if all variables from the first list are included in the second list.\n   * The second list may contain other variables as well.\n   * @param varsNeedles A list of variables to search for.\n   * @param varsHaystack A list of variables to search in.\n   */\n  public variablesSubSetOf(varsNeedles: RDF.Variable[], varsHaystack: RDF.Variable[]): boolean {\n    return varsNeedles.length <= varsHaystack.length &&\n      varsNeedles.every(varA => varsHaystack.some(varB => varA.equals(varB)));\n  }\n\n  /**\n   * Check if an expression is simply 'false'.\n   * @param expression An expression.\n   */\n  public isExpressionFalse(expression: Algebra.Expression): boolean {\n    return (expression.term && expression.term.termType === 'Literal' && expression.term.value === 'false');\n  }\n\n  /**\n   * Get all directly nested filter expressions.\n   * As soon as a non-filter is found, it is returned as the input field.\n   * @param op A filter expression.\n   */\n  public getNestedFilterExpressions(\n    op: Algebra.Filter,\n  ): { nestedExpressions: Algebra.Expression[]; input: Algebra.Operation } {\n    if (op.input.type === Algebra.types.FILTER) {\n      const childData = this.getNestedFilterExpressions(op.input);\n      return { nestedExpressions: [ op.expression, ...childData.nestedExpressions ], input: childData.input };\n    }\n    return { nestedExpressions: [ op.expression ], input: op.input };\n  }\n}\n\nexport interface IActorOptimizeQueryOperationFilterPushdownArgs extends IActorOptimizeQueryOperationArgs {\n  /**\n   * If filters should be pushed down as deep as possible.\n   * If false, filters will only be pushed down if the source(s) accept them,\n   * or if the filter is very selective.\n   * @range {boolean}\n   * @default {false}\n   */\n  aggressivePushdown: boolean;\n  /**\n   * The maximum number of full iterations across the query can be done for attempting to push down filters.\n   * @default {10}\n   */\n  maxIterations: number;\n  /**\n   * If conjunctive filters should be split into nested filters before applying filter pushdown.\n   * This can enable pushing down deeper.\n   * @range {boolean}\n   * @default {true}\n   */\n  splitConjunctive: boolean;\n  /**\n   * If nested filters should be merged into conjunctive filters after applying filter pushdown.\n   * @range {boolean}\n   * @default {true}\n   */\n  mergeConjunctive: boolean;\n  /**\n   * If filters should be pushed into left-joins.\n   * @range {boolean}\n   * @default {true}\n   */\n  pushIntoLeftJoins: boolean;\n  /**\n   * If simple equality filters should be pushed into patterns and paths.\n   * This only applies to equality filters with terms that are not literals that have no canonical lexical form.\n   * @range {boolean}\n   * @default {true}\n   */\n  pushEqualityIntoPatterns: boolean;\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQuerySourceWrapper } from '@comunica/types';\nimport { Algebra, Factory } from 'sparqlalgebrajs';\n\nconst AF = new Factory();\n\n/**\n * A comunica Group Sources Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationGroupSources extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    if (ActorQueryOperation.getOperationSource(action.operation)) {\n      throw new Error(`Actor ${this.name} does not work with top-level operation sources.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    return { operation: await this.groupOperation(action.operation, action.context), context: action.context };\n  }\n\n  /**\n   * Group operations belonging to the same source together, only if that source accepts the grouped operations.\n   * This grouping will be done recursively for the whole operation tree.\n   * Operations annotated with sources are considered leaves in the tree.\n   * @param operation An operation to group.\n   * @param context The action context.\n   */\n  public async groupOperation(operation: Algebra.Operation, context: IActionContext): Promise<Algebra.Operation> {\n    // Return operation as-is if the operation already has a single source, or if the operation has no children.\n    if (ActorQueryOperation.getOperationSource(operation) ?? !('input' in operation)) {\n      return operation;\n    }\n\n    // If operation has a single input, move source annotation upwards if the source can handle it.\n    if (!Array.isArray(operation.input)) {\n      const groupedInput = await this.groupOperation(operation.input, context);\n      if (groupedInput.metadata?.scopedSource) {\n        const source: IQuerySourceWrapper = ActorQueryOperation.getOperationSource(groupedInput)!;\n        if (ActorQueryOperation\n          .doesShapeAcceptOperation(await source.source.getSelectorShape(context), operation)) {\n          this.logDebug(context, `Hoist 1 source-specific operation into a single ${operation.type} operation for ${source.source.toString()}`);\n          ActorQueryOperation.removeOperationSource(groupedInput);\n          operation = ActorQueryOperation.assignOperationSource(operation, source);\n        }\n      }\n      return <Algebra.Operation> { ...operation, input: groupedInput };\n    }\n\n    // If operation has multiple inputs, cluster source annotations.\n    const inputs: Algebra.Operation[] = await Promise.all(operation.input\n      .map(subInput => this.groupOperation(subInput, context)));\n    const clusters = this.clusterOperationsWithEqualSources(inputs);\n\n    // If we just have a single cluster, move the source annotation upwards\n    if (clusters.length === 1) {\n      const newInputs = clusters[0];\n      const source = ActorQueryOperation.getOperationSource(clusters[0][0])!;\n      return <Algebra.Operation> {\n        ...await this.moveSourceAnnotationUpwardsIfPossible(operation, newInputs, source, context),\n        input: newInputs,\n      };\n    }\n\n    // If the number of clusters is equal to the number of original inputs, do nothing.\n    if (clusters.length === inputs.length) {\n      return <Algebra.Operation> { ...operation, input: inputs };\n    }\n\n    // If we have multiple clusters, created nested multi-operations\n    let multiFactoryMethod: (children: Algebra.Operation[], flatten: boolean) => Algebra.Operation;\n    switch (operation.type) {\n      case Algebra.types.JOIN:\n        multiFactoryMethod = AF.createJoin.bind(AF);\n        break;\n      case Algebra.types.UNION:\n        multiFactoryMethod = AF.createUnion.bind(AF);\n        break;\n      case Algebra.types.ALT:\n        multiFactoryMethod = <any> AF.createAlt.bind(AF);\n        break;\n      case Algebra.types.SEQ:\n        multiFactoryMethod = <any> AF.createSeq.bind(AF);\n        break;\n      default:\n        // While LeftJoin and Minus are also multi-operations,\n        // these can never occur because they only have 2 inputs,\n        // so these cases will always be captured by one of the 2 if-cases above\n        // (clusters.length === 1 or clusters.length === input.length)\n\n        // In all other cases, error\n        throw new Error(`Unsupported operation '${operation.type}' detected while grouping sources`);\n    }\n    return await this.groupOperationMulti(clusters, multiFactoryMethod, context);\n  }\n\n  protected async groupOperationMulti(\n    clusters: Algebra.Operation[][],\n    factoryMethod: (children: Algebra.Operation[], flatten: boolean) => Algebra.Operation,\n    context: IActionContext,\n  ): Promise<Algebra.Operation> {\n    let flatten = true;\n    const nestedMerges = await Promise.all(clusters.map(async(cluster) => {\n      const source = ActorQueryOperation.getOperationSource(cluster[0])!;\n      const merged = await this\n        .moveSourceAnnotationUpwardsIfPossible(factoryMethod(cluster, true), cluster, source, context);\n      if (ActorQueryOperation.getOperationSource(merged)) {\n        flatten = false;\n      }\n      return merged;\n    }));\n    return factoryMethod(nestedMerges, flatten);\n  }\n\n  /**\n   * Cluster the given operations by equal source annotations.\n   * @param operationsIn An array of operations to cluster.\n   */\n  public clusterOperationsWithEqualSources(operationsIn: Algebra.Operation[]): Algebra.Operation[][] {\n    // Operations can have a source, or no source at all\n    const sourceOperations: Map<IQuerySourceWrapper, Algebra.Operation[]> = new Map();\n    const sourcelessOperations: Algebra.Operation[] = [];\n\n    // Cluster by source\n    for (const operation of operationsIn) {\n      const source: IQuerySourceWrapper = ActorQueryOperation.getOperationSource(operation)!;\n      if (source) {\n        if (!sourceOperations.has(source)) {\n          sourceOperations.set(source, []);\n        }\n        sourceOperations.get(source)!.push(operation);\n      } else {\n        sourcelessOperations.push(operation);\n      }\n    }\n\n    // Return clusters\n    const clusters: Algebra.Operation[][] = [];\n    if (sourcelessOperations.length > 0) {\n      clusters.push(sourcelessOperations);\n    }\n    for (const [ source, operations ] of sourceOperations.entries()) {\n      clusters.push(operations\n        .map(operation => ActorQueryOperation.assignOperationSource(operation, source)));\n    }\n    return clusters;\n  }\n\n  /**\n   * If the given source accepts the grouped operation, annotate the grouped operation with the source,\n   * and remove the source annotation from the seperate input operations.\n   * Otherwise, return the grouped operation unchanged.\n   * @param operation A grouped operation consisting of all given input operations.\n   * @param inputs An array of operations that share the same source annotation.\n   * @param source The common source.\n   * @param context The action context.\n   */\n  public async moveSourceAnnotationUpwardsIfPossible<O extends Algebra.Operation>(\n    operation: O,\n    inputs: Algebra.Operation[],\n    source: IQuerySourceWrapper | undefined,\n    context: IActionContext,\n  ): Promise<O> {\n    if (source && ActorQueryOperation\n      .doesShapeAcceptOperation(await source.source.getSelectorShape(context), operation)) {\n      this.logDebug(context, `Hoist ${inputs.length} source-specific operations into a single ${operation.type} operation for ${source.source.toString()}`);\n      operation = ActorQueryOperation.assignOperationSource(operation, source);\n      for (const input of inputs) {\n        ActorQueryOperation.removeOperationSource(input);\n      }\n    }\n    return operation;\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { Algebra, Factory } from 'sparqlalgebrajs';\nimport { Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Join BGP Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationJoinBgp extends ActorOptimizeQueryOperation {\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      join(op: Algebra.Join, factory: Factory) {\n        if (op.input.every(subInput => subInput.type === 'bgp')) {\n          return {\n            recurse: false,\n            result: factory.createBgp(op.input.flatMap(subInput => subInput.patterns)),\n          };\n        }\n        return {\n          recurse: false,\n          result: op,\n        };\n      },\n    });\n    return { operation, context: action.context };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { Algebra, Factory } from 'sparqlalgebrajs';\nimport { Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Join Connected Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationJoinConnected extends ActorOptimizeQueryOperation {\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      join(op: Algebra.Join, factory: Factory) {\n        return {\n          recurse: false,\n          result: ActorOptimizeQueryOperationJoinConnected.cluster(op, factory),\n        };\n      },\n    });\n    return { operation, context: action.context };\n  }\n\n  /**\n   * Iteratively cluster join entries based on their overlapping variables.\n   * @param op A join operation.\n   * @param factory An algebra factory.\n   */\n  public static cluster(op: Algebra.Join, factory: Factory): Algebra.Operation {\n    // Initialize each entry to be in a separate cluster\n    const initialClusters: IJoinCluster[] = op.input.map(subOp => ({\n      inScopeVariables: Object.fromEntries(Util.inScopeVariables(subOp).map(variable => [ variable.value, true ])),\n      entries: [ subOp ],\n    }));\n\n    // Iteratively merge clusters until they don't change anymore\n    let oldClusters: IJoinCluster[];\n    let newClusters: IJoinCluster[] = initialClusters;\n    do {\n      oldClusters = newClusters;\n      newClusters = ActorOptimizeQueryOperationJoinConnected.clusterIteration(oldClusters);\n    } while (oldClusters.length !== newClusters.length);\n\n    // Create new join operation of latest clusters\n    const subJoins = newClusters\n      .map(cluster => cluster.entries.length === 1 ? cluster.entries[0] : factory.createJoin(cluster.entries));\n    return subJoins.length === 1 ? subJoins[0] : factory.createJoin(subJoins, false);\n  }\n\n  /**\n   * Perform a single clustering iteration.\n   * Clusters will be joined if they have overlapping variables.\n   * @param oldCluster\n   */\n  public static clusterIteration(oldCluster: IJoinCluster[]): IJoinCluster[] {\n    const newClusters: IJoinCluster[] = [];\n\n    for (const entry of oldCluster) {\n      // Try to add entry to a join cluster\n      let joined = false;\n      for (const newEntry of newClusters) {\n        if (ActorOptimizeQueryOperationJoinConnected\n          .haveOverlappingVariables(entry.inScopeVariables, newEntry.inScopeVariables)) {\n          newEntry.entries = [ ...newEntry.entries, ...entry.entries ];\n          newEntry.inScopeVariables = { ...newEntry.inScopeVariables, ...entry.inScopeVariables };\n          joined = true;\n          break;\n        }\n      }\n\n      // If none was found, create new cluster\n      if (!joined) {\n        newClusters.push({\n          inScopeVariables: entry.inScopeVariables,\n          entries: entry.entries,\n        });\n      }\n    }\n\n    return newClusters;\n  }\n\n  /**\n   * Check if the two given variable objects are overlapping.\n   * @param variablesA A variables objects.\n   * @param variablesB A variables objects.\n   */\n  public static haveOverlappingVariables(\n    variablesA: Record<string, boolean>,\n    variablesB: Record<string, boolean>,\n  ): boolean {\n    for (const variableA of Object.keys(variablesA)) {\n      if (variablesB[variableA]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * A cluster of join entries.\n */\nexport interface IJoinCluster {\n  /**\n   * Union of all variables in scope within the join entries.\n   */\n  inScopeVariables: Record<string, boolean>;\n  /**\n   * Join entries\n   */\n  entries: Algebra.Operation[];\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport { KeysQuerySourceIdentify } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQuerySourceWrapper, MetadataBindings } from '@comunica/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Algebra, Factory, Util } from 'sparqlalgebrajs';\n\nconst AF = new Factory();\nconst DF = new DataFactory();\n\n/**\n * A comunica Prune Empty Source Operations Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationPruneEmptySourceOperations extends ActorOptimizeQueryOperation {\n  private readonly useAskIfSupported: boolean;\n\n  public constructor(args: IActorOptimizeQueryOperationPruneEmptySourceOperationsArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    if (ActorQueryOperation.getOperationSource(action.operation)) {\n      throw new Error(`Actor ${this.name} does not work with top-level operation sources.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    let operation = action.operation;\n\n    // Collect all operations with source types\n    // Only consider unions of patterns or alts of links, since these are created during exhaustive source assignment.\n    const collectedOperations: (Algebra.Pattern | Algebra.Link)[] = [];\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this;\n    Util.recurseOperation(operation, {\n      [Algebra.types.UNION](subOperation) {\n        self.collectMultiOperationInputs(subOperation.input, collectedOperations, Algebra.types.PATTERN);\n        return true;\n      },\n      [Algebra.types.ALT](subOperation) {\n        self.collectMultiOperationInputs(subOperation.input, collectedOperations, Algebra.types.LINK);\n        return false;\n      },\n      [Algebra.types.SERVICE]() {\n        return false;\n      },\n    });\n\n    // Determine in an async manner whether or not these sources return non-empty results\n    const emptyOperations: Set<Algebra.Operation> = new Set();\n    await Promise.all(collectedOperations.map(async(collectedOperation) => {\n      const checkOperation = collectedOperation.type === 'link' ?\n        AF.createPattern(DF.variable('?s'), collectedOperation.iri, DF.variable('?o')) :\n        collectedOperation;\n      if (!await this.hasSourceResults(\n        ActorQueryOperation.getOperationSource(collectedOperation)!,\n        checkOperation,\n        action.context,\n      )) {\n        emptyOperations.add(collectedOperation);\n      }\n    }));\n\n    // Only perform next mapping if we have at least one empty operation\n    if (emptyOperations.size > 0) {\n      this.logDebug(action.context, `Pruning ${emptyOperations.size} source-specific operations`);\n      // Rewrite operations by removing the empty children\n      operation = Util.mapOperation(operation, {\n        [Algebra.types.UNION](subOperation, factory) {\n          return self.mapMultiOperation(subOperation, emptyOperations, children => factory.createUnion(children));\n        },\n        [Algebra.types.ALT](subOperation, factory) {\n          return self.mapMultiOperation(subOperation, emptyOperations, children => factory.createAlt(children));\n        },\n      });\n\n      // Identify and remove operations that have become empty now due to missing variables\n      operation = Util.mapOperation(operation, {\n        [Algebra.types.PROJECT](subOperation, factory) {\n          // Remove projections that have become empty now due to missing variables\n          if (ActorOptimizeQueryOperationPruneEmptySourceOperations.hasEmptyOperation(subOperation)) {\n            return {\n              recurse: false,\n              result: factory.createUnion([]),\n            };\n          }\n          return {\n            recurse: true,\n            result: subOperation,\n          };\n        },\n        [Algebra.types.LEFT_JOIN](subOperation) {\n          // Remove left joins with empty right operation\n          if (ActorOptimizeQueryOperationPruneEmptySourceOperations.hasEmptyOperation(subOperation.input[1])) {\n            return {\n              recurse: true,\n              result: subOperation.input[0],\n            };\n          }\n          return {\n            recurse: true,\n            result: subOperation,\n          };\n        },\n      });\n    }\n\n    return { operation, context: action.context };\n  }\n\n  protected static hasEmptyOperation(operation: Algebra.Operation): boolean {\n    // If union (or alt) is empty, consider it empty (`Array.every` on an empty array always returns true)\n    // But if we find a union with multiple children,\n    // *all* of the children must be empty before the full operation is considered empty.\n    let emptyOperation = false;\n    Util.recurseOperation(operation, {\n      [Algebra.types.UNION](subOperation) {\n        if (subOperation.input.every(subSubOperation => ActorOptimizeQueryOperationPruneEmptySourceOperations\n          .hasEmptyOperation(subSubOperation))) {\n          emptyOperation = true;\n        }\n        return false;\n      },\n      [Algebra.types.ALT](subOperation) {\n        if (subOperation.input.length === 0) {\n          emptyOperation = true;\n        }\n        return false;\n      },\n      [Algebra.types.LEFT_JOIN](subOperation) {\n        // Only recurse into left part of left-join\n        if (ActorOptimizeQueryOperationPruneEmptySourceOperations.hasEmptyOperation(subOperation.input[0])) {\n          emptyOperation = true;\n        }\n        return false;\n      },\n    });\n    return emptyOperation;\n  }\n\n  protected collectMultiOperationInputs(\n    inputs: Algebra.Operation[],\n    collectedOperations: (Algebra.Pattern | Algebra.Link)[],\n    inputType: (Algebra.Pattern | Algebra.Link)['type'],\n  ): void {\n    for (const input of inputs) {\n      if (ActorQueryOperation.getOperationSource(input) && input.type === inputType) {\n        collectedOperations.push(input);\n      }\n    }\n  }\n\n  protected mapMultiOperation<O extends Algebra.Union | Algebra.Alt>(\n    operation: O,\n    emptyOperations: Set<Algebra.Operation>,\n    multiOperationFactory: (input: O['input']) => Algebra.Operation,\n  ): {\n      result: Algebra.Operation;\n      recurse: boolean;\n    } {\n    // Determine which operations return non-empty results\n    const nonEmptyInputs = operation.input.filter(input => !emptyOperations.has(input));\n\n    // Remove empty operations\n    if (nonEmptyInputs.length === operation.input.length) {\n      return { result: operation, recurse: true };\n    }\n    if (nonEmptyInputs.length === 0) {\n      return { result: multiOperationFactory([]), recurse: false };\n    }\n    if (nonEmptyInputs.length === 1) {\n      return { result: nonEmptyInputs[0], recurse: true };\n    }\n    return { result: multiOperationFactory(nonEmptyInputs), recurse: true };\n  }\n\n  /**\n   * Check if the given query operation will produce at least one result in the given source.\n   * @param source A query source.\n   * @param input A query operation.\n   * @param context The query context.\n   */\n  public async hasSourceResults(\n    source: IQuerySourceWrapper,\n    input: Algebra.Operation,\n    context: IActionContext,\n  ): Promise<boolean> {\n    // Traversal sources should never be considered empty at optimization time.\n    if (source.context?.get(KeysQuerySourceIdentify.traverse)) {\n      return true;\n    }\n\n    // Send an ASK query\n    if (this.useAskIfSupported) {\n      const askOperation = AF.createAsk(input);\n      if (ActorQueryOperation\n        .doesShapeAcceptOperation(await source.source.getSelectorShape(context), askOperation)) {\n        return source.source.queryBoolean(askOperation, context);\n      }\n    }\n\n    // Send the operation as-is and check the response cardinality\n    const bindingsStream = source.source.queryBindings(input, context);\n    return new Promise((resolve, reject) => {\n      bindingsStream.on('error', reject);\n      bindingsStream.getProperty('metadata', (metadata: MetadataBindings) => {\n        bindingsStream.destroy();\n        resolve(metadata.cardinality.value > 0);\n      });\n    });\n  }\n}\n\nexport interface IActorOptimizeQueryOperationPruneEmptySourceOperationsArgs extends IActorOptimizeQueryOperationArgs {\n  /**\n   * If true, ASK queries will be sent to the source instead of COUNT queries to check emptiness for patterns.\n   * This will only be done for sources that accept ASK queries.\n   * @default {false}\n   */\n  useAskIfSupported: boolean;\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory<RDF.BaseQuad>();\n\n/**\n * A comunica Rewrite Add Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationRewriteAdd extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      [Algebra.types.ADD](operationOriginal, factory) {\n        // CONSTRUCT all quads from the source, and INSERT them into the destination\n        const destination = operationOriginal.destination === 'DEFAULT' ?\n          DF.defaultGraph() :\n          operationOriginal.destination;\n        const source = operationOriginal.source === 'DEFAULT' ? DF.defaultGraph() : operationOriginal.source;\n\n        const result = factory.createDeleteInsert(undefined, [\n          factory.createPattern(DF.variable('s'), DF.variable('p'), DF.variable('o'), destination),\n        ], factory.createPattern(DF.variable('s'), DF.variable('p'), DF.variable('o'), source));\n\n        return {\n          result,\n          recurse: false,\n        };\n      },\n    });\n\n    return { operation, context: action.context };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Rewrite Copy Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationRewriteCopy extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      [Algebra.types.COPY](operationOriginal, factory) {\n        // No-op if source === destination\n        let result: Algebra.CompositeUpdate;\n        if ((typeof operationOriginal.destination === 'string' && typeof operationOriginal.source === 'string' &&\n            operationOriginal.destination === operationOriginal.source) ||\n          (typeof operationOriginal.destination !== 'string' && typeof operationOriginal.source !== 'string' &&\n            operationOriginal.destination.equals(operationOriginal.source))) {\n          result = factory.createCompositeUpdate([]);\n        } else {\n          // COPY is equivalent to drop destination, and add\n          result = factory.createCompositeUpdate([\n            factory.createDrop(operationOriginal.destination, true),\n            factory.createAdd(operationOriginal.source, operationOriginal.destination, operationOriginal.silent),\n          ]);\n        }\n\n        return {\n          result,\n          recurse: false,\n        };\n      },\n    });\n\n    return { operation, context: action.context };\n  }\n}\n","import type {\n  IActionOptimizeQueryOperation,\n  IActorOptimizeQueryOperationOutput,\n  IActorOptimizeQueryOperationArgs,\n} from '@comunica/bus-optimize-query-operation';\nimport { ActorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Rewrite Move Optimize Query Operation Actor.\n */\nexport class ActorOptimizeQueryOperationRewriteMove extends ActorOptimizeQueryOperation {\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionOptimizeQueryOperation): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionOptimizeQueryOperation): Promise<IActorOptimizeQueryOperationOutput> {\n    const operation = Util.mapOperation(action.operation, {\n      [Algebra.types.MOVE](operationOriginal, factory) {\n        // No-op if source === destination\n        let result: Algebra.CompositeUpdate;\n        if ((typeof operationOriginal.destination === 'string' && typeof operationOriginal.source === 'string' &&\n            operationOriginal.destination === operationOriginal.source) ||\n          (typeof operationOriginal.destination !== 'string' && typeof operationOriginal.source !== 'string' &&\n            operationOriginal.destination.equals(operationOriginal.source))) {\n          result = factory.createCompositeUpdate([]);\n        } else {\n          // MOVE is equivalent to drop destination, add, and drop source\n          const updates = [\n            factory.createDrop(operationOriginal.destination, true),\n            factory.createAdd(operationOriginal.source, operationOriginal.destination, operationOriginal.silent),\n            factory.createDrop(operationOriginal.source),\n          ];\n          result = factory.createCompositeUpdate(updates);\n        }\n\n        return {\n          result,\n          recurse: false,\n        };\n      },\n    });\n\n    return { operation, context: action.context };\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  IActionContext,\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n} from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Ask Query Operation Actor.\n */\nexport class ActorQueryOperationAsk extends ActorQueryOperationTypedMediated<Algebra.Ask> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'ask');\n  }\n\n  public async testOperation(_operation: Algebra.Ask, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Ask, context: IActionContext): Promise<IQueryOperationResult> {\n    // Call other query operations like this:\n    const output: IQueryOperationResult = await this.mediatorQueryOperation.mediate(\n      { operation: operation.input, context },\n    );\n    const { bindingsStream }: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(output);\n    return { type: 'boolean', execute: async() => (await bindingsStream.take(1).toArray()).length === 1 };\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Factory } from 'sparqlalgebrajs';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor\n * that handles SPARQL BGP operations by rewriting it as a join operator.\n */\nexport class ActorQueryOperationBgpJoin extends ActorQueryOperationTypedMediated<Algebra.Bgp> {\n  public static readonly FACTORY = new Factory();\n\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'bgp');\n  }\n\n  public async testOperation(_operation: Algebra.Bgp, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Bgp, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    return this.mediatorQueryOperation.mediate({\n      operation: ActorQueryOperationBgpJoin.FACTORY.createJoin(operation.patterns),\n      context,\n    });\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  IQueryOperationResultBindings,\n  IActionContext,\n  IQueryOperationResult,\n  MetadataQuads,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { getTermsNested, getVariables, uniqTerms } from 'rdf-terms';\nimport { Algebra } from 'sparqlalgebrajs';\nimport { BindingsToQuadsIterator } from './BindingsToQuadsIterator';\n\n/**\n * A comunica Construct Query Operation Actor.\n */\nexport class ActorQueryOperationConstruct extends ActorQueryOperationTypedMediated<Algebra.Construct> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'construct');\n  }\n\n  /**\n   * Find all variables in a list of triple patterns.\n   * @param {Algebra.Pattern[]} patterns An array of triple patterns.\n   * @return {RDF.Variable[]} The variables in the triple patterns.\n   */\n  public static getVariables(patterns: RDF.BaseQuad[]): RDF.Variable[] {\n    return uniqTerms((<RDF.Variable[]> []).concat\n      .apply([], patterns.map(pattern => getVariables(getTermsNested(pattern)))));\n  }\n\n  public async testOperation(_operation: Algebra.Construct, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operationOriginal: Algebra.Construct, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Apply a projection on our CONSTRUCT variables first, as the query may contain other variables as well.\n    const variables: RDF.Variable[] = ActorQueryOperationConstruct.getVariables(operationOriginal.template);\n    const operation: Algebra.Operation = { type: Algebra.types.PROJECT, input: operationOriginal.input, variables };\n\n    // Evaluate the input query\n    const output: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation, context }),\n    );\n\n    // Construct triples using the result based on the pattern.\n    // If it's a DESCRIBE query don't apply the blank node localisation.\n    const quadStream: AsyncIterator<RDF.Quad> = new BindingsToQuadsIterator(\n      operationOriginal.template,\n      output.bindingsStream,\n    );\n\n    // Let the final metadata contain the estimated number of triples\n    const metadata: (() => Promise<MetadataQuads>) = () => output.metadata().then(meta => ({\n      ...meta,\n      order: undefined,\n      cardinality: {\n        type: meta.cardinality.type,\n        value: meta.cardinality.value * operationOriginal.template.length,\n      },\n      canContainUndefs: false,\n      availableOrders: undefined,\n    }));\n\n    return {\n      metadata,\n      quadStream,\n      type: 'quads',\n    };\n  }\n}\n","import type { Bindings, BindingsStream } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { ArrayIterator, MultiTransformIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { mapTermsNested } from 'rdf-terms';\n\nconst DF = new DataFactory();\n\n/**\n * Transforms a bindings stream into a quad stream given a quad template.\n *\n * This conforms to the SPARQL 1.1 spec on constructing triples:\n * https://www.w3.org/TR/sparql11-query/#rConstructTriples\n */\nexport class BindingsToQuadsIterator extends MultiTransformIterator<Bindings, RDF.Quad> {\n  protected readonly template: RDF.BaseQuad[];\n  protected blankNodeCounter: number;\n\n  public constructor(template: RDF.BaseQuad[], bindingsStream: BindingsStream) {\n    super(bindingsStream, { autoStart: false });\n    this.template = template;\n    this.blankNodeCounter = 0;\n  }\n\n  /**\n   * Bind the given term.\n   * If the term is a variable and the variable is bound in the bindings object,\n   * return the bindings value.\n   * If the term is a variable and the variable is not bound in the bindings object,\n   * a falsy value is returned..\n   * Otherwise, the term itself is returned.\n   * @param {Bindings}  bindings A bindings object.\n   * @param {RDF.Term}  term     An RDF term.\n   * @return {RDF.Term}          If the given term is not a variable, the term itself is returned.\n   *                             If the given term is a variable, then the bound term is returned,\n   *                             or a falsy value if it did not exist in the bindings.\n   */\n  public static bindTerm(bindings: Bindings, term: RDF.Term): RDF.Term | undefined {\n    if (term.termType === 'Variable') {\n      return bindings.get(term);\n    }\n    return term;\n  }\n\n  /**\n   * Bind the given quad pattern.\n   * If one of the terms was a variable AND is not bound in the bindings,\n   * a falsy value will be returned.\n   * @param {Bindings} bindings A bindings object.\n   * @param {RDF.Quad} pattern  An RDF quad.\n   * @return {RDF.Quad}         A bound RDF quad or undefined.\n   */\n  public static bindQuad(bindings: Bindings, pattern: RDF.BaseQuad): RDF.Quad | undefined {\n    try {\n      return mapTermsNested(<RDF.Quad> pattern, (term) => {\n        const boundTerm = BindingsToQuadsIterator.bindTerm(bindings, term);\n        if (!boundTerm) {\n          throw new Error('Unbound term');\n        }\n        return boundTerm;\n      });\n    } catch {\n      // Do nothing\n    }\n  }\n\n  /**\n   * Convert a blank node to a unique blank node in the given context.\n   * If the given term is not a blank node, the term itself will be returned.\n   * @param             blankNodeCounter A counter value for the blank node.\n   * @param {RDF.Term}  term             The term that should be localized.\n   * @return {RDF.Term}                  A term.\n   */\n  public static localizeBlankNode(blankNodeCounter: number, term: RDF.Term): RDF.Term {\n    if (term.termType === 'BlankNode') {\n      return DF.blankNode(`${term.value}${blankNodeCounter}`);\n    }\n    return term;\n  }\n\n  /**\n   * Convert the given quad to a quad that only contains unique blank nodes.\n   * @param            blankNodeCounter A counter value for the blank node.\n   * @param {RDF.BaseQuad} pattern          The pattern that should be localized.\n   * @return {RDF.BaseQuad}                 A quad.\n   */\n  public static localizeQuad(blankNodeCounter: number, pattern: RDF.BaseQuad): RDF.BaseQuad {\n    return mapTermsNested(pattern, term => BindingsToQuadsIterator.localizeBlankNode(blankNodeCounter, term));\n  }\n\n  /**\n   * Convert the given template to a list of quads based on the given bindings.\n   * @param {Bindings}    bindings           A bindings object.\n   * @param {RDF.Quad[]}  template           A list of quad patterns.\n   * @param               blankNodeCounter   A counter value for the blank node.\n   * @return {RDF.Quad[]}                    A list of quads.\n   */\n  public bindTemplate(bindings: Bindings, template: RDF.BaseQuad[], blankNodeCounter: number): RDF.Quad[] {\n    const quads: RDF.BaseQuad[] = <RDF.BaseQuad[]> template\n      // Make sure the multiple instantiations of the template contain different blank nodes, as required by SPARQL 1.1.\n      .map(BindingsToQuadsIterator.localizeQuad.bind(null, blankNodeCounter))\n      // Bind variables to bound terms\n      .map(x => BindingsToQuadsIterator.bindQuad.bind(null, bindings)(x))\n      // Remove quads that contained unbound terms, i.e., variables.\n      .filter(Boolean);\n    return <RDF.Quad[]> quads;\n  }\n\n  public override _createTransformer(bindings: Bindings): AsyncIterator<RDF.Quad> {\n    return new ArrayIterator(this.bindTemplate(\n      bindings,\n      this.template,\n      this.blankNodeCounter++,\n    ), { autoStart: false });\n  }\n}\n","import type { MediatorHashBindings } from '@comunica/bus-hash-bindings';\nimport type { MediatorHashQuads } from '@comunica/bus-hash-quads';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  Bindings,\n  BindingsStream,\n  IActionContext,\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n  IQueryOperationResultQuads,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Distinct Hash Query Operation Actor.\n */\nexport class ActorQueryOperationDistinctHash extends ActorQueryOperationTypedMediated<Algebra.Distinct> {\n  public readonly mediatorHashBindings: MediatorHashBindings;\n  public readonly mediatorHashQuads: MediatorHashQuads;\n\n  public constructor(args: IActorQueryOperationDistinctHashArgs) {\n    super(args, 'distinct');\n  }\n\n  public async testOperation(_operation: Algebra.Distinct, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Distinct, context: IActionContext): Promise<IQueryOperationResult> {\n    const output = await this.mediatorQueryOperation.mediate({ operation: operation.input, context });\n\n    // TODO: In next/major, remove undefined check when mediatorHashQuads is made required\n    if (output.type === 'quads' && this.mediatorHashQuads !== undefined) {\n      const outputQuads: IQueryOperationResultQuads = ActorQueryOperation.getSafeQuads(\n        output,\n      );\n\n      const quadStream: AsyncIterator<RDF.Quad> = outputQuads.quadStream.filter(await this.newHashFilterQuads(context));\n      return {\n        type: 'quads',\n        quadStream,\n        metadata: outputQuads.metadata,\n      };\n    }\n\n    const outputBindings: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(\n      output,\n    );\n\n    const bindingsStream: BindingsStream = outputBindings.bindingsStream.filter(await this.newHashFilter(context));\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: outputBindings.metadata,\n    };\n  }\n\n  /**\n   * Create a new distinct filter function.\n   * This will maintain an internal hash datastructure so that every bindings object only returns true once.\n   * @param context The action context.\n   * @return {(bindings: Bindings) => boolean} A distinct filter for bindings.\n   */\n  public async newHashFilter(context: IActionContext): Promise<(bindings: Bindings) => boolean> {\n    const { hashFunction } = await this.mediatorHashBindings.mediate({ allowHashCollisions: true, context });\n    const hashes: Record<string, boolean> = {};\n    return (bindings: Bindings) => {\n      const hash: string = hashFunction(bindings);\n\n      return !(hash in hashes) && (hashes[hash] = true);\n    };\n  }\n\n  /**\n   * Create a new distinct filter function to hash quads.\n   * This will maintain an internal hash datastructure so that every quad object only returns true once.\n   * @param context The action context.\n   * @return {(quad: RDF.Quad) => boolean} A distinct filter for quads.\n   */\n  public async newHashFilterQuads(context: IActionContext): Promise<(quad: RDF.Quad) => boolean> {\n    // TODO: In next/major, this check can be removed when mediatorHashQuads is made required\n    if (this.mediatorHashQuads === undefined) {\n      return _quad => true;\n    }\n    const { hashFunction } = await this.mediatorHashQuads.mediate({ allowHashCollisions: true, context });\n    const hashes: Record<string, boolean> = {};\n    return (quad: RDF.Quad) => {\n      const hash: string = hashFunction(quad);\n\n      return !(hash in hashes) && (hashes[hash] = true);\n    };\n  }\n}\n\nexport interface IActorQueryOperationDistinctHashArgs extends IActorQueryOperationTypedMediatedArgs {\n  mediatorHashBindings: MediatorHashBindings;\n  // TODO: In next/major, this field should be made required in the next major update\n  mediatorHashQuads?: MediatorHashQuads;\n}\n","import { BindingsFactory, bindingsToString } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { ExpressionError } from '@comunica/expression-evaluator';\nimport { AsyncEvaluator, isExpressionError } from '@comunica/expression-evaluator';\nimport type { Bindings, IActionContext, IQueryOperationResult, IQueryOperationResultBindings } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Extend Query Operation Actor.\n *\n * See https://www.w3.org/TR/sparql11-query/#sparqlAlgebra;\n */\nexport class ActorQueryOperationExtend extends ActorQueryOperationTypedMediated<Algebra.Extend> {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationExtendArgs) {\n    super(args, 'extend');\n  }\n\n  public async testOperation(operation: Algebra.Extend, context: IActionContext): Promise<IActorTest> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    // Will throw error for unsupported opperations\n    const _ = Boolean(new AsyncEvaluator(\n      operation.expression,\n      ActorQueryOperation.getAsyncExpressionContext(context, this.mediatorQueryOperation, bindingsFactory),\n    ));\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Extend, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const { expression, input, variable } = operation;\n\n    const output: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation: input, context }),\n    );\n\n    // Throw if the variable has already been bound\n    if ((await output.metadata()).variables.some(innerVariable => innerVariable.equals(variable))) {\n      throw new Error(`Illegal binding to variable '${variable.value}' that has already been bound`);\n    }\n\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const config = { ...ActorQueryOperation.getAsyncExpressionContext(\n      context,\n      this.mediatorQueryOperation,\n      bindingsFactory,\n    ) };\n    const evaluator = new AsyncEvaluator(expression, config);\n\n    // Transform the stream by extending each Bindings with the expression result\n    const transform = async(bindings: Bindings, next: any, push: (pusbBindings: Bindings) => void): Promise<void> => {\n      try {\n        const result = await evaluator.evaluate(bindings);\n        // Extend operation is undefined when the key already exists\n        // We just override it here.\n        const extended = bindings.set(variable, result);\n        push(extended);\n      } catch (error: unknown) {\n        if (isExpressionError(<Error> error)) {\n          // Errors silently don't actually extend according to the spec\n          push(bindings);\n          // But let's warn anyway\n          this.logWarn(context, `Expression error for extend operation (${(<ExpressionError> error).message})` +\n            `with bindings '${bindingsToString(bindings)}'`);\n        } else {\n          bindingsStream.emit('error', error);\n        }\n      }\n      next();\n    };\n\n    // eslint-disable-next-line ts/no-misused-promises\n    const bindingsStream = output.bindingsStream.transform<Bindings>({ autoStart: false, transform });\n    return {\n      type: 'bindings',\n      bindingsStream,\n      async metadata() {\n        const outputMetadata = await output.metadata();\n        return { ...outputMetadata, variables: [ ...outputMetadata.variables, variable ]};\n      },\n    };\n  }\n}\n\nexport interface IActorQueryOperationExtendArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import { BindingsFactory, bindingsToString } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { AsyncEvaluator, isExpressionError } from '@comunica/expression-evaluator';\nimport type { Bindings, IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Filter Sparqlee Query Operation Actor.\n */\nexport class ActorQueryOperationFilter extends ActorQueryOperationTypedMediated<Algebra.Filter> {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationFilterSparqleeArgs) {\n    super(args, 'filter');\n  }\n\n  public async testOperation(operation: Algebra.Filter, context: IActionContext): Promise<IActorTest> {\n    // Will throw error for unsupported operators\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const config = { ...ActorQueryOperation.getAsyncExpressionContext(\n      context,\n      this.mediatorQueryOperation,\n      bindingsFactory,\n    ) };\n    const _ = new AsyncEvaluator(operation.expression, config);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Filter, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const outputRaw = await this.mediatorQueryOperation.mediate({ operation: operation.input, context });\n    const output = ActorQueryOperation.getSafeBindings(outputRaw);\n    ActorQueryOperation.validateQueryOutput(output, 'bindings');\n\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const config = { ...ActorQueryOperation.getAsyncExpressionContext(\n      context,\n      this.mediatorQueryOperation,\n      bindingsFactory,\n    ) };\n    const evaluator = new AsyncEvaluator(operation.expression, config);\n\n    const transform = async(item: Bindings, next: any, push: (bindings: Bindings) => void): Promise<void> => {\n      try {\n        const result = await evaluator.evaluateAsEBV(item);\n        if (result) {\n          push(item);\n        }\n      } catch (error: unknown) {\n        // We ignore all Expression errors.\n        // Other errors (likely programming mistakes) are still propagated.\n        //\n        // > Specifically, FILTERs eliminate any solutions that,\n        // > when substituted into the expression, either result in\n        // > an effective boolean value of false or produce an error.\n        // > ...\n        // > These errors have no effect outside of FILTER evaluation.\n        // https://www.w3.org/TR/sparql11-query/#expressions\n        if (isExpressionError(<Error> error)) {\n          // In many cases, this is a user error, where the user should manually cast the variable to a string.\n          // In order to help users debug this, we should report these errors via the logger as warnings.\n          this.logWarn(context, 'Error occurred while filtering.', () => ({ error, bindings: bindingsToString(item) }));\n        } else {\n          bindingsStream.emit('error', error);\n        }\n      }\n      next();\n    };\n\n    // eslint-disable-next-line ts/no-misused-promises\n    const bindingsStream = output.bindingsStream.transform<Bindings>({ transform, autoStart: false });\n    return { type: 'bindings', bindingsStream, metadata: output.metadata };\n  }\n}\n\nexport interface IActorQueryOperationFilterSparqleeArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { Algebra, Factory } from 'sparqlalgebrajs';\n\n/**\n * A comunica From Query Operation Actor.\n */\nexport class ActorQueryOperationFromQuad extends ActorQueryOperationTypedMediated<Algebra.From> {\n  private static readonly FACTORY: Factory = new Factory();\n  private static readonly ALGEBRA_TYPES: string[] = Object.keys(Algebra.types).map(key => (<any> Algebra.types)[key]);\n\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'from');\n  }\n\n  /**\n   * Create a deep copy of the given operation.\n   * @param {Operation} operation An operation.\n   * @param {(subOperation: Operation) => Operation} recursiveCb A callback for recursive operation calls.\n   * @return {Operation} The copied operation.\n   */\n  public static copyOperation(\n    operation: Algebra.Operation,\n    recursiveCb: (subOperation: Algebra.Operation) => Algebra.Operation,\n  ): Algebra.Operation {\n    const copiedOperation: Algebra.Operation = <any> {};\n    for (const key of Object.keys(operation)) {\n      if (Array.isArray(operation[key]) && key !== 'template') {\n        // We exclude the 'template' entry, as we don't want to modify the template value of construct operations\n        if (key === 'variables') {\n          copiedOperation[key] = operation[key];\n        } else {\n          copiedOperation[key] = operation[key].map(recursiveCb);\n        }\n      } else if (ActorQueryOperationFromQuad.ALGEBRA_TYPES.includes(operation[key].type)) {\n        copiedOperation[key] = recursiveCb(operation[key]);\n      } else {\n        copiedOperation[key] = operation[key];\n      }\n    }\n    return copiedOperation;\n  }\n\n  /**\n   * Recursively transform the given operation to use the given graphs as default graph\n   * This will (possibly) create a new operation and not modify the given operation.\n   * @param {Operation} operation An operation.\n   * @param {RDF.Term[]} defaultGraphs Graph terms.\n   * @return {Operation} A new operation.\n   */\n  public static applyOperationDefaultGraph(operation: Algebra.Operation, defaultGraphs: RDF.Term[]): Algebra.Operation {\n    // If the operation is a BGP or Path, change the graph.\n    if ((operation.type === 'bgp' && operation.patterns.length > 0) ||\n      operation.type === 'path' ||\n      operation.type === 'pattern') {\n      if (operation.type === 'bgp') {\n        return ActorQueryOperationFromQuad.joinOperations(operation.patterns.map((pattern: Algebra.Pattern) => {\n          if (pattern.graph.termType !== 'DefaultGraph') {\n            return ActorQueryOperationFromQuad.FACTORY.createBgp([ pattern ]);\n          }\n          const bgps = defaultGraphs.map((graph: RDF.Term) =>\n            ActorQueryOperationFromQuad.FACTORY.createBgp([ Object.assign(\n              ActorQueryOperationFromQuad.FACTORY\n                .createPattern(pattern.subject, pattern.predicate, pattern.object, graph),\n              { metadata: pattern.metadata },\n            ) ]));\n          return ActorQueryOperationFromQuad.unionOperations(bgps);\n        }));\n      }\n      if (operation.graph.termType !== 'DefaultGraph') {\n        return operation;\n      }\n      const paths = defaultGraphs.map(\n        (graph: RDF.Term) => {\n          if (operation.type === 'path') {\n            return ActorQueryOperationFromQuad.FACTORY\n              .createPath(operation.subject, operation.predicate, operation.object, graph);\n          }\n          return Object.assign(ActorQueryOperationFromQuad.FACTORY\n            .createPattern(\n              operation.subject,\n              operation.predicate,\n              operation.object,\n              graph,\n            ), { metadata: operation.metadata });\n        },\n      );\n      return ActorQueryOperationFromQuad.unionOperations(paths);\n    }\n\n    return ActorQueryOperationFromQuad.copyOperation(\n      operation,\n      (subOperation: Algebra.Operation) => this.applyOperationDefaultGraph(subOperation, defaultGraphs),\n    );\n  }\n\n  /**\n   * Recursively transform the given operation to use the given graphs as named graph\n   * This will (possibly) create a new operation and not modify the given operation.\n   * @param {Operation} operation An operation.\n   * @param {RDF.Term[]} namedGraphs Graph terms.\n   * @param {RDF.Term[]} defaultGraphs Default graph terms.\n   * @return {Operation} A new operation.\n   */\n  public static applyOperationNamedGraph(\n    operation: Algebra.Operation,\n    namedGraphs: RDF.NamedNode[],\n    defaultGraphs: RDF.Term[],\n  ): Algebra.Operation {\n    // If the operation is a BGP or Path, change the graph.\n    if ((operation.type === 'bgp' && operation.patterns.length > 0) ||\n      operation.type === 'path' ||\n      operation.type === 'pattern') {\n      const patternGraph: RDF.Term = operation.type === 'bgp' ? operation.patterns[0].graph : operation.graph;\n      if (patternGraph.termType === 'DefaultGraph') {\n        // SPARQL spec (8.2) describes that when FROM NAMED's are used without a FROM, the default graph must be empty.\n        // The FROMs are transformed before this step to a named node, so this will not apply to this case anymore.\n        return { type: Algebra.types.BGP, patterns: []};\n      }\n      if (patternGraph.termType === 'Variable') {\n        if (namedGraphs.length === 1) {\n          const graph: RDF.NamedNode = namedGraphs[0];\n          // If the pattern graph is a variable, replace the graph and bind the variable using VALUES\n          const bindings: Record<string, RDF.Literal | RDF.NamedNode> = {};\n          bindings[`?${patternGraph.value}`] = graph;\n          const values: Algebra.Values = ActorQueryOperationFromQuad.FACTORY\n            .createValues([ patternGraph ], [ bindings ]);\n\n          let pattern: Algebra.Operation;\n          if (operation.type === 'bgp') {\n            pattern = ActorQueryOperationFromQuad.FACTORY\n              .createBgp(operation.patterns.map((pat: Algebra.Pattern) => ActorQueryOperationFromQuad.FACTORY\n                .createPattern(pat.subject, pat.predicate, pat.object, graph)));\n          } else if (operation.type === 'path') {\n            pattern = ActorQueryOperationFromQuad.FACTORY\n              .createPath(operation.subject, operation.predicate, operation.object, graph);\n          } else {\n            pattern = ActorQueryOperationFromQuad.FACTORY\n              .createPattern(operation.subject, operation.predicate, operation.object, graph);\n          }\n\n          return ActorQueryOperationFromQuad.FACTORY.createJoin([ values, pattern ]);\n        }\n        // If the pattern graph is a variable, take the union of the pattern applied to each available named graph\n        return ActorQueryOperationFromQuad.unionOperations(namedGraphs.map(\n          (graph: RDF.NamedNode) => ActorQueryOperationFromQuad.applyOperationNamedGraph(\n            operation,\n            [ graph ],\n            defaultGraphs,\n          ),\n        ));\n      }\n      // The pattern's graph is defined (including the default graphs)\n      const isNamedGraphAvailable: boolean = [ ...namedGraphs, ...defaultGraphs ].some(\n        (namedGraph: RDF.Term) => namedGraph.equals(patternGraph),\n      );\n      if (isNamedGraphAvailable) {\n        // Return the pattern as-is if the pattern's graph was selected in a FROM NAMED\n        return operation;\n      }\n      // No-op if the pattern's graph was not selected in a FROM NAMED.\n      return { type: Algebra.types.BGP, patterns: []};\n    }\n\n    return ActorQueryOperationFromQuad.copyOperation(\n      operation,\n      (subOperation: Algebra.Operation) => this.applyOperationNamedGraph(subOperation, namedGraphs, defaultGraphs),\n    );\n  }\n\n  /**\n   * Transform the given array of operations into a join operation.\n   * @param {Operation[]} operations An array of operations, must contain at least one operation.\n   * @return {Join} A join operation.\n   */\n  public static joinOperations(operations: Algebra.Operation[]): Algebra.Operation {\n    if (operations.length === 1) {\n      return operations[0];\n    }\n    if (operations.length > 1) {\n      return ActorQueryOperationFromQuad.FACTORY.createJoin(operations);\n    }\n    throw new Error('A join can only be applied on at least one operation');\n  }\n\n  /**\n   * Transform the given array of operations into a union operation.\n   * @param {Operation[]} operations An array of operations, must contain at least one operation.\n   * @return {Union} A union operation.\n   */\n  public static unionOperations(operations: Algebra.Operation[]): Algebra.Operation {\n    if (operations.length === 1) {\n      return operations[0];\n    }\n    if (operations.length > 1) {\n      return ActorQueryOperationFromQuad.FACTORY.createUnion(operations);\n    }\n    throw new Error('A union can only be applied on at least one operation');\n  }\n\n  /**\n   * Transform an operation based on the default and named graphs in the pattern.\n   *\n   * FROM sets the default graph.\n   * If multiple are available, take the union of the operation for all of them at quad-pattern level.\n   *\n   * FROM NAMED indicates which named graphs are available.\n   * This will rewrite the query so that only triples from the given named graphs can be selected.\n   *\n   * @param {From} pattern A from operation.\n   * @return {Operation} The transformed operation.\n   */\n  public static createOperation(pattern: Algebra.From): Algebra.Operation {\n    let operation: Algebra.Operation = pattern.input;\n    if (pattern.default.length > 0) {\n      operation = ActorQueryOperationFromQuad.applyOperationDefaultGraph(operation, pattern.default);\n    }\n    if (pattern.named.length > 0 || pattern.default.length > 0) {\n      operation = ActorQueryOperationFromQuad.applyOperationNamedGraph(operation, pattern.named, pattern.default);\n    }\n    return operation;\n  }\n\n  public async testOperation(_operation: Algebra.From, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(\n    operationOriginal: Algebra.From,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const operation: Algebra.Operation = ActorQueryOperationFromQuad.createOperation(operationOriginal);\n    return this.mediatorQueryOperation.mediate({ operation, context });\n  }\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorHashBindings } from '@comunica/bus-hash-bindings';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { AsyncEvaluator } from '@comunica/expression-evaluator';\nimport type { BindingsStream, IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { ArrayIterator, TransformIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { GroupsState } from './GroupsState';\n\n/**\n * A comunica Group Query Operation Actor.\n */\nexport class ActorQueryOperationGroup extends ActorQueryOperationTypedMediated<Algebra.Group> {\n  public readonly mediatorHashBindings: MediatorHashBindings;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationGroupArgs) {\n    super(args, 'group');\n  }\n\n  public async testOperation(operation: Algebra.Group, context: IActionContext): Promise<IActorTest> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    for (const aggregate of operation.aggregates) {\n      // Will throw for unsupported expressions\n      const _ = new AsyncEvaluator(\n        aggregate.expression,\n        ActorQueryOperation.getAsyncExpressionContext(context, this.mediatorQueryOperation, bindingsFactory),\n      );\n    }\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Group, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    // Create a hash function\n    const { hashFunction } = await this.mediatorHashBindings.mediate({ allowHashCollisions: true, context });\n\n    // Get result stream for the input query\n    const { input, aggregates } = operation;\n    const outputRaw = await this.mediatorQueryOperation.mediate({ operation: input, context });\n    const output = ActorQueryOperation.getSafeBindings(outputRaw);\n\n    // The variables in scope are the variables on which we group, i.e. pattern.variables.\n    // For 'GROUP BY ?x, ?z', this is [?x, ?z], for 'GROUP by expr(?x) as ?e' this is [?e].\n    // But also in scope are the variables defined by the aggregations, since GROUP has to handle this.\n    const variables = [\n      ...operation.variables,\n      ...aggregates.map(agg => agg.variable),\n    ];\n\n    const sparqleeConfig = ActorQueryOperation.getAsyncExpressionContext(\n      context,\n      this.mediatorQueryOperation,\n      bindingsFactory,\n    );\n\n    // Wrap a new promise inside an iterator that completes when the stream has ended or when an error occurs\n    const bindingsStream = new TransformIterator(() => new Promise<BindingsStream>((resolve, reject) => {\n      const groups = new GroupsState(hashFunction, operation, sparqleeConfig, bindingsFactory);\n\n      // Phase 2: Collect aggregator results\n      // We can only return when the binding stream ends, when that happens\n      // we return the identified groups. Which are nothing more than Bindings\n      // of the grouping variables merged with the aggregate variables\n      // eslint-disable-next-line ts/no-misused-promises\n      output.bindingsStream.on('end', async() => {\n        try {\n          const bindingsStreamInner = new ArrayIterator(await groups.collectResults(), { autoStart: false });\n          resolve(bindingsStreamInner);\n        } catch (error: unknown) {\n          reject(error);\n        }\n      });\n\n      // Make sure to propagate any errors in the binding stream\n      output.bindingsStream.on('error', reject);\n\n      // Phase 1: Consume the stream, identify the groups and populate the aggregators.\n      // We need to bind this after the 'error' and 'end' listeners to avoid the\n      // stream having ended before those listeners are bound.\n      output.bindingsStream.on('data', (bindings) => {\n        groups.consumeBindings(bindings).catch(reject);\n      });\n    }), { autoStart: false });\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: async() => ({ ...await output.metadata(), variables }),\n    };\n  }\n}\n\nexport interface IActorQueryOperationGroupArgs extends IActorQueryOperationTypedMediatedArgs {\n  mediatorHashBindings: MediatorHashBindings;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { BindingsFactory } from '@comunica/bindings-factory';\nimport type { HashFunction } from '@comunica/bus-hash-bindings';\nimport type { IAsyncEvaluatorContext } from '@comunica/expression-evaluator';\nimport { AsyncAggregateEvaluator } from '@comunica/expression-evaluator';\nimport type { Bindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A simple type alias for strings that should be hashes of Bindings\n */\nexport type BindingsHash = string;\n\n/**\n * A state container for a single group\n *\n * @property {Bindings} bindings - The binding entries on which we group\n */\nexport interface IGroup {\n  bindings: Bindings;\n  aggregators: Record<string, AsyncAggregateEvaluator>;\n}\n\n/**\n * A state manager for the groups constructed by consuming the bindings-stream.\n */\nexport class GroupsState {\n  private readonly groups: Map<BindingsHash, IGroup>;\n  // We need to the promises of a group so we can await the initialisation/ creation of them.\n  //  Without this we could have duplicate work/ override precious work.\n  private readonly groupsInitializer: Map<BindingsHash, Promise<IGroup>>;\n  private readonly groupVariables: Set<string>;\n  private readonly distinctHashes: null | Map<BindingsHash, Set<BindingsHash>>;\n  private waitCounter: number;\n  // Function that resolves the promise given by collectResults\n  private waitResolver: (bindings: Bindings[]) => void;\n  private resultHasBeenCalled: boolean;\n\n  public constructor(\n    private readonly hashFunction: HashFunction,\n    private readonly pattern: Algebra.Group,\n    private readonly sparqleeConfig: IAsyncEvaluatorContext,\n    private readonly bindingsFactory: BindingsFactory,\n  ) {\n    this.groups = new Map();\n    this.groupsInitializer = new Map();\n    this.groupVariables = new Set(this.pattern.variables.map(x => x.value));\n    this.waitCounter = 1;\n    this.resultHasBeenCalled = false;\n  }\n\n  /**\n   * - Consumes a stream binding\n   * - Find the corresponding group and create one if need be\n   * - Feeds the binding to the group's aggregators\n   *\n   * @param {Bindings} bindings - The Bindings to consume\n   */\n  public consumeBindings(bindings: Bindings): Promise<void> {\n    const check = this.resultCheck<void>();\n    if (check) {\n      return check;\n    }\n    // We increment the counter and decrement him when put action is performed.\n    this.waitCounter++;\n\n    // Select the bindings on which we group\n    const grouper = bindings\n      .filter((_, variable) => this.groupVariables.has(variable.value));\n    const groupHash = this.hashBindings(grouper);\n\n    // First member of group -> create new group\n    let groupInitializer: Promise<IGroup> | undefined = this.groupsInitializer.get(groupHash);\n\n    let res: Promise<any>;\n    if (groupInitializer) {\n      const groupInitializerDefined = groupInitializer;\n      res = (async() => {\n        const group = await groupInitializerDefined;\n        await Promise.all(this.pattern.aggregates.map(async(aggregate) => {\n          // Distinct handling is done in the aggregator.\n          const variable = aggregate.variable.value;\n          await group.aggregators[variable].put(bindings);\n        }));\n      })().then(async() => {\n        this.subtractWaitCounterAndCollect();\n      });\n    } else {\n      // Initialize state for all aggregators for new group\n      groupInitializer = (async() => {\n        const aggregators: Record<string, AsyncAggregateEvaluator> = {};\n        await Promise.all(this.pattern.aggregates.map(async(aggregate) => {\n          const key = aggregate.variable.value;\n          aggregators[key] = new AsyncAggregateEvaluator(aggregate, this.sparqleeConfig);\n          await aggregators[key].put(bindings);\n        }));\n\n        const group = { aggregators, bindings: grouper };\n        this.groups.set(groupHash, group);\n        this.subtractWaitCounterAndCollect();\n        return group;\n      })();\n      this.groupsInitializer.set(groupHash, groupInitializer);\n      res = groupInitializer;\n    }\n    return res;\n  }\n\n  private subtractWaitCounterAndCollect(): void {\n    if (--this.waitCounter === 0) {\n      this.handleResultCollection();\n    }\n  }\n\n  private handleResultCollection(): void {\n    // Collect groups\n    let rows: Bindings[] = [ ...this.groups ].map(([ _, group ]) => {\n      const { bindings: groupBindings, aggregators } = group;\n\n      // Collect aggregator bindings\n      // If the aggregate errorred, the result will be undefined\n      let returnBindings = groupBindings;\n      for (const variable in aggregators) {\n        const value = aggregators[variable].result();\n        if (value) {\n          // Filter undefined\n          returnBindings = returnBindings.set(DF.variable(variable), value);\n        }\n      }\n\n      // Merge grouping bindings and aggregator bindings\n      return returnBindings;\n    });\n\n    // Case: No Input\n    // Some aggregators still define an output on the empty input\n    // Result is a single Bindings\n    if (rows.length === 0 && this.groupVariables.size === 0) {\n      const single: [RDF.Variable, RDF.Term][] = [];\n      for (const aggregate of this.pattern.aggregates) {\n        const key = aggregate.variable;\n        const value = AsyncAggregateEvaluator.emptyValue(aggregate);\n        if (value !== undefined) {\n          single.push([ key, value ]);\n        }\n      }\n      rows = [ this.bindingsFactory.bindings(single) ];\n    }\n    this.waitResolver(rows);\n  }\n\n  private resultCheck<T>(): Promise<T> | undefined {\n    if (this.resultHasBeenCalled) {\n      return Promise.reject(new Error('Calling any function after calling collectResult is invalid.'));\n    }\n  }\n\n  /**\n   * Collect the result of the final state. This returns a Bindings per group,\n   * and a (possibly empty) Bindings in case no Bindings have been consumed yet.\n   * You can only call this method once, after calling this method,\n   * calling any function on this will result in an error being thrown.\n   */\n  public collectResults(): Promise<Bindings[]> {\n    const check = this.resultCheck<Bindings[]>();\n    if (check) {\n      return check;\n    }\n    this.resultHasBeenCalled = true;\n    const res = new Promise<Bindings[]>((resolve) => {\n      this.waitResolver = resolve;\n    });\n    this.subtractWaitCounterAndCollect();\n    return res;\n  }\n\n  /**\n   * @param {Bindings} bindings - Bindings to hash\n   */\n  private hashBindings(bindings: Bindings): BindingsHash {\n    return this.hashFunction(bindings);\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { MediatorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IActorTest } from '@comunica/core';\nimport type { IQueryOperationResult, IActionContext, IJoinEntry } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Join Query Operation Actor.\n */\nexport class ActorQueryOperationJoin extends ActorQueryOperationTypedMediated<Algebra.Join> {\n  public readonly mediatorJoin: MediatorRdfJoin;\n\n  public constructor(args: IActorQueryOperationJoinArgs) {\n    super(args, 'join');\n  }\n\n  public async testOperation(_operation: Algebra.Join, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(\n    operationOriginal: Algebra.Join,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const entries: IJoinEntry[] = (await Promise.all(operationOriginal.input\n      .map(async subOperation => ({\n        output: await this.mediatorQueryOperation.mediate({ operation: subOperation, context }),\n        operation: subOperation,\n      }))))\n      .map(({ output, operation }) => ({\n        output: ActorQueryOperation.getSafeBindings(output),\n        operation,\n      }));\n\n    return this.mediatorJoin.mediate({ type: 'inner', entries, context });\n  }\n}\n\nexport interface IActorQueryOperationJoinArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { MediatorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IActorTest } from '@comunica/core';\nimport { AsyncEvaluator, isExpressionError } from '@comunica/expression-evaluator';\nimport type { IQueryOperationResult, Bindings, IActionContext, IJoinEntry } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica LeftJoin Query Operation Actor.\n */\nexport class ActorQueryOperationLeftJoin extends ActorQueryOperationTypedMediated<Algebra.LeftJoin> {\n  public readonly mediatorJoin: MediatorRdfJoin;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationLeftJoinArgs) {\n    super(args, 'leftjoin');\n  }\n\n  public async testOperation(_operation: Algebra.LeftJoin, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operationOriginal: Algebra.LeftJoin, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Delegate to join bus\n    const entries: IJoinEntry[] = (await Promise.all(operationOriginal.input\n      .map(async subOperation => ({\n        output: await this.mediatorQueryOperation.mediate({ operation: subOperation, context }),\n        operation: subOperation,\n      }))))\n      .map(({ output, operation }) => ({\n        output: ActorQueryOperation.getSafeBindings(output),\n        operation,\n      }));\n    const joined = await this.mediatorJoin.mediate({ type: 'optional', entries, context });\n\n    // If the pattern contains an expression, filter the resulting stream\n    if (operationOriginal.expression) {\n      const rightMetadata = await entries[1].output.metadata();\n      const expressionVariables = rightMetadata.variables;\n\n      const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n      const config = { ...ActorQueryOperation.getAsyncExpressionContext(\n        context,\n        this.mediatorQueryOperation,\n        bindingsFactory,\n      ) };\n      const evaluator = new AsyncEvaluator(operationOriginal.expression, config);\n      const bindingsStream = joined.bindingsStream\n        .transform({\n          autoStart: false,\n          // eslint-disable-next-line ts/no-misused-promises\n          transform: async(bindings: Bindings, done: () => void, push: (item: Bindings) => void) => {\n            // If variables of the right-hand entry are missing, we skip expression evaluation\n            if (!expressionVariables.every(variable => bindings.has(variable.value))) {\n              push(bindings);\n              return done();\n            }\n\n            try {\n              const result = await evaluator.evaluateAsEBV(bindings);\n              if (result) {\n                push(bindings);\n              }\n            } catch (error: unknown) {\n              // We ignore all Expression errors.\n              // Other errors (likely programming mistakes) are still propagated.\n              // Left Join is defined in terms of Filter (https://www.w3.org/TR/sparql11-query/#defn_algJoin),\n              // and Filter requires this (https://www.w3.org/TR/sparql11-query/#expressions).\n              if (isExpressionError(<Error>error)) {\n                // In many cases, this is a user error, where the user should manually cast the variable to a string.\n                // In order to help users debug this, we should report these errors via the logger as warnings.\n                this.logWarn(context, 'Error occurred while filtering.', () => ({ error, bindings }));\n              } else {\n                bindingsStream.emit('error', error);\n              }\n            }\n            done();\n          },\n        });\n      joined.bindingsStream = bindingsStream;\n    }\n\n    return joined;\n  }\n}\n\nexport interface IActorQueryOperationLeftJoinArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { MediatorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult, IJoinEntry } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Minus Query Operation Actor.\n */\nexport class ActorQueryOperationMinus extends ActorQueryOperationTypedMediated<Algebra.Minus> {\n  public readonly mediatorJoin: MediatorRdfJoin;\n\n  public constructor(args: IActorQueryOperationMinusArgs) {\n    super(args, 'minus');\n  }\n\n  public async testOperation(_operation: Algebra.Minus, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(\n    operationOriginal: Algebra.Minus,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const entries: IJoinEntry[] = (await Promise.all(operationOriginal.input\n      .map(async subOperation => ({\n        output: await this.mediatorQueryOperation.mediate({ operation: subOperation, context }),\n        operation: subOperation,\n      }))))\n      .map(({ output, operation }) => ({\n        output: ActorQueryOperation.getSafeBindings(output),\n        operation,\n      }));\n\n    return this.mediatorJoin.mediate({ type: 'minus', entries, context });\n  }\n}\n\nexport interface IActorQueryOperationMinusArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { SingletonIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation)\n * actor that handles SPARQL nop operations.\n */\nexport class ActorQueryOperationNop extends ActorQueryOperationTypedMediated<Algebra.Nop> {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationNopArgs) {\n    super(args, 'nop');\n  }\n\n  public async testOperation(_operation: Algebra.Nop, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Nop, context: IActionContext): Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n\n    return {\n      bindingsStream: new SingletonIterator<RDF.Bindings>(bindingsFactory.bindings()),\n      metadata: () => Promise.resolve({\n        state: new MetadataValidationState(),\n        cardinality: { type: 'exact', value: 1 },\n        canContainUndefs: false,\n        variables: [],\n      }),\n      type: 'bindings',\n    };\n  }\n}\n\nexport interface IActorQueryOperationNopArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { AsyncEvaluator, isExpressionError, orderTypes } from '@comunica/expression-evaluator';\nimport type { Bindings, IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type { Term } from '@rdfjs/types';\nimport { Algebra } from 'sparqlalgebrajs';\nimport { SortIterator } from './SortIterator';\n\n/**\n * A comunica OrderBy Sparqlee Query Operation Actor.\n */\nexport class ActorQueryOperationOrderBy extends ActorQueryOperationTypedMediated<Algebra.OrderBy> {\n  private readonly window: number;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationOrderBySparqleeArgs) {\n    super(args, 'orderby');\n    this.window = args.window ?? Number.POSITIVE_INFINITY;\n  }\n\n  public async testOperation(operation: Algebra.OrderBy, context: IActionContext): Promise<IActorTest> {\n    // Will throw error for unsupported operators\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n\n    for (let expr of operation.expressions) {\n      expr = this.extractSortExpression(expr);\n      const _ = new AsyncEvaluator(\n        expr,\n        ActorQueryOperation.getAsyncExpressionContext(context, this.mediatorQueryOperation, bindingsFactory),\n      );\n    }\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.OrderBy, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const outputRaw = await this.mediatorQueryOperation.mediate({ operation: operation.input, context });\n    const output = ActorQueryOperation.getSafeBindings(outputRaw);\n\n    const options = { window: this.window };\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const sparqleeConfig = {\n      ...ActorQueryOperation.getAsyncExpressionContext(context, this.mediatorQueryOperation, bindingsFactory),\n    };\n    let { bindingsStream } = output;\n\n    // Sorting backwards since the first one is the most important therefore should be ordered last.\n    for (let i = operation.expressions.length - 1; i >= 0; i--) {\n      let expr = operation.expressions[i];\n      const isAscending = this.isAscending(expr);\n      expr = this.extractSortExpression(expr);\n      // Transform the stream by annotating it with the expr result\n      const evaluator = new AsyncEvaluator(expr, sparqleeConfig);\n      interface IAnnotatedBinding {\n        bindings: Bindings;\n        result: Term | undefined;\n      }\n\n      const transform = async(bindings: Bindings, next: any, push: (result: IAnnotatedBinding) => void):\n      Promise<void> => {\n        try {\n          const result = await evaluator.evaluate(bindings);\n          push({ bindings, result });\n        } catch (error: unknown) {\n          // We ignore all Expression errors.\n          // Other errors (likely programming mistakes) are still propagated.\n          // I can't recall where this is defined in the spec.\n          if (!isExpressionError(<Error> error)) {\n            bindingsStream.emit('error', error);\n          }\n          push({ bindings, result: undefined });\n        }\n        next();\n      };\n      // eslint-disable-next-line ts/no-misused-promises\n      const transformedStream = bindingsStream.transform<IAnnotatedBinding>({ transform });\n\n      // Sort the annoted stream\n      const sortedStream = new SortIterator(transformedStream, (left, right) => {\n        let compare = orderTypes(left.result, right.result);\n        if (!isAscending) {\n          compare *= -1;\n        }\n        return compare;\n      }, options);\n\n      // Remove the annotation\n      bindingsStream = sortedStream.map(({ bindings }) => bindings);\n    }\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: output.metadata,\n    };\n  }\n\n  // Remove descending operator if necessary\n  private extractSortExpression(expr: Algebra.Expression): Algebra.Expression {\n    const { expressionType, operator } = expr;\n    if (expressionType !== Algebra.expressionTypes.OPERATOR) {\n      return expr;\n    }\n    return operator === 'desc' ?\n      expr.args[0] :\n      expr;\n  }\n\n  private isAscending(expr: Algebra.Expression): boolean {\n    const { expressionType, operator } = expr;\n    if (expressionType !== Algebra.expressionTypes.OPERATOR) {\n      return true;\n    }\n    return operator !== 'desc';\n  }\n}\n\n/**\n * The window parameter determines how many of the elements to consider when sorting.\n */\nexport interface IActorQueryOperationOrderBySparqleeArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n  /**\n   * The size of the window for the sort iterator.\n   * @range {integer}\n   */\n  window?: number;\n}\n","import type { AsyncIterator } from 'asynciterator';\nimport { TransformIterator } from 'asynciterator';\n\n// Based on https://github.com/LinkedDataFragments/Client.js/blob/master/lib/sparql/SortIterator.js\nexport class SortIterator<T> extends TransformIterator<T, T> {\n  private readonly windowLength: number;\n  private readonly sort: (left: T, right: T) => number;\n  private readonly sorted: T[];\n\n  public constructor(source: AsyncIterator<T>, sort: (left: T, right: T) => number, options?: any) {\n    super(source, options);\n\n    // The `window` parameter indicates the length of the sliding window to apply sorting\n    const window: number = options && options.window;\n    this.windowLength = Number.isFinite(window) && window > 0 ? window : Number.POSITIVE_INFINITY;\n    this.sort = sort;\n    this.sorted = [];\n  }\n\n  // Reads the smallest item in the current sorting window\n  public override _read(count: number, done: () => void): void {\n    let item;\n    let { length } = this.sorted;\n    // Try to read items until we reach the desired window length\n    while (length !== this.windowLength) {\n      item = this.source!.read();\n      if (item === null) {\n        break;\n      }\n      // Insert the item in the sorted window (smallest last)\n      let left = 0;\n      let right = length - 1;\n      let mid;\n      let order;\n      while (left <= right) {\n        mid = Math.trunc((left + right) / 2);\n        order = this.sort(item, this.sorted[mid]);\n        if (order < 0) {\n          left = mid + 1;\n        } else if (order > 0) {\n          right = mid - 1;\n        } else {\n          left = mid;\n          right = -1;\n        }\n      }\n      this.sorted.splice(left, 0, item);\n      length++;\n    }\n    // Push the smallest item in the window\n    if (length === this.windowLength) {\n      this._push(this.sorted.pop()!);\n    }\n    done();\n  }\n\n  // Flushes remaining data after the source has ended\n  public override _flush(done: () => void): void {\n    let { length } = this.sorted;\n    while (length--) {\n      this._push(this.sorted.pop()!);\n    }\n    done();\n  }\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport { ActorQueryOperationUnion } from '@comunica/actor-query-operation-union';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { MediatorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type {\n  IQueryOperationResultBindings,\n  IQueryOperationResult,\n  IActionContext,\n  MetadataBindings,\n} from '@comunica/types';\nimport { UnionIterator } from 'asynciterator';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Alt Query Operation Actor.\n */\nexport class ActorQueryOperationPathAlt extends ActorAbstractPath {\n  public readonly mediatorRdfMetadataAccumulate: MediatorRdfMetadataAccumulate;\n\n  public constructor(args: IActorQueryOperationPathAltArgs) {\n    super(args, Algebra.types.ALT);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Alt> operation.predicate;\n\n    const subOperations: IQueryOperationResultBindings[] = (await Promise.all(predicate.input\n      .map(subPredicate => this.mediatorQueryOperation.mediate({\n        context,\n        operation: ActorAbstractPath.FACTORY\n          .createPath(operation.subject, subPredicate, operation.object, operation.graph),\n      }))))\n      .map(ActorQueryOperation.getSafeBindings);\n\n    const bindingsStream = new UnionIterator(subOperations.map(op => op.bindingsStream), { autoStart: false });\n    const metadata: (() => Promise<MetadataBindings>) = () =>\n      Promise.all(subOperations.map(output => output.metadata()))\n        .then(subMeta => ActorQueryOperationUnion\n          .unionMetadata(subMeta, true, context, this.mediatorRdfMetadataAccumulate));\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata,\n    };\n  }\n}\n\nexport interface IActorQueryOperationPathAltArgs extends IActorQueryOperationTypedMediatedArgs {\n  mediatorRdfMetadataAccumulate: MediatorRdfMetadataAccumulate;\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Inv Query Operation Actor.\n */\nexport class ActorQueryOperationPathInv extends ActorAbstractPath {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, Algebra.types.INV);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Inv> operation.predicate;\n    const invPath = ActorAbstractPath.FACTORY\n      .createPath(operation.object, predicate.path, operation.subject, operation.graph);\n    return this.mediatorQueryOperation.mediate({ operation: invPath, context });\n  }\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Link Query Operation Actor.\n */\nexport class ActorQueryOperationPathLink extends ActorAbstractPath {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, Algebra.types.LINK);\n  }\n\n  public async runOperation(\n    operationOriginal: Algebra.Path,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Link> operationOriginal.predicate;\n    const operation = Object.assign(ActorAbstractPath.FACTORY.createPattern(\n      operationOriginal.subject,\n      predicate.iri,\n      operationOriginal.object,\n      operationOriginal.graph,\n    ), { metadata: predicate.metadata });\n    return this.mediatorQueryOperation.mediate({ operation, context });\n  }\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n} from '@comunica/bus-query-operation';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Nps Query Operation Actor.\n */\nexport class ActorQueryOperationPathNps extends ActorAbstractPath {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, Algebra.types.NPS);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Nps> operation.predicate;\n    const blank = this.generateVariable(operation);\n\n    const pattern = Object.assign(ActorAbstractPath.FACTORY\n      .createPattern(operation.subject, blank, operation.object, operation.graph), { metadata: predicate.metadata });\n    const output = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation: pattern, context }),\n    );\n\n    // Remove the generated blank nodes from the bindings\n    const bindingsStream = output.bindingsStream\n      .map(bindings => predicate.iris.some(iri => iri.equals(bindings.get(blank))) ? null : bindings.delete(blank));\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: output.metadata,\n    };\n  }\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IQueryOperationResultBindings, Bindings, IQueryOperationResult, IActionContext } from '@comunica/types';\nimport { BufferedIterator, MultiTransformIterator, TransformIterator } from 'asynciterator';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path OneOrMore Query Operation Actor.\n */\nexport class ActorQueryOperationPathOneOrMore extends ActorAbstractPath {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationPathOneOrMoreArgs) {\n    super(args, Algebra.types.ONE_OR_MORE_PATH);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const distinct = await this.isPathArbitraryLengthDistinct(context, operation);\n    if (distinct.operation) {\n      return distinct.operation;\n    }\n\n    context = distinct.context;\n\n    const predicate = <Algebra.OneOrMorePath> operation.predicate;\n\n    if (operation.subject.termType !== 'Variable' && operation.object.termType === 'Variable') {\n      const objectVar = operation.object;\n      const starEval = await this.getObjectsPredicateStarEval(\n        operation.subject,\n        predicate.path,\n        objectVar,\n        operation.graph,\n        context,\n        false,\n        bindingsFactory,\n      );\n      const variables = operation.graph.termType === 'Variable' ? [ objectVar, operation.graph ] : [ objectVar ];\n      return {\n        type: 'bindings',\n        bindingsStream: starEval.bindingsStream,\n        metadata: async() => ({ ...await starEval.metadata(), variables }),\n      };\n    }\n    if (operation.subject.termType === 'Variable' && operation.object.termType === 'Variable') {\n      // Get all the results of subjects with same predicate, but once, then fill in first variable for those\n      const single = ActorAbstractPath.FACTORY.createDistinct(\n        ActorAbstractPath.FACTORY\n          .createPath(operation.subject, operation.predicate.path, operation.object, operation.graph),\n      );\n      const results = ActorQueryOperation.getSafeBindings(\n        await this.mediatorQueryOperation.mediate({ context, operation: single }),\n      );\n      const subjectVar = operation.subject;\n      const objectVar = operation.object;\n\n      const termHashes = {};\n\n      const bindingsStream: MultiTransformIterator<Bindings, Bindings> = new MultiTransformIterator(\n        results.bindingsStream,\n        {\n          multiTransform: (bindings: Bindings) => {\n            const subject = bindings.get(subjectVar);\n            const object = bindings.get(objectVar);\n            const graph = operation.graph.termType === 'Variable' ? bindings.get(operation.graph) : operation.graph;\n            return new TransformIterator<Bindings>(\n              async() => {\n                const it = new BufferedIterator<Bindings>();\n                await this.getSubjectAndObjectBindingsPredicateStar(\n                  subjectVar,\n                  objectVar,\n                  subject!,\n                  object!,\n                  predicate.path,\n                  graph!,\n                  context,\n                  termHashes,\n                  {},\n                  it,\n                  { count: 0 },\n                  bindingsFactory,\n                );\n                return it.transform<Bindings>({\n                  transform(item, next, push) {\n                    if (operation.graph.termType === 'Variable') {\n                      item = item.set(operation.graph, graph!);\n                    }\n                    push(item);\n                    next();\n                  },\n                });\n              },\n              { maxBufferSize: 128 },\n            );\n          },\n          autoStart: false,\n        },\n      );\n      const variables = operation.graph.termType === 'Variable' ?\n          [ subjectVar, objectVar, operation.graph ] :\n          [ subjectVar, objectVar ];\n      return {\n        type: 'bindings',\n        bindingsStream,\n        metadata: async() => ({ ...await results.metadata(), variables }),\n      };\n    }\n    if (operation.subject.termType === 'Variable' && operation.object.termType !== 'Variable') {\n      return <Promise<IQueryOperationResultBindings>> this.mediatorQueryOperation.mediate({\n        context,\n        operation: ActorAbstractPath.FACTORY.createPath(\n          operation.object,\n          ActorAbstractPath.FACTORY.createOneOrMorePath(\n            ActorAbstractPath.FACTORY.createInv(predicate.path),\n          ),\n          operation.subject,\n          operation.graph,\n        ),\n      });\n    }\n    // If (!sVar && !oVar)\n    const variable = this.generateVariable();\n    const results = ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate({\n      context,\n      operation: ActorAbstractPath.FACTORY.createPath(operation.subject, predicate, variable, operation.graph),\n    }));\n    const bindingsStream = results.bindingsStream.transform<Bindings>({\n      filter: item => operation.object.equals(item.get(variable)),\n      transform(item, next, push) {\n        const binding = operation.graph.termType === 'Variable' ?\n          bindingsFactory.bindings([[ operation.graph, item.get(operation.graph)! ]]) :\n          bindingsFactory.bindings();\n        push(binding);\n        next();\n      },\n    });\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: async() => ({\n        ...await results.metadata(),\n        variables: operation.graph.termType === 'Variable' ? [ operation.graph ] : [],\n      }),\n    };\n  }\n}\n\nexport interface IActorQueryOperationPathOneOrMoreArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n} from '@comunica/bus-query-operation';\nimport type { MediatorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { Bindings, IActionContext, IQueryOperationResult, IJoinEntry } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path Seq Query Operation Actor.\n */\nexport class ActorQueryOperationPathSeq extends ActorAbstractPath {\n  public readonly mediatorJoin: MediatorRdfJoin;\n\n  public constructor(args: IActorQueryOperationPathSeq) {\n    super(args, Algebra.types.SEQ);\n  }\n\n  public async runOperation(\n    operationOriginal: Algebra.Path,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const predicate = <Algebra.Seq> operationOriginal.predicate;\n\n    let joiner: RDF.Term = operationOriginal.subject;\n    const generatedVariableNames: RDF.Variable[] = [];\n    const entries: IJoinEntry[] = await Promise.all(predicate.input\n      .map((subPredicate, i) => {\n        const nextJoiner = i === predicate.input.length - 1 ? <RDF.Variable> operationOriginal.object : this.generateVariable(operationOriginal, `b${i}`);\n        const operation = ActorAbstractPath.FACTORY\n          .createPath(joiner, subPredicate, nextJoiner, operationOriginal.graph);\n        const output = this.mediatorQueryOperation.mediate({\n          context,\n          operation,\n        });\n\n        joiner = nextJoiner;\n        if (i < predicate.input.length - 1) {\n          generatedVariableNames.push(nextJoiner);\n        }\n\n        return { output, operation };\n      })\n      .map(async({ output, operation }) => ({\n        output: ActorQueryOperation.getSafeBindings(await output),\n        operation,\n      })));\n\n    const join = ActorQueryOperation.getSafeBindings(await this.mediatorJoin\n      .mediate({ type: 'inner', entries, context }));\n    // Remove the generated variable from the bindings\n    const bindingsStream = join.bindingsStream.transform<Bindings>({\n      transform(item, next, push) {\n        for (const generatedVariableName of generatedVariableNames) {\n          item = item.delete(generatedVariableName);\n        }\n        push(item);\n        next();\n      },\n    });\n\n    // Remove the generated variable from the list of variables\n    return {\n      type: 'bindings',\n      bindingsStream,\n      async metadata() {\n        const joinMetadata = await join.metadata();\n        const variables = joinMetadata.variables.filter(variable => !generatedVariableNames\n          .some(generatedVariableName => generatedVariableName.value === variable.value));\n        return { ...joinMetadata, variables };\n      },\n    };\n  }\n}\n\nexport interface IActorQueryOperationPathSeq extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { Bindings, IQueryOperationResult, IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { MultiTransformIterator, TransformIterator, EmptyIterator, BufferedIterator } from 'asynciterator';\nimport { termToString } from 'rdf-string';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path ZeroOrMore Query Operation Actor.\n */\nexport class ActorQueryOperationPathZeroOrMore extends ActorAbstractPath {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationPathZeroOrMoreArgs) {\n    super(args, Algebra.types.ZERO_OR_MORE_PATH);\n  }\n\n  public async runOperation(operation: Algebra.Path, context: IActionContext): Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n\n    const distinct = await this.isPathArbitraryLengthDistinct(context, operation);\n    if (distinct.operation) {\n      return distinct.operation;\n    }\n\n    context = distinct.context;\n\n    const predicate = <Algebra.ZeroOrMorePath> operation.predicate;\n    const sources = this.getPathSources(predicate);\n\n    const sVar = operation.subject.termType === 'Variable';\n    const oVar = operation.object.termType === 'Variable';\n\n    if (operation.subject.termType === 'Variable' && operation.object.termType === 'Variable') {\n      // Query ?s ?p ?o, to get all possible namedNodes in de the db\n      const predVar = this.generateVariable(operation);\n      const single = this.assignPatternSources(ActorAbstractPath.FACTORY\n        .createPattern(operation.subject, predVar, operation.object, operation.graph), sources);\n      const results = ActorQueryOperation.getSafeBindings(\n        await this.mediatorQueryOperation.mediate({ context, operation: single }),\n      );\n      const subjectVar = operation.subject;\n      const objectVar = operation.object;\n\n      // Set with all namedNodes we have already started a predicate* search from\n      const entities: Set<string> = new Set();\n\n      const termHashes = {};\n\n      const bindingsStream: MultiTransformIterator<Bindings, Bindings> = new MultiTransformIterator(\n        results.bindingsStream,\n        {\n          multiTransform: (bindings: Bindings) => {\n            // Get the subject and object of the triples (?s ?p ?o) and extract graph if it was a variable\n            const subject: RDF.Term = bindings.get(subjectVar)!;\n            const object: RDF.Term = bindings.get(objectVar)!;\n            const graph: RDF.Term = operation.graph.termType === 'Variable' ?\n              bindings.get(operation.graph)! :\n              operation.graph;\n            // Make a hash of namedNode + graph to remember from where we already started a search\n            const subjectGraphHash = termToString(subject) + termToString(graph);\n            const objectGraphHash = termToString(object) + termToString(graph);\n            return new TransformIterator<Bindings>(\n              async() => {\n                // If no new namedNodes in this triple, return nothing\n                if (entities.has(subjectGraphHash) && entities.has(objectGraphHash)) {\n                  return new EmptyIterator();\n                }\n                // Set up an iterator to which getSubjectAndObjectBindingsPredicateStar will push solutions\n                const it = new BufferedIterator<Bindings>();\n                const counter = { count: 0 };\n                // If not started from this namedNode (subject in triple) in this graph, start a search\n                if (!entities.has(subjectGraphHash)) {\n                  entities.add(subjectGraphHash);\n                  await this.getSubjectAndObjectBindingsPredicateStar(\n                    subjectVar,\n                    objectVar,\n                    subject,\n                    subject,\n                    predicate.path,\n                    graph,\n                    context,\n                    termHashes,\n                    {},\n                    it,\n                    counter,\n                    bindingsFactory,\n                  );\n                }\n                // If not started from this namedNode (object in triple) in this graph, start a search\n                if (!entities.has(objectGraphHash)) {\n                  entities.add(objectGraphHash);\n                  await this.getSubjectAndObjectBindingsPredicateStar(\n                    subjectVar,\n                    objectVar,\n                    object,\n                    object,\n                    predicate.path,\n                    graph,\n                    context,\n                    termHashes,\n                    {},\n                    it,\n                    counter,\n                    bindingsFactory,\n                  );\n                }\n                return it.transform<Bindings>({\n                  transform(item, next, push) {\n                    // If the graph was a variable, fill in it's binding (we got it from the ?s ?p ?o binding)\n                    if (operation.graph.termType === 'Variable') {\n                      item = item.set(operation.graph, graph);\n                    }\n                    push(item);\n                    next();\n                  },\n                });\n              },\n            );\n          },\n        },\n      );\n      const variables: RDF.Variable[] = operation.graph.termType === 'Variable' ?\n          [ subjectVar, operation.object, operation.graph ] :\n          [ subjectVar, operation.object ];\n      return {\n        type: 'bindings',\n        bindingsStream,\n        metadata: async() => ({ ...await results.metadata(), variables }),\n      };\n    }\n    if (!sVar && !oVar) {\n      const variable = this.generateVariable();\n      const starEval = await this.getObjectsPredicateStarEval(\n        operation.subject,\n        predicate.path,\n        variable,\n        operation.graph,\n        context,\n        true,\n        bindingsFactory,\n      );\n      // Check this\n      const bindingsStream = starEval.bindingsStream.transform<Bindings>({\n        filter: item => operation.object.equals(item.get(variable)),\n        transform(item, next, push) {\n          // Return graph binding if graph was a variable, otherwise empty binding\n          const binding = operation.graph.termType === 'Variable' ?\n            bindingsFactory.bindings([[ operation.graph, item.get(operation.graph)! ]]) :\n            bindingsFactory.bindings();\n          push(binding);\n          next();\n        },\n      });\n      return {\n        type: 'bindings',\n        bindingsStream,\n        metadata: async() => ({\n          ...await starEval.metadata(),\n          variables: operation.graph.termType === 'Variable' ? [ operation.graph ] : [],\n        }),\n      };\n    }\n    // If (sVar || oVar)\n    const subject = sVar ? operation.object : operation.subject;\n    const value: RDF.Variable = <RDF.Variable> (sVar ? operation.subject : operation.object);\n    const pred = sVar ? ActorAbstractPath.FACTORY.createInv(predicate.path) : predicate.path;\n    const starEval = await this.getObjectsPredicateStarEval(\n      subject,\n      pred,\n      value,\n      operation.graph,\n      context,\n      true,\n      bindingsFactory,\n    );\n    const variables: RDF.Variable[] = operation.graph.termType === 'Variable' ? [ value, operation.graph ] : [ value ];\n    return {\n      type: 'bindings',\n      bindingsStream: starEval.bindingsStream,\n      metadata: async() => ({ ...await starEval.metadata(), variables }),\n    };\n  }\n}\n\nexport interface IActorQueryOperationPathZeroOrMoreArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import { ActorAbstractPath } from '@comunica/actor-abstract-path';\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type { Bindings, IQueryOperationResult, IActionContext, BindingsStream } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport {\n  SingletonIterator,\n  UnionIterator,\n} from 'asynciterator';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Path ZeroOrOne Query Operation Actor.\n */\nexport class ActorQueryOperationPathZeroOrOne extends ActorAbstractPath {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationPathZeroOrOneArgs) {\n    super(args, Algebra.types.ZERO_OR_ONE_PATH);\n  }\n\n  public async runOperation(\n    operation: Algebra.Path,\n    context: IActionContext,\n  ): Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const predicate = <Algebra.ZeroOrOnePath> operation.predicate;\n    const sources = this.getPathSources(predicate);\n\n    const extra: Bindings[] = [];\n\n    // Both subject and object non-variables\n    if (operation.subject.termType !== 'Variable' &&\n      operation.object.termType !== 'Variable' &&\n      operation.subject.equals(operation.object)) {\n      return {\n        type: 'bindings',\n        bindingsStream: new SingletonIterator<RDF.Bindings>(bindingsFactory.bindings()),\n        metadata: () => Promise.resolve({\n          state: new MetadataValidationState(),\n          cardinality: { type: 'exact', value: 1 },\n          canContainUndefs: false,\n          variables: [],\n        }),\n      };\n    }\n\n    // Check if we require a distinct path operation\n    const distinct = await this.isPathArbitraryLengthDistinct(context, operation);\n    if (distinct.operation) {\n      return distinct.operation;\n    }\n    context = distinct.context;\n\n    // Create an operator that resolve to the \"One\" part\n    const bindingsOne = ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate({\n      context,\n      operation: ActorAbstractPath.FACTORY\n        .createPath(operation.subject, predicate.path, operation.object, operation.graph),\n    }));\n\n    // Determine the bindings stream based on the variable-ness of subject and object\n    let bindingsStream: BindingsStream;\n    if (operation.subject.termType === 'Variable' && operation.object.termType === 'Variable') {\n      // Both subject and object are variables\n      // To determine the \"Zero\" part, we\n      // query ?s ?p ?o. FILTER ?s = ?0, to get all possible namedNodes in de the db\n      const varP = this.generateVariable(operation);\n      const bindingsZero = ActorQueryOperation.getSafeBindings(\n        await this.mediatorQueryOperation.mediate({\n          context,\n          operation: ActorAbstractPath.FACTORY.createFilter(\n            this.assignPatternSources(ActorAbstractPath.FACTORY\n              .createPattern(operation.subject, varP, operation.object, operation.graph), sources),\n            ActorAbstractPath.FACTORY.createOperatorExpression('=', [\n              ActorAbstractPath.FACTORY.createTermExpression(operation.subject),\n              ActorAbstractPath.FACTORY.createTermExpression(operation.object),\n            ]),\n          ),\n        }),\n      ).bindingsStream.map(bindings => bindings.delete(varP));\n      bindingsStream = new UnionIterator([\n        bindingsZero,\n        bindingsOne.bindingsStream,\n      ], { autoStart: false });\n    } else {\n      // If subject or object is not a variable, then determining the \"Zero\" part is simple.\n      if (operation.subject.termType === 'Variable') {\n        extra.push(bindingsFactory.bindings([[ operation.subject, operation.object ]]));\n      }\n      if (operation.object.termType === 'Variable') {\n        extra.push(bindingsFactory.bindings([[ operation.object, operation.subject ]]));\n      }\n\n      bindingsStream = bindingsOne.bindingsStream.prepend(extra);\n    }\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: bindingsOne.metadata,\n    };\n  }\n}\nexport interface IActorQueryOperationPathZeroOrOneArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport { BlankNodeBindingsScoped } from '@comunica/data-factory';\nimport type {\n  Bindings,\n  BindingsStream,\n  IActionContext,\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A comunica Project Query Operation Actor.\n */\nexport class ActorQueryOperationProject extends ActorQueryOperationTypedMediated<Algebra.Project> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'project');\n  }\n\n  public async testOperation(_operation: Algebra.Project, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Project, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Resolve the input\n    const output: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation: operation.input, context }),\n    );\n\n    // Find all variables that should be deleted from the input stream.\n    const outputMetadata = await output.metadata();\n    const variables = operation.variables;\n    const deleteVariables = outputMetadata.variables\n      .filter(variable => !variables.some(subVariable => variable.value === subVariable.value));\n\n    // Error if there are variables that are not bound in the input stream.\n    const missingVariables = variables\n      .filter(variable => !outputMetadata.variables.some(subVariable => variable.value === subVariable.value));\n    if (missingVariables.length > 0) {\n      outputMetadata.canContainUndefs = true;\n    }\n\n    // Make sure the project variables are the only variables that are present in the bindings.\n    let bindingsStream: BindingsStream = deleteVariables.length === 0 ?\n      output.bindingsStream :\n      output.bindingsStream.map((bindings: Bindings) => {\n        for (const deleteVariable of deleteVariables) {\n          bindings = bindings.delete(deleteVariable);\n        }\n        return bindings;\n      });\n\n    // Make sure that blank nodes with same labels are not reused over different bindings, as required by SPARQL 1.1.\n    // Required for the BNODE() function: https://www.w3.org/TR/sparql11-query/#func-bnode\n    // When we have a scoped blank node, make sure the skolemized value is maintained.\n    let blankNodeCounter = 0;\n    bindingsStream = bindingsStream.map((bindings: Bindings) => {\n      blankNodeCounter++;\n      const scopedBlankNodesCache = new Map<string, RDF.BlankNode>();\n      return bindings.map((term) => {\n        if (term instanceof BlankNodeBindingsScoped) {\n          let scopedBlankNode = scopedBlankNodesCache.get(term.value);\n          if (!scopedBlankNode) {\n            scopedBlankNode = DF.blankNode(`${term.value}${blankNodeCounter}`);\n            scopedBlankNodesCache.set(term.value, scopedBlankNode);\n          }\n          return scopedBlankNode;\n        }\n        return term;\n      });\n    });\n\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: async() => ({ ...outputMetadata, variables }),\n    };\n  }\n}\n","import type { MediatorHashBindings } from '@comunica/bus-hash-bindings';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  Bindings,\n  BindingsStream,\n  IActionContext,\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n} from '@comunica/types';\nimport { LRUCache } from 'lru-cache';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Reduced Hash Query Operation Actor.\n */\nexport class ActorQueryOperationReducedHash extends ActorQueryOperationTypedMediated<Algebra.Reduced> {\n  public readonly mediatorHashBindings: MediatorHashBindings;\n  public readonly cacheSize: number;\n\n  public constructor(args: IActorQueryOperationReducedHashArgs) {\n    super(args, 'reduced');\n  }\n\n  public async testOperation(_operation: Algebra.Reduced, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Reduced, context: IActionContext): Promise<IQueryOperationResult> {\n    const output: IQueryOperationResultBindings = ActorQueryOperation.getSafeBindings(\n      await this.mediatorQueryOperation.mediate({ operation: operation.input, context }),\n    );\n    const bindingsStream: BindingsStream = output.bindingsStream.filter(await this.newHashFilter(context));\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata: output.metadata,\n    };\n  }\n\n  /**\n   * Create a new distinct filter function.\n   * This will maintain an internal hash datastructure so that every bindings object only returns true once.\n   * @param context The action context.\n   * @return {(bindings: Bindings) => boolean} A distinct filter for bindings.\n   */\n  public async newHashFilter(context: IActionContext): Promise<(bindings: Bindings) => boolean> {\n    const { hashFunction } = await this.mediatorHashBindings.mediate({ allowHashCollisions: true, context });\n    const hashes = new LRUCache<string, boolean>({ max: this.cacheSize });\n    return (bindings: Bindings) => {\n      const hash: string = hashFunction(bindings);\n      if (hashes.has(hash)) {\n        return false;\n      }\n      hashes.set(hash, true);\n      return true;\n    };\n  }\n}\n\nexport interface IActorQueryOperationReducedHashArgs extends IActorQueryOperationTypedMediatedArgs {\n  mediatorHashBindings: MediatorHashBindings;\n  /**\n   * @range {integer}\n   * @default {100}\n   */\n  cacheSize: number;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { MediatorQuerySourceIdentify } from '@comunica/bus-query-source-identify';\nimport type { IActorTest } from '@comunica/core';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type { IActionContext, IQueryOperationResult, IQueryOperationResultBindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { SingletonIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Service Query Operation Actor.\n * It unwraps the SERVICE operation and executes it on the given source.\n */\nexport class ActorQueryOperationService extends ActorQueryOperationTypedMediated<Algebra.Service> {\n  public readonly forceSparqlEndpoint: boolean;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n  public readonly mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n\n  public constructor(args: IActorQueryOperationServiceArgs) {\n    super(args, 'service');\n  }\n\n  public async testOperation(operation: Algebra.Service, _context: IActionContext): Promise<IActorTest> {\n    if (operation.name.termType !== 'NamedNode') {\n      throw new Error(`${this.name} can only query services by IRI, while a ${operation.name.termType} was given.`);\n    }\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Service, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Identify the SERVICE target as query source\n    const { querySource } = await this.mediatorQuerySourceIdentify.mediate({\n      querySourceUnidentified: {\n        value: operation.name.value,\n        type: this.forceSparqlEndpoint ? 'sparql' : undefined,\n      },\n      context,\n    });\n\n    // Attach the source to the operation, and execute\n    let output: IQueryOperationResultBindings;\n    try {\n      output = ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate({\n        operation: ActorQueryOperation.assignOperationSource(operation.input, querySource),\n        context,\n      }));\n    } catch (error: unknown) {\n      if (operation.silent) {\n        // Emit a single empty binding\n        const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n        output = {\n          bindingsStream: new SingletonIterator<RDF.Bindings>(bindingsFactory.bindings()),\n          type: 'bindings',\n          metadata: async() => ({\n            state: new MetadataValidationState(),\n            cardinality: { type: 'exact', value: 1 },\n            canContainUndefs: false,\n            variables: [],\n          }),\n        };\n        this.logWarn(context, `An error occurred when executing a SERVICE clause: ${(<Error> error).message}`);\n      } else {\n        throw error;\n      }\n    }\n\n    return output;\n  }\n}\n\nexport interface IActorQueryOperationServiceArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * If the SERVICE target should be assumed to be a SPARQL endpoint.\n   * @default {false}\n   */\n  forceSparqlEndpoint: boolean;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n  /**\n   * The mediator for identifying query sources.\n   */\n  mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type {\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n  IQueryOperationResultQuads,\n  IQueryOperationResultStream,\n  IMetadata,\n  IActionContext,\n} from '@comunica/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Slice Query Operation Actor.\n */\nexport class ActorQueryOperationSlice extends ActorQueryOperationTypedMediated<Algebra.Slice> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'slice');\n  }\n\n  public async testOperation(_operation: Algebra.Slice, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Slice, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Add limit indicator to the context, which can be used for query planning\n    // eslint-disable-next-line unicorn/explicit-length-check\n    if (operation.length) {\n      context = context.set(KeysQueryOperation.limitIndicator, operation.length);\n    }\n\n    // Resolve the input\n    const output: IQueryOperationResult = await this.mediatorQueryOperation\n      .mediate({ operation: operation.input, context });\n\n    if (output.type === 'bindings') {\n      const bindingsStream = this.sliceStream(output.bindingsStream, operation);\n      return <IQueryOperationResultBindings> {\n        type: 'bindings',\n        bindingsStream,\n        metadata: this.sliceMetadata(output, operation),\n      };\n    }\n\n    if (output.type === 'quads') {\n      const quadStream = this.sliceStream(output.quadStream, operation);\n      return <IQueryOperationResultQuads> {\n        type: 'quads',\n        quadStream,\n        metadata: this.sliceMetadata(output, operation),\n      };\n    }\n\n    // In all other cases, return the result as-is.\n    return output;\n  }\n\n  // Slice the stream based on the pattern values\n  private sliceStream(stream: AsyncIterator<any>, pattern: Algebra.Slice): AsyncIterator<any> {\n    // eslint-disable-next-line unicorn/explicit-length-check\n    const hasLength: boolean = Boolean(pattern.length) || pattern.length === 0;\n    const { start } = pattern;\n    const end = hasLength ? pattern.start + pattern.length! - 1 : Number.POSITIVE_INFINITY;\n    return stream.transform({ offset: start, limit: Math.max(end - start + 1, 0), autoStart: false });\n  }\n\n  // If we find metadata, apply slicing on the total number of items\n  private sliceMetadata(\n    output: IQueryOperationResultStream<any, any>,\n    pattern: Algebra.Slice,\n  ): () => Promise<IMetadata<any>> {\n    // eslint-disable-next-line unicorn/explicit-length-check\n    const hasLength: boolean = Boolean(pattern.length) || pattern.length === 0;\n    return () => (<() => Promise<IMetadata<any>>>output.metadata)()\n      .then((subMetadata) => {\n        const cardinality = { ...subMetadata.cardinality };\n        if (Number.isFinite(cardinality.value)) {\n          cardinality.value = Math.max(0, cardinality.value - pattern.start);\n          if (hasLength) {\n            cardinality.value = Math.min(cardinality.value, pattern.length!);\n          }\n        }\n        return { ...subMetadata, cardinality };\n      });\n  }\n}\n","import type { IActionQueryOperation, IActorQueryOperationArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport { getMetadataBindings, getMetadataQuads } from '@comunica/metadata';\nimport type {\n  IPhysicalQueryPlanLogger,\n  IQueryOperationResult,\n  IQuerySourceWrapper,\n} from '@comunica/types';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Source Query Operation Actor.\n */\nexport class ActorQueryOperationSource extends ActorQueryOperation {\n  public constructor(args: IActorQueryOperationArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionQueryOperation): Promise<IActorTest> {\n    if (!ActorQueryOperation.getOperationSource(action.operation)) {\n      throw new Error(`Actor ${this.name} requires an operation with source annotation.`);\n    }\n    return { httpRequests: 1 };\n  }\n\n  public async run(action: IActionQueryOperation): Promise<IQueryOperationResult> {\n    // Log to physical plan\n    const physicalQueryPlanLogger: IPhysicalQueryPlanLogger | undefined = action.context\n      .get(KeysInitQuery.physicalQueryPlanLogger);\n    if (physicalQueryPlanLogger) {\n      physicalQueryPlanLogger.logOperation(\n        action.operation.type,\n        undefined,\n        action.operation,\n        action.context.get(KeysInitQuery.physicalQueryPlanNode),\n        this.name,\n        {},\n      );\n      action.context = action.context.set(KeysInitQuery.physicalQueryPlanNode, action.operation);\n    }\n\n    const sourceWrapper: IQuerySourceWrapper = ActorQueryOperation.getOperationSource(action.operation)!;\n    const mergedContext = sourceWrapper.context ? action.context.merge(sourceWrapper.context) : action.context;\n\n    // Check if the operation is a CONSTRUCT query\n    // We recurse because it may be wrapped in other operations such as SLICE and FROM\n    let construct = false;\n    Util.recurseOperation(action.operation, {\n      construct(): boolean {\n        construct = true;\n        return false;\n      },\n    });\n    // If so, delegate to queryQuads\n    if (construct) {\n      const quadStream = sourceWrapper.source.queryQuads(action.operation, mergedContext);\n      const metadata = getMetadataQuads(quadStream);\n      return {\n        type: 'quads',\n        quadStream,\n        metadata,\n      };\n    }\n\n    // eslint-disable-next-line ts/switch-exhaustiveness-check\n    switch (action.operation.type) {\n      case Algebra.types.ASK:\n        return {\n          type: 'boolean',\n          execute: () => sourceWrapper.source.queryBoolean(<Algebra.Ask>action.operation, mergedContext),\n        };\n      case Algebra.types.COMPOSITE_UPDATE:\n      case Algebra.types.DELETE_INSERT:\n      case Algebra.types.LOAD:\n      case Algebra.types.CLEAR:\n      case Algebra.types.CREATE:\n      case Algebra.types.DROP:\n      case Algebra.types.ADD:\n      case Algebra.types.MOVE:\n      case Algebra.types.COPY:\n        return {\n          type: 'void',\n          execute: () => sourceWrapper.source.queryVoid(<Algebra.Update>action.operation, mergedContext),\n        };\n    }\n\n    const bindingsStream = sourceWrapper.source.queryBindings(action.operation, mergedContext);\n    const metadata = getMetadataBindings(bindingsStream);\n    return {\n      type: 'bindings',\n      bindingsStream,\n      metadata,\n    };\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { MediatorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type { IActorTest } from '@comunica/core';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type {\n  BindingsStream,\n  IQueryOperationResultBindings,\n  IActionContext,\n  IQueryOperationResult,\n  MetadataBindings,\n  MetadataQuads,\n  IQueryOperationResultQuads,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { UnionIterator } from 'asynciterator';\nimport { uniqTerms } from 'rdf-terms';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Union Query Operation Actor.\n */\nexport class ActorQueryOperationUnion extends ActorQueryOperationTypedMediated<Algebra.Union> {\n  public readonly mediatorRdfMetadataAccumulate: MediatorRdfMetadataAccumulate;\n\n  public constructor(args: IActorQueryOperationUnionArgs) {\n    super(args, 'union');\n  }\n\n  /**\n   * Takes the union of the given double array variables.\n   * Uniqueness is guaranteed.\n   * @param {string[][]} variables Double array of variables to take the union of.\n   * @return {string[]} The union of the given variables.\n   */\n  public static unionVariables(variables: RDF.Variable[][]): RDF.Variable[] {\n    return uniqTerms(variables.flat());\n  }\n\n  /**\n   * Takes the union of the given metadata array.\n   * It will ensure that the cardinality metadata value is properly calculated.\n   * @param {{[p: string]: any}[]} metadatas Array of metadata.\n   * @param bindings If the union of the variables field should also be taken.\n   * @param context The action context\n   * @param mediatorRdfMetadataAccumulate Mediator for metadata accumulation\n   * @return {{[p: string]: any}} Union of the metadata.\n   */\n  public static async unionMetadata<\n    Bindings extends boolean,\n    M extends (Bindings extends true ? MetadataBindings : MetadataQuads),\n  >(\n    metadatas: M[],\n    bindings: Bindings,\n    context: IActionContext,\n    mediatorRdfMetadataAccumulate: MediatorRdfMetadataAccumulate,\n    // eslint-disable-next-line function-paren-newline\n  ): Promise<M> {\n    let accumulatedMetadata: M = <M> (await mediatorRdfMetadataAccumulate\n      .mediate({ mode: 'initialize', context })).metadata;\n\n    // Accumulate cardinality\n    for (const appendingMetadata of metadatas) {\n      accumulatedMetadata = <any> {\n        ...appendingMetadata,\n        ...(await mediatorRdfMetadataAccumulate\n          .mediate({\n            mode: 'append',\n            accumulatedMetadata: <any> accumulatedMetadata,\n            appendingMetadata: <any> appendingMetadata,\n            context,\n          })).metadata,\n      };\n    }\n\n    // Create new metadata state\n    accumulatedMetadata.state = new MetadataValidationState();\n\n    // Propagate metadata invalidations\n    const invalidateListener = (): void => accumulatedMetadata.state.invalidate();\n    for (const metadata of metadatas) {\n      metadata.state.addInvalidateListener(invalidateListener);\n    }\n\n    // Union variables\n    if (bindings) {\n      accumulatedMetadata.variables = ActorQueryOperationUnion\n        .unionVariables(metadatas.map(metadata => metadata.variables));\n    }\n\n    return accumulatedMetadata;\n  }\n\n  public async testOperation(_operation: Algebra.Union, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Union, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Determine the type over which we are taking a union\n    const outputsRaw = await Promise.all(operation.input\n      .map(subOperation => this.mediatorQueryOperation.mediate({ operation: subOperation, context })));\n    let outputType: string | undefined;\n    for (const output of outputsRaw) {\n      if (outputType === undefined) {\n        outputType = output.type;\n      } else if (outputType !== output.type) {\n        throw new Error(`Unable to union ${outputType} and ${output.type}`);\n      }\n    }\n\n    // Handle bindings\n    if (outputType === 'bindings' || operation.input.length === 0) {\n      const outputs: IQueryOperationResultBindings[] = outputsRaw.map(ActorQueryOperation.getSafeBindings);\n\n      const bindingsStream: BindingsStream = new UnionIterator(outputs.map(\n        (output: IQueryOperationResultBindings) => output.bindingsStream,\n      ), { autoStart: false });\n\n      const metadata: () => Promise<MetadataBindings> = () => Promise.all(outputs.map(output => output.metadata()))\n        .then(subMeta => ActorQueryOperationUnion\n          .unionMetadata(subMeta, true, context, this.mediatorRdfMetadataAccumulate));\n      return { type: 'bindings', bindingsStream, metadata };\n    }\n\n    // Handle quads\n    if (outputType === 'quads') {\n      const outputs: IQueryOperationResultQuads[] = outputsRaw.map(ActorQueryOperation.getSafeQuads);\n\n      const quadStream = new UnionIterator(outputs.map(\n        (output: IQueryOperationResultQuads) => output.quadStream,\n      ), { autoStart: false });\n\n      const metadata: () => Promise<MetadataQuads> = () => Promise.all(outputs.map(output => output.metadata()))\n        .then(subMeta => ActorQueryOperationUnion\n          .unionMetadata(subMeta, false, context, this.mediatorRdfMetadataAccumulate));\n      return { type: 'quads', quadStream, metadata };\n    }\n\n    // Throw otherwise\n    throw new Error(`Unable to union ${outputType}`);\n  }\n}\n\nexport interface IActorQueryOperationUnionArgs extends IActorQueryOperationTypedMediatedArgs {\n  mediatorRdfMetadataAccumulate: MediatorRdfMetadataAccumulate;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type {\n  MediatorRdfUpdateQuads,\n} from '@comunica/bus-rdf-update-quads';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor\n * that handles SPARQL clear operations.\n */\nexport class ActorQueryOperationClear extends ActorQueryOperationTypedMediated<Algebra.Clear> {\n  public readonly mediatorUpdateQuads: MediatorRdfUpdateQuads;\n\n  public constructor(args: IActorQueryOperationClearArgs) {\n    super(args, 'clear');\n  }\n\n  public async testOperation(operation: Algebra.Clear, context: IActionContext): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Clear, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Delegate to update-quads bus\n    let graphs: RDF.DefaultGraph | 'NAMED' | 'ALL' | RDF.NamedNode[];\n    if (operation.source === 'DEFAULT') {\n      graphs = DF.defaultGraph();\n    } else if (typeof operation.source === 'string') {\n      graphs = operation.source;\n    } else {\n      graphs = [ operation.source ];\n    }\n    const { execute } = await this.mediatorUpdateQuads.mediate({\n      deleteGraphs: {\n        graphs,\n        requireExistence: !operation.silent,\n        dropGraphs: false,\n      },\n      context,\n    });\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n\nexport interface IActorQueryOperationClearArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * The RDF Update Quads mediator\n   */\n  mediatorUpdateQuads: MediatorRdfUpdateQuads;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Update CompositeUpdate Query Operation Actor.\n */\nexport class ActorQueryOperationUpdateCompositeUpdate\n  extends ActorQueryOperationTypedMediated<Algebra.CompositeUpdate> {\n  public constructor(args: IActorQueryOperationTypedMediatedArgs) {\n    super(args, 'compositeupdate');\n  }\n\n  public async testOperation(\n    operation: Algebra.CompositeUpdate,\n    context: IActionContext,\n  ): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operationOriginal: Algebra.CompositeUpdate, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const execute = (): Promise<void> => (async(): Promise<void> => {\n      // Execute update operations in sequence\n      for (const operation of operationOriginal.updates) {\n        const subResult = ActorQueryOperation\n          .getSafeVoid(await this.mediatorQueryOperation.mediate({ operation, context }));\n        await subResult.execute();\n      }\n    })();\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { MediatorRdfUpdateQuads } from '@comunica/bus-rdf-update-quads';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor that\n * handles SPARQL create operations.\n */\nexport class ActorQueryOperationCreate extends ActorQueryOperationTypedMediated<Algebra.Create> {\n  public readonly mediatorUpdateQuads: MediatorRdfUpdateQuads;\n\n  public constructor(args: IActorQueryOperationCreateArgs) {\n    super(args, 'create');\n  }\n\n  public async testOperation(operation: Algebra.Create, context: IActionContext): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Create, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Delegate to update-quads bus\n    const { execute } = await this.mediatorUpdateQuads.mediate({\n      createGraphs: {\n        graphs: [ operation.source ],\n        requireNonExistence: !operation.silent,\n      },\n      context,\n    });\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n\nexport interface IActorQueryOperationCreateArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * The RDF Update Quads mediator\n   */\n  mediatorUpdateQuads: MediatorRdfUpdateQuads;\n}\n","import { BindingsToQuadsIterator } from '@comunica/actor-query-operation-construct';\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport {\n  ActorQueryOperation,\n  ActorQueryOperationTypedMediated,\n} from '@comunica/bus-query-operation';\nimport type { MediatorRdfUpdateQuads } from '@comunica/bus-rdf-update-quads';\nimport type { IActorTest } from '@comunica/core';\nimport type { IQueryOperationResult, BindingsStream, IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { ArrayIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Update DeleteInsert Query Operation Actor.\n */\nexport class ActorQueryOperationUpdateDeleteInsert extends ActorQueryOperationTypedMediated<Algebra.DeleteInsert> {\n  public readonly mediatorUpdateQuads: MediatorRdfUpdateQuads;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  protected blankNodeCounter = 0;\n\n  public constructor(args: IActorQueryOperationUpdateDeleteInsertArgs) {\n    super(args, 'deleteinsert');\n  }\n\n  public async testOperation(\n    operation: Algebra.DeleteInsert,\n    context: IActionContext,\n  ): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.DeleteInsert, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    // Evaluate the where clause\n    const whereBindings: BindingsStream = operation.where ?\n      ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation\n        .mediate({ operation: operation.where, context })).bindingsStream :\n      new ArrayIterator<RDF.Bindings>([ bindingsFactory.bindings() ], { autoStart: false });\n\n    // Construct triples using the result based on the pattern.\n    let quadStreamInsert: AsyncIterator<RDF.Quad> | undefined;\n    let quadStreamDelete: AsyncIterator<RDF.Quad> | undefined;\n    if (operation.insert) {\n      // Localize blank nodes in pattern, to avoid clashes across different INSERT/DELETE calls\n      quadStreamInsert = new BindingsToQuadsIterator(\n        operation.insert.map(BindingsToQuadsIterator.localizeQuad.bind(null, this.blankNodeCounter)),\n        whereBindings.clone(),\n      );\n      this.blankNodeCounter++;\n    }\n    if (operation.delete) {\n      // Localize blank nodes in pattern, to avoid clashes across different INSERT/DELETE calls\n      quadStreamDelete = new BindingsToQuadsIterator(\n        operation.delete.map(BindingsToQuadsIterator.localizeQuad.bind(null, this.blankNodeCounter)),\n        whereBindings.clone(),\n      );\n      this.blankNodeCounter++;\n    }\n\n    // Evaluate the required modifications\n    const { execute } = await this.mediatorUpdateQuads.mediate({\n      quadStreamInsert,\n      quadStreamDelete,\n      context,\n    });\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n\nexport interface IActorQueryOperationUpdateDeleteInsertArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * The RDF Update Quads mediator\n   */\n  mediatorUpdateQuads: MediatorRdfUpdateQuads;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { MediatorRdfUpdateQuads } from '@comunica/bus-rdf-update-quads';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor\n * that handles SPARQL drop operations.\n */\nexport class ActorQueryOperationDrop extends ActorQueryOperationTypedMediated<Algebra.Drop> {\n  public readonly mediatorUpdateQuads: MediatorRdfUpdateQuads;\n\n  public constructor(args: IActorQueryOperationDropArgs) {\n    super(args, 'drop');\n  }\n\n  public async testOperation(operation: Algebra.Drop, context: IActionContext): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Drop, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Delegate to update-quads bus\n    let graphs: RDF.DefaultGraph | 'NAMED' | 'ALL' | RDF.NamedNode[];\n    if (operation.source === 'DEFAULT') {\n      graphs = DF.defaultGraph();\n    } else if (typeof operation.source === 'string') {\n      graphs = operation.source;\n    } else {\n      graphs = [ operation.source ];\n    }\n    const { execute } = await this.mediatorUpdateQuads.mediate({\n      deleteGraphs: {\n        graphs,\n        requireExistence: !operation.silent,\n        dropGraphs: true,\n      },\n      context,\n    });\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n\nexport interface IActorQueryOperationDropArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * The RDF Update Quads mediator\n   */\n  mediatorUpdateQuads: MediatorRdfUpdateQuads;\n}\n","import type { IActorQueryOperationTypedMediatedArgs } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, ActorQueryOperationTypedMediated } from '@comunica/bus-query-operation';\nimport type { MediatorQuerySourceIdentify } from '@comunica/bus-query-source-identify';\nimport type { MediatorRdfUpdateQuads } from '@comunica/bus-rdf-update-quads';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext, IQueryOperationResult } from '@comunica/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { Factory } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A [Query Operation](https://github.com/comunica/comunica/tree/master/packages/bus-query-operation) actor\n * that handles SPARQL load operations.\n */\nexport class ActorQueryOperationLoad extends ActorQueryOperationTypedMediated<Algebra.Load> {\n  public readonly mediatorUpdateQuads: MediatorRdfUpdateQuads;\n  public readonly mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n\n  private readonly factory: Factory;\n  private readonly constructOperation: Algebra.Construct;\n\n  public constructor(args: IActorQueryOperationLoadArgs) {\n    super(args, 'load');\n    this.factory = new Factory();\n  }\n\n  public async testOperation(operation: Algebra.Load, context: IActionContext): Promise<IActorTest> {\n    ActorQueryOperation.throwOnReadOnly(context);\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Load, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    // Determine query source\n    let subContext = context;\n    if (operation.silent) {\n      subContext = subContext.set(KeysInitQuery.lenient, true);\n    }\n    const { querySource } = await this.mediatorQuerySourceIdentify.mediate({\n      querySourceUnidentified: { value: operation.source.value },\n      context: subContext,\n    });\n\n    // Create CONSTRUCT query on the given source\n    const output = ActorQueryOperationLoad.getSafeQuads(await this.mediatorQueryOperation.mediate({\n      operation: this.factory.createConstruct(\n        ActorQueryOperation.assignOperationSource(\n          this.factory.createPattern(DF.variable('s'), DF.variable('p'), DF.variable('o')),\n          querySource,\n        ),\n        [ this.factory.createPattern(DF.variable('s'), DF.variable('p'), DF.variable('o')) ],\n      ),\n      context: subContext,\n    }));\n\n    // Determine quad stream to insert\n    let quadStream = output.quadStream;\n    if (operation.destination) {\n      quadStream = quadStream.map(quad => DF.quad(quad.subject, quad.predicate, quad.object, operation.destination));\n    }\n\n    // Insert quad stream\n    const { execute } = await this.mediatorUpdateQuads.mediate({\n      quadStreamInsert: quadStream,\n      context,\n    });\n\n    return {\n      type: 'void',\n      execute,\n    };\n  }\n}\n\nexport interface IActorQueryOperationLoadArgs extends IActorQueryOperationTypedMediatedArgs {\n  /**\n   * The RDF Update Quads mediator\n   */\n  mediatorUpdateQuads: MediatorRdfUpdateQuads;\n  /**\n   * Mediator for identifying load sources.\n   */\n  mediatorQuerySourceIdentify: MediatorQuerySourceIdentify;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActionQueryOperation } from '@comunica/bus-query-operation';\nimport { ActorQueryOperationTyped } from '@comunica/bus-query-operation';\nimport type { IActorArgs, IActorTest } from '@comunica/core';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type {\n  IQueryOperationResult,\n  BindingsStream,\n  Bindings,\n  IActionContext,\n  MetadataBindings,\n} from '@comunica/types';\nimport { ArrayIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * A comunica Values Query Operation Actor.\n */\nexport class ActorQueryOperationValues extends ActorQueryOperationTyped<Algebra.Values> {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryOperationUpdateDeleteInsertArgs) {\n    super(args, 'values');\n  }\n\n  public async testOperation(_operation: Algebra.Values, _context: IActionContext): Promise<IActorTest> {\n    return true;\n  }\n\n  public async runOperation(operation: Algebra.Values, context: IActionContext):\n  Promise<IQueryOperationResult> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, context);\n    const bindingsStream: BindingsStream = new ArrayIterator<Bindings>(operation.bindings\n      .map(x => bindingsFactory.bindings(Object.entries(x)\n        .map(([ key, value ]) => [ DF.variable(key.slice(1)), value ]))));\n    const variables = operation.variables;\n    const metadata = (): Promise<MetadataBindings> => Promise.resolve({\n      state: new MetadataValidationState(),\n      cardinality: { type: 'exact', value: operation.bindings.length },\n      canContainUndefs: operation.bindings.some(bindings => variables.some(variable => !(`?${variable.value}` in bindings))),\n      variables,\n    });\n    return { type: 'bindings', bindingsStream, metadata };\n  }\n}\n\nexport interface IActorQueryOperationUpdateDeleteInsertArgs extends\n  IActorArgs<IActionQueryOperation, IActorTest, IQueryOperationResult> {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { IActionQueryParse, IActorQueryParseArgs, IActorQueryParseOutput } from '@comunica/bus-query-parse';\nimport { ActorQueryParse } from '@comunica/bus-query-parse';\nimport type { IActorTest } from '@comunica/core';\nimport { translate } from 'sparqlalgebrajs';\nimport { Parser as SparqlParser } from 'sparqljs';\n\n/**\n * A comunica Algebra SPARQL Parse Actor.\n */\nexport class ActorQueryParseSparql extends ActorQueryParse {\n  public readonly prefixes: Record<string, string>;\n\n  public constructor(args: IActorQueryParseSparqlArgs) {\n    super(args);\n    this.prefixes = Object.freeze(this.prefixes);\n  }\n\n  public async test(action: IActionQueryParse): Promise<IActorTest> {\n    if (action.queryFormat && action.queryFormat.language !== 'sparql') {\n      throw new Error('This actor can only parse SPARQL queries');\n    }\n    return true;\n  }\n\n  public async run(action: IActionQueryParse): Promise<IActorQueryParseOutput> {\n    const parser = new SparqlParser({ prefixes: this.prefixes, baseIRI: action.baseIRI, sparqlStar: true });\n    const parsedSyntax = parser.parse(action.query);\n    const baseIRI = parsedSyntax.type === 'query' ? parsedSyntax.base : undefined;\n    return {\n      baseIRI,\n      operation: translate(parsedSyntax, {\n        quads: true,\n        prefixes: this.prefixes,\n        blankToVariable: true,\n        baseIRI: action.baseIRI,\n      }),\n    };\n  }\n}\n\nexport interface IActorQueryParseSparqlArgs extends IActorQueryParseArgs {\n  /**\n   * Default prefixes to use\n   * @range {json}\n   * @default {{\n   *   \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n   *   \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n   *   \"owl\": \"http://www.w3.org/2002/07/owl#\",\n   *   \"xsd\": \"http://www.w3.org/2001/XMLSchema#\",\n   *   \"dc\": \"http://purl.org/dc/terms/\",\n   *   \"dcterms\": \"http://purl.org/dc/terms/\",\n   *   \"dc11\": \"http://purl.org/dc/elements/1.1/\",\n   *   \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n   *   \"geo\": \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n   *   \"dbpedia\": \"http://dbpedia.org/resource/\",\n   *   \"dbpedia-owl\": \"http://dbpedia.org/ontology/\",\n   *   \"dbpprop\": \"http://dbpedia.org/property/\",\n   *   \"schema\": \"http://schema.org/\",\n   *   \"skos\": \"http://www.w3.org/2008/05/skos#\"\n   * }}\n   */\n  prefixes?: Record<string, string>;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorContextPreprocess } from '@comunica/bus-context-preprocess';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { MediatorOptimizeQueryOperation } from '@comunica/bus-optimize-query-operation';\nimport type { MediatorQueryOperation } from '@comunica/bus-query-operation';\nimport { materializeOperation } from '@comunica/bus-query-operation';\nimport type { MediatorQueryParse } from '@comunica/bus-query-parse';\nimport type {\n  IActionQueryProcess,\n  IActorQueryProcessOutput,\n  IActorQueryProcessArgs,\n  IQueryProcessSequential,\n  IQueryProcessSequentialOutput,\n} from '@comunica/bus-query-process';\nimport {\n  ActorQueryProcess,\n} from '@comunica/bus-query-process';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport { ActionContextKey } from '@comunica/core';\nimport type {\n  IActionContext,\n  IQueryOperationResult,\n  QueryFormatType,\n} from '@comunica/types';\n\nimport type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Sequential Query Process Actor.\n */\nexport class ActorQueryProcessSequential extends ActorQueryProcess implements IQueryProcessSequential {\n  public readonly mediatorContextPreprocess: MediatorContextPreprocess;\n  public readonly mediatorQueryParse: MediatorQueryParse;\n  public readonly mediatorOptimizeQueryOperation: MediatorOptimizeQueryOperation;\n  public readonly mediatorQueryOperation: MediatorQueryOperation;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQueryProcessSequentialArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionQueryProcess): Promise<IActorTest> {\n    if (action.context.get(KeysInitQuery.explain) || action.context.get(new ActionContextKey('explain'))) {\n      throw new Error(`${this.name} is not able to explain queries.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionQueryProcess): Promise<IActorQueryProcessOutput> {\n    // Run all query processing steps in sequence\n    let { operation, context } = await this.parse(action.query, action.context);\n    ({ operation, context } = await this.optimize(operation, context));\n    const output = await this.evaluate(operation, context);\n\n    return { result: output };\n  }\n\n  public async parse(query: QueryFormatType, context: IActionContext): Promise<IQueryProcessSequentialOutput> {\n    // Pre-processing the context\n    context = (await this.mediatorContextPreprocess.mediate({ context, initialize: true })).context;\n\n    // Parse query\n    let operation: Algebra.Operation;\n    if (typeof query === 'string') {\n      // Save the original query string in the context\n      context = context.set(KeysInitQuery.queryString, query);\n\n      const baseIRI: string | undefined = context.get(KeysInitQuery.baseIRI);\n      const queryFormat: RDF.QueryFormat = context.get(KeysInitQuery.queryFormat)!;\n      const queryParseOutput = await this.mediatorQueryParse.mediate({ context, query, queryFormat, baseIRI });\n      operation = queryParseOutput.operation;\n      // Update the baseIRI in the context if the query modified it.\n      if (queryParseOutput.baseIRI) {\n        context = context.set(KeysInitQuery.baseIRI, queryParseOutput.baseIRI);\n      }\n    } else {\n      operation = query;\n    }\n\n    // Apply initial bindings in context\n    if (context.has(KeysInitQuery.initialBindings)) {\n      const bindingsFactory = await BindingsFactory\n        .create(this.mediatorMergeBindingsContext, context);\n      operation = materializeOperation(operation, context.get(KeysInitQuery.initialBindings)!, bindingsFactory);\n\n      // Delete the query string from the context, since our initial query might have changed\n      context = context.delete(KeysInitQuery.queryString);\n    }\n\n    return { operation, context };\n  }\n\n  public async optimize(operation: Algebra.Operation, context: IActionContext): Promise<IQueryProcessSequentialOutput> {\n    // Save initial query in context\n    context = context.set(KeysInitQuery.query, operation);\n\n    ({ operation, context } = await this.mediatorOptimizeQueryOperation.mediate({ context, operation }));\n\n    // Save original query in context\n    context = context.set(KeysInitQuery.query, operation);\n\n    return { operation, context };\n  }\n\n  public async evaluate(operation: Algebra.Operation, context: IActionContext): Promise<IQueryOperationResult> {\n    const output = await this.mediatorQueryOperation.mediate({ context, operation });\n    output.context = context;\n    return output;\n  }\n}\n\nexport interface IActorQueryProcessSequentialArgs extends IActorQueryProcessArgs {\n  /**\n   * The context processing combinator\n   */\n  mediatorContextPreprocess: MediatorContextPreprocess;\n  /**\n   * The query parse mediator\n   */\n  mediatorQueryParse: MediatorQueryParse;\n  /**\n   * The query operation optimize mediator\n   */\n  mediatorOptimizeQueryOperation: MediatorOptimizeQueryOperation;\n  /**\n   * The query operation mediator\n   */\n  mediatorQueryOperation: MediatorQueryOperation;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type {\n  IActionQuerySourceIdentify,\n  IActorQuerySourceIdentifyOutput,\n  IActorQuerySourceIdentifyArgs,\n} from '@comunica/bus-query-source-identify';\nimport { ActorQuerySourceIdentify } from '@comunica/bus-query-source-identify';\nimport type { IActorTest } from '@comunica/core';\nimport { ActionContext } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\nimport { QuerySourceRdfJs } from './QuerySourceRdfJs';\n\n/**\n * A comunica RDFJS Query Source Identify Actor.\n */\nexport class ActorQuerySourceIdentifyRdfJs extends ActorQuerySourceIdentify {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorQuerySourceIdentifyRdfJsArgs) {\n    super(args);\n  }\n\n  public async test(action: IActionQuerySourceIdentify): Promise<IActorTest> {\n    const source = action.querySourceUnidentified;\n    if (source.type !== undefined && source.type !== 'rdfjs') {\n      throw new Error(`${this.name} requires a single query source with rdfjs type to be present in the context.`);\n    }\n    if (typeof source.value === 'string' || !('match' in source.value)) {\n      throw new Error(`${this.name} received an invalid rdfjs query source.`);\n    }\n    return true;\n  }\n\n  public async run(action: IActionQuerySourceIdentify): Promise<IActorQuerySourceIdentifyOutput> {\n    return {\n      querySource: {\n        source: new QuerySourceRdfJs(\n          <RDF.Source> action.querySourceUnidentified.value,\n          await BindingsFactory.create(this.mediatorMergeBindingsContext, action.context),\n        ),\n        context: action.querySourceUnidentified.context ?? new ActionContext(),\n      },\n    };\n  }\n}\n\nexport interface IActorQuerySourceIdentifyRdfJsArgs extends IActorQuerySourceIdentifyArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { BindingsFactory } from '@comunica/bindings-factory';\nimport { filterMatchingQuotedQuads, quadsToBindings } from '@comunica/bus-query-source-identify';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type { IQuerySource, BindingsStream, IActionContext, FragmentSelectorShape } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { AsyncIterator, wrap as wrapAsyncIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { someTermsNested, filterTermsNested, someTerms, uniqTerms } from 'rdf-terms';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { Factory } from 'sparqlalgebrajs';\nimport type { IRdfJsSourceExtended } from './IRdfJsSourceExtended';\n\nconst AF = new Factory();\nconst DF = new DataFactory<RDF.BaseQuad>();\n\nexport class QuerySourceRdfJs implements IQuerySource {\n  protected static readonly SELECTOR_SHAPE: FragmentSelectorShape = {\n    type: 'operation',\n    operation: {\n      operationType: 'pattern',\n      pattern: AF.createPattern(DF.variable('s'), DF.variable('p'), DF.variable('o')),\n    },\n    variablesOptional: [\n      DF.variable('s'),\n      DF.variable('p'),\n      DF.variable('o'),\n    ],\n  };\n\n  public referenceValue: string | RDF.Source;\n  protected readonly source: IRdfJsSourceExtended;\n  private readonly bindingsFactory: BindingsFactory;\n\n  public constructor(source: RDF.Source, bindingsFactory: BindingsFactory) {\n    this.source = source;\n    this.referenceValue = source;\n    this.bindingsFactory = bindingsFactory;\n  }\n\n  public static nullifyVariables(term: RDF.Term | undefined, quotedTripleFiltering: boolean): RDF.Term | undefined {\n    return !term || term.termType === 'Variable' || (!quotedTripleFiltering &&\n      term.termType === 'Quad' && someTermsNested(term, value => value.termType === 'Variable')) ?\n      undefined :\n      term;\n  }\n\n  public static hasDuplicateVariables(pattern: RDF.BaseQuad): boolean {\n    const variables = filterTermsNested(pattern, term => term.termType === 'Variable');\n    return variables.length > 1 && uniqTerms(variables).length < variables.length;\n  }\n\n  public async getSelectorShape(): Promise<FragmentSelectorShape> {\n    return QuerySourceRdfJs.SELECTOR_SHAPE;\n  }\n\n  public queryBindings(operation: Algebra.Operation, context: IActionContext): BindingsStream {\n    if (operation.type !== 'pattern') {\n      throw new Error(`Attempted to pass non-pattern operation '${operation.type}' to QuerySourceRdfJs`);\n    }\n\n    // Check if the source supports quoted triple filtering\n    const quotedTripleFiltering = Boolean(this.source.features?.quotedTripleFiltering);\n\n    // Create an async iterator from the matched quad stream\n    const rawStream = this.source.match(\n      QuerySourceRdfJs.nullifyVariables(operation.subject, quotedTripleFiltering),\n      QuerySourceRdfJs.nullifyVariables(operation.predicate, quotedTripleFiltering),\n      QuerySourceRdfJs.nullifyVariables(operation.object, quotedTripleFiltering),\n      QuerySourceRdfJs.nullifyVariables(operation.graph, quotedTripleFiltering),\n    );\n    let it: AsyncIterator<RDF.Quad> = rawStream instanceof AsyncIterator ?\n      rawStream :\n      wrapAsyncIterator<RDF.Quad>(rawStream, { autoStart: false });\n\n    // Perform post-match-filtering if the source does not support quoted triple filtering.\n    if (!quotedTripleFiltering) {\n      it = filterMatchingQuotedQuads(operation, it);\n    }\n\n    // Determine metadata\n    if (!it.getProperty('metadata')) {\n      this.setMetadata(it, operation)\n        .catch(error => it.destroy(error));\n    }\n\n    return quadsToBindings(\n      it,\n      operation,\n      this.bindingsFactory,\n      Boolean(context.get(KeysQueryOperation.unionDefaultGraph)),\n    );\n  }\n\n  protected async setMetadata(\n    it: AsyncIterator<RDF.Quad>,\n    operation: Algebra.Pattern,\n  ): Promise<void> {\n    // Check if the source supports quoted triple filtering\n    const quotedTripleFiltering = Boolean(this.source.features?.quotedTripleFiltering);\n\n    let cardinality: number;\n    if (this.source.countQuads) {\n      // If the source provides a dedicated method for determining cardinality, use that.\n      cardinality = await this.source.countQuads(\n        QuerySourceRdfJs.nullifyVariables(operation.subject, quotedTripleFiltering),\n        QuerySourceRdfJs.nullifyVariables(operation.predicate, quotedTripleFiltering),\n        QuerySourceRdfJs.nullifyVariables(operation.object, quotedTripleFiltering),\n        QuerySourceRdfJs.nullifyVariables(operation.graph, quotedTripleFiltering),\n      );\n    } else {\n      // Otherwise, fallback to a sub-optimal alternative where we just call match again to count the quads.\n      // WARNING: we can NOT reuse the original data stream here,\n      // because we may lose data elements due to things happening async.\n      let i = 0;\n      cardinality = await new Promise((resolve, reject) => {\n        const matches = this.source.match(\n          QuerySourceRdfJs.nullifyVariables(operation.subject, quotedTripleFiltering),\n          QuerySourceRdfJs.nullifyVariables(operation.predicate, quotedTripleFiltering),\n          QuerySourceRdfJs.nullifyVariables(operation.object, quotedTripleFiltering),\n          QuerySourceRdfJs.nullifyVariables(operation.graph, quotedTripleFiltering),\n        );\n        matches.on('error', reject);\n        matches.on('end', () => resolve(i));\n        matches.on('data', () => i++);\n      });\n    }\n\n    // If `match` would require filtering afterwards, our count will be an over-estimate.\n    const wouldRequirePostFiltering = (!quotedTripleFiltering &&\n        someTerms(operation, term => term.termType === 'Quad')) ||\n      QuerySourceRdfJs.hasDuplicateVariables(operation);\n\n    it.setProperty('metadata', {\n      state: new MetadataValidationState(),\n      cardinality: { type: wouldRequirePostFiltering ? 'estimate' : 'exact', value: cardinality },\n      canContainUndefs: false,\n    });\n  }\n\n  public queryQuads(\n    _operation: Algebra.Operation,\n    _context: IActionContext,\n  ): AsyncIterator<RDF.Quad> {\n    throw new Error('queryQuads is not implemented in QuerySourceQpf');\n  }\n\n  public queryBoolean(\n    _operation: Algebra.Ask,\n    _context: IActionContext,\n  ): Promise<boolean> {\n    throw new Error('queryBoolean is not implemented in QuerySourceQpf');\n  }\n\n  public queryVoid(\n    _operation: Algebra.Update,\n    _context: IActionContext,\n  ): Promise<void> {\n    throw new Error('queryVoid is not implemented in QuerySourceQpf');\n  }\n\n  public toString(): string {\n    return `QuerySourceRdfJs(${this.source.constructor.name})`;\n  }\n}\n","import type { IActionRdfJoinEntriesSort, IActorRdfJoinEntriesSortOutput } from '@comunica/bus-rdf-join-entries-sort';\nimport { ActorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport type { IActorArgs, IActorTest } from '@comunica/core';\n\n/**\n * An actor that sorts join entries by increasing cardinality.\n */\nexport class ActorRdfJoinEntriesSortCardinality extends ActorRdfJoinEntriesSort {\n  public constructor(\n    args: IActorArgs<IActionRdfJoinEntriesSort, IActorTest, IActorRdfJoinEntriesSortOutput>,\n  ) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfJoinEntriesSort): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfJoinEntriesSort): Promise<IActorRdfJoinEntriesSortOutput> {\n    const entries = [ ...action.entries ]\n      .sort((entryLeft, entryRight) => entryLeft.metadata.cardinality.value - entryRight.metadata.cardinality.value);\n    return { entries };\n  }\n}\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, MetadataBindings } from '@comunica/types';\nimport { HashJoin } from 'asyncjoin';\n\n/**\n * A comunica Hash RDF Join Actor.\n */\nexport class ActorRdfJoinHash extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'hash',\n      limitEntries: 2,\n      requiresVariableOverlap: true,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    let metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n\n    // Ensure the left build stream is the smallest\n    // TODO: in the next major version, use ActorRdfJoin.sortJoinEntries, which requires mediatorJoinEntriesSort\n    if (metadatas[1].cardinality.value < metadatas[0].cardinality.value) {\n      metadatas = [ metadatas[1], metadatas[0] ];\n      action = { ...action, entries: [ action.entries[1], action.entries[0] ]};\n    }\n\n    const variables = ActorRdfJoin.overlappingVariables(metadatas);\n    const join = new HashJoin<Bindings, string, Bindings>(\n      action.entries[0].output.bindingsStream,\n      action.entries[1].output.bindingsStream,\n      entry => ActorRdfJoin.hash(entry, variables),\n      <any> ActorRdfJoin.joinBindings,\n    );\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream: join,\n        metadata: async() => await this.constructResultMetadata(action.entries, metadatas, action.context),\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    // Ensure the left build stream is the smallest\n    if (metadatas[1].cardinality.value < metadatas[0].cardinality.value) {\n      metadatas = [ metadatas[1], metadatas[0] ];\n    }\n\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      iterations: metadatas[0].cardinality.value + metadatas[1].cardinality.value,\n      persistedItems: metadatas[0].cardinality.value,\n      blockingItems: metadatas[0].cardinality.value,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n","import { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IActionRdfJoin, IActorRdfJoinArgs, IActorRdfJoinOutputInner } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin, ChunkedIterator } from '@comunica/bus-rdf-join';\nimport type { MediatorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type {\n  IJoinEntryWithMetadata,\n  IQueryOperationResultBindings,\n  IQuerySourceWrapper,\n  MetadataBindings,\n  IActionContext,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { UnionIterator } from 'asynciterator';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { Factory } from 'sparqlalgebrajs';\n\nconst AF = new Factory();\n\n/**\n * A comunica Inner Multi Bind Source RDF Join Actor.\n */\nexport class ActorRdfJoinMultiBindSource extends ActorRdfJoin {\n  public readonly selectivityModifier: number;\n  public readonly blockSize: number;\n  public readonly mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n\n  public constructor(args: IActorRdfJoinInnerMultiBindSourceArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'bind-source',\n      canHandleUndefs: true,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    // Order the entries so we can pick the first one (usually the one with the lowest cardinality)\n    const entriesUnsorted = await ActorRdfJoin.getEntriesWithMetadatas(action.entries);\n    const entries = await this.sortJoinEntries(entriesUnsorted, action.context);\n\n    this.logDebug(\n      action.context,\n      'First entry for Bind Join Source: ',\n      () => ({ entry: entries[0].operation, metadata: entries[0].metadata }),\n    );\n\n    // Close the non-smallest streams\n    for (const [ i, element ] of entries.entries()) {\n      if (i !== 0) {\n        element.output.bindingsStream.close();\n      }\n    }\n\n    // Take the stream with the lowest cardinality\n    const smallestStream: IQueryOperationResultBindings = entries[0].output;\n    const smallestMetadata = entries[0].metadata;\n    const remainingEntries = [ ...entries ];\n    remainingEntries.splice(0, 1);\n\n    // Get source for remaining entries (guaranteed thanks to prior check in getJoinCoefficients())\n    const sourceWrapper: IQuerySourceWrapper = ActorQueryOperation.getOperationSource(remainingEntries[0].operation)!;\n\n    // Determine the operation to pass\n    const operation = this.createOperationFromEntries(remainingEntries);\n\n    // Slice the smallest stream into chunks according to the block size, so we avoid blocking too long.\n    const chunkedStreams: AsyncIterator<AsyncIterator<RDF.Bindings>> = new ChunkedIterator(\n      smallestStream.bindingsStream,\n      this.blockSize,\n      { autoStart: false },\n    );\n\n    // For each chunk, pass the query and the bindings to the source for execution\n    const bindingsStream = new UnionIterator(chunkedStreams.map(chunk => sourceWrapper.source.queryBindings(\n      operation,\n      sourceWrapper.context ? action.context.merge(sourceWrapper.context) : action.context,\n      { joinBindings: { bindings: chunk, metadata: smallestMetadata }},\n    )));\n\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream,\n        metadata: () => this.constructResultMetadata(entries, entries.map(entry => entry.metadata), action.context),\n      },\n      physicalPlanMetadata: {\n        bindIndex: entriesUnsorted.indexOf(entries[0]),\n      },\n    };\n  }\n\n  protected async sortJoinEntries(\n    entries: IJoinEntryWithMetadata[],\n    context: IActionContext,\n  ): Promise<IJoinEntryWithMetadata[]> {\n    entries = await ActorRdfJoin.sortJoinEntries(this.mediatorJoinEntriesSort, entries, context);\n\n    // Prioritize entries with modified operations, so these are not re-executed\n    entries = entries.sort((entryLeft, entryRight) => {\n      if (entryLeft.operationModified && !entryRight.operationModified) {\n        return -1;\n      }\n      return 0;\n    });\n\n    return entries;\n  }\n\n  public async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    // Order the entries so we can pick the first one (usually the one with the lowest cardinality)\n    const entries = await this.sortJoinEntries(action.entries\n      .map((entry, i) => ({ ...entry, metadata: metadatas[i] })), action.context);\n    metadatas = entries.map(entry => entry.metadata);\n\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n\n    // Determine first stream and remaining ones\n    const remainingEntries = [ ...entries ];\n    const remainingRequestInitialTimes = [ ...requestInitialTimes ];\n    const remainingRequestItemTimes = [ ...requestItemTimes ];\n    remainingEntries.splice(0, 1);\n    remainingRequestInitialTimes.splice(0, 1);\n    remainingRequestItemTimes.splice(0, 1);\n\n    // Reject binding on operations without sources\n    const sources = remainingEntries.map(entry => ActorQueryOperation.getOperationSource(entry.operation));\n    if (sources.some(source => !source)) {\n      throw new Error(`Actor ${this.name} can not bind on remaining operations without source annotation`);\n    }\n\n    // Reject binding on operations with un-equal sources\n    if (sources.some(source => source !== sources[0])) {\n      throw new Error(`Actor ${this.name} can not bind on remaining operations with non-equal source annotation`);\n    }\n\n    // Reject if the source can not handle bindings\n    const sourceWrapper: IQuerySourceWrapper = sources[0]!;\n    const testingOperation = this.createOperationFromEntries(remainingEntries);\n    const selectorShape = await sourceWrapper.source.getSelectorShape(action.context);\n    if (!ActorQueryOperation\n      .doesShapeAcceptOperation(selectorShape, testingOperation, { joinBindings: true })) {\n      throw new Error(`Actor ${this.name} detected a source that can not handle passing down join bindings`);\n    }\n\n    // Determine selectivities of smallest entry with all other entries\n    const selectivities = await Promise.all(remainingEntries\n      .map(async entry => (await this.mediatorJoinSelectivity.mediate({\n        entries: [ entries[0], entry ],\n        context: action.context,\n      })).selectivity * this.selectivityModifier));\n\n    // Determine coefficients for remaining entries\n    const cardinalityRemaining = remainingEntries\n      .map((entry, i) => entry.metadata.cardinality.value * selectivities[i])\n      .reduce((sum, element) => sum + element, 0);\n\n    return {\n      iterations: 1,\n      persistedItems: metadatas[0].cardinality.value,\n      blockingItems: metadatas[0].cardinality.value,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + cardinalityRemaining * requestItemTimes[1],\n    };\n  }\n\n  public createOperationFromEntries(remainingEntries: IJoinEntryWithMetadata[]): Algebra.Operation {\n    if (remainingEntries.length === 1) {\n      return remainingEntries[0].operation;\n    }\n    return AF.createJoin(remainingEntries.map(entry => entry.operation), true);\n  }\n}\n\nexport interface IActorRdfJoinInnerMultiBindSourceArgs extends IActorRdfJoinArgs {\n  /**\n   * Multiplier for selectivity values\n   * @range {double}\n   * @default {0.0001}\n   */\n  selectivityModifier: number;\n  /**\n   * The maximum amount of bindings to send to the source per block.\n   * @default {16}\n   */\n  blockSize: number;\n  /**\n   * The join entries sort mediator\n   */\n  mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { MediatorQueryOperation } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation, materializeOperation } from '@comunica/bus-query-operation';\nimport type {\n  IActionRdfJoin,\n  IActorRdfJoinOutputInner,\n  IActorRdfJoinArgs,\n} from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { MediatorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, BindingsStream, IQueryOperationResultBindings, MetadataBindings } from '@comunica/types';\nimport { MultiTransformIterator, TransformIterator, UnionIterator } from 'asynciterator';\nimport { Factory, Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Multi-way Bind RDF Join Actor.\n */\nexport class ActorRdfJoinMultiBind extends ActorRdfJoin {\n  public readonly bindOrder: BindOrder;\n  public readonly selectivityModifier: number;\n  public readonly minMaxCardinalityRatio: number;\n  public readonly mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  public readonly mediatorQueryOperation: MediatorQueryOperation;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public static readonly FACTORY = new Factory();\n\n  public constructor(args: IActorRdfJoinMultiBindArgs) {\n    // TODO: remove this fallback in the next major update\n    if (args.minMaxCardinalityRatio === undefined) {\n      args.minMaxCardinalityRatio = 60;\n    }\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'bind',\n      canHandleUndefs: true,\n      isLeaf: false,\n    });\n  }\n\n  /**\n   * Create a new bindings stream that takes every binding of the base stream\n   * and binds it to the remaining patterns, evaluates those patterns, and emits all their bindings.\n   *\n   * @param bindOrder The order in which elements should be bound.\n   * @param baseStream The base stream.\n   * @param operations The operations to bind with each binding of the base stream.\n   * @param operationBinder A callback to retrieve the bindings stream of bound operations.\n   * @param optional If the original bindings should be emitted when the resulting bindings stream is empty.\n   * @return {BindingsStream}\n   */\n  public static createBindStream(\n    bindOrder: BindOrder,\n    baseStream: BindingsStream,\n    operations: Algebra.Operation[],\n    operationBinder: (boundOperations: Algebra.Operation[], operationBindings: Bindings)\n    => Promise<BindingsStream>,\n    optional: boolean,\n    bindingsFactory: BindingsFactory,\n  ): BindingsStream {\n    // Enable auto-start on sub-bindings during depth-first binding for best performance.\n    const autoStartSubBindings = bindOrder === 'depth-first';\n\n    // Create bindings function\n    const binder = (bindings: Bindings): BindingsStream => {\n      // We don't bind the filter because filters are always handled last,\n      // and we need to avoid binding filters of sub-queries, which are to be handled first. (see spec test bind10)\n      const subOperations = operations\n        .map(operation => materializeOperation(operation, bindings, bindingsFactory, { bindFilter: true }));\n      const bindingsMerger = (subBindings: Bindings): Bindings | undefined => subBindings.merge(bindings);\n      return new TransformIterator(async() => (await operationBinder(subOperations, bindings))\n        .transform({ map: bindingsMerger }), { maxBufferSize: 128, autoStart: autoStartSubBindings });\n    };\n\n    // Create an iterator that binds elements from the base stream in different orders\n    switch (bindOrder) {\n      case 'depth-first':\n        return new MultiTransformIterator(baseStream, { autoStart: false, multiTransform: binder, optional });\n      case 'breadth-first':\n        return new UnionIterator(baseStream.transform({\n          map: binder,\n          optional,\n        }), { autoStart: false });\n      default:\n        // eslint-disable-next-line ts/restrict-template-expressions\n        throw new Error(`Received request for unknown bind order: ${bindOrder}`);\n    }\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, action.context);\n\n    // Order the entries so we can pick the first one (usually the one with the lowest cardinality)\n    const entriesUnsorted = await ActorRdfJoin.getEntriesWithMetadatas(action.entries);\n    const entries = await ActorRdfJoin.sortJoinEntries(this.mediatorJoinEntriesSort, entriesUnsorted, action.context);\n\n    this.logDebug(\n      action.context,\n      'First entry for Bind Join: ',\n      () => ({ entry: entries[0].operation, metadata: entries[0].metadata }),\n    );\n\n    // Close the non-smallest streams\n    for (const [ i, element ] of entries.entries()) {\n      if (i !== 0) {\n        element.output.bindingsStream.close();\n      }\n    }\n\n    // Take the stream with the lowest cardinality\n    const smallestStream: IQueryOperationResultBindings = entries[0].output;\n    const remainingEntries = [ ...entries ];\n    remainingEntries.splice(0, 1);\n\n    // Bind the remaining patterns for each binding in the stream\n    const subContext = action.context\n      .set(KeysQueryOperation.joinLeftMetadata, entries[0].metadata)\n      .set(KeysQueryOperation.joinRightMetadatas, remainingEntries.map(entry => entry.metadata));\n    const bindingsStream: BindingsStream = ActorRdfJoinMultiBind.createBindStream(\n      this.bindOrder,\n      smallestStream.bindingsStream,\n      remainingEntries.map(entry => entry.operation),\n      async(operations: Algebra.Operation[], operationBindings: Bindings) => {\n        // Send the materialized patterns to the mediator for recursive join evaluation.\n        const operation = operations.length === 1 ?\n          operations[0] :\n          ActorRdfJoinMultiBind.FACTORY.createJoin(operations);\n        const output = ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate(\n          { operation, context: subContext?.set(KeysQueryOperation.joinBindings, operationBindings) },\n        ));\n        return output.bindingsStream;\n      },\n      false,\n      bindingsFactory,\n    );\n\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream,\n        metadata: () => this.constructResultMetadata(entries, entries.map(entry => entry.metadata), action.context),\n      },\n      physicalPlanMetadata: {\n        bindIndex: entriesUnsorted.indexOf(entries[0]),\n        bindOperation: entries[0].operation,\n        bindOperationCardinality: entries[0].metadata.cardinality,\n        bindOrder: this.bindOrder,\n      },\n    };\n  }\n\n  public canBindWithOperation(operation: Algebra.Operation): boolean {\n    let valid = true;\n    Util.recurseOperation(operation, {\n      [Algebra.types.EXTEND](): boolean {\n        valid = false;\n        return false;\n      },\n      [Algebra.types.GROUP](): boolean {\n        valid = false;\n        return false;\n      },\n    });\n\n    return valid;\n  }\n\n  public async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    // Order the entries so we can pick the first one (usually the one with the lowest cardinality)\n    const entries = await ActorRdfJoin.sortJoinEntries(this.mediatorJoinEntriesSort, action.entries\n      .map((entry, i) => ({ ...entry, metadata: metadatas[i] })), action.context);\n    metadatas = entries.map(entry => entry.metadata);\n\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n\n    // Determine first stream and remaining ones\n    const remainingEntries = [ ...entries ];\n    const remainingRequestInitialTimes = [ ...requestInitialTimes ];\n    const remainingRequestItemTimes = [ ...requestItemTimes ];\n    remainingEntries.splice(0, 1);\n    remainingRequestInitialTimes.splice(0, 1);\n    remainingRequestItemTimes.splice(0, 1);\n\n    // Reject binding on some operation types\n    if (remainingEntries\n      .some(entry => !this.canBindWithOperation(entry.operation))) {\n      throw new Error(`Actor ${this.name} can not bind on Extend and Group operations`);\n    }\n\n    // Reject binding on modified operations, since using the output directly would be significantly more efficient.\n    if (remainingEntries.some(entry => entry.operationModified)) {\n      throw new Error(`Actor ${this.name} can not be used over remaining entries with modified operations`);\n    }\n\n    // Only run this actor if the smallest stream is significantly smaller than the largest stream.\n    // We must use Math.max, because the last metadata is not necessarily the biggest, but it's the least preferred.\n    if (metadatas[0].cardinality.value * this.minMaxCardinalityRatio >\n      Math.max(...metadatas.map(metadata => metadata.cardinality.value))) {\n      throw new Error(`Actor ${this.name} can only run if the smallest stream is much smaller than largest stream`);\n    }\n\n    // Determine selectivities of smallest entry with all other entries\n    const selectivities = await Promise.all(remainingEntries\n      .map(async entry => (await this.mediatorJoinSelectivity.mediate({\n        entries: [ entries[0], entry ],\n        context: action.context,\n      })).selectivity * this.selectivityModifier));\n\n    // Determine coefficients for remaining entries\n    const cardinalityRemaining = remainingEntries\n      .map((entry, i) => entry.metadata.cardinality.value * selectivities[i])\n      .reduce((sum, element) => sum + element, 0);\n    const receiveInitialCostRemaining = remainingRequestInitialTimes\n      .reduce((sum, element) => sum + element, 0);\n    const receiveItemCostRemaining = remainingRequestItemTimes\n      .reduce((sum, element) => sum + element, 0);\n\n    return {\n      iterations: metadatas[0].cardinality.value * cardinalityRemaining,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] +\n        metadatas[0].cardinality.value * (\n          requestItemTimes[0] +\n          receiveInitialCostRemaining +\n          cardinalityRemaining * receiveItemCostRemaining\n        ),\n    };\n  }\n}\n\nexport interface IActorRdfJoinMultiBindArgs extends IActorRdfJoinArgs {\n  /**\n   * The order in which elements should be bound\n   * @default {depth-first}\n   */\n  bindOrder: BindOrder;\n  /**\n   * Multiplier for selectivity values\n   * @range {double}\n   * @default {0.0001}\n   */\n  selectivityModifier: number;\n  /**\n   * The number of times the smallest cardinality should fit in the maximum cardinality.\n   * @range {double}\n   * @default {60}\n   */\n  minMaxCardinalityRatio?: number;\n  /**\n   * The join entries sort mediator\n   */\n  mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  /**\n   * The query operation mediator\n   */\n  mediatorQueryOperation: MediatorQueryOperation;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n\nexport type BindOrder = 'depth-first' | 'breadth-first';\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type { MetadataBindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { ArrayIterator } from 'asynciterator';\n\n/**\n * A comunica Multi Empty RDF Join Actor.\n */\nexport class ActorRdfJoinMultiEmpty extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'multi-empty',\n      canHandleUndefs: true,\n    });\n  }\n\n  public override async test(action: IActionRdfJoin): Promise<IMediatorTypeJoinCoefficients> {\n    if ((await ActorRdfJoin.getMetadatas(action.entries))\n      .every(metadata => ActorRdfJoin.getCardinality(metadata).value > 0)) {\n      throw new Error(`Actor ${this.name} can only join entries where at least one is empty`);\n    }\n    return super.test(action);\n  }\n\n  protected override async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    // Close all entries\n    for (const entry of action.entries) {\n      entry.output.bindingsStream.close();\n    }\n\n    return {\n      result: {\n        bindingsStream: new ArrayIterator<RDF.Bindings>([], { autoStart: false }),\n        metadata: async() => ({\n          state: new MetadataValidationState(),\n          cardinality: { type: 'exact', value: 0 },\n          canContainUndefs: false,\n          variables: ActorRdfJoin.joinVariables(await ActorRdfJoin.getMetadatas(action.entries)),\n        }),\n        type: 'bindings',\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    _action: IActionRdfJoin,\n    _metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    return {\n      iterations: 0,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: 0,\n    };\n  }\n}\n","import { bindingsToString } from '@comunica/bindings-factory';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type {\n  IActionRdfJoin,\n  IActorRdfJoinArgs,\n  MediatorRdfJoin,\n  IActorRdfJoinOutputInner,\n} from '@comunica/bus-rdf-join';\nimport { ChunkedIterator, ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { MediatorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport { KeysRdfJoin } from '@comunica/context-entries';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type {\n  BindingsStream,\n  IActionContext,\n  IJoinEntry,\n  IJoinEntryWithMetadata,\n  IQuerySourceWrapper,\n  MetadataBindings,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { UnionIterator } from 'asynciterator';\nimport { Factory } from 'sparqlalgebrajs';\n\n/**\n * A comunica Inner Multi Smallest Filter Bindings RDF Join Actor.\n */\nexport class ActorRdfJoinMultiSmallestFilterBindings extends ActorRdfJoin {\n  public readonly selectivityModifier: number;\n  public readonly blockSize: number;\n  public readonly mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  public readonly mediatorJoin: MediatorRdfJoin;\n\n  public static readonly FACTORY = new Factory();\n  public constructor(args: IActorRdfJoinMultiSmallestFilterBindingsArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'multi-smallest-filter-bindings',\n      limitEntries: 2,\n      limitEntriesMin: true,\n      isLeaf: false,\n    });\n  }\n\n  /**\n   * Order the given join entries using the join-entries-sort bus.\n   * @param {IJoinEntryWithMetadata[]} entries An array of join entries.\n   * @param context The action context.\n   * @return {IJoinEntryWithMetadata[]} The sorted join entries.\n   */\n  public async sortJoinEntries(\n    entries: IJoinEntryWithMetadata[],\n    context: IActionContext,\n  ): Promise<{ first: IJoinEntryWithMetadata; second: IJoinEntryWithMetadata; remaining: IJoinEntryWithMetadata[] }> {\n    let { entries: entriesSorted } = await this.mediatorJoinEntriesSort.mediate({ entries, context });\n\n    // Prioritize entries with modified operations, so these are not re-executed\n    entriesSorted = entriesSorted.sort((entryLeft, entryRight) => {\n      if (entryLeft.operationModified && !entryRight.operationModified) {\n        return -1;\n      }\n      return 0;\n    });\n\n    const first = entriesSorted.splice(0, 1)[0];\n\n    // Let second entry first be prioritized for sharing as many variables with first as possible,\n    // then having the fewest variables,\n    // and then having the lowest cardinality.\n    let second: IJoinEntryWithMetadata | undefined;\n    let secondIndex = -1;\n    let secondSharedVariables = 0;\n    for (const [ i, entry ] of entriesSorted.entries()) {\n      const sharedVariables = first.metadata.variables\n        .filter(variableFirst => entry.metadata.variables\n          .some(variableSecond => variableFirst.equals(variableSecond))).length;\n      if (!second || (sharedVariables > secondSharedVariables ||\n        (sharedVariables === secondSharedVariables &&\n          (entry.metadata.variables.length < second.metadata.variables.length ||\n            (entry.metadata.variables.length === second.metadata.variables.length &&\n              entry.metadata.cardinality.value < second.metadata.cardinality.value))))) {\n        second = entry;\n        secondIndex = i;\n        secondSharedVariables = sharedVariables;\n      }\n    }\n\n    if (secondSharedVariables === 0) {\n      throw new Error(`Actor ${this.name} can only join with common variables`);\n    }\n\n    const remaining = entriesSorted;\n    remaining.splice(secondIndex, 1);\n    return { first, second: second!, remaining };\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    // Determine the two smallest streams by sorting (e.g. via cardinality)\n    const entriesUnsorted = await ActorRdfJoin.getEntriesWithMetadatas([ ...action.entries ]);\n    const { first, second: secondIn, remaining: remainingIn } = await this.sortJoinEntries(\n      entriesUnsorted,\n      action.context,\n    );\n\n    // Clone first stream, because we will use it twice\n    const smallestStream1 = first.output.bindingsStream;\n    first.output.bindingsStream = smallestStream1.clone();\n\n    // Project the first stream on common variables, and filter out duplicates\n    // The common variables array is guaranteed to be non-empty, due to the way the test of this actor is implemented.\n    const commonVariables = first.metadata.variables\n      .filter(variableFirst => secondIn.metadata.variables\n        .some(variableSecond => variableFirst.equals(variableSecond)));\n    const hashes: Record<string, boolean> = {};\n    const smallestStream1Projected: BindingsStream = smallestStream1.clone()\n      .map(binding => binding.filter((value, key) =>\n        commonVariables.some(commonVariable => commonVariable.equals(key))))\n      .filter((binding) => {\n        const hash: string = bindingsToString(binding);\n        return !(hash in hashes) && (hashes[hash] = true);\n      });\n\n    // Slice the first stream into chunks according to the block size, so we avoid blocking too long.\n    const chunkedStreams: AsyncIterator<AsyncIterator<RDF.Bindings>> = new ChunkedIterator(\n      smallestStream1Projected,\n      this.blockSize,\n      { autoStart: false },\n    );\n\n    // Push down bindings of first stream when querying for second stream\n    const sourceWrapper: IQuerySourceWrapper = ActorQueryOperation.getOperationSource(secondIn.operation)!;\n    const secondStream = new UnionIterator(chunkedStreams.map(chunk => sourceWrapper.source.queryBindings(\n      secondIn.operation,\n      sourceWrapper.context ? action.context.merge(sourceWrapper.context) : action.context,\n      { filterBindings: { bindings: chunk, metadata: first.metadata }},\n    )));\n    const second: IJoinEntry = {\n      output: {\n        type: 'bindings',\n        bindingsStream: secondStream,\n        metadata: secondIn.output.metadata,\n      },\n      operation: secondIn.operation,\n      operationModified: true,\n    };\n\n    // Destroy the unused original second stream\n    secondIn.output.bindingsStream.destroy();\n\n    // Join the two selected streams\n    const joinedEntry: IJoinEntry = {\n      output: ActorQueryOperation.getSafeBindings(await this.mediatorJoin\n        .mediate({\n          type: action.type,\n          entries: [ first, second ],\n          context: action.context.set(KeysRdfJoin.lastPhysicalJoin, this.physicalName),\n        })),\n      operation: ActorRdfJoinMultiSmallestFilterBindings.FACTORY\n        .createJoin([ first.operation, second.operation ], false),\n      operationModified: true,\n    };\n\n    // And then join the result with the remaining streams\n    const remaining: IJoinEntry[] = remainingIn;\n    remaining.unshift(joinedEntry);\n\n    return {\n      result: await this.mediatorJoin.mediate({\n        type: action.type,\n        entries: remaining,\n        context: action.context,\n      }),\n      physicalPlanMetadata: {\n        firstIndex: entriesUnsorted.indexOf(first),\n        secondIndex: entriesUnsorted.indexOf(secondIn),\n      },\n    };\n  }\n\n  public async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    // Avoid infinite recursion\n    if (action.context.get(KeysRdfJoin.lastPhysicalJoin) === this.physicalName) {\n      throw new Error(`Actor ${this.name} can not be called recursively`);\n    }\n\n    metadatas = [ ...metadatas ];\n    // Determine the two smallest streams by sorting (e.g. via cardinality)\n    const { first, second, remaining } = await this.sortJoinEntries(action.entries\n      .map((entry, i) => ({ ...entry, metadata: metadatas[i] })), action.context);\n\n    // Only pass if the second entry accepts filterBindings\n    const sourceWrapper: IQuerySourceWrapper | undefined = ActorQueryOperation.getOperationSource(second.operation);\n    if (!sourceWrapper) {\n      throw new Error(`Actor ${this.name} can only process if entries[1] has a source`);\n    }\n    const testingOperation = second.operation;\n    const selectorShape = await sourceWrapper.source.getSelectorShape(action.context);\n    if (!ActorQueryOperation\n      .doesShapeAcceptOperation(selectorShape, testingOperation, { filterBindings: true })) {\n      throw new Error(`Actor ${this.name} can only process if entries[1] accept filterBindings`);\n    }\n\n    // Determine cost coefficients\n    metadatas = [ first.metadata, second.metadata, ...remaining.map(remain => remain.metadata) ];\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    const { selectivity } = await this.mediatorJoinSelectivity.mediate({\n      entries: [ first, second ],\n      context: action.context,\n    });\n    const cardinalityRemaining = remaining\n      .reduce((mul, remain) => mul * remain.metadata.cardinality.value * this.selectivityModifier, 1);\n\n    return {\n      iterations: selectivity * this.selectivityModifier *\n        second.metadata.cardinality.value * cardinalityRemaining,\n      persistedItems: first.metadata.cardinality.value,\n      blockingItems: first.metadata.cardinality.value,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + cardinalityRemaining * requestItemTimes[1],\n    };\n  }\n}\n\nexport interface IActorRdfJoinMultiSmallestFilterBindingsArgs extends IActorRdfJoinArgs {\n  /**\n   * Multiplier for selectivity values\n   * @range {double}\n   * @default {0.0001}\n   */\n  selectivityModifier: number;\n  /**\n   * The maximum amount of bindings to send to the source per block.\n   * @default {64}\n   */\n  blockSize: number;\n  /**\n   * The join entries sort mediator\n   */\n  mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n}\n","import {\n  ActorQueryOperation,\n} from '@comunica/bus-query-operation';\nimport type {\n  IActionRdfJoin,\n  IActorRdfJoinOutputInner,\n  IActorRdfJoinArgs,\n  MediatorRdfJoin,\n} from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { MediatorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { MetadataBindings, IJoinEntry, IActionContext, IJoinEntryWithMetadata } from '@comunica/types';\nimport { Factory } from 'sparqlalgebrajs';\n\n/**\n * A Multi Smallest RDF Join Actor.\n * It accepts 3 or more streams, joins the smallest two, and joins the result with the remaining streams.\n */\nexport class ActorRdfJoinMultiSmallest extends ActorRdfJoin {\n  public readonly mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  public readonly mediatorJoin: MediatorRdfJoin;\n\n  public static readonly FACTORY = new Factory();\n\n  public constructor(args: IActorRdfJoinMultiSmallestArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'multi-smallest',\n      limitEntries: 3,\n      limitEntriesMin: true,\n      canHandleUndefs: true,\n      isLeaf: false,\n    });\n  }\n\n  /**\n   * Order the given join entries using the join-entries-sort bus.\n   * @param {IJoinEntryWithMetadata[]} entries An array of join entries.\n   * @param context The action context.\n   * @return {IJoinEntryWithMetadata[]} The sorted join entries.\n   */\n  public async sortJoinEntries(\n    entries: IJoinEntryWithMetadata[],\n    context: IActionContext,\n  ): Promise<IJoinEntryWithMetadata[]> {\n    return (await this.mediatorJoinEntriesSort.mediate({ entries, context })).entries;\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    // Determine the two smallest streams by sorting (e.g. via cardinality)\n    const entries: IJoinEntry[] = await this.sortJoinEntries(\n      await ActorRdfJoin.getEntriesWithMetadatas([ ...action.entries ]),\n      action.context,\n    );\n    const smallestEntry1 = entries[0];\n    const smallestEntry2 = entries[1];\n    entries.splice(0, 2);\n\n    // Join the two selected streams, and then join the result with the remaining streams\n    const firstEntry: IJoinEntry = {\n      output: ActorQueryOperation.getSafeBindings(await this.mediatorJoin\n        .mediate({ type: action.type, entries: [ smallestEntry1, smallestEntry2 ], context: action.context })),\n      operation: ActorRdfJoinMultiSmallest.FACTORY\n        .createJoin([ smallestEntry1.operation, smallestEntry2.operation ], false),\n    };\n    entries.push(firstEntry);\n    return {\n      result: await this.mediatorJoin.mediate({\n        type: action.type,\n        entries,\n        context: action.context,\n      }),\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    metadatas = [ ...metadatas ];\n    // Determine the two smallest streams by sorting (e.g. via cardinality)\n    const entriesWithMetadata = await this.sortJoinEntries(action.entries\n      .map((entry, i) => ({ ...entry, metadata: metadatas[i] })), action.context);\n    metadatas = entriesWithMetadata.map(entry => entry.metadata);\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n\n    return {\n      iterations: metadatas[0].cardinality.value * metadatas[1].cardinality.value *\n        metadatas.slice(2).reduce((acc, metadata) => acc * metadata.cardinality.value, 1),\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1] +\n        metadatas.slice(2).reduce((sum, metadata, i) => sum + requestInitialTimes.slice(2)[i] +\n          metadata.cardinality.value * requestItemTimes.slice(2)[i], 0),\n    };\n  }\n}\n\nexport interface IActorRdfJoinMultiSmallestArgs extends IActorRdfJoinArgs {\n  /**\n   * The join entries sort mediator\n   */\n  mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort;\n  /**\n   * A mediator for joining Bindings streams\n   */\n  mediatorJoin: MediatorRdfJoin;\n}\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, MetadataBindings } from '@comunica/types';\nimport { NestedLoopJoin } from 'asyncjoin';\n\n/**\n * A comunica NestedLoop RDF Join Actor.\n */\nexport class ActorRdfJoinNestedLoop extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'nested-loop',\n      limitEntries: 2,\n      canHandleUndefs: true,\n    });\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const join = new NestedLoopJoin<Bindings, Bindings, Bindings>(\n      action.entries[0].output.bindingsStream,\n      action.entries[1].output.bindingsStream,\n      <any> ActorRdfJoin.joinBindings,\n      { autoStart: false },\n    );\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream: join,\n        metadata: async() => await this.constructResultMetadata(\n          action.entries,\n          await ActorRdfJoin.getMetadatas(action.entries),\n          action.context,\n        ),\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      iterations: metadatas[0].cardinality.value * metadatas[1].cardinality.value,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n","import { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport { MetadataValidationState } from '@comunica/metadata';\nimport type * as RDF from '@rdfjs/types';\nimport { ArrayIterator } from 'asynciterator';\n\n/**\n * A comunica None RDF Join Actor.\n */\nexport class ActorRdfJoinNone extends ActorRdfJoin {\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorRdfJoinNoneArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'none',\n      limitEntries: 0,\n    });\n  }\n\n  public override async test(action: IActionRdfJoin): Promise<IMediatorTypeJoinCoefficients> {\n    // Allow joining of one or zero streams\n    if (action.entries.length > 0) {\n      throw new Error(`Actor ${this.name} can only join zero entries`);\n    }\n    return await this.getJoinCoefficients();\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, action.context);\n    return {\n      result: {\n        bindingsStream: new ArrayIterator<RDF.Bindings>([ bindingsFactory.bindings() ], { autoStart: false }),\n        metadata: () => Promise.resolve({\n          state: new MetadataValidationState(),\n          cardinality: { type: 'exact', value: 1 },\n          canContainUndefs: false,\n          variables: [],\n        }),\n        type: 'bindings',\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(): Promise<IMediatorTypeJoinCoefficients> {\n    return {\n      iterations: 0,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: 0,\n    };\n  }\n}\n\nexport interface IActorRdfJoinNoneArgs extends IActorRdfJoinArgs {\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n}\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\n\n/**\n * A comunica Single RDF Join Actor.\n */\nexport class ActorRdfJoinSingle extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'single',\n      limitEntries: 1,\n    });\n    this.includeInLogs = false;\n  }\n\n  public override async test(action: IActionRdfJoin): Promise<IMediatorTypeJoinCoefficients> {\n    // Allow joining of one or zero streams\n    if (action.entries.length !== 1) {\n      throw new Error(`Actor ${this.name} can only join a single entry`);\n    }\n    return await this.getJoinCoefficients();\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    return {\n      result: action.entries[0].output,\n    };\n  }\n\n  protected async getJoinCoefficients(): Promise<IMediatorTypeJoinCoefficients> {\n    return {\n      iterations: 0,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: 0,\n    };\n  }\n}\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, MetadataBindings } from '@comunica/types';\nimport { SymmetricHashJoin } from 'asyncjoin';\n\n/**\n * A comunica Hash RDF Join Actor.\n */\nexport class ActorRdfJoinSymmetricHash extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinSymmetricHashArgs) {\n    super(args, {\n      logicalType: 'inner',\n      physicalName: 'symmetric-hash',\n      limitEntries: 2,\n      requiresVariableOverlap: true,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n    const variables = ActorRdfJoin.overlappingVariables(metadatas);\n    const join = new SymmetricHashJoin<Bindings, string, Bindings>(\n      action.entries[0].output.bindingsStream,\n      action.entries[1].output.bindingsStream,\n      entry => ActorRdfJoinSymmetricHash.hash(entry, variables),\n      <any> ActorRdfJoin.joinBindings,\n    );\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream: join,\n        metadata: async() => await this.constructResultMetadata(action.entries, metadatas, action.context),\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      iterations: metadatas[0].cardinality.value + metadatas[1].cardinality.value,\n      persistedItems: metadatas[0].cardinality.value + metadatas[1].cardinality.value,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n\nexport interface IActorRdfJoinSymmetricHashArgs extends IActorRdfJoinArgs {\n}\n","import { ClosableTransformIterator } from '@comunica/bus-query-operation';\nimport type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport {\n  ActorRdfJoin,\n} from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { MetadataBindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { BindingsIndex } from './BindingsIndex';\n\n/**\n * A comunica Minus Hash RDF Join Actor.\n */\nexport class ActorRdfJoinMinusHashUndef extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'minus',\n      physicalName: 'hash-undef',\n      limitEntries: 2,\n      canHandleUndefs: true,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const buffer = action.entries[1].output;\n    const output = action.entries[0].output;\n\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n    const commonVariables: RDF.Variable[] = ActorRdfJoin.overlappingVariables(metadatas);\n    if (commonVariables.length > 0) {\n      /**\n       * To assure we've filtered all B (`buffer`) values from A (`output`) we wait until we've fetched all values of B.\n       * Then we save these triples in `index` and use it to filter our A-stream.\n       */\n      const index: BindingsIndex = new BindingsIndex(commonVariables);\n      const bindingsStream = new ClosableTransformIterator(async() => {\n        await new Promise((resolve) => {\n          buffer.bindingsStream.on('data', data => index.add(data));\n          buffer.bindingsStream.on('end', resolve);\n          buffer.bindingsStream.on('error', (error) => {\n            bindingsStream.emit('error', error);\n          });\n        });\n        return output.bindingsStream.filter(data => !index.contains(data));\n      }, {\n        autoStart: false,\n        onClose() {\n          buffer.bindingsStream.destroy();\n          output.bindingsStream.destroy();\n        },\n      });\n      return {\n        result: {\n          type: 'bindings',\n          bindingsStream,\n          async metadata() {\n            const bufferMetadata = await output.metadata();\n            const outputMetadata = await output.metadata();\n            return {\n              ...outputMetadata,\n              canContainUndefs: bufferMetadata.canContainUndefs || outputMetadata.canContainUndefs,\n            };\n          },\n        },\n      };\n    }\n    // Destroy the buffer stream since it is not needed when\n    // there are no common variables.\n    buffer.bindingsStream.destroy();\n    return {\n      result: output,\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      // Slightly increase iteration cost, as operations in our BindingsIndex do not happen in constant time\n      // This enables the mediator to favor other minus actors,\n      // while this one will only be selected when streams contain undefs.\n      iterations: (metadatas[0].cardinality.value + metadatas[1].cardinality.value) * 1.01,\n      persistedItems: metadatas[0].cardinality.value,\n      blockingItems: metadatas[0].cardinality.value,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n","import type { Bindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { termToString } from 'rdf-string';\n\n/**\n * A simple efficient tree-based index for maintaining bindings,\n * and checking whether or not a bindings is contained in this index.\n *\n * This will consider bindings with a variable term or a missing term\n * as a 'match-all' with other terms.\n */\nexport class BindingsIndex {\n  private readonly keys: RDF.Variable[];\n  private readonly data: IDataIndex = {};\n\n  public constructor(keys: RDF.Variable[]) {\n    this.keys = keys;\n  }\n\n  protected static hashTerm(term: RDF.Term | undefined): string {\n    return term && term.termType !== 'Variable' ? termToString(term) : '';\n  }\n\n  /**\n   * Add the given bindings to the index.\n   * @param {Bindings} bindings A bindings.\n   */\n  public add(bindings: Bindings): void {\n    if (this.isBindingsValid(bindings)) {\n      let dataIt = this.data;\n      for (const key of this.keys) {\n        const dataKey = BindingsIndex.hashTerm(bindings.get(key));\n        let subDataIt = dataIt[dataKey];\n        if (!subDataIt) {\n          subDataIt = dataIt[dataKey] = {};\n        }\n        dataIt = subDataIt;\n      }\n    }\n  }\n\n  /**\n   * Check if the given bindings is contained in this index.\n   * @param {Bindings} bindings A bindings.\n   * @return {boolean} If it exists in the index.\n   */\n  public contains(bindings: Bindings): boolean {\n    // Always return false if the bindings contain none of the expected keys\n    if (!this.isBindingsValid(bindings)) {\n      return false;\n    }\n\n    return this.containsRecursive(bindings, this.keys, [ this.data ]);\n  }\n\n  protected isBindingsValid(bindings: Bindings): boolean {\n    let validKeys = false;\n    for (const key of this.keys) {\n      if (bindings.get(key)) {\n        validKeys = true;\n        break;\n      }\n    }\n    return validKeys;\n  }\n\n  protected containsRecursive(bindings: Bindings, keys: RDF.Variable[], dataIndexes: IDataIndex[]): boolean {\n    if (keys.length === 0) {\n      return true;\n    }\n\n    let key: RDF.Variable;\n    // eslint-disable-next-line prefer-const\n    [ key, ...keys ] = keys;\n    for (const data of dataIndexes) {\n      // If the index contained a variable, all terms will match.\n      const dataKey = BindingsIndex.hashTerm(bindings.get(key));\n      if (dataKey) {\n        // Check the entry for the term, and the variable term.\n        const subDatas = [ data[dataKey], data[''] ].filter(Boolean);\n        if (subDatas.length === 0) {\n          continue;\n        }\n        if (this.containsRecursive(bindings, keys, subDatas)) {\n          return true;\n        }\n      } else {\n        // Iterate over all entries\n        let subDatas = Object.keys(data).map(subKey => data[subKey]);\n        if (subDatas.length === 0) {\n          subDatas = [{}];\n        }\n        if (this.containsRecursive(bindings, keys, subDatas)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\nexport interface IDataIndex {\n  [key: string]: IDataIndex;\n}\n","import { ClosableTransformIterator } from '@comunica/bus-query-operation';\nimport type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport {\n  ActorRdfJoin,\n} from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { MetadataBindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\n\n/**\n * A comunica Minus Hash RDF Join Actor.\n */\nexport class ActorRdfJoinMinusHash extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'minus',\n      physicalName: 'hash',\n      limitEntries: 2,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const buffer = action.entries[1].output;\n    const output = action.entries[0].output;\n\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n    const commonVariables: RDF.Variable[] = ActorRdfJoin.overlappingVariables(metadatas);\n    if (commonVariables.length > 0) {\n      /**\n       * To assure we've filtered all B (`buffer`) values from A (`output`) we wait until we've fetched all values of B.\n       * Then we save these triples in `index` and use it to filter our A-stream.\n       */\n      const index: Record<string, boolean> = {};\n      const bindingsStream = new ClosableTransformIterator(async() => {\n        await new Promise((resolve) => {\n          buffer.bindingsStream.on('data', (data) => {\n            index[ActorRdfJoin.hashNonClashing(data, commonVariables)] = true;\n          });\n          buffer.bindingsStream.on('end', resolve);\n          buffer.bindingsStream.on('error', (error) => {\n            bindingsStream.emit('error', error);\n          });\n        });\n        return output.bindingsStream.filter(data => !index[ActorRdfJoin.hashNonClashing(data, commonVariables)]);\n      }, {\n        autoStart: false,\n        onClose() {\n          buffer.bindingsStream.destroy();\n          output.bindingsStream.destroy();\n        },\n      });\n      return {\n        result: {\n          type: 'bindings',\n          bindingsStream,\n          metadata: output.metadata,\n        },\n      };\n    }\n    // Destroy the buffer stream since it is not needed when\n    // there are no common variables.\n    buffer.bindingsStream.destroy();\n    return {\n      result: output,\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      iterations: metadatas[0].cardinality.value + metadatas[1].cardinality.value,\n      persistedItems: metadatas[0].cardinality.value,\n      blockingItems: metadatas[0].cardinality.value,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n","import type { BindOrder } from '@comunica/actor-rdf-join-inner-multi-bind';\nimport { ActorRdfJoinMultiBind } from '@comunica/actor-rdf-join-inner-multi-bind';\nimport { BindingsFactory } from '@comunica/bindings-factory';\nimport type { MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { MediatorQueryOperation } from '@comunica/bus-query-operation';\nimport { ActorQueryOperation } from '@comunica/bus-query-operation';\nimport type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, BindingsStream, MetadataBindings } from '@comunica/types';\nimport { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica Optional Bind RDF Join Actor.\n */\nexport class ActorRdfJoinOptionalBind extends ActorRdfJoin {\n  public readonly bindOrder: BindOrder;\n  public readonly selectivityModifier: number;\n  public readonly mediatorQueryOperation: MediatorQueryOperation;\n  public readonly mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n  public constructor(args: IActorRdfJoinOptionalBindArgs) {\n    super(args, {\n      logicalType: 'optional',\n      physicalName: 'bind',\n      limitEntries: 2,\n      canHandleUndefs: true,\n      isLeaf: false,\n    });\n  }\n\n  protected async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const bindingsFactory = await BindingsFactory.create(this.mediatorMergeBindingsContext, action.context);\n    // Close the right stream, since we don't need that one\n    action.entries[1].output.bindingsStream.close();\n\n    // Bind the right pattern for each binding in the stream\n    const subContext = action.context\n      .set(KeysQueryOperation.joinLeftMetadata, await action.entries[0].output.metadata())\n      .set(KeysQueryOperation.joinRightMetadatas, [ await action.entries[1].output.metadata() ]);\n    const bindingsStream: BindingsStream = ActorRdfJoinMultiBind.createBindStream(\n      this.bindOrder,\n      action.entries[0].output.bindingsStream,\n      [ action.entries[1].operation ],\n      async(operations: Algebra.Operation[], operationBindings: Bindings) => {\n        // Send the materialized patterns to the mediator for recursive join evaluation.\n        // Length of operations will always be 1\n        const operation = operations[0];\n        const output = ActorQueryOperation.getSafeBindings(await this.mediatorQueryOperation.mediate(\n          { operation, context: subContext?.set(KeysQueryOperation.joinBindings, operationBindings) },\n        ));\n        return output.bindingsStream;\n      },\n      true,\n      bindingsFactory,\n    );\n\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream,\n        metadata: async() => await this.constructResultMetadata(\n          action.entries,\n          await ActorRdfJoin.getMetadatas(action.entries),\n          action.context,\n          { canContainUndefs: true },\n          true,\n        ),\n      },\n    };\n  }\n\n  public async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    // This actor only works well with common variables\n    if (ActorRdfJoin.overlappingVariables(metadatas).length === 0) {\n      throw new Error(`Actor ${this.name} only join entries with at least one common variable`);\n    }\n\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n\n    // Reject binding on some operation types\n    if (action.entries[1].operation.type === Algebra.types.EXTEND ||\n      action.entries[1].operation.type === Algebra.types.GROUP) {\n      throw new Error(`Actor ${this.name} can not bind on Extend and Group operations`);\n    }\n\n    // Determine selectivity of join\n    const selectivity = (await this.mediatorJoinSelectivity.mediate({\n      entries: action.entries,\n      context: action.context,\n    })).selectivity * this.selectivityModifier;\n\n    return {\n      iterations: metadatas[0].cardinality.value * metadatas[1].cardinality.value * selectivity,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] +\n        metadatas[0].cardinality.value * (\n          requestItemTimes[0] +\n          requestInitialTimes[1] +\n          selectivity * metadatas[1].cardinality.value * requestItemTimes[1]\n        ),\n    };\n  }\n}\n\nexport interface IActorRdfJoinOptionalBindArgs extends IActorRdfJoinArgs {\n  /**\n   * The order in which elements should be bound\n   * @default {depth-first}\n   */\n  bindOrder: BindOrder;\n  /**\n   * Multiplier for selectivity values\n   * @range {double}\n   * @default {0.000001}\n   */\n  selectivityModifier: number;\n  /**\n   * The query operation mediator\n   */\n  mediatorQueryOperation: MediatorQueryOperation;\n  /**\n   * A mediator for creating binding context merge handlers\n   */\n  mediatorMergeBindingsContext: MediatorMergeBindingsContext;\n\n}\n","import { ClosableTransformIterator } from '@comunica/bus-query-operation';\nimport { ActorRdfJoin } from '@comunica/bus-rdf-join';\nimport type {\n  IActionRdfJoin,\n  IActorRdfJoinArgs,\n  IActorRdfJoinOutputInner,\n} from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { BindingsStream, MetadataBindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { UnionIterator, ArrayIterator, MultiTransformIterator, BufferedIterator } from 'asynciterator';\nimport { termToString } from 'rdf-string';\nimport { BindingsIndexDef } from './BindingsIndexDef';\nimport { BindingsIndexUndef } from './BindingsIndexUndef';\nimport type { IBindingsIndex } from './IBindingsIndex';\n\n/**\n * A comunica Optional Hash RDF Join Actor.\n */\nexport class ActorRdfJoinOptionalHash extends ActorRdfJoin {\n  private readonly blocking: boolean;\n\n  public constructor(args: IActorRdfJoinOptionalHashArgs) {\n    super(args, {\n      logicalType: 'optional',\n      physicalName: `hash-${args.canHandleUndefs ? 'undef' : 'def'}-${args.blocking ? 'blocking' : 'nonblocking'}`,\n      limitEntries: 2,\n      canHandleUndefs: args.canHandleUndefs,\n      requiresVariableOverlap: true,\n    });\n  }\n\n  public static constructIndex<V>(undef: boolean, commonVariables: RDF.Variable[]): IBindingsIndex<V> {\n    return undef ?\n      new BindingsIndexUndef(\n        commonVariables,\n        (term: RDF.Term | undefined) => term && term.termType !== 'Variable' ? termToString(term) : '',\n      ) :\n      new BindingsIndexDef(commonVariables, ActorRdfJoin.hashNonClashing);\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const buffer = action.entries[1].output;\n    const output = action.entries[0].output;\n\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n    const commonVariables: RDF.Variable[] = ActorRdfJoin.overlappingVariables(metadatas);\n\n    let bindingsStream: BindingsStream;\n    if (this.blocking) {\n      // -- Blocking optional ---\n\n      bindingsStream = new ClosableTransformIterator(async() => {\n        // We index all bindings from the right-hand OPTIONAL iterator first in a blocking manner.\n        const index: IBindingsIndex<RDF.Bindings[]> = ActorRdfJoinOptionalHash\n          .constructIndex(this.canHandleUndefs, commonVariables);\n        await new Promise((resolve) => {\n          buffer.bindingsStream.on('data', (bindings) => {\n            const iterator = index.getFirst(bindings) ?? index.put(bindings, []);\n            iterator.push(bindings);\n          });\n          buffer.bindingsStream.on('end', resolve);\n          buffer.bindingsStream.on('error', (error) => {\n            bindingsStream.emit('error', error);\n          });\n        });\n\n        // Start our left-hand iterator and try to join with the index\n        return new MultiTransformIterator(\n          output.bindingsStream,\n          {\n            multiTransform: (bindings: RDF.Bindings): AsyncIterator<RDF.Bindings> => new ArrayIterator<RDF.Bindings>(\n              <RDF.Bindings[]>(index.get(bindings).flat())\n                .map(indexBindings => ActorRdfJoin.joinBindings(bindings, indexBindings))\n                .filter(b => b !== null),\n              { autoStart: false },\n            ),\n            optional: true,\n            autoStart: false,\n          },\n        );\n      }, {\n        autoStart: false,\n        onClose() {\n          buffer.bindingsStream.destroy();\n          output.bindingsStream.destroy();\n        },\n      });\n    } else {\n      // -- Non-blocking optional ---\n      // This can be slightly slower than the blocking one above, due to the streaming overhead.\n\n      bindingsStream = new ClosableTransformIterator(async() => {\n        // We index all bindings from the right-hand OPTIONAL iterator.\n        // They are indexed with iterator values, so our main stream can already get started.\n        const index: IBindingsIndex<BufferedIterator<RDF.Bindings>> = ActorRdfJoinOptionalHash\n          .constructIndex(this.canHandleUndefs, commonVariables);\n        let indexActive = true;\n        buffer.bindingsStream.on('data', (bindings) => {\n          const iterator = index.getFirst(bindings) ??\n            index.put(bindings, new BufferedIterator<RDF.Bindings>({ autoStart: false }));\n          (<any> iterator)._push(bindings);\n        });\n        buffer.bindingsStream.on('end', () => {\n          for (const iterator of index.values()) {\n            iterator.close();\n          }\n          indexActive = false;\n        });\n        buffer.bindingsStream.on('error', (error) => {\n          bindingsStream.emit('error', error);\n        });\n\n        // Start our left-hand iterator and try to join with the index\n        return new MultiTransformIterator(\n          output.bindingsStream,\n          {\n            multiTransform: (bindings: RDF.Bindings): AsyncIterator<RDF.Bindings> => {\n              // Find iterators from the index\n              let iterators: AsyncIterator<RDF.Bindings>[] = index.get(bindings);\n\n              // If no index entry was found, set an empty iterator.\n              // If we index has been closed already, don't modify the index, but just use an empty dummy iterator.\n              if (iterators.length === 0) {\n                if (indexActive) {\n                  iterators = [ index.put(bindings, new BufferedIterator<RDF.Bindings>({ autoStart: false })) ];\n                } else {\n                  iterators = [];\n                }\n              }\n\n              // Merge all iterators in a single one,\n              // and clone each one to make sure we can still use them in the future.\n              const iterator = new UnionIterator<RDF.Bindings>(iterators.map(it => it.clone()), { autoStart: false });\n              return iterator.map(indexBindings => ActorRdfJoin.joinBindings(bindings, indexBindings));\n            },\n            optional: true,\n            autoStart: false,\n          },\n        );\n      }, {\n        autoStart: false,\n        onClose() {\n          buffer.bindingsStream.destroy();\n          output.bindingsStream.destroy();\n        },\n      });\n    }\n\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream,\n        metadata: async() => await this.constructResultMetadata(\n          action.entries,\n          await ActorRdfJoin.getMetadatas(action.entries),\n          action.context,\n          { canContainUndefs: true },\n          true,\n        ),\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    let iterations = metadatas[0].cardinality.value + metadatas[1].cardinality.value;\n    if (!this.canHandleUndefs) {\n      // Our non-undef implementation is slightly more performant.\n      iterations *= 0.8;\n    }\n    if (this.blocking) {\n      // Our blocking implementation is slightly more performant.\n      iterations *= 0.9;\n    }\n    return {\n      iterations,\n      persistedItems: metadatas[0].cardinality.value,\n      blockingItems: this.blocking ? metadatas[0].cardinality.value : 0,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n\nexport interface IActorRdfJoinOptionalHashArgs extends IActorRdfJoinArgs {\n  /**\n   * If this actor can handle undefined values.\n   * If false, performance will be slightly better.\n   */\n  canHandleUndefs: boolean;\n  /**\n   * If the join will block when collecting the optional stream.\n   * If true, performance will be better.\n   */\n  blocking: boolean;\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { IBindingsIndex } from './IBindingsIndex';\n\n/**\n * A simple efficient hash-based index for maintaining bindings,\n * and checking whether or not a bindings is contained in this index.\n *\n * This can not handle bindings with undefined values.\n */\nexport class BindingsIndexDef<V> implements IBindingsIndex<V> {\n  private readonly keys: RDF.Variable[];\n  private readonly hashFn: (term: RDF.Bindings, keys: RDF.Variable[]) => string;\n  private readonly index: Record<string, V>;\n\n  public constructor(keys: RDF.Variable[], hashFn: (term: RDF.Bindings, keys: RDF.Variable[]) => string) {\n    this.keys = keys;\n    this.hashFn = hashFn;\n    this.index = {};\n  }\n\n  public put(bindings: RDF.Bindings, value: V): V {\n    return this.index[this.hashFn(bindings, this.keys)] = value;\n  }\n\n  public get(bindings: RDF.Bindings): V[] {\n    const v = this.getFirst(bindings);\n    return v ? [ v ] : [];\n  }\n\n  public getFirst(bindings: RDF.Bindings): V | undefined {\n    return this.index[this.hashFn(bindings, this.keys)];\n  }\n\n  public values(): V[] {\n    return Object.values(this.index);\n  }\n}\n","import type { Bindings } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { IBindingsIndex } from './IBindingsIndex';\n\n/**\n * A simple efficient tree-based index for maintaining bindings,\n * and checking whether or not a bindings is contained in this index.\n *\n * This will consider bindings with a variable term or an undefined term\n * as a 'match-all' with other terms.\n */\nexport class BindingsIndexUndef<V> implements IBindingsIndex<V> {\n  private readonly keys: RDF.Variable[];\n  private readonly data: IDataIndex<V> = {};\n  private readonly hashFn: (term: RDF.Term | undefined) => string;\n\n  public constructor(keys: RDF.Variable[], hashFn: (term: RDF.Term | undefined) => string) {\n    this.keys = keys;\n    this.hashFn = hashFn;\n  }\n\n  /**\n   * Add the given bindings to the index.\n   * @param {Bindings} bindings A bindings.\n   * @param {V} value The value to put.\n   */\n  public put(bindings: Bindings, value: V): V {\n    if (this.isBindingsValid(bindings)) {\n      let dataIt: IDataIndex<V> | V = this.data;\n      for (let i = 0; i < this.keys.length; i++) {\n        const key = this.keys[i];\n        const dataKey = this.hashFn(bindings.get(key));\n        let subDataIt: IDataIndex<V> | V | undefined = (<IDataIndex<V>> dataIt)[dataKey];\n        if (!subDataIt) {\n          subDataIt = ((<IDataIndex<V>> dataIt))[dataKey] = i === this.keys.length - 1 ? value : {};\n        }\n        dataIt = subDataIt;\n      }\n    }\n    return value;\n  }\n\n  protected isBindingsValid(bindings: Bindings): boolean {\n    let validKeys = false;\n    for (const key of this.keys) {\n      if (bindings.has(key)) {\n        validKeys = true;\n        break;\n      }\n    }\n    return validKeys;\n  }\n\n  /**\n   * Get the value of the given bindings is contained in this index.\n   * @param {Bindings} bindings A bindings.\n   * @return {V[]} The values.\n   */\n  public get(bindings: Bindings): V[] {\n    // Always return undefined if the bindings contain none of the expected keys\n    if (!this.isBindingsValid(bindings)) {\n      return [];\n    }\n\n    return this.getRecursive(bindings, this.keys, [ this.data ]);\n  }\n\n  protected getRecursive(bindings: Bindings | undefined, keys: RDF.Variable[], dataIndexes: IDataIndex<V>[]): V[] {\n    if (keys.length === 0) {\n      return <V[]> dataIndexes;\n    }\n\n    let key: RDF.Variable;\n    // eslint-disable-next-line prefer-const\n    [ key, ...keys ] = keys;\n    const matchingRecursive: V[][] = [];\n    for (const data of dataIndexes) {\n      // If the index contained a variable, all terms will match.\n      const dataKey = this.hashFn(bindings?.get(key));\n      if (dataKey) {\n        // Check the entry for the term, and the variable term.\n        const subDatas = <IDataIndex<V>[]> [ data[dataKey], data[''] ].filter(Boolean);\n        if (subDatas.length === 0) {\n          continue;\n        }\n        matchingRecursive.push(this.getRecursive(bindings, keys, subDatas));\n      } else {\n        // Iterate over all entries\n        const subDatas = <IDataIndex<V>[]> Object.values(data);\n        if (subDatas.length === 0) {\n          continue;\n        }\n        matchingRecursive.push(this.getRecursive(bindings, keys, subDatas));\n      }\n    }\n    return matchingRecursive.flat();\n  }\n\n  /**\n   * Get the first value of the given bindings is contained in this index.\n   * @param {Bindings} bindings A bindings.\n   * @return {V | undefined} The value.\n   */\n  public getFirst(bindings: Bindings): V | undefined {\n    // Always return undefined if the bindings contain none of the expected keys\n    if (!this.isBindingsValid(bindings)) {\n      return undefined;\n    }\n\n    return this.getRecursiveFirst(bindings, this.keys, [ this.data ]);\n  }\n\n  protected getRecursiveFirst(bindings: Bindings, keys: RDF.Variable[], dataIndexes: IDataIndex<V>[]): V | undefined {\n    if (keys.length === 0) {\n      return <V> dataIndexes[0];\n    }\n\n    let key: RDF.Variable;\n    // eslint-disable-next-line prefer-const\n    [ key, ...keys ] = keys;\n    for (const data of dataIndexes) {\n      // If the index contained a variable, all terms will match.\n      const dataKey = this.hashFn(bindings.get(key));\n      if (dataKey) {\n        // Check the entry for the term, and the variable term.\n        const subDatas = <IDataIndex<V>[]> [ data[dataKey], data[''] ].filter(Boolean);\n        if (subDatas.length === 0) {\n          continue;\n        }\n        const ret = this.getRecursiveFirst(bindings, keys, subDatas);\n        if (ret) {\n          return ret;\n        }\n      } else {\n        // Iterate over all entries\n        const subDatas = <IDataIndex<V>[]> Object.values(data);\n        if (subDatas.length === 0) {\n          continue;\n        }\n        const ret = this.getRecursiveFirst(bindings, keys, subDatas);\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  public values(): V[] {\n    return this.keys.length === 0 ? [] : this.getRecursive(undefined, this.keys, [ this.data ]);\n  }\n}\n\nexport interface IDataIndex<V> {\n  [key: string]: IDataIndex<V> | V;\n}\n","import type { IActionRdfJoin, IActorRdfJoinOutputInner, IActorRdfJoinArgs } from '@comunica/bus-rdf-join';\nimport {\n  ActorRdfJoin,\n} from '@comunica/bus-rdf-join';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { Bindings, MetadataBindings } from '@comunica/types';\nimport { NestedLoopJoin } from 'asyncjoin';\n\n/**\n * A comunica Optional Nested Loop RDF Join Actor.\n */\nexport class ActorRdfJoinOptionalNestedLoop extends ActorRdfJoin {\n  public constructor(args: IActorRdfJoinArgs) {\n    super(args, {\n      logicalType: 'optional',\n      physicalName: 'nested-loop',\n      limitEntries: 2,\n      canHandleUndefs: true,\n    });\n  }\n\n  public async getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner> {\n    const join = new NestedLoopJoin<Bindings, Bindings, Bindings>(\n      action.entries[0].output.bindingsStream,\n      action.entries[1].output.bindingsStream,\n      <any> ActorRdfJoin.joinBindings,\n      { optional: true, autoStart: false },\n    );\n    return {\n      result: {\n        type: 'bindings',\n        bindingsStream: join,\n        metadata: async() => await this.constructResultMetadata(\n          action.entries,\n          await ActorRdfJoin.getMetadatas(action.entries),\n          action.context,\n          { canContainUndefs: true },\n          true,\n        ),\n      },\n    };\n  }\n\n  protected async getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients> {\n    const requestInitialTimes = ActorRdfJoin.getRequestInitialTimes(metadatas);\n    const requestItemTimes = ActorRdfJoin.getRequestItemTimes(metadatas);\n    return {\n      iterations: metadatas[0].cardinality.value * metadatas[1].cardinality.value,\n      persistedItems: 0,\n      blockingItems: 0,\n      requestTime: requestInitialTimes[0] + metadatas[0].cardinality.value * requestItemTimes[0] +\n        requestInitialTimes[1] + metadatas[1].cardinality.value * requestItemTimes[1],\n    };\n  }\n}\n","import type { IActionRdfJoinSelectivity, IActorRdfJoinSelectivityOutput } from '@comunica/bus-rdf-join-selectivity';\nimport { ActorRdfJoinSelectivity } from '@comunica/bus-rdf-join-selectivity';\nimport type { IActorArgs } from '@comunica/core';\nimport type { IMediatorTypeAccuracy } from '@comunica/mediatortype-accuracy';\nimport { Algebra, Util } from 'sparqlalgebrajs';\n\n/**\n * A comunica Variable Counting RDF Join Selectivity Actor.\n * Based on the \"variable counting predicates\" heuristic from\n * \"SPARQL basic graph pattern optimization using selectivity estimation.\"\n */\nexport class ActorRdfJoinSelectivityVariableCounting extends ActorRdfJoinSelectivity {\n  // Calculated as sum of unbound join type costs times 2 (best-case)\n  public static MAX_PAIRWISE_COST = 41 * 2;\n\n  public constructor(\n    args: IActorArgs<IActionRdfJoinSelectivity, IMediatorTypeAccuracy, IActorRdfJoinSelectivityOutput>,\n  ) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfJoinSelectivity): Promise<IMediatorTypeAccuracy> {\n    return { accuracy: 0.5 };\n  }\n\n  public static getPatternCost(pattern: Algebra.Pattern | Algebra.Path): number {\n    let cost = 1;\n    if (pattern.subject.termType === 'Variable') {\n      cost += 4;\n    }\n    if (pattern.predicate.termType === 'Variable' || pattern.type === Algebra.types.PATH) {\n      cost += 1;\n    }\n    if (pattern.object.termType === 'Variable') {\n      cost += 2;\n    }\n    if (pattern.graph.termType === 'Variable') {\n      cost += 1;\n    }\n    return cost / 9;\n  }\n\n  public static getJoinTypes(\n    operation1: Algebra.Pattern | Algebra.Path,\n    operation2: Algebra.Pattern | Algebra.Path,\n  ): JoinTypes[] {\n    const joinTypes: JoinTypes[] = [];\n\n    // Check operation1.subject\n    if (operation1.subject.termType === 'Variable') {\n      if (operation1.subject.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.unboundSS);\n      }\n      if (operation2.type === 'pattern' && operation1.subject.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.unboundSP);\n      }\n      if (operation1.subject.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.unboundSO);\n      }\n      if (operation1.subject.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.unboundSG);\n      }\n    } else {\n      if (operation1.subject.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.boundSS);\n      }\n      if (operation2.type === 'pattern' && operation1.subject.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.boundSP);\n      }\n      if (operation1.subject.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.boundSO);\n      }\n      if (operation1.subject.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.boundSG);\n      }\n    }\n\n    // Check operation1.predicate\n    if (operation1.type === 'pattern') {\n      if (operation1.predicate.termType === 'Variable') {\n        if (operation1.predicate.equals(operation2.subject)) {\n          joinTypes.push(JoinTypes.unboundPS);\n        }\n        if (operation2.type === 'pattern' && operation1.predicate.equals(operation2.predicate)) {\n          joinTypes.push(JoinTypes.unboundPP);\n        }\n        if (operation1.predicate.equals(operation2.object)) {\n          joinTypes.push(JoinTypes.unboundPO);\n        }\n        if (operation1.predicate.equals(operation2.graph)) {\n          joinTypes.push(JoinTypes.unboundPG);\n        }\n      } else {\n        if (operation1.predicate.equals(operation2.subject)) {\n          joinTypes.push(JoinTypes.boundPS);\n        }\n        if (operation2.type === 'pattern' && operation1.predicate.equals(operation2.predicate)) {\n          joinTypes.push(JoinTypes.boundPP);\n        }\n        if (operation1.predicate.equals(operation2.object)) {\n          joinTypes.push(JoinTypes.boundPO);\n        }\n        if (operation1.predicate.equals(operation2.graph)) {\n          joinTypes.push(JoinTypes.boundPG);\n        }\n      }\n    }\n\n    // Check operation1.object\n    if (operation1.object.termType === 'Variable') {\n      if (operation1.object.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.unboundOS);\n      }\n      if (operation2.type === 'pattern' && operation1.object.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.unboundOP);\n      }\n      if (operation1.object.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.unboundOO);\n      }\n      if (operation1.object.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.unboundOG);\n      }\n    } else {\n      if (operation1.object.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.boundOS);\n      }\n      if (operation2.type === 'pattern' && operation1.object.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.boundOP);\n      }\n      if (operation1.object.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.boundOO);\n      }\n      if (operation1.object.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.boundOG);\n      }\n    }\n\n    // Check operation1.graph\n    if (operation1.graph.termType === 'Variable') {\n      if (operation1.graph.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.unboundGS);\n      }\n      if (operation2.type === 'pattern' && operation1.graph.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.unboundGP);\n      }\n      if (operation1.graph.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.unboundGO);\n      }\n      if (operation1.graph.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.unboundGG);\n      }\n    } else {\n      if (operation1.graph.equals(operation2.subject)) {\n        joinTypes.push(JoinTypes.boundGS);\n      }\n      if (operation2.type === 'pattern' && operation1.graph.equals(operation2.predicate)) {\n        joinTypes.push(JoinTypes.boundGP);\n      }\n      if (operation1.graph.equals(operation2.object)) {\n        joinTypes.push(JoinTypes.boundGO);\n      }\n      if (operation1.graph.equals(operation2.graph)) {\n        joinTypes.push(JoinTypes.boundGG);\n      }\n    }\n\n    return joinTypes;\n  }\n\n  public static getOperationsPairwiseJoinCost(\n    operation1: Algebra.Pattern | Algebra.Path,\n    operation2: Algebra.Pattern | Algebra.Path,\n  ): number {\n    let cost = ActorRdfJoinSelectivityVariableCounting.MAX_PAIRWISE_COST;\n\n    for (const joinType of ActorRdfJoinSelectivityVariableCounting.getJoinTypes(operation1, operation2)) {\n      switch (joinType) {\n        case JoinTypes.boundSS:\n          cost -= 2 * 2;\n          break;\n        case JoinTypes.boundSP:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundSO:\n          cost -= 1 * 2;\n          break;\n        case JoinTypes.boundSG:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundPS:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundPP:\n          // Special case: patterns with equal (bound) predicates have the highest cost\n          return 1;\n        case JoinTypes.boundPO:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundPG:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundOS:\n          cost -= 1 * 2;\n          break;\n        case JoinTypes.boundOP:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundOO:\n          cost -= 1 * 2;\n          break;\n        case JoinTypes.boundOG:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundGS:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundGP:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundGO:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.boundGG:\n          cost -= 3 * 2;\n          break;\n        case JoinTypes.unboundSS:\n          cost -= 2;\n          break;\n        case JoinTypes.unboundSP:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundSO:\n          cost -= 1;\n          break;\n        case JoinTypes.unboundSG:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundPS:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundPP:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundPO:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundPG:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundOS:\n          cost -= 1;\n          break;\n        case JoinTypes.unboundOP:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundOO:\n          cost -= 1;\n          break;\n        case JoinTypes.unboundOG:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundGS:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundGP:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundGO:\n          cost -= 3;\n          break;\n        case JoinTypes.unboundGG:\n          cost -= 3;\n          break;\n      }\n    }\n\n    return cost / ActorRdfJoinSelectivityVariableCounting.MAX_PAIRWISE_COST;\n  }\n\n  public static getOperationsJoinCost(operations: Algebra.Operation[]): number {\n    // Determine all operations that select values (patterns and paths)\n    const patterns: (Algebra.Pattern | Algebra.Path)[] = [];\n    for (const operation of operations) {\n      Util.recurseOperation(operation, {\n        [Algebra.types.PATTERN](pattern: Algebra.Pattern): boolean {\n          patterns.push(pattern);\n          return false;\n        },\n        [Algebra.types.PATH](path: Algebra.Path): boolean {\n          patterns.push(path);\n          return false;\n        },\n      });\n    }\n\n    // Determine pairwise costs\n    let totalCost = 0;\n    let costEntries = 0;\n    for (const pattern1 of patterns) {\n      for (const pattern2 of patterns) {\n        if (pattern1 !== pattern2) {\n          totalCost += ActorRdfJoinSelectivityVariableCounting.getOperationsPairwiseJoinCost(pattern1, pattern2);\n          costEntries++;\n        }\n      }\n    }\n\n    // If there are no overlapping patterns, the cost is 1\n    if (costEntries === 0) {\n      return 1;\n    }\n\n    // Combine all pairwise costs, and multiply with costs of each pattern separately\n    return totalCost / costEntries * patterns\n      .reduce((factor, pattern) => factor * ActorRdfJoinSelectivityVariableCounting.getPatternCost(pattern), 1);\n  }\n\n  public async run(action: IActionRdfJoinSelectivity): Promise<IActorRdfJoinSelectivityOutput> {\n    if (action.entries.length <= 1) {\n      return { selectivity: 1 };\n    }\n    return {\n      selectivity: ActorRdfJoinSelectivityVariableCounting\n        .getOperationsJoinCost(action.entries.map(entry => entry.operation)),\n    };\n  }\n}\n\nexport enum JoinTypes {\n  boundSS,\n  boundSP,\n  boundSO,\n  boundSG,\n  boundPS,\n  boundPP,\n  boundPO,\n  boundPG,\n  boundOS,\n  boundOP,\n  boundOO,\n  boundOG,\n  boundGS,\n  boundGP,\n  boundGO,\n  boundGG,\n\n  unboundSS,\n  unboundSP,\n  unboundSO,\n  unboundSG,\n  unboundPS,\n  unboundPP,\n  unboundPO,\n  unboundPG,\n  unboundOS,\n  unboundOP,\n  unboundOO,\n  unboundOG,\n  unboundGS,\n  unboundGP,\n  unboundGO,\n  unboundGG,\n}\n","import type {\n  IActionRdfMetadataAccumulate,\n  IActorRdfMetadataAccumulateOutput,\n  IActorRdfMetadataAccumulateArgs,\n} from '@comunica/bus-rdf-metadata-accumulate';\nimport { ActorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type { IActorTest } from '@comunica/core';\n\n/**\n * A comunica CanContainUndefs RDF Metadata Accumulate Actor.\n */\nexport class ActorRdfMetadataAccumulateCanContainUndefs extends ActorRdfMetadataAccumulate {\n  public constructor(args: IActorRdfMetadataAccumulateArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfMetadataAccumulate): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfMetadataAccumulate): Promise<IActorRdfMetadataAccumulateOutput> {\n    // Return default value on initialize\n    if (action.mode === 'initialize') {\n      return { metadata: { canContainUndefs: false }};\n    }\n\n    // Otherwise, attempt to increment existing value\n    let canContainUndefs = action.accumulatedMetadata.canContainUndefs;\n    if (action.appendingMetadata.canContainUndefs) {\n      canContainUndefs = true;\n    }\n    return { metadata: { canContainUndefs }};\n  }\n}\n","import type {\n  IActionRdfMetadataAccumulate,\n  IActorRdfMetadataAccumulateOutput,\n  IActorRdfMetadataAccumulateArgs,\n} from '@comunica/bus-rdf-metadata-accumulate';\nimport { ActorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type { IActorTest } from '@comunica/core';\nimport type { QueryResultCardinality } from '@comunica/types';\n\n/**\n * A comunica Cardinality RDF Metadata Accumulate Actor.\n */\nexport class ActorRdfMetadataAccumulateCardinality extends ActorRdfMetadataAccumulate {\n  public constructor(args: IActorRdfMetadataAccumulateArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfMetadataAccumulate): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfMetadataAccumulate): Promise<IActorRdfMetadataAccumulateOutput> {\n    // Return default value on initialize\n    if (action.mode === 'initialize') {\n      return { metadata: { cardinality: { type: 'exact', value: 0 }}};\n    }\n\n    // Otherwise, attempt to update existing value\n    const cardinality: QueryResultCardinality = { ...action.accumulatedMetadata.cardinality };\n\n    if (cardinality.dataset) {\n      if (action.appendingMetadata.cardinality.dataset) {\n        // If the accumulated cardinality is dataset-wide\n        if (cardinality.dataset !== action.appendingMetadata.cardinality.dataset &&\n          action.appendingMetadata.subsetOf === cardinality.dataset) {\n          // If the appending cardinality refers to the subset of a dataset,\n          // use the cardinality of the subset.\n          return { metadata: { cardinality: action.appendingMetadata.cardinality }};\n        }\n        if (cardinality.dataset === action.appendingMetadata.cardinality.dataset) {\n          // If the appending cardinality is for the same dataset,\n          // keep the accumulated cardinality unchanged.\n          return { metadata: { cardinality }};\n        }\n        // If the appending cardinality refers to another dataset,\n        // remove the dataset scopes.\n        delete cardinality.dataset;\n      } else {\n        // If the appending cardinality refers to a dataset subset,\n        // keep the accumulated cardinality unchanged.\n        return { metadata: { cardinality }};\n      }\n    }\n\n    if (!action.appendingMetadata.cardinality || !Number.isFinite(action.appendingMetadata.cardinality.value)) {\n      // We're already at infinite, so ignore any later metadata\n      cardinality.type = 'estimate';\n      cardinality.value = Number.POSITIVE_INFINITY;\n    } else {\n      if (action.appendingMetadata.cardinality.type === 'estimate') {\n        cardinality.type = 'estimate';\n      }\n      cardinality.value += action.appendingMetadata.cardinality.value;\n    }\n\n    return { metadata: { cardinality }};\n  }\n}\n","import type {\n  IActionRdfMetadataAccumulate,\n  IActorRdfMetadataAccumulateOutput,\n  IActorRdfMetadataAccumulateArgs,\n} from '@comunica/bus-rdf-metadata-accumulate';\nimport { ActorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type { IActorTest } from '@comunica/core';\n\n/**\n * A comunica PageSize RDF Metadata Accumulate Actor.\n */\nexport class ActorRdfMetadataAccumulatePageSize extends ActorRdfMetadataAccumulate {\n  public constructor(args: IActorRdfMetadataAccumulateArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfMetadataAccumulate): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfMetadataAccumulate): Promise<IActorRdfMetadataAccumulateOutput> {\n    // Return nothing on initialize\n    if (action.mode === 'initialize') {\n      return { metadata: {}};\n    }\n\n    // Otherwise, attempt to increment existing value\n    return {\n      metadata: {\n        ...('pageSize' in action.accumulatedMetadata) || ('pageSize' in action.appendingMetadata) ?\n            {\n              pageSize: (action.accumulatedMetadata.pageSize ?? 0) + (action.appendingMetadata.pageSize ?? 0),\n            } :\n            {},\n      },\n    };\n  }\n}\n","import type {\n  IActionRdfMetadataAccumulate,\n  IActorRdfMetadataAccumulateOutput,\n  IActorRdfMetadataAccumulateArgs,\n} from '@comunica/bus-rdf-metadata-accumulate';\nimport { ActorRdfMetadataAccumulate } from '@comunica/bus-rdf-metadata-accumulate';\nimport type { IActorTest } from '@comunica/core';\n\n/**\n * A comunica RequestTime RDF Metadata Accumulate Actor.\n */\nexport class ActorRdfMetadataAccumulateRequestTime extends ActorRdfMetadataAccumulate {\n  public constructor(args: IActorRdfMetadataAccumulateArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfMetadataAccumulate): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfMetadataAccumulate): Promise<IActorRdfMetadataAccumulateOutput> {\n    // Return nothing on initialize\n    if (action.mode === 'initialize') {\n      return { metadata: {}};\n    }\n\n    // Otherwise, attempt to increment existing value\n    return {\n      metadata: {\n        ...('requestTime' in action.accumulatedMetadata) || ('requestTime' in action.appendingMetadata) ?\n            {\n              requestTime: (action.accumulatedMetadata.requestTime ?? 0) + (action.appendingMetadata.requestTime ?? 0),\n            } :\n            {},\n      },\n    };\n  }\n}\n","import type {\n  IActionRdfUpdateQuads,\n  IActorRdfUpdateQuadsArgs,\n  IQuadDestination,\n} from '@comunica/bus-rdf-update-quads';\nimport { ActorRdfUpdateQuadsDestination, getContextDestination } from '@comunica/bus-rdf-update-quads';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { RdfJsQuadDestination } from './RdfJsQuadDestination';\n\n/**\n * A comunica RDFJS Store RDF Update Quads Actor.\n */\nexport class ActorRdfUpdateQuadsRdfJsStore extends ActorRdfUpdateQuadsDestination {\n  public constructor(args: IActorRdfUpdateQuadsArgs) {\n    super(args);\n  }\n\n  public override async test(action: IActionRdfUpdateQuads): Promise<IActorTest> {\n    const destination = getContextDestination(action.context);\n    if (!destination || typeof destination === 'string' ||\n      (!('remove' in destination) && 'value' in destination && !(<RDF.Store> destination.value).remove)) {\n      throw new Error(`${this.name} received an invalid rdfjsStore.`);\n    }\n    return true;\n  }\n\n  protected async getDestination(context: IActionContext): Promise<IQuadDestination> {\n    const destination: any = <any> getContextDestination(context);\n    return new RdfJsQuadDestination('remove' in destination ? destination : destination.value);\n  }\n}\n","import type { IQuadDestination } from '@comunica/bus-rdf-update-quads';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { promisifyEventEmitter } from 'event-emitter-promisify';\nimport { DataFactory } from 'rdf-data-factory';\nimport { stringToTerm, termToString } from 'rdf-string';\n\nconst DF = new DataFactory();\n\n/**\n * A quad destination that wraps around an {@link RDF.Store}.\n */\nexport class RdfJsQuadDestination implements IQuadDestination {\n  private readonly store: RDF.Store;\n\n  public constructor(store: RDF.Store) {\n    this.store = store;\n  }\n\n  public delete(quads: AsyncIterator<RDF.Quad>): Promise<void> {\n    return promisifyEventEmitter(this.store.remove(quads));\n  }\n\n  public insert(quads: AsyncIterator<RDF.Quad>): Promise<void> {\n    return promisifyEventEmitter(this.store.import(quads));\n  }\n\n  public async deleteGraphs(\n    graphs: RDF.DefaultGraph | 'NAMED' | 'ALL' | RDF.NamedNode[],\n    _requireExistence: boolean,\n    _dropGraphs: boolean,\n  ): Promise<void> {\n    switch (graphs) {\n      case 'ALL':\n        /* eslint-disable no-fallthrough */\n        // Remove the default graph\n        await promisifyEventEmitter(this.store.deleteGraph(DF.defaultGraph()));\n        // Drop through to remove all named graphs\n      case 'NAMED':\n        /* eslint-enable no-fallthrough */\n        // Warning: this is sub-optimal!\n        // Query ALL quads to determine all named graphs\n        // eslint-disable-next-line no-case-declarations\n        const allQuads = this.store.match();\n        // eslint-disable-next-line no-case-declarations\n        const namedGraphs: Record<string, boolean> = {};\n        allQuads.on('data', (quad: RDF.Quad) => {\n          if (quad.graph.termType !== 'DefaultGraph') {\n            namedGraphs[termToString(quad.graph)] = true;\n          }\n        });\n        await promisifyEventEmitter(allQuads);\n\n        // Delete all named graphs\n        await Promise.all(Object.keys(namedGraphs)\n          .map(namedGraph => promisifyEventEmitter(this.store\n            .deleteGraph(<RDF.NamedNode> stringToTerm(namedGraph)))));\n        break;\n      default:\n        // Delete the default graph or a named graph\n        for (const graph of Array.isArray(graphs) ? graphs : [ graphs ]) {\n          await promisifyEventEmitter(this.store.deleteGraph(graph));\n        }\n    }\n  }\n\n  public async createGraphs(graphs: RDF.NamedNode[], requireNonExistence: boolean): Promise<void> {\n    // We don't have to create anything, since RDF/JS stores don't record empty graphs.\n\n    // The only check we have to do is error on existence\n    if (requireNonExistence) {\n      for (const graph of graphs) {\n        const eventEmitter = this.store.match(undefined, undefined, undefined, graph);\n        await new Promise<void>((resolve, reject) => {\n          eventEmitter.once('data', () => {\n            reject(new Error(`Unable to create graph ${graph.value} as it already exists`));\n          });\n          eventEmitter.on('end', resolve);\n          eventEmitter.on('error', reject);\n        });\n      }\n    }\n  }\n}\n","import type { IBindingsContextMergeHandler } from '@comunica/bus-merge-bindings-context';\nimport { ActionContext } from '@comunica/core';\nimport type { IActionContext, IActionContextKey } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { Map } from 'immutable';\nimport { bindingsToString } from './bindingsToString';\n\n/**\n * An immutable.js-based Bindings object.\n */\nexport class Bindings implements RDF.Bindings {\n  public readonly type = 'bindings';\n\n  private readonly dataFactory: RDF.DataFactory;\n  private readonly entries: Map<string, RDF.Term>;\n  private readonly contextHolder: IContextHolder | undefined;\n\n  public constructor(dataFactory: RDF.DataFactory, entries: Map<string, RDF.Term>, contextHolder?: IContextHolder) {\n    this.dataFactory = dataFactory;\n    this.entries = entries;\n    this.contextHolder = contextHolder;\n  }\n\n  public has(key: RDF.Variable | string): boolean {\n    return this.entries.has(typeof key === 'string' ? key : key.value);\n  }\n\n  public get(key: RDF.Variable | string): RDF.Term | undefined {\n    return this.entries.get(typeof key === 'string' ? key : key.value);\n  }\n\n  public set(key: RDF.Variable | string, value: RDF.Term): Bindings {\n    return new Bindings(\n      this.dataFactory,\n      this.entries.set(typeof key === 'string' ? key : key.value, value),\n      this.contextHolder,\n    );\n  }\n\n  public delete(key: RDF.Variable | string): Bindings {\n    return new Bindings(\n      this.dataFactory,\n      this.entries.delete(typeof key === 'string' ? key : key.value),\n      this.contextHolder,\n    );\n  }\n\n  public keys(): Iterable<RDF.Variable> {\n    return this.mapIterable<string, RDF.Variable>(\n      this.iteratorToIterable(this.entries.keys()),\n      key => this.dataFactory.variable!(key),\n    );\n  }\n\n  public values(): Iterable<RDF.Term> {\n    return this.iteratorToIterable(this.entries.values());\n  }\n\n  public forEach(fn: (value: RDF.Term, key: RDF.Variable) => any): void {\n    for (const [ key, value ] of this.entries.entries()) {\n      fn(value, this.dataFactory.variable!(key));\n    }\n  }\n\n  public get size(): number {\n    return this.entries.size;\n  }\n\n  public [Symbol.iterator](): Iterator<[RDF.Variable, RDF.Term]> {\n    return this.mapIterable<[string, RDF.Term], [RDF.Variable, RDF.Term]>(\n      this.iteratorToIterable(<Iterator<[string, RDF.Term]>> this.entries.entries()),\n      ([ key, value ]) => [ this.dataFactory.variable!(key), value ],\n    )[Symbol.iterator]();\n  }\n\n  public equals(other: RDF.Bindings | null | undefined): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n\n    // First check if size is equal\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    // Then check if keys and values are equal\n    for (const key of this.keys()) {\n      if (!this.get(key)?.equals(other.get(key))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public filter(fn: (value: RDF.Term, key: RDF.Variable) => boolean): Bindings {\n    return new Bindings(this.dataFactory, Map(<any> this.entries\n      .filter((value, key) => fn(value, this.dataFactory.variable!(key)))), this.contextHolder);\n  }\n\n  public map(fn: (value: RDF.Term, key: RDF.Variable) => RDF.Term): Bindings {\n    return new Bindings(this.dataFactory, Map(<any> this.entries\n      .map((value, key) => fn(value, this.dataFactory.variable!(key)))), this.contextHolder);\n  }\n\n  public merge(other: RDF.Bindings | Bindings): Bindings | undefined {\n    // Determine the union of keys\n    const keys = new Set([\n      ...this.iteratorToIterable(this.entries.keys()),\n      ...[ ...other.keys() ].map(key => key.value),\n    ]);\n\n    // Collect entries\n    const entries: [string, RDF.Term][] = [];\n    for (const key of keys) {\n      const left = this.entries.get(key)!;\n      const right = other.get(this.dataFactory.variable!(key));\n      if (left && right && !left.equals(right)) {\n        return;\n      }\n      const value = left || right;\n      entries.push([ key, value ]);\n    }\n\n    return this.createBindingsWithContexts(entries, other);\n  }\n\n  public mergeWith(\n    merger: (self: RDF.Term, other: RDF.Term, key: RDF.Variable) => RDF.Term,\n    other: RDF.Bindings | Bindings,\n  ): Bindings {\n    // Determine the union of keys\n    const keys = new Set([\n      ...this.iteratorToIterable(this.entries.keys()),\n      ...[ ...other.keys() ].map(key => key.value),\n    ]);\n\n    // Collect entries\n    const entries: [string, RDF.Term][] = [];\n    for (const key of keys) {\n      const variable = this.dataFactory.variable!(key);\n      const left = this.entries.get(key)!;\n      const right = other.get(variable);\n      let value: RDF.Term;\n      if (left && right && !left.equals(right)) {\n        value = merger(left, right, variable);\n      } else {\n        value = left || right;\n      }\n      entries.push([ key, value ]);\n    }\n\n    return this.createBindingsWithContexts(entries, other);\n  }\n\n  protected createBindingsWithContexts(entries: [string, RDF.Term][], other: RDF.Bindings | Bindings): Bindings {\n    // If any context is empty, we skip merging contexts\n    if (this.contextHolder && this.contextHolder.context) {\n      let mergedContext = this.contextHolder.context;\n      // Only merge if the other has a context\n      if ('contextHolder' in other && other.contextHolder && other.contextHolder.context) {\n        mergedContext = Bindings\n          .mergeContext(this.contextHolder.contextMergeHandlers, mergedContext, other.contextHolder.context);\n      }\n      return new Bindings(\n        this.dataFactory,\n        Map(entries),\n        { contextMergeHandlers: this.contextHolder.contextMergeHandlers, context: mergedContext },\n      );\n    }\n\n    // Otherwise, use optional context from other\n    return new Bindings(this.dataFactory, Map(entries), (<Bindings> other).contextHolder);\n  }\n\n  private static mergeContext(\n    contextMergeHandlers: Record<string, IBindingsContextMergeHandler<any>>,\n    context: IActionContext,\n    otherContext: IActionContext,\n  ): IActionContext {\n    // All keys can contain duplicates, we prevent this by checking our built datamap for duplicates\n    const allKeys = [ ...context.keys(), ...otherContext.keys() ];\n    // Map we build up with merged context values\n    const newContextData: Record<string, any> = {};\n    const handledKeys: Record<string, number> = {};\n\n    // Set of names of keys in other context to allow for constant time lookup\n    const keysSetOtherContext = new Set(\n      otherContext.keys().map(key => key.name),\n    );\n    const keysBothContext = context.keys().filter(\n      key => keysSetOtherContext.has(key.name),\n    );\n\n    for (const key of allKeys) {\n      // If duplicate key, we continue iterating\n      if (handledKeys[key.name] === 1) {\n        continue;\n      }\n\n      // We've processed this key and shouldn't repeat it\n      handledKeys[key.name] = 1;\n\n      // Determine whether this key occurs in both contexts\n      const occursInBoth = keysBothContext.some(x => x.name === key.name);\n\n      // If we execute this function, we already check for existence of context merge handlers\n      // This if statement is first as the most likely case for non-empty contexts is that we have mergehandlers\n      // and both contexts have an entry\n      if (contextMergeHandlers[key.name] && occursInBoth) {\n        newContextData[key.name] = contextMergeHandlers[key.name]\n          .run(context.get(key), otherContext.get(key));\n        continue;\n      }\n      // If we have no merge handler, but both contexts have entries for key, we don't add it to new context\n      if (!contextMergeHandlers[key.name] && occursInBoth) {\n        continue;\n      }\n\n      // If key doesn't occur in own context, it must be in other context\n      // (if we get to this point, the key doesn't occur in both)\n      if (!context.get(key)) {\n        newContextData[key.name] = otherContext.get(key);\n        continue;\n      }\n      // This could likely be else statement, but don't want to risk it\n      if (!otherContext.get(key)) {\n        newContextData[key.name] = context.get(key);\n      }\n    }\n    return new ActionContext(newContextData);\n  }\n\n  public setContextEntry<V>(key: IActionContextKey<V>, value: any): Bindings {\n    return this.setContextEntryRaw(key, value);\n  }\n\n  public setContextEntryRaw<V>(key: IActionContextKey<V>, value: any): Bindings {\n    if (this.contextHolder && this.contextHolder.context) {\n      return new Bindings(\n        this.dataFactory,\n        this.entries,\n        {\n          contextMergeHandlers: this.contextHolder.contextMergeHandlers,\n          context: this.contextHolder.context.set(key, value),\n        },\n      );\n    }\n    return new Bindings(\n      this.dataFactory,\n      this.entries,\n      {\n        contextMergeHandlers: this.contextHolder?.contextMergeHandlers ?? {},\n        context: new ActionContext().set(key, value),\n      },\n    );\n  }\n\n  public deleteContextEntry<V>(key: IActionContextKey<V>): Bindings {\n    return this.deleteContextEntryRaw(key);\n  }\n\n  public deleteContextEntryRaw<V>(key: IActionContextKey<V>): Bindings {\n    if (this.contextHolder) {\n      return new Bindings(\n        this.dataFactory,\n        this.entries,\n        {\n          contextMergeHandlers: this.contextHolder.contextMergeHandlers,\n          context: this.contextHolder.context?.delete(key),\n        },\n      );\n    }\n    return new Bindings(this.dataFactory, this.entries);\n  }\n\n  public getContext(): IActionContext | undefined {\n    return this.contextHolder?.context;\n  }\n\n  public getContextEntry<V>(key: IActionContextKey<V>): V | undefined {\n    return this.getContext()?.get(key);\n  }\n\n  public toString(): string {\n    return bindingsToString(this);\n  }\n\n  protected* mapIterable<T, U>(iterable: Iterable<T>, callback: (value: T) => U): Iterable<U> {\n    for (const x of iterable) {\n      yield callback(x);\n    }\n  }\n\n  protected iteratorToIterable<T>(iterator: Iterator<T>): Iterable<T> {\n    return {\n      [Symbol.iterator]: () => iterator,\n    };\n  }\n}\n\nexport interface IContextHolder {\n  contextMergeHandlers: Record<string, IBindingsContextMergeHandler<any>>;\n  context?: IActionContext;\n}\n","import type { IBindingsContextMergeHandler, MediatorMergeBindingsContext } from '@comunica/bus-merge-bindings-context';\nimport type { IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { Map } from 'immutable';\nimport { DataFactory } from 'rdf-data-factory';\nimport { Bindings } from './Bindings';\n\n/**\n * A Bindings factory that provides Bindings backed by immutable.js.\n */\nexport class BindingsFactory implements RDF.BindingsFactory {\n  private readonly dataFactory: RDF.DataFactory;\n  private readonly contextMergeHandlers: Record<string, IBindingsContextMergeHandler<any>> | undefined;\n\n  public constructor(\n    dataFactory: DataFactory = new DataFactory(),\n    contextMergeHandlers?: Record<string, IBindingsContextMergeHandler<any>>,\n  ) {\n    this.dataFactory = dataFactory;\n    this.contextMergeHandlers = contextMergeHandlers;\n  }\n\n  public static async create(\n    mediatorMergeBindingsContext: MediatorMergeBindingsContext,\n    context: IActionContext,\n  ): Promise<BindingsFactory> {\n    return new BindingsFactory(\n      new DataFactory(),\n      (await mediatorMergeBindingsContext.mediate({ context })).mergeHandlers,\n    );\n  }\n\n  public bindings(entries: [RDF.Variable, RDF.Term][] = []): Bindings {\n    return new Bindings(\n      this.dataFactory,\n      Map(entries.map(([ key, value ]) => [ key.value, value ])),\n      this.contextMergeHandlers ? { contextMergeHandlers: this.contextMergeHandlers } : undefined,\n    );\n  }\n\n  public fromBindings(bindings: RDF.Bindings): Bindings {\n    return this.bindings([ ...bindings ]);\n  }\n\n  public fromRecord(record: Record<string, RDF.Term>): Bindings {\n    return this.bindings(Object.entries(record).map(([ key, value ]) => [ this.dataFactory.variable!(key), value ]));\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { termToString } from 'rdf-string';\n\n/**\n * Stringify a bindings object.\n * @param bindings A bindings object.\n */\nexport function bindingsToString(bindings: RDF.Bindings): string {\n  const raw: Record<string, string> = {};\n  for (const key of bindings.keys()) {\n    raw[key.value] = termToString(bindings.get(key))!;\n  }\n  return JSON.stringify(raw, null, '  ');\n}\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\n\n/**\n * A comunica actor for context-preprocess events.\n *\n * Actor types:\n * * Input:  IAction:      A context that will be processed.\n * * Test:   <none>\n * * Output: IActorContextPreprocessOutput: The resulting context.\n *\n * @see IActionContextPreprocess\n * @see IActorContextPreprocessOutput\n */\nexport abstract class ActorContextPreprocess\n  extends Actor<IActionContextPreprocess, IActorTest, IActorContextPreprocessOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorContextPreprocessArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionContextPreprocess extends IAction {\n  /**\n   * If the query processing is being initialized.\n   * This is typically used for setting query-wide defaults.\n   * This will be false for initializing source-specific contexts.\n   */\n  initialize?: boolean;\n}\n\nexport interface IActorContextPreprocessOutput extends IActorOutput {\n  /**\n   * A context object.\n   * Can be null.\n   */\n  context: IActionContext;\n}\n\nexport type IActorContextPreprocessArgs = IActorArgs<\nIActionContextPreprocess,\nIActorTest,\nIActorContextPreprocessOutput\n>;\n\nexport type MediatorContextPreprocess = Mediate<IActionContextPreprocess, IActorContextPreprocessOutput>;\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediator } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { Bindings } from '@comunica/types';\n\n/**\n * A comunica actor for hash-bindings events.\n *\n * Actor types:\n * * Input:  IActionHashBindings:      Metadata for selecting a hash function.\n * * Test:   IActorTest:\n * * Output: IActorHashBindingsOutput: The resulting hash function.\n *\n * @see IActionHashBindings\n * @see IActorHashBindingsTest\n * @see IActorHashBindingsOutput\n */\nexport abstract class ActorHashBindings\n  extends Actor<IActionHashBindings, IActorTest, IActorHashBindingsOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorHashBindingsArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionHashBindings extends IAction {\n  /**\n   * If hash collisions are allowed.\n   */\n  allowHashCollisions: boolean;\n}\n\nexport interface IActorHashBindingsOutput extends IActorOutput {\n  /**\n   * A string-based hash of the given object.\n   * @param {Bindings} bindings The bindings to hash.\n   * @return {string} The object's hash.\n   */\n  hashFunction: HashFunction;\n\n  /**\n   * If hash collisions are possible with the given hash function.\n   */\n  hashCollisions: boolean;\n}\n\nexport type HashFunction = (bindings: Bindings) => string;\n\nexport type IActorHashBindingsArgs = IActorArgs<IActionHashBindings, IActorTest, IActorHashBindingsOutput>;\n\nexport type MediatorHashBindings = Mediator<\nActor<IActionHashBindings, IActorTest, IActorHashBindingsOutput>,\nIActionHashBindings,\nIActorTest,\nIActorHashBindingsOutput\n>;\n","import { Actor } from '@comunica/core';\nimport type { IAction, IActorArgs, IActorOutput, IActorTest, Mediator } from '@comunica/core';\nimport type { Quad } from 'rdf-data-factory';\n\n/**\n * A comunica actor for hash-quads events.\n *\n * Actor types:\n * * Input:  IActionHashQuads:      Metadata for selecting a hash function.\n * * Test:   <none>\n * * Output: IActorHashQuadsOutput: The resulting hash function.\n *\n * @see IActionHashQuads\n * @see IActorHashQuadsOutput\n */\nexport abstract class ActorHashQuads extends Actor<IActionHashQuads, IActorTest, IActorHashQuadsOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorHashQuadsArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionHashQuads extends IAction {\n  /**\n   * If hash collisions are allowed.\n   */\n  allowHashCollisions: boolean;\n}\n\nexport interface IActorHashQuadsOutput extends IActorOutput {\n  /**\n   * A string-based hash of the given object.\n   * @param {Quads} quads The quads to hash.\n   * @return {string} The object's hash.\n   */\n  hashFunction: HashFunction;\n\n  /**\n   * If hash collisions are possible with the given hash function.\n   */\n  hashCollisions: boolean;\n}\n\nexport type HashFunction = (quad: Quad) => string;\n\nexport type IActorHashQuadsArgs = IActorArgs<\nIActionHashQuads,\nIActorTest,\nIActorHashQuadsOutput\n>;\n\nexport type MediatorHashQuads = Mediator<\nActor<IActionHashQuads, IActorTest, IActorHashQuadsOutput>,\nIActionHashQuads,\nIActorTest,\nIActorHashQuadsOutput\n>;\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\n\n/**\n * A comunica actor for http-invalidate events.\n *\n * Actor types:\n * * Input:  IActionHttpInvalidate:      An action for invalidating the cached contents of given URL.\n * * Test:   <none>\n * * Output: IActorHttpInvalidateOutput: An empty response.\n *\n * @see IActionHttpInvalidate\n * @see IActorHttpInvalidateOutput\n */\nexport abstract class ActorHttpInvalidate extends Actor<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorHttpInvalidateArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionHttpInvalidate extends IAction {\n  /**\n   * The URL that requires invalidation.\n   * If not provided, then _all_ URLs need to be invalidated.\n   */\n  url?: string;\n}\n\nexport interface IActorHttpInvalidateOutput extends IActorOutput {\n\n}\n\nexport type IActorHttpInvalidateArgs = IActorArgs<IActionHttpInvalidate, IActorTest, IActorHttpInvalidateOutput>;\n\nexport type MediatorHttpInvalidate = Mediate<IActionHttpInvalidate, IActorHttpInvalidateOutput>;\n","import type { IActorTest } from '@comunica/core';\nimport type {\n  IActionHttpInvalidate,\n  IActorHttpInvalidateOutput,\n  IActorHttpInvalidateArgs,\n} from './ActorHttpInvalidate';\nimport { ActorHttpInvalidate } from './ActorHttpInvalidate';\n\n/**\n * An ActorHttpInvalidate actor that allows listeners to be attached.\n *\n * @see ActorHttpInvalidate\n */\nexport class ActorHttpInvalidateListenable extends ActorHttpInvalidate {\n  private readonly invalidateListeners: IInvalidateListener[] = [];\n\n  public constructor(args: IActorHttpInvalidateArgs) {\n    super(args);\n    this.invalidateListeners = [];\n  }\n\n  public addInvalidateListener(listener: IInvalidateListener): void {\n    this.invalidateListeners.push(listener);\n  }\n\n  public async test(_action: IActionHttpInvalidate): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionHttpInvalidate): Promise<IActorHttpInvalidateOutput> {\n    for (const listener of this.invalidateListeners) {\n      listener(action);\n    }\n    return {};\n  }\n}\n\n/**\n * Called when a {@link IActionHttpInvalidate} is received.\n */\nexport type IInvalidateListener = (action: IActionHttpInvalidate) => void;\n","import type { IAction, IActorOutput, IActorTest, IActorArgs, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { Readable } from 'readable-stream';\n\n/**\n * A base actor for listening to init events.\n *\n * Actor types:\n * * Input:  IActionInit:      Contains process information\n *                             such as the list of arguments,\n *                             environment variables and input stream.\n * * Test:   <none>\n * * Output: IActorOutputInit: Contains process output streams.\n *\n * @see IActionInit\n */\nexport abstract class ActorInit extends Actor<IActionInit, IActorTest, IActorOutputInit> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorInitArgs) {\n    super(args);\n  }\n}\n\n/**\n * The init input, which contains the program arguments.\n */\nexport interface IActionInit extends IAction {\n  /**\n   * The list of program arguments.\n   */\n  argv: string[];\n  /**\n   * The mapping of environment variables.\n   */\n  env: Record<string, string | undefined>;\n  /**\n   * A standard input stream.\n   */\n  stdin: Readable;\n}\n\nexport interface IActorOutputInit extends IActorOutput {\n  /**\n   * A standard error output stream.\n   */\n  stderr?: Readable;\n  /**\n   * A standard output stream.\n   */\n  stdout?: Readable;\n}\n\nexport type IActorInitArgs = IActorArgs<IActionInit, IActorTest, IActorOutputInit>;\n\nexport type MediatorInit = Mediate<IActionInit, IActorOutputInit>;\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for optimize-query-operation events.\n *\n * Actor types:\n * * Input:  IActionOptimizeQueryOperation:      An incoming SPARQL operation.\n * * Test:   <none>\n * * Output: IActorOptimizeQueryOperationOutput: A (possibly optimized) outgoing SPARQL operation.\n *\n * @see IActionOptimizeQueryOperation\n * @see IActorOptimizeQueryOperationOutput\n */\nexport abstract class ActorOptimizeQueryOperation\n  extends Actor<IActionOptimizeQueryOperation, IActorTest, IActorOptimizeQueryOperationOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorOptimizeQueryOperationArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionOptimizeQueryOperation extends IAction {\n  operation: Algebra.Operation;\n}\n\nexport interface IActorOptimizeQueryOperationOutput extends IActorOutput {\n  operation: Algebra.Operation;\n  context: IActionContext;\n}\n\nexport type IActorOptimizeQueryOperationArgs = IActorArgs<\nIActionOptimizeQueryOperation,\nIActorTest,\nIActorOptimizeQueryOperationOutput\n>;\n\nexport type MediatorOptimizeQueryOperation = Mediate<\nIActionOptimizeQueryOperation,\nIActorOptimizeQueryOperationOutput\n>;\n","import type { BindingsFactory } from '@comunica/bindings-factory';\nimport { KeysInitQuery, KeysQueryOperation } from '@comunica/context-entries';\nimport type { IActorArgs, IActorTest, IAction, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport { BlankNodeBindingsScoped } from '@comunica/data-factory';\nimport type {\n  IQueryOperationResult,\n  IQueryOperationResultBindings,\n  IQueryOperationResultBoolean,\n  IQueryOperationResultQuads,\n  IQueryOperationResultVoid,\n  Bindings,\n  IActionContext,\n  FunctionArgumentsCache,\n  IQuerySourceWrapper,\n  FragmentSelectorShape,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { materializeOperation } from './Bindings';\n\n/**\n * A counter that keeps track blank node generated through BNODE() SPARQL\n * expressions.\n *\n * @type {number}\n */\nlet bnodeCounter = 0;\n\n/**\n * A comunica actor for query-operation events.\n *\n * Actor types:\n * * Input:  IActionQueryOperation:      A SPARQL Algebra operation.\n * * Test:   <none>\n * * Output: IActorQueryOperationOutput: A bindings stream.\n *\n * @see IActionQueryOperation\n * @see IQueryOperationResult\n */\nexport abstract class ActorQueryOperation extends Actor<IActionQueryOperation, IActorTest, IQueryOperationResult> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cbqo:components/BusQueryOperation.jsonld#BusQueryOperation>} bus\n   */\n  protected constructor(args: IActorQueryOperationArgs) {\n    super(args);\n  }\n\n  /**\n   * Safely cast a query operation output to a bindings output.\n   * This will throw a runtime error if the output is of the incorrect type.\n   * @param {IQueryOperationResult} output A query operation output.\n   * @return {IQueryOperationResultBindings} A bindings query operation output.\n   */\n  public static getSafeBindings(output: IQueryOperationResult): IQueryOperationResultBindings {\n    ActorQueryOperation.validateQueryOutput(output, 'bindings');\n    return <IQueryOperationResultBindings> output;\n  }\n\n  /**\n   * Safely cast a query operation output to a quads output.\n   * This will throw a runtime error if the output is of the incorrect type.\n   * @param {IQueryOperationResult} output A query operation output.\n   * @return {IQueryOperationResultQuads} A quads query operation output.\n   */\n  public static getSafeQuads(output: IQueryOperationResult): IQueryOperationResultQuads {\n    ActorQueryOperation.validateQueryOutput(output, 'quads');\n    return <IQueryOperationResultQuads> output;\n  }\n\n  /**\n   * Safely cast a query operation output to a boolean output.\n   * This will throw a runtime error if the output is of the incorrect type.\n   * @param {IQueryOperationResult} output A query operation output.\n   * @return {IQueryOperationResultBoolean} A boolean query operation output.\n   */\n  public static getSafeBoolean(output: IQueryOperationResult): IQueryOperationResultBoolean {\n    ActorQueryOperation.validateQueryOutput(output, 'boolean');\n    return <IQueryOperationResultBoolean> output;\n  }\n\n  /**\n   * Safely cast a query operation output to a void output.\n   * This will throw a runtime error if the output is of the incorrect type.\n   * @param {IQueryOperationResult} output A query operation output.\n   * @return {IQueryOperationResultVoid} A void query operation output.\n   */\n  public static getSafeVoid(output: IQueryOperationResult): IQueryOperationResultVoid {\n    ActorQueryOperation.validateQueryOutput(output, 'void');\n    return <IQueryOperationResultVoid> output;\n  }\n\n  /**\n   * Throw an error if the output type does not match the expected type.\n   * @param {IQueryOperationResult} output A query operation output.\n   * @param {string} expectedType The expected output type.\n   */\n  public static validateQueryOutput(output: IQueryOperationResult, expectedType: IQueryOperationResult['type']): void {\n    if (output.type !== expectedType) {\n      throw new Error(`Invalid query output type: Expected '${expectedType}' but got '${output.type}'`);\n    }\n  }\n\n  protected static getBaseExpressionContext(context: IActionContext): IBaseExpressionContext {\n    const now: Date | undefined = context.get(KeysInitQuery.queryTimestamp);\n    const baseIRI: string | undefined = context.get(KeysInitQuery.baseIRI);\n    const functionArgumentsCache: FunctionArgumentsCache = context.get(KeysInitQuery.functionArgumentsCache) ?? {};\n\n    // Handle two variants of providing extension functions\n    if (context.has(KeysInitQuery.extensionFunctionCreator) && context.has(KeysInitQuery.extensionFunctions)) {\n      throw new Error('Illegal simultaneous usage of extensionFunctionCreator and extensionFunctions in context');\n    }\n    let extensionFunctionCreator: ((functionNamedNode: RDF.NamedNode) =>\n    ((args: RDF.Term[]) => Promise<RDF.Term>) | undefined) | undefined = context\n      .get(KeysInitQuery.extensionFunctionCreator);\n    // Convert dictionary-based variant to callback\n    const extensionFunctions: (Record<string, (args: RDF.Term[]) => Promise<RDF.Term>>) | undefined = context\n      .get(KeysInitQuery.extensionFunctions);\n    if (extensionFunctions) {\n      extensionFunctionCreator = functionNamedNode => extensionFunctions[functionNamedNode.value];\n    }\n\n    return { now, baseIRI, extensionFunctionCreator, functionArgumentsCache };\n  }\n\n  /**\n   * Create an options object that can be used to construct a expression-evaluator synchronous evaluator.\n   * @param context An action context.\n   * @param _mediatorQueryOperation An optional query query operation mediator.\n   *                                If defined, the existence resolver will be defined as `exists`.\n   */\n  public static getExpressionContext(context: IActionContext, _mediatorQueryOperation?: MediatorQueryOperation):\n  ISyncExpressionContext {\n    return {\n      ...this.getBaseExpressionContext(context),\n      bnode: (input?: string) => new BlankNodeBindingsScoped(input ?? `BNODE_${bnodeCounter++}`),\n    };\n  }\n\n  /**\n   * Create an options object that can be used to construct a expression-evaluator asynchronous evaluator.\n   * @param context An action context.\n   * @param mediatorQueryOperation A query query operation mediator for resolving `exists`.\n   * @param bindingsFactory The bindings factory.\n   */\n  public static getAsyncExpressionContext(\n    context: IActionContext,\n    mediatorQueryOperation: MediatorQueryOperation,\n    bindingsFactory: BindingsFactory,\n  ):\n    IAsyncExpressionContext {\n    return {\n      ...this.getBaseExpressionContext(context),\n      bnode: (input?: string) => Promise.resolve(new BlankNodeBindingsScoped(input ?? `BNODE_${bnodeCounter++}`)),\n      exists: ActorQueryOperation.createExistenceResolver(context, mediatorQueryOperation, bindingsFactory),\n    };\n  }\n\n  /**\n   * Create an existence resolver for usage within an expression context.\n   * @param context An action context.\n   * @param mediatorQueryOperation A query operation mediator.\n   * @param bindingsFactory The bindings factory.\n   */\n  public static createExistenceResolver(\n    context: IActionContext,\n    mediatorQueryOperation: MediatorQueryOperation,\n    bindingsFactory: BindingsFactory,\n  ):\n    (expr: Algebra.ExistenceExpression, bindings: Bindings) => Promise<boolean> {\n    return async(expr, bindings) => {\n      const operation = materializeOperation(expr.input, bindings, bindingsFactory);\n\n      const outputRaw = await mediatorQueryOperation.mediate({ operation, context });\n      const output = ActorQueryOperation.getSafeBindings(outputRaw);\n      return expr.not !== ((await output.bindingsStream.take(1).toArray()).length === 1);\n    };\n  }\n\n  /**\n   * Throw an error if the context contains the readOnly flag.\n   * @param context An action context.\n   */\n  public static throwOnReadOnly(context: IActionContext): void {\n    if (context.get(KeysQueryOperation.readOnly)) {\n      throw new Error(`Attempted a write operation in read-only mode`);\n    }\n  }\n\n  /**\n   * Obtain the query source attached to the given operation.\n   * @param operation An algebra operation.\n   */\n  public static getOperationSource(operation: Algebra.Operation): IQuerySourceWrapper | undefined {\n    return <IQuerySourceWrapper> operation.metadata?.scopedSource;\n  }\n\n  /**\n   * Assign a source wrapper to the given operation.\n   * The operation is copied and returned.\n   * @param operation An operation.\n   * @param source A source wrapper.\n   */\n  public static assignOperationSource<O extends Algebra.Operation>(operation: O, source: IQuerySourceWrapper): O {\n    operation = { ...operation };\n    operation.metadata = operation.metadata ? { ...operation.metadata } : {};\n    operation.metadata.scopedSource = source;\n    return operation;\n  }\n\n  /**\n   * Remove the source wrapper from the given operation.\n   * The operation is mutated.\n   * @param operation An operation.\n   */\n  public static removeOperationSource(operation: Algebra.Operation): void {\n    delete operation.metadata?.scopedSource;\n    if (operation.metadata && Object.keys(operation.metadata).length === 0) {\n      delete operation.metadata;\n    }\n  }\n\n  /**\n   * Check if the given shape accepts the given query operation.\n   * @param shape A shape to test the query operation against.\n   * @param operation A query operation to test.\n   * @param options Additional options to consider.\n   * @param options.joinBindings If additional bindings will be pushed down to the source for joining.\n   * @param options.filterBindings If additional bindings will be pushed down to the source for filtering.\n   */\n  public static doesShapeAcceptOperation(\n    shape: FragmentSelectorShape,\n    operation: Algebra.Operation,\n    options?: {\n      joinBindings?: boolean;\n      filterBindings?: boolean;\n    },\n  ): boolean {\n    if (shape.type === 'conjunction') {\n      return shape.children.every(child => ActorQueryOperation.doesShapeAcceptOperation(child, operation, options));\n    }\n    if (shape.type === 'disjunction') {\n      return shape.children.some(child => ActorQueryOperation.doesShapeAcceptOperation(child, operation, options));\n    }\n    if (shape.type === 'arity') {\n      return ActorQueryOperation.doesShapeAcceptOperation(shape.child, operation, options);\n    }\n\n    if ((options?.joinBindings && !shape.joinBindings) ?? (options?.filterBindings && !shape.filterBindings)) {\n      return false;\n    }\n\n    if (shape.operation.operationType === 'type') {\n      return shape.operation.type === 'project' || shape.operation.type === operation.type;\n    }\n    return shape.operation.pattern.type === operation.type;\n  }\n}\n\nexport interface IActionQueryOperation extends IAction {\n  /**\n   * The query operation to handle.\n   */\n  operation: Algebra.Operation;\n}\n\nexport type IActorQueryOperationArgs = IActorArgs<IActionQueryOperation, IActorTest, IQueryOperationResult>;\n\nexport type MediatorQueryOperation = Mediate<IActionQueryOperation, IQueryOperationResult>;\n\nexport interface IBaseExpressionContext {\n  now?: Date;\n  baseIRI?: string;\n  extensionFunctionCreator?: (functionNamedNode: RDF.NamedNode) =>\n  ((args: RDF.Term[]) => Promise<RDF.Term>) | undefined;\n  functionArgumentsCache?: FunctionArgumentsCache;\n}\n\nexport interface ISyncExpressionContext extends IBaseExpressionContext {\n  bnode: (input?: string | undefined) => RDF.BlankNode;\n}\n\nexport interface IAsyncExpressionContext extends IBaseExpressionContext {\n  bnode: (input?: string | undefined) => Promise<RDF.BlankNode>;\n  exists?: (expr: Algebra.ExistenceExpression, bindings: Bindings) => Promise<boolean>;\n}\n","import { KeysInitQuery, KeysQueryOperation } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport { cachifyMetadata } from '@comunica/metadata';\nimport type {\n  IQueryOperationResult,\n  IPhysicalQueryPlanLogger,\n  IActionContext,\n  IMetadata,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport type { IActionQueryOperation, IActorQueryOperationArgs } from './ActorQueryOperation';\nimport { ActorQueryOperation } from './ActorQueryOperation';\n\n/**\n * A base implementation for query operation actors for a specific operation type.\n */\nexport abstract class ActorQueryOperationTyped<O extends Algebra.Operation> extends ActorQueryOperation {\n  public readonly operationName: string;\n\n  protected constructor(args: IActorQueryOperationArgs, operationName: string) {\n    super(<any> { ...args, operationName });\n    if (!this.operationName) {\n      throw new Error('A valid \"operationName\" argument must be provided.');\n    }\n  }\n\n  public async test(action: IActionQueryOperation): Promise<IActorTest> {\n    if (!action.operation) {\n      throw new Error('Missing field \\'operation\\' in a query operation action.');\n    }\n    if (action.operation.type !== this.operationName) {\n      throw new Error(`Actor ${this.name} only supports ${this.operationName} operations, but got ${\n        action.operation.type}`);\n    }\n    const operation: O = <O> action.operation;\n    return this.testOperation(operation, action.context);\n  }\n\n  public async run(action: IActionQueryOperation): Promise<IQueryOperationResult> {\n    // Log to physical plan\n    const physicalQueryPlanLogger: IPhysicalQueryPlanLogger | undefined = action.context\n      .get(KeysInitQuery.physicalQueryPlanLogger);\n    if (physicalQueryPlanLogger) {\n      physicalQueryPlanLogger.logOperation(\n        action.operation.type,\n        undefined,\n        action.operation,\n        action.context.get(KeysInitQuery.physicalQueryPlanNode),\n        this.name,\n        {},\n      );\n      action.context = action.context.set(KeysInitQuery.physicalQueryPlanNode, action.operation);\n    }\n\n    const operation: O = <O> action.operation;\n    const subContext = action.context.set(KeysQueryOperation.operation, operation);\n    const output: IQueryOperationResult = await this.runOperation(operation, subContext);\n    if ('metadata' in output) {\n      output.metadata = <any>\n        cachifyMetadata<IMetadata<RDF.QuadTermName | RDF.Variable>, RDF.QuadTermName | RDF.Variable>(output.metadata);\n    }\n    return output;\n  }\n\n  protected abstract testOperation(operation: O, context: IActionContext): Promise<IActorTest>;\n\n  protected abstract runOperation(operation: O, context: IActionContext):\n  Promise<IQueryOperationResult>;\n}\n","import type { Algebra } from 'sparqlalgebrajs';\nimport type { IActorQueryOperationArgs, MediatorQueryOperation } from './ActorQueryOperation';\nimport { ActorQueryOperationTyped } from './ActorQueryOperationTyped';\n\n/**\n * A base implementation for query operation actors for a specific operation type that have a query operation mediator.\n */\nexport abstract class ActorQueryOperationTypedMediated<O extends Algebra.Operation> extends ActorQueryOperationTyped<O>\n  implements IActorQueryOperationTypedMediatedArgs {\n  public readonly mediatorQueryOperation: MediatorQueryOperation;\n\n  public constructor(args: IActorQueryOperationTypedMediatedArgs, operationName: string) {\n    super(args, operationName);\n  }\n}\n\nexport interface IActorQueryOperationTypedMediatedArgs extends IActorQueryOperationArgs {\n  mediatorQueryOperation: MediatorQueryOperation;\n}\n","import type { IActorTest, IBusArgs } from '@comunica/core';\nimport { BusIndexed } from '@comunica/core';\nimport type { IQueryOperationResult } from '@comunica/types';\nimport type { ActorQueryOperation, IActionQueryOperation } from './ActorQueryOperation';\n\n/**\n * Indexed bus for query operations.\n */\nexport class BusQueryOperation\n  extends BusIndexed<ActorQueryOperation, IActionQueryOperation, IActorTest, IQueryOperationResult> {\n  public constructor(args: IBusArgs) {\n    super({\n      ...args,\n      actorIdentifierFields: [ 'operationName' ],\n      actionIdentifierFields: [ 'operation', 'type' ],\n    });\n  }\n}\n","import { AsyncIterator, DESTINATION } from 'asynciterator';\n\ntype InternalSource<T> =\n  AsyncIterator<T> & { [DESTINATION]?: AsyncIterator<any> };\n\n/**\n * An AsyncIterator with a callback for when this iterator is closed in any way.\n * In contrast to ClosableTransformIterator, this does not add the overhead of a TransformIterator.\n */\nexport class ClosableIterator<S> extends AsyncIterator<S> {\n  protected readonly _source: InternalSource<S>;\n  private readonly onClose: () => void;\n\n  public constructor(source: AsyncIterator<S>, options: { onClose: () => void }) {\n    super();\n    this.onClose = options.onClose;\n    this._source = <InternalSource<S>> source;\n\n    // Wire up the source for reading\n    this._source[DESTINATION] = this;\n    this._source.on('end', destinationClose);\n    this._source.on('error', destinationEmitError);\n    this._source.on('readable', destinationSetReadable);\n    this.readable = this._source.readable;\n  }\n\n  public override read(): S | null {\n    const ret = this._source.read();\n    if (!ret) {\n      // Mark as non-readable if ret was null\n      this.readable = false;\n\n      // Close this iterator if the source is empty\n      if (this._source.done) {\n        this.close();\n      }\n    }\n    return ret;\n  }\n\n  protected override _end(destroy: boolean): void {\n    this.onClose();\n\n    this._source.removeListener('end', destinationClose);\n    this._source.removeListener('error', destinationEmitError);\n    this._source.removeListener('readable', destinationSetReadable);\n    delete this._source[DESTINATION];\n    this._source.destroy();\n    super._end(destroy);\n  }\n}\n\n// Helpers below are copied from AsyncIterator, as they are not exported from there.\n\nfunction destinationSetReadable<S>(this: InternalSource<S>): void {\n  this[DESTINATION]!.readable = true;\n}\nfunction destinationEmitError<S>(this: InternalSource<S>, error: Error): void {\n  this[DESTINATION]!.emit('error', error);\n}\nfunction destinationClose<S>(this: InternalSource<S>): void {\n  this[DESTINATION]!.close();\n}\n","import type { AsyncIterator, TransformIteratorOptions } from 'asynciterator';\nimport { TransformIterator } from 'asynciterator';\n\ndeclare type MaybePromise<T> = T | Promise<T>;\ndeclare type SourceExpression<T> = MaybePromise<AsyncIterator<T>> | (() => MaybePromise<AsyncIterator<T>>);\n\n/**\n * A TransformIterator with a callback for when this iterator is closed in any way.\n */\nexport class ClosableTransformIterator<S, D = S> extends TransformIterator<S, D> {\n  private readonly onClose: () => void;\n\n  public constructor(source: SourceExpression<S>, options: TransformIteratorOptions<S> & { onClose: () => void }) {\n    super(source, options);\n    this.onClose = options.onClose;\n  }\n\n  protected override _end(destroy: boolean): void {\n    this.onClose();\n    super._end(destroy);\n  }\n}\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for query-parse events.\n *\n * Actor types:\n * * Input:  IActionSparqlParse:      A SPARQL query string.\n * * Test:   <none>\n * * Output: IActorSparqlParseOutput: A parsed query in SPARQL query algebra.\n *\n * @see IActionQueryParse\n * @see IActorQueryParseOutput\n */\nexport abstract class ActorQueryParse extends Actor<IActionQueryParse, IActorTest, IActorQueryParseOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorQueryParseArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionQueryParse extends IAction {\n  /**\n   * A query.\n   */\n  query: string;\n  /**\n   * The query format.\n   */\n  queryFormat?: RDF.QueryFormat;\n  /**\n   * The query's default base IRI.\n   */\n  baseIRI?: string;\n}\n\nexport interface IActorQueryParseOutput extends IActorOutput {\n  /**\n   * A parsed query in SPARQL algebra.\n   */\n  operation: Algebra.Operation;\n  /**\n   * An optionally overridden base IRI.\n   */\n  baseIRI?: string;\n}\n\nexport type IActorQueryParseArgs = IActorArgs<IActionQueryParse, IActorTest, IActorQueryParseOutput>;\n\nexport type MediatorQueryParse = Mediate<IActionQueryParse, IActorQueryParseOutput>;\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { QueryFormatType, IQueryExplained, IActionContext, IQueryOperationResult } from '@comunica/types';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A comunica actor for query-process events.\n *\n * Actor types:\n * * Input:  IActionQueryProcess:      The input query to process.\n * * Test:   <none>\n * * Output: IActorQueryProcessOutput: Output of the query processing.\n *\n * @see IActionQueryProcess\n * @see IActorQueryProcessOutput\n */\nexport abstract class ActorQueryProcess extends Actor<IActionQueryProcess, IActorTest, IActorQueryProcessOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorQueryProcessArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionQueryProcess extends IAction {\n  /**\n   * The query to process.\n   */\n  query: QueryFormatType;\n}\n\nexport interface IActorQueryProcessOutput extends IActorOutput {\n  /**\n   * Result of the query processing.\n   */\n  result: IQueryOperationResult | IQueryExplained;\n}\n\nexport type IActorQueryProcessArgs = IActorArgs<\nIActionQueryProcess,\nIActorTest,\nIActorQueryProcessOutput\n>;\n\nexport type MediatorQueryProcess = Mediate<\nIActionQueryProcess,\nIActorQueryProcessOutput\n>;\n\nexport interface IQueryProcessSequential {\n  parse: (query: QueryFormatType, context: IActionContext) => Promise<IQueryProcessSequentialOutput>;\n  optimize: (operation: Algebra.Operation, context: IActionContext) => Promise<IQueryProcessSequentialOutput>;\n  evaluate: (operation: Algebra.Operation, context: IActionContext) => Promise<IQueryOperationResult>;\n}\n\nexport interface IQueryProcessSequentialOutput {\n  operation: Algebra.Operation;\n  context: IActionContext;\n}\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IQuerySourceWrapper, QuerySourceUnidentifiedExpanded } from '@comunica/types';\n\n/**\n * A comunica actor for query-source-identify events.\n *\n * Actor types:\n * * Input:  IActionQuerySourceIdentify:      An unidentified query source.\n * * Test:   <none>\n * * Output: IActorQuerySourceIdentifyOutput: An identified query source.\n *\n * @see IActionQuerySourceIdentify\n * @see IActorQuerySourceIdentifyOutput\n */\nexport abstract class ActorQuerySourceIdentify\n  extends Actor<IActionQuerySourceIdentify, IActorTest, IActorQuerySourceIdentifyOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorQuerySourceIdentifyArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionQuerySourceIdentify extends IAction {\n  /**\n   * An unidentified query source.\n   */\n  querySourceUnidentified: QuerySourceUnidentifiedExpanded;\n}\n\nexport interface IActorQuerySourceIdentifyOutput extends IActorOutput {\n  /**\n   * An identified query source.\n   */\n  querySource: IQuerySourceWrapper;\n}\n\nexport type IActorQuerySourceIdentifyArgs = IActorArgs<\nIActionQuerySourceIdentify,\nIActorTest,\nIActorQuerySourceIdentifyOutput\n>;\n\nexport type MediatorQuerySourceIdentify = Mediate<\nIActionQuerySourceIdentify,\nIActorQuerySourceIdentifyOutput\n>;\n","import type { BindingsFactory } from '@comunica/bindings-factory';\nimport { ClosableIterator } from '@comunica/bus-query-operation';\nimport { validateMetadataQuads } from '@comunica/metadata';\nimport type { BindingsStream, MetadataBindings, MetadataQuads, TermsOrder } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport { DataFactory } from 'rdf-data-factory';\nimport { termToString } from 'rdf-string';\nimport type { QuadTermName } from 'rdf-terms';\nimport {\n  forEachTermsNested,\n  getTermsNested,\n  getValueNestedPath,\n  reduceTermsNested,\n  someTerms,\n  uniqTerms,\n} from 'rdf-terms';\nimport { matchPatternMappings } from 'rdf-terms/lib/QuadTermUtil';\nimport type { Algebra } from 'sparqlalgebrajs';\n\nconst DF = new DataFactory();\n\n/**\n * Convert an iterator of quads to an iterator of bindings.\n * @param quads The quads to convert.\n * @param pattern The pattern to get variables from to determine bindings.\n *                All quads are also assumed to match the pattern.\n * @param bindingsFactory The factory for creating bindings.\n * @param unionDefaultGraph If union default graph mode is enabled.\n *                          If true, variable graphs will match all graphs, including the default graph.\n *                          If false, variable graphs will only match named graphs, and not the default graph.\n */\nexport function quadsToBindings(\n  quads: AsyncIterator<RDF.Quad>,\n  pattern: Algebra.Pattern,\n  bindingsFactory: BindingsFactory,\n  unionDefaultGraph: boolean,\n): BindingsStream {\n  const variables = getVariables(pattern);\n\n  // If non-default-graph triples need to be filtered out\n  const filterNonDefaultQuads = pattern.graph.termType === 'Variable' && !unionDefaultGraph;\n\n  // Detect duplicate variables in the pattern\n  const duplicateElementLinks: Record<string, QuadTermName[][]> | undefined = getDuplicateElementLinks(pattern);\n\n  // Convenience datastructure for mapping quad elements to variables\n  const elementVariables: Record<string, string> = reduceTermsNested(\n    pattern,\n    (acc: Record<string, string>, term: RDF.Term, keys: QuadTermName[]) => {\n      if (term.termType === 'Variable') {\n        acc[keys.join('_')] = term.value;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  // Optionally filter, and construct bindings\n  let filteredOutput = quads;\n\n  // SPARQL query semantics allow graph variables to only match with named graphs, excluding the default graph\n  // But this is not the case when using union default graph semantics\n  if (filterNonDefaultQuads) {\n    filteredOutput = filteredOutput.filter(quad => quad.graph.termType !== 'DefaultGraph');\n  }\n\n  // If there are duplicate variables in the search pattern,\n  // make sure that we filter out the triples that don't have equal values for those triple elements,\n  // as the rdf-resolve-quad-pattern bus ignores variable names.\n  if (duplicateElementLinks) {\n    filteredOutput = filteredOutput.filter((quad) => {\n      for (const keyLeft in duplicateElementLinks) {\n        const keysLeft: QuadTermName[] = <QuadTermName[]> keyLeft.split('_');\n        const valueLeft = getValueNestedPath(quad, keysLeft);\n        for (const keysRight of duplicateElementLinks[keyLeft]) {\n          if (!valueLeft.equals(getValueNestedPath(quad, keysRight))) {\n            return false;\n          }\n        }\n      }\n      return true;\n    });\n  }\n\n  // Wrap it in a ClosableIterator, so we can propagate destroy calls\n  const it = new ClosableIterator(filteredOutput.map<RDF.Bindings>(quad => bindingsFactory\n    .bindings(Object.keys(elementVariables).map((key) => {\n      const keys: QuadTermName[] = <any>key.split('_');\n      const variable = elementVariables[key];\n      const term = getValueNestedPath(quad, keys);\n      return [ DF.variable(variable), term ];\n    }))), {\n    onClose: () => quads.destroy(),\n  });\n\n  // Set the metadata property\n  setMetadata(it, quads, elementVariables, variables, filterNonDefaultQuads || Boolean(duplicateElementLinks));\n\n  return it;\n}\n\n/**\n * Check if a term is a variable.\n * @param {RDF.Term} term An RDF term.\n * @return {any} If the term is a variable or blank node.\n */\nexport function isTermVariable(term: RDF.Term): term is RDF.Variable {\n  return term.termType === 'Variable';\n}\n\n/**\n * Get all variables in the given pattern.\n * No duplicates are returned.\n * @param {RDF.BaseQuad} pattern A quad pattern.\n */\nexport function getVariables(pattern: RDF.BaseQuad): RDF.Variable[] {\n  return uniqTerms(getTermsNested(pattern).filter(isTermVariable));\n}\n\n/**\n * A helper function to find a hash with quad elements that have duplicate variables.\n *\n * @param {RDF.Quad} pattern A quad pattern.\n *\n * @return {{[p: string]: string[]}} If no equal variable names are present in the four terms, this returns undefined.\n *                                   Otherwise, this maps quad elements paths (['subject'], ['predicate'], ['object'],\n *                                   ['graph'])\n *                                   to the list of quad elements it shares a variable name with.\n *                                   For quoted triples, paths such as ['subject', 'object'] may occur.\n *                                   If no links for a certain element exist, this element will\n *                                   not be included in the hash.\n *                                   Note 1: Quad elements will never have a link to themselves.\n *                                           So this can never occur: { subject: [[ 'subject']] },\n *                                           instead 'null' would be returned.\n *                                   Note 2: Links only exist in one direction,\n *                                           this means that { subject: [[ 'predicate']], predicate: [[ 'subject' ]] }\n *                                           will not occur, instead only { subject: [[ 'predicate']] }\n *                                           will be returned.\n *                                   Note 3: Keys can also be paths, but they are delimited by '_', such as:\n *                                           { subject_object_subject: [[ 'predicate']] }\n */\nexport function getDuplicateElementLinks(pattern: RDF.BaseQuad): Record<string, QuadTermName[][]> | undefined {\n  // Collect a variable to quad elements mapping.\n  const variableElements: Record<string, QuadTermName[][]> = {};\n  let duplicateVariables = false;\n  forEachTermsNested(pattern, (value, keys) => {\n    if (value.termType === 'Variable') {\n      const val = termToString(value);\n      const length = (variableElements[val] || (variableElements[val] = [])).push(keys);\n      duplicateVariables = duplicateVariables || length > 1;\n    }\n  });\n\n  if (!duplicateVariables) {\n    return;\n  }\n\n  // Collect quad element to elements with equal variables mapping.\n  const duplicateElementLinks: Record<string, QuadTermName[][]> = {};\n  for (const variable in variableElements) {\n    const elements = variableElements[variable];\n    const remainingElements = elements.slice(1);\n    // Only store the elements that have at least one equal element.\n    if (remainingElements.length > 0) {\n      duplicateElementLinks[elements[0].join('_')] = remainingElements;\n    }\n  }\n\n  return duplicateElementLinks;\n}\n\n/**\n * Set the metadata of the bindings stream derived from the metadata of the quads stream.\n *\n * @param {BindingsStream} bindings The bindings stream that will receive the metadata property.\n * @param {AsyncIterator<Quad>} quads The quads stream that is guaranteed to emit the metadata property.\n * @param elementVariables Mapping of quad term name to variable name.\n * @param variables Variables to include in the metadata\n * @param forceEstimateCardinality Set the cardinality to estimate\n * @return {() => Promise<{[p: string]: any}>} A lazy promise behind a callback resolving to a metadata object.\n */\nexport function setMetadata(\n  bindings: BindingsStream,\n  quads: AsyncIterator<RDF.Quad>,\n  elementVariables: Record<string, string>,\n  variables: RDF.Variable[],\n  forceEstimateCardinality: boolean,\n): void {\n  const getMetadataCb = (metadataRaw: Record<string, any>): void => {\n    if (!('canContainUndefs' in metadataRaw)) {\n      metadataRaw.canContainUndefs = false;\n    }\n    if (forceEstimateCardinality) {\n      metadataRaw.cardinality.type = 'estimate';\n    }\n    bindings.setProperty(\n      'metadata',\n      quadsMetadataToBindingsMetadata(validateMetadataQuads(metadataRaw), elementVariables, variables),\n    );\n\n    // Propagate metadata invalidations\n    if (metadataRaw.state) {\n      metadataRaw.state.addInvalidateListener(() => {\n        setMetadata(bindings, quads, elementVariables, variables, forceEstimateCardinality);\n      });\n    }\n  };\n\n  const metadata = quads.getProperty('metadata');\n  if (metadata) {\n    // This is to enforce sync metadata setting, because AsyncIterator will always call it async,\n    // even if the property was already defined.\n    getMetadataCb(metadata);\n  } else {\n    quads.getProperty('metadata', getMetadataCb);\n  }\n}\n\n/**\n * Convert the metadata of quads to the metadata of bindings.\n * @param metadataQuads Quads metadata.\n * @param elementVariables A mapping from quad elements to variables.\n * @param variables The variables in the bindings.\n */\nexport function quadsMetadataToBindingsMetadata(\n  metadataQuads: MetadataQuads,\n  elementVariables: Record<string, string>,\n  variables: RDF.Variable[],\n): MetadataBindings {\n  return {\n    ...metadataQuads,\n    canContainUndefs: false,\n    order: metadataQuads.order ?\n      quadsOrderToBindingsOrder(metadataQuads.order, elementVariables) :\n      undefined,\n    availableOrders: metadataQuads.availableOrders ?\n      metadataQuads.availableOrders.map(orderDef => ({\n        cost: orderDef.cost,\n        terms: quadsOrderToBindingsOrder(orderDef.terms, elementVariables),\n      })) :\n      undefined,\n    variables,\n  };\n}\n\n/**\n * Convert the quads order metadata element to a bindings order metadata element.\n * @param quadsOrder Quads order.\n * @param elementVariables A mapping from quad elements to variables.\n */\nexport function quadsOrderToBindingsOrder(\n  quadsOrder: TermsOrder<RDF.QuadTermName>,\n  elementVariables: Record<string, string>,\n): TermsOrder<RDF.Variable> {\n  const mappedVariables: Record<string, boolean> = {};\n  return <TermsOrder<RDF.Variable>> quadsOrder.map((entry) => {\n    // Omit entries that do not map to a variable\n    const variableName = elementVariables[entry.term];\n    if (!variableName) {\n      // eslint-disable-next-line array-callback-return\n      return;\n    }\n\n    // Omit entries that have been mapped already\n    if (mappedVariables[variableName]) {\n      // eslint-disable-next-line array-callback-return\n      return;\n    }\n\n    mappedVariables[variableName] = true;\n    return {\n      term: DF.variable(variableName),\n      direction: entry.direction,\n    };\n  }).filter(Boolean);\n}\n\n/**\n * Perform post-match-filtering if the source does not support quoted triple filtering,\n * but we have a variable inside a quoted triple.\n * @param pattern The current quad pattern operation.\n * @param it The iterator to filter.\n */\nexport function filterMatchingQuotedQuads(pattern: RDF.BaseQuad, it: AsyncIterator<RDF.Quad>): AsyncIterator<RDF.Quad> {\n  if (someTerms(pattern, term => term.termType === 'Quad')) {\n    it = it.filter(quad => matchPatternMappings(quad, pattern));\n  }\n  return it;\n}\n","import type { IAction, IActorArgs, IActorOutput, Mediate, IActorTest } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IJoinEntryWithMetadata } from '@comunica/types';\n\n/**\n * A comunica actor for rdf-join-entries-sort events.\n *\n * Actor types:\n * * Input:  IActionRdfJoinEntriesSort:      Join entries.\n * * Test:   IActorTest:                     Test result.\n * * Output: IActorRdfJoinEntriesSortOutput: The sorted join entries.\n *\n * @see IActionRdfJoinEntriesSort\n * @see IActorTest\n * @see IActorRdfJoinEntriesSortOutput\n */\nexport abstract class ActorRdfJoinEntriesSort\n  extends Actor<IActionRdfJoinEntriesSort, IActorTest, IActorRdfJoinEntriesSortOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorRdfJoinEntriesSortArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionRdfJoinEntriesSort extends IAction {\n  /**\n   * The array of streams to join.\n   */\n  entries: IJoinEntryWithMetadata[];\n}\n\nexport interface IActorRdfJoinEntriesSortOutput extends IActorOutput {\n  /**\n   * The array of sorted streams.\n   */\n  entries: IJoinEntryWithMetadata[];\n}\n\nexport type IActorRdfJoinEntriesSortArgs = IActorArgs<\nIActionRdfJoinEntriesSort,\nIActorTest,\nIActorRdfJoinEntriesSortOutput\n>;\n\nexport type MediatorRdfJoinEntriesSort = Mediate<\nIActionRdfJoinEntriesSort,\nIActorRdfJoinEntriesSortOutput\n>;\n","import type { IAction, IActorArgs, IActorOutput, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IMediatorTypeAccuracy } from '@comunica/mediatortype-accuracy';\nimport type { IJoinEntry } from '@comunica/types';\n\n/**\n * A comunica actor for rdf-join-selectivity events.\n *\n * Actor types:\n * * Input:  IActionRdfJoinSelectivity:      Join entries.\n * * Test:   IMediatorTypeAccuracy:          The accuracy of the selectivity calculator.\n * * Output: IActorRdfJoinSelectivityOutput: The calculated join selectivity.\n *\n * @see IActionRdfJoinSelectivity\n * @see IActorRdfJoinSelectivityTest\n * @see IActorRdfJoinSelectivityOutput\n */\nexport abstract class ActorRdfJoinSelectivity\n  extends Actor<IActionRdfJoinSelectivity, IMediatorTypeAccuracy, IActorRdfJoinSelectivityOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorRdfJoinSelectivityArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionRdfJoinSelectivity extends IAction {\n  /**\n   * The array of streams to join.\n   */\n  entries: IJoinEntry[];\n}\n\nexport interface IActorRdfJoinSelectivityOutput extends IActorOutput {\n  /**\n   * A selectivity factor in the range [0, 1].\n   * A value close to 1 indicates a low selectivity,\n   * which means that the operations in the join entries are highly unrelated.\n   * A value close to 0 indicates a high selectivity,\n   * which means that the operations in the join entries are highly related, and have a high chance of reducing .\n   */\n  selectivity: number;\n}\n\nexport type IActorRdfJoinSelectivityArgs = IActorArgs<\nIActionRdfJoinSelectivity,\nIMediatorTypeAccuracy,\nIActorRdfJoinSelectivityOutput\n>;\n\nexport type MediatorRdfJoinSelectivity = Mediate<\nIActionRdfJoinSelectivity,\nIActorRdfJoinSelectivityOutput,\nIMediatorTypeAccuracy\n>;\n","import type { MediatorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport type {\n  MediatorRdfJoinSelectivity,\n} from '@comunica/bus-rdf-join-selectivity';\nimport { KeysInitQuery } from '@comunica/context-entries';\nimport type { IAction, IActorArgs, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport { cachifyMetadata, MetadataValidationState } from '@comunica/metadata';\nimport type {\n  IQueryOperationResultBindings,\n  MetadataBindings,\n  IPhysicalQueryPlanLogger,\n  Bindings,\n  IActionContext,\n  IJoinEntry,\n  IJoinEntryWithMetadata,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { termToString } from 'rdf-string';\nimport { instrumentIterator } from './instrumentIterator';\n\nconst DF = new DataFactory();\n\n/**\n * A comunica actor for joining 2 binding streams.\n *\n * Actor types:\n * * Input:  IActionRdfJoin:                The streams that need to be joined.\n * * Test:   IMediatorTypeJoinCoefficients: Join coefficients.\n * * Output: IActorRdfJoinOutput:           The resulting joined stream.\n *\n * @see IActionRdfJoin\n * @see IActorQueryOperationOutput\n */\nexport abstract class ActorRdfJoin\n  extends Actor<IActionRdfJoin, IMediatorTypeJoinCoefficients, IQueryOperationResultBindings> {\n  public readonly mediatorJoinSelectivity: MediatorRdfJoinSelectivity;\n\n  /**\n   * If this actor will be logged in the debugger and physical query plan logger\n   */\n  public includeInLogs = true;\n  public readonly logicalType: LogicalJoinType;\n  public readonly physicalName: string;\n  /**\n   * Can be used by subclasses to indicate the max or min number of streams that can be joined.\n   * 0 for infinity.\n   * By default, this indicates the max number, but can be inverted by setting limitEntriesMin to true.\n   */\n  protected readonly limitEntries: number;\n  /**\n   * If true, the limitEntries field is a lower limit,\n   * otherwise, it is an upper limit.\n   */\n  protected readonly limitEntriesMin: boolean;\n  /**\n   * If this actor can handle undefs in the bindings.\n   */\n  protected readonly canHandleUndefs: boolean;\n  /**\n   * If this join operator will not invoke any other join or query operations below,\n   * and can therefore be considered a leaf of the join plan.\n   */\n  protected readonly isLeaf: boolean;\n  /**\n   * If this join operator must only be used for join entries with (at least partially) common variables.\n   */\n  protected readonly requiresVariableOverlap?: boolean;\n\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   * @param options - Actor-specific join options.\n   */\n  public constructor(args: IActorRdfJoinArgs, options: IActorRdfJoinInternalOptions) {\n    super(args);\n    this.logicalType = options.logicalType;\n    this.physicalName = options.physicalName;\n    this.limitEntries = options.limitEntries ?? Number.POSITIVE_INFINITY;\n    this.limitEntriesMin = options.limitEntriesMin ?? false;\n    this.canHandleUndefs = options.canHandleUndefs ?? false;\n    this.isLeaf = options.isLeaf ?? true;\n    this.requiresVariableOverlap = options.requiresVariableOverlap ?? false;\n  }\n\n  /**\n   * Creates a hash of the given bindings by concatenating the results of the given variables.\n   * This can cause clashes for equal terms.\n   * This function will not sort the variables and expects them to be in the same order for every call.\n   * @param {Bindings} bindings\n   * @param {string[]} variables\n   * @returns {string} A hash string.\n   */\n  public static hash(bindings: Bindings, variables: RDF.Variable[]): string {\n    return variables\n      .map((variable) => {\n        const term = bindings.get(variable);\n        if (term) {\n          return term.value;\n        }\n        return '';\n      })\n      .join('');\n  }\n\n  /**\n   * Creates a hash of the given bindings by concatenating the results of the given variables.\n   * This is guaranteed to not produce clashing bindings for unequal terms.\n   * This function will not sort the variables and expects them to be in the same order for every call.\n   * @param {Bindings} bindings\n   * @param {string[]} variables\n   * @returns {string} A hash string.\n   */\n  public static hashNonClashing(bindings: RDF.Bindings, variables: RDF.Variable[]): string {\n    return variables\n      .map((variable) => {\n        const term = bindings.get(variable);\n        if (term) {\n          return termToString(term);\n        }\n        return '';\n      })\n      .join('');\n  }\n\n  /**\n   * Returns an array containing all the variable names that occur in all bindings streams.\n   * @param {MetadataBindings[]} metadatas An array of optional metadata objects for the entries.\n   * @returns {RDF.Variable[]} An array of variables.\n   */\n  public static overlappingVariables(metadatas: MetadataBindings[]): RDF.Variable[] {\n    const variables = metadatas.map(metadata => metadata.variables);\n    let baseArray = variables[0];\n    for (const array of variables.slice(1)) {\n      baseArray = baseArray.filter(el => array.some(value => value.value === el.value));\n    }\n    return baseArray;\n  }\n\n  /**\n   * Returns the variables that will occur in the joined bindings.\n   * @param {MetadataBindings[]} metadatas An array of metadata objects for the entries.\n   * @returns {RDF.Variable[]} An array of joined variables.\n   */\n  public static joinVariables(metadatas: MetadataBindings[]): RDF.Variable[] {\n    return [ ...new Set(metadatas.flatMap(metadata => metadata.variables.map(variable => variable.value))) ]\n      .map(variable => DF.variable(variable));\n  }\n\n  /**\n   * Returns the result of joining bindings, or `null` if no join is possible.\n   * @param {Bindings[]} bindings\n   * @returns {Bindings}\n   */\n\n  public static joinBindings(...bindings: Bindings[]): Bindings | null {\n    if (bindings.length === 0) {\n      return null;\n    }\n    if (bindings.length === 1) {\n      return bindings[0];\n    }\n\n    let acc: Bindings = bindings[0];\n    for (const binding of bindings.slice(1)) {\n      const merged = acc.merge(binding);\n      if (!merged) {\n        return null;\n      }\n      acc = merged;\n    }\n    return acc;\n  }\n\n  /**\n   * Get the estimated number of items from the given metadata.\n   * @param {Record<string, any>} metadata A metadata object.\n   * @return {number} The estimated number of items, or `Infinity` if cardinality is falsy.\n   */\n  public static getCardinality(metadata: MetadataBindings): RDF.QueryResultCardinality {\n    return metadata.cardinality;\n  }\n\n  /**\n   * Obtain the metadata from all given join entries.\n   * @param entries Join entries.\n   */\n  public static async getMetadatas(entries: IJoinEntry[]): Promise<MetadataBindings[]> {\n    return await Promise.all(entries.map(entry => entry.output.metadata()));\n  }\n\n  /**\n   * Obtain the join entries witt metadata from all given join entries.\n   * @param entries Join entries.\n   */\n  public static async getEntriesWithMetadatas(entries: IJoinEntry[]): Promise<IJoinEntryWithMetadata[]> {\n    const metadatas = await ActorRdfJoin.getMetadatas(entries);\n    return entries.map((entry, i) => ({ ...entry, metadata: metadatas[i] }));\n  }\n\n  /**\n   * Calculate the time to initiate a request for the given metadata entries.\n   * @param metadatas An array of checked metadata.\n   */\n  public static getRequestInitialTimes(metadatas: MetadataBindings[]): number[] {\n    return metadatas.map(metadata => metadata.pageSize ? 0 : metadata.requestTime ?? 0);\n  }\n\n  /**\n   * Calculate the time to receive a single item for the given metadata entries.\n   * @param metadatas An array of checked metadata.\n   */\n  public static getRequestItemTimes(metadatas: MetadataBindings[]): number[] {\n    return metadatas\n      .map(metadata => metadata.pageSize ? (metadata.requestTime ?? 0) / metadata.pageSize : 0);\n  }\n\n  /**\n   * Construct a metadata validation state for the given metadata entries.\n   * @param metadatas An array of checked metadata.\n   */\n  public constructState(metadatas: MetadataBindings[]): MetadataValidationState {\n    // Propagate metadata invalidations\n    const state = new MetadataValidationState();\n    const invalidateListener = (): void => state.invalidate();\n    for (const metadata of metadatas) {\n      metadata.state.addInvalidateListener(invalidateListener);\n    }\n    return state;\n  }\n\n  /**\n   * Helper function to create a new metadata object for the join result.\n   * For required metadata entries that are not provided, sane defaults are calculated.\n   * @param entries Join entries.\n   * @param metadatas Metadata of the join entries.\n   * @param context The action context.\n   * @param partialMetadata Partial metadata entries.\n   * @param optional If metadata for an optional operation must be calculated.\n   */\n  public async constructResultMetadata(\n    entries: IJoinEntry[],\n    metadatas: MetadataBindings[],\n    context: IActionContext,\n    partialMetadata: Partial<MetadataBindings> = {},\n    optional = false,\n  ): Promise<MetadataBindings> {\n    let cardinalityJoined: RDF.QueryResultCardinality;\n    if (partialMetadata.cardinality) {\n      cardinalityJoined = partialMetadata.cardinality;\n    } else {\n      cardinalityJoined = metadatas\n        .reduce((acc: RDF.QueryResultCardinality, metadata) => {\n          const cardinalityThis = ActorRdfJoin.getCardinality(metadata);\n          return {\n            type: cardinalityThis.type === 'estimate' ? 'estimate' : acc.type,\n            value: acc.value * (optional ? Math.max(1, cardinalityThis.value) : cardinalityThis.value),\n          };\n        }, { type: 'exact', value: 1 });\n      cardinalityJoined.value *= (await this.mediatorJoinSelectivity.mediate({ entries, context })).selectivity;\n    }\n\n    return {\n      state: this.constructState(metadatas),\n      ...partialMetadata,\n      cardinality: {\n        type: cardinalityJoined.type,\n        value: cardinalityJoined.value,\n      },\n      canContainUndefs: partialMetadata.canContainUndefs ?? metadatas.some(metadata => metadata.canContainUndefs),\n      variables: ActorRdfJoin.joinVariables(metadatas),\n    };\n  }\n\n  /**\n   * Order the given join entries using the join-entries-sort bus.\n   * @param {MediatorRdfJoinEntriesSort} mediatorJoinEntriesSort A mediator for sorting join entries.\n   * @param {IJoinEntryWithMetadata[]} entries An array of join entries.\n   * @param context The action context.\n   * @return {IJoinEntryWithMetadata[]} The sorted join entries.\n   */\n  public static async sortJoinEntries(\n    mediatorJoinEntriesSort: MediatorRdfJoinEntriesSort,\n    entries: IJoinEntryWithMetadata[],\n    context: IActionContext,\n  ): Promise<IJoinEntryWithMetadata[]> {\n    // If there is a stream that can contain undefs, we don't modify the join order.\n    const canContainUndefs = entries.some(entry => entry.metadata.canContainUndefs);\n    if (canContainUndefs) {\n      return entries;\n    }\n\n    // Calculate number of occurrences of each variable\n    const variableOccurrences: Record<string, number> = {};\n    for (const entry of entries) {\n      for (const variable of entry.metadata.variables) {\n        let counter = variableOccurrences[variable.value];\n        if (!counter) {\n          counter = 0;\n        }\n        variableOccurrences[variable.value] = ++counter;\n      }\n    }\n\n    // Determine variables that occur in at least two join entries\n    const multiOccurrenceVariables: string[] = [];\n    for (const [ variable, count ] of Object.entries(variableOccurrences)) {\n      if (count >= 2) {\n        multiOccurrenceVariables.push(variable);\n      }\n    }\n\n    // Reject if no entries have common variables\n    if (multiOccurrenceVariables.length === 0) {\n      throw new Error(`Bind join can only join entries with at least one common variable`);\n    }\n\n    // Determine entries without common variables\n    // These will be placed in the back of the sorted array\n    const entriesWithoutCommonVariables: IJoinEntryWithMetadata[] = [];\n    for (const entry of entries) {\n      let hasCommon = false;\n      for (const variable of entry.metadata.variables) {\n        if (multiOccurrenceVariables.includes(variable.value)) {\n          hasCommon = true;\n          break;\n        }\n      }\n      if (!hasCommon) {\n        entriesWithoutCommonVariables.push(entry);\n      }\n    }\n\n    return (await mediatorJoinEntriesSort.mediate({ entries, context })).entries\n      .sort((entryLeft, entryRight) => {\n        // Sort to make sure that entries without common variables come last in the array.\n        // For all other entries, the original order is kept.\n        const leftWithoutCommonVariables = entriesWithoutCommonVariables.includes(entryLeft);\n        const rightWithoutCommonVariables = entriesWithoutCommonVariables.includes(entryRight);\n        if (leftWithoutCommonVariables === rightWithoutCommonVariables) {\n          return 0;\n        }\n        return leftWithoutCommonVariables ?\n          1 :\n            -1;\n      });\n  }\n\n  /**\n   * Default test function for join actors.\n   * Checks whether all iterators have metadata.\n   * If yes: call the abstract getIterations method, if not: return Infinity.\n   * @param {IActionRdfJoin} action The input action containing the relevant iterators\n   * @returns {Promise<IMediatorTypeJoinCoefficients>} The join coefficients.\n   */\n  public async test(action: IActionRdfJoin): Promise<IMediatorTypeJoinCoefficients> {\n    // Validate logical join type\n    if (action.type !== this.logicalType) {\n      throw new Error(`${this.name} can only handle logical joins of type '${this.logicalType}', while '${action.type}' was given.`);\n    }\n\n    // Don't allow joining of one or zero streams\n    if (action.entries.length <= 1) {\n      throw new Error(`${this.name} requires at least two join entries.`);\n    }\n\n    // Check if this actor can handle the given number of streams\n    if (this.limitEntriesMin ? action.entries.length < this.limitEntries : action.entries.length > this.limitEntries) {\n      throw new Error(`${this.name} requires ${this.limitEntries\n      } join entries at ${this.limitEntriesMin ? 'least' : 'most'\n      }. The input contained ${action.entries.length}.`);\n    }\n\n    // Check if all streams are bindings streams\n    for (const entry of action.entries) {\n      if (entry.output.type !== 'bindings') {\n        // eslint-disable-next-line ts/restrict-template-expressions\n        throw new Error(`Invalid type of a join entry: Expected 'bindings' but got '${entry.output.type}'`);\n      }\n    }\n\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n\n    // Check if this actor can handle undefs\n    if (!this.canHandleUndefs) {\n      for (const metadata of metadatas) {\n        if (metadata.canContainUndefs) {\n          throw new Error(`Actor ${this.name} can not join streams containing undefs`);\n        }\n      }\n    }\n\n    // This actor only works with common variables\n    if (this.requiresVariableOverlap && ActorRdfJoin.overlappingVariables(metadatas).length === 0) {\n      throw new Error(`Actor ${this.name} can only join entries with at least one common variable`);\n    }\n\n    return await this.getJoinCoefficients(action, metadatas);\n  }\n\n  /**\n   * Returns default input for 0 or 1 entries. Calls the getOutput function otherwise\n   * @param {IActionRdfJoin} action\n   * @returns {Promise<IQueryOperationResultBindings>} A bindings result.\n   */\n  public async run(action: IActionRdfJoin): Promise<IQueryOperationResultBindings> {\n    // Prepare logging to physical plan\n    // This must be called before getOutput, because we need to override the plan node in the context\n    let parentPhysicalQueryPlanNode;\n    if (action.context.has(KeysInitQuery.physicalQueryPlanLogger)) {\n      parentPhysicalQueryPlanNode = action.context.get(KeysInitQuery.physicalQueryPlanNode);\n      action.context = action.context.set(KeysInitQuery.physicalQueryPlanNode, action);\n    }\n\n    // Log to physical plan\n    const physicalQueryPlanLogger: IPhysicalQueryPlanLogger | undefined = action.context.get(KeysInitQuery\n      .physicalQueryPlanLogger);\n    let planMetadata: any;\n    if (this.includeInLogs && physicalQueryPlanLogger) {\n      planMetadata = {};\n      // Stash non-join children, as they will be unstashed later in sub-joins.\n      physicalQueryPlanLogger.stashChildren(\n        parentPhysicalQueryPlanNode,\n        node => node.logicalOperator.startsWith('join'),\n      );\n      physicalQueryPlanLogger.logOperation(\n        `join-${this.logicalType}`,\n        this.physicalName,\n        action,\n        parentPhysicalQueryPlanNode,\n        this.name,\n        planMetadata,\n      );\n    }\n\n    // Get action output\n    const { result, physicalPlanMetadata } = await this.getOutput(action);\n    const metadatas = await ActorRdfJoin.getMetadatas(action.entries);\n\n    // Fill in the physical plan metadata after determining action output\n    if (planMetadata) {\n      // eslint-disable-next-line ts/no-floating-promises\n      instrumentIterator(result.bindingsStream)\n        .then((counters) => {\n          physicalQueryPlanLogger!.appendMetadata(action, {\n            cardinalityReal: counters.count,\n            timeSelf: counters.timeSelf,\n            timeLife: counters.timeLife,\n          });\n        });\n\n      Object.assign(planMetadata, physicalPlanMetadata);\n      const cardinalities = metadatas.map(ActorRdfJoin.getCardinality);\n      planMetadata.cardinalities = cardinalities;\n      planMetadata.joinCoefficients = await this.getJoinCoefficients(action, metadatas);\n\n      // If this is a leaf operation, include join entries in plan metadata.\n      if (this.isLeaf) {\n        for (let i = 0; i < action.entries.length; i++) {\n          const entry = action.entries[i];\n          physicalQueryPlanLogger!.unstashChild(\n            entry.operation,\n            action,\n          );\n          physicalQueryPlanLogger!.appendMetadata(entry.operation, { cardinality: cardinalities[i] });\n        }\n      }\n    }\n\n    // Cache metadata\n    result.metadata = cachifyMetadata(result.metadata);\n\n    return result;\n  }\n\n  /**\n   * Returns the resulting output for joining the given entries.\n   * This is called after removing the trivial cases in run.\n   * @param {IActionRdfJoin} action\n   * @returns {Promise<IActorRdfJoinOutputInner>}\n   */\n  protected abstract getOutput(action: IActionRdfJoin): Promise<IActorRdfJoinOutputInner>;\n\n  /**\n   * Calculate the join coefficients.\n   * @param {IActionRdfJoin} action Join action\n   * @param metadatas Array of resolved metadata objects.\n   * @returns {IMediatorTypeJoinCoefficients} The join coefficient estimates.\n   */\n  protected abstract getJoinCoefficients(\n    action: IActionRdfJoin,\n    metadatas: MetadataBindings[],\n  ): Promise<IMediatorTypeJoinCoefficients>;\n}\n\nexport interface IActorRdfJoinArgs\n  extends IActorArgs<IActionRdfJoin, IMediatorTypeJoinCoefficients, IQueryOperationResultBindings> {\n  mediatorJoinSelectivity: MediatorRdfJoinSelectivity;\n}\n\nexport interface IActorRdfJoinInternalOptions {\n  /**\n   * The logical join type this actor can handle.\n   */\n  logicalType: LogicalJoinType;\n  /**\n   * The physical name of join operation this actor implements.\n   * This is used for debug and query plan logs.\n   */\n  physicalName: string;\n  /**\n   * Can be used by subclasses to indicate the max or min number of streams that can be joined.\n   * 0 for infinity.\n   * By default, this indicates the max number, but can be inverted by setting limitEntriesMin to true.\n   */\n  limitEntries?: number;\n  /**\n   * If true, the limitEntries field is a lower limit,\n   * otherwise, it is an upper limit.\n   * Defaults to false.\n   */\n  limitEntriesMin?: boolean;\n  /**\n   * If this actor can handle undefs in the bindings.\n   * Defaults to false.\n   */\n  canHandleUndefs?: boolean;\n  /**\n   * If this join operator will not invoke any other join or query operations below,\n   * and can therefore be considered a leaf of the join plan.\n   * Defaults to true.\n   */\n  isLeaf?: boolean;\n  /**\n   * If this join operator must only be used for join entries with (at least partially) common variables.\n   */\n  requiresVariableOverlap?: boolean;\n}\n\n/**\n * Represents a logical join type.\n */\nexport type LogicalJoinType = 'inner' | 'optional' | 'minus';\n\nexport interface IActionRdfJoin extends IAction {\n  /**\n   * The logical join type.\n   */\n  type: LogicalJoinType;\n  /**\n   * The array of streams to join.\n   */\n  entries: IJoinEntry[];\n}\n\nexport interface IActorRdfJoinOutputInner {\n  /**\n   * The join result.\n   */\n  result: IQueryOperationResultBindings;\n  /**\n   * Optional metadata that will be included as metadata within the physical query plan output.\n   */\n  physicalPlanMetadata?: any;\n}\n\nexport type MediatorRdfJoin = Mediate<IActionRdfJoin, IQueryOperationResultBindings, IMediatorTypeJoinCoefficients>;\n","import type { AsyncIterator, TransformIteratorOptions } from 'asynciterator';\nimport { ArrayIterator, TransformIterator } from 'asynciterator';\n\n/**\n * Splits an iterator into chunks based on a given block size.\n */\nexport class ChunkedIterator<T> extends TransformIterator<T, AsyncIterator<T>> {\n  protected readonly blockSize: number;\n  protected chunk: T[] = [];\n\n  public constructor(source: AsyncIterator<T>, blockSize: number, options?: TransformIteratorOptions<T>) {\n    super(source, options);\n    this.blockSize = blockSize;\n  }\n\n  protected consumeChunkAsIterator(): AsyncIterator<T> {\n    const it = new ArrayIterator(this.chunk, { autoStart: false });\n    this.chunk = [];\n    return it;\n  }\n\n  protected override _transform(item: T, done: () => void, push: (i: AsyncIterator<T>) => void): void {\n    this.chunk.push(item);\n    if (this.chunk.length >= this.blockSize) {\n      push(this.consumeChunkAsIterator());\n    }\n    done();\n  }\n\n  protected override _flush(done: () => void): void {\n    if (this.chunk.length > 0) {\n      this._push(this.consumeChunkAsIterator());\n    }\n    super._flush(done);\n  }\n}\n","import type { AsyncIterator } from 'asynciterator';\n\nexport type IteratorCounters = {\n  /**\n   * The total time spent within `_read` and `read`.\n   */\n  timeSelf: number;\n  /**\n   * The time between creation and ending.\n   */\n  timeLife: number;\n  /**\n   * The number of elements produced.\n   */\n  count: number;\n};\n\n/**\n * Profile an iterator by monkey-patching its `_read` and `read` methods.\n * @param iterator\n */\nexport function instrumentIterator(iterator: AsyncIterator<any>): Promise<IteratorCounters> {\n  const counters: IteratorCounters = {\n    count: 0,\n    timeSelf: 0,\n    timeLife: 0,\n  };\n  instrumentIteratorInner(iterator, counters, true);\n  return new Promise((resolve) => {\n    iterator.on('end', () => {\n      resolve(counters);\n    });\n  });\n}\n\nfunction instrumentIteratorInner(\n  iterator: AsyncIterator<any>,\n  counter: { timeSelf: number; timeLife: number; count: number },\n  top: boolean,\n): void {\n  if (!('_profileInstrumented' in iterator)) {\n    // Only patch an iterator once.\n    (<any>iterator)._profileInstrumented = true;\n\n    // Patch _read\n    if ('_read' in iterator) {\n      const readOld: any = iterator._read;\n      iterator._read = (count: number, done: () => void) => {\n        const startTime = performance.now();\n        readOld.call(iterator, count, () => {\n          counter.timeSelf += performance.now() - startTime;\n          done();\n        });\n      };\n    }\n\n    // Patch read\n    if ('read' in iterator) {\n      // eslint-disable-next-line ts/unbound-method\n      const readOld: any = iterator.read;\n      iterator.read = () => {\n        const startTime = performance.now();\n        const ret = readOld.call(iterator);\n        if (top && ret) {\n          counter.count++;\n        }\n        counter.timeSelf += performance.now() - startTime;\n        return ret;\n      };\n    }\n\n    // Measure total time\n    if (top) {\n      const startTime = performance.now();\n      iterator.on('end', () => {\n        counter.timeLife = performance.now() - startTime;\n      });\n    }\n\n    // Also patch children\n    if ('_source' in iterator) {\n      instrumentIteratorInner(<any>iterator._source, counter, false);\n    }\n  }\n}\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type { MetadataBindings } from '@comunica/types';\n\n/**\n * A comunica actor for rdf-metadata-accumulate events.\n *\n * Actor types:\n * * Input:  IActionRdfMetadataAccumulate:      The metadata objects to accumulate,\n *                                              or a trigger for initializing a new value.\n * * Test:   <none>\n * * Output: IActorRdfMetadataAccumulateOutput: The accumulated metadata object.\n *\n * @see IActionRdfMetadataAccumulate\n * @see IActorRdfMetadataAccumulateOutput\n */\nexport abstract class ActorRdfMetadataAccumulate\n  extends Actor<IActionRdfMetadataAccumulate, IActorTest, IActorRdfMetadataAccumulateOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorRdfMetadataAccumulateArgs) {\n    super(args);\n  }\n}\n\nexport type IActionRdfMetadataAccumulate = IActionRdfMetadataAccumulateInitialize | IActionRdfMetadataAccumulateAppend;\n\nexport interface IActionRdfMetadataAccumulateInitialize extends IAction {\n  /**\n   * Indicates that metadata fields should be initialized to default values.\n   */\n  mode: 'initialize';\n}\n\nexport interface IActionRdfMetadataAccumulateAppend extends IAction {\n  /**\n   * Indicates that metadata fields should be accumulated.\n   * The initialize step is guaranteed to have been called before this on the `accumulatedMetadata` object.\n   */\n  mode: 'append';\n  /**\n   * The metadata object that already has some accumulated fields.\n   * This object should not be mutated.\n   */\n  accumulatedMetadata: MetadataBindings;\n  /**\n   * The metadata object with fields to append.\n   * This object should not be mutated.\n   */\n  appendingMetadata: MetadataBindings;\n}\n\nexport interface IActorRdfMetadataAccumulateOutput extends IActorOutput {\n  /**\n   * The initialized or accumulated metadata object.\n   * This should only contain those fields that are applicable to this actor.\n   */\n  metadata: Partial<MetadataBindings>;\n}\n\nexport type IActorRdfMetadataAccumulateArgs = IActorArgs<\nIActionRdfMetadataAccumulate,\nIActorTest,\nIActorRdfMetadataAccumulateOutput\n>;\n\nexport type MediatorRdfMetadataAccumulate = Mediate<\nIActionRdfMetadataAccumulate,\nIActorRdfMetadataAccumulateOutput\n>;\n","import type { IAction, IActorArgs, IActorOutput, IActorTest, Mediate } from '@comunica/core';\nimport { Actor } from '@comunica/core';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\n\n/**\n * A comunica actor for rdf-update-quads events.\n *\n * Actor types:\n * * Input:  IActionRdfUpdateQuads:      Quad insertion and deletion streams.\n * * Test:   <none>\n * * Output: IActorRdfUpdateQuadsOutput: A promise resolving when the update operation is done.\n *\n * @see IActionRdfUpdateQuads\n * @see IActorRdfUpdateQuadsOutput\n */\nexport abstract class ActorRdfUpdateQuads extends Actor<IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput> {\n  /**\n   * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus\n   */\n  public constructor(args: IActorRdfUpdateQuadsArgs) {\n    super(args);\n  }\n}\n\nexport interface IActionRdfUpdateQuads extends IAction {\n  /**\n   * An optional stream of quads to insert.\n   */\n  quadStreamInsert?: AsyncIterator<RDF.Quad>;\n  /**\n   * An optional stream of quads to delete.\n   */\n  quadStreamDelete?: AsyncIterator<RDF.Quad>;\n  /**\n   * An optional deletion of graphs.\n   */\n  deleteGraphs?: {\n    /**\n     * The graph(s) in which all triples must be removed.\n     */\n    graphs: RDF.DefaultGraph | 'NAMED' | 'ALL' | RDF.NamedNode[];\n    /**\n     * If true, and the graph does not exist, an error must be emitted.\n     *\n     * Should only be considered on destinations that record empty graphs.\n     */\n    requireExistence: boolean;\n    /**\n     * If the graph itself should also be dropped.\n     * Should not happen on the 'DEFAULT' graph.\n     *\n     * Should only be considered on destinations that record empty graphs.\n     */\n    dropGraphs: boolean;\n  };\n  /**\n   * An optional creation of (empty) graphs.\n   */\n  createGraphs?: {\n    /**\n     * The graph names to create.\n     */\n    graphs: RDF.NamedNode[];\n    /**\n     * If true, an error MUST be thrown when the graph already exists.\n     *\n     * For destinations that do not record empty graphs,\n     * this should only throw if at least one quad with the given quad already exists.\n     */\n    requireNonExistence: boolean;\n  };\n}\n\nexport interface IActorRdfUpdateQuadsOutput extends IActorOutput {\n  /**\n   * Async function that resolves when the update operation is done.\n   */\n  execute: () => Promise<void>;\n}\n\nexport type IActorRdfUpdateQuadsArgs = IActorArgs<IActionRdfUpdateQuads, IActorTest, IActorRdfUpdateQuadsOutput>;\n\nexport type MediatorRdfUpdateQuads = Mediate<IActionRdfUpdateQuads, IActorRdfUpdateQuadsOutput>;\n","import { deskolemizeQuad } from '@comunica/actor-context-preprocess-query-source-skolemize';\nimport { KeysQuerySourceIdentify, KeysRdfUpdateQuads } from '@comunica/context-entries';\nimport type { IActorTest } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { AsyncIterator } from 'asynciterator';\nimport type { IActionRdfUpdateQuads, IActorRdfUpdateQuadsOutput } from './ActorRdfUpdateQuads';\nimport { ActorRdfUpdateQuads } from './ActorRdfUpdateQuads';\nimport type { IQuadDestination } from './IQuadDestination';\n\nexport function deskolemizeStream(stream: AsyncIterator<RDF.Quad> | undefined, id: string):\nAsyncIterator<RDF.Quad> | undefined {\n  return stream?.map(quad => deskolemizeQuad(quad, id));\n}\n\nexport function deskolemize(action: IActionRdfUpdateQuads): IActionRdfUpdateQuads {\n  const destination = action.context.get(KeysRdfUpdateQuads.destination);\n  const id = action.context.get<Map<any, string>>(KeysQuerySourceIdentify.sourceIds)?.get(destination);\n  if (!id) {\n    return action;\n  }\n  return {\n    ...action,\n    quadStreamInsert: deskolemizeStream(action.quadStreamInsert, id),\n    quadStreamDelete: deskolemizeStream(action.quadStreamDelete, id),\n  };\n}\n\n/**\n * A base implementation for rdf-update-quads events\n * that wraps around an {@link IQuadDestination}.\n *\n * @see IQuadDestination\n */\nexport abstract class ActorRdfUpdateQuadsDestination extends ActorRdfUpdateQuads {\n  public async test(_action: IActionRdfUpdateQuads): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfUpdateQuads): Promise<IActorRdfUpdateQuadsOutput> {\n    const destination = await this.getDestination(action.context);\n    return await this.getOutput(destination, deskolemize(action));\n  }\n\n  /**\n   * Get the output of the given action on a destination.\n   * @param {IQuadDestination} destination A quad destination, possibly lazy.\n   * @param {IActionRdfUpdateQuads} action The action.\n   */\n  protected async getOutput(\n    destination: IQuadDestination,\n    action: IActionRdfUpdateQuads,\n  ): Promise<IActorRdfUpdateQuadsOutput> {\n    const execute = async(): Promise<void> => {\n      await (action.quadStreamDelete ? destination.delete(action.quadStreamDelete) : Promise.resolve());\n      await (action.deleteGraphs ?\n        destination.deleteGraphs(\n          action.deleteGraphs.graphs,\n          action.deleteGraphs.requireExistence,\n          action.deleteGraphs.dropGraphs,\n        ) :\n        Promise.resolve());\n      await (action.createGraphs ?\n        destination.createGraphs(action.createGraphs.graphs, action.createGraphs.requireNonExistence) :\n        Promise.resolve());\n      await (action.quadStreamInsert ? destination.insert(action.quadStreamInsert) : Promise.resolve());\n    };\n    return { execute };\n  }\n\n  /**\n   * Get a destination instance for the given context.\n   * @param {ActionContext} context Optional context data.\n   * @return {Promise<IQuadDestination>} A promise that resolves to a destination.\n   */\n  protected abstract getDestination(context: IActionContext): Promise<IQuadDestination>;\n}\n","import { ActionContextKey, CONTEXT_KEY_LOGGER } from '@comunica/core';\nimport type {\n  Bindings,\n  IPhysicalQueryPlanLogger,\n  QueryExplainMode,\n  IProxyHandler,\n  ICliArgsHandler,\n  IDataDestination,\n  MetadataBindings,\n  FunctionArgumentsCache,\n  IAggregatedStore,\n  QuerySourceUnidentified,\n  IQuerySourceWrapper,\n  QuerySourceReference,\n} from '@comunica/types';\nimport type * as RDF from '@rdfjs/types';\nimport type { IDocumentLoader } from 'jsonld-context-parser';\nimport type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * When adding entries to this file, also add a shortcut for them in the contextKeyShortcuts TSDoc comment in\n * ActorInitQueryBase in @comunica/actor-init-query if it makes sense to use this entry externally.\n * Also, add this shortcut to IQueryContextCommon in @comunica/types.\n */\n\nexport const KeysCore = {\n  // We create the core context keys in @comunica/core to avoid a cyclic dependency\n  /**\n   * A logger instance.\n   */\n  log: CONTEXT_KEY_LOGGER,\n};\n\nexport const KeysHttp = {\n  /**\n   * Include credentials flags.\n   */\n  includeCredentials: new ActionContextKey<boolean>('@comunica/bus-http:include-credentials'),\n  /**\n   * Authentication for a source as a \"username:password\"-pair.\n   */\n  auth: new ActionContextKey<string>('@comunica/bus-http:auth'),\n  /**\n   * Fetch function implementation.\n   */\n  fetch: new ActionContextKey<typeof fetch>('@comunica/bus-http:fetch'),\n  /**\n   * HTTP request timeout in milliseconds.\n   */\n  httpTimeout: new ActionContextKey<number>('@comunica/bus-http:http-timeout'),\n  /**\n   * Makes the HTTP timeout not only apply until the response starts streaming in\n   * but until the response is fully consumed.\n   */\n  httpBodyTimeout: new ActionContextKey<boolean>('@comunica/bus-http:http-body-timeout'),\n  /**\n   * Number of retries to make on failed network calls. This only takes effect\n   * on errors thrown during the initial fetch() call and not while streaming the body.\n   */\n  httpRetryCount: new ActionContextKey<number>('@comunica/bus-http:http-retry-count'),\n  /**\n   * Delay in milliseconds to wait between fetch retries. Requires httpRetryCount to be set.\n   */\n  httpRetryDelay: new ActionContextKey<number>('@comunica/bus-http:http-retry-delay'),\n  /**\n   * Retry fetch, if server replies with a 5xx error response. Requires httpRetryCount to be set.\n   */\n  httpRetryOnServerError: new ActionContextKey<number>('@comunica/bus-http:http-retry-on-server-error'),\n};\n\nexport const KeysHttpWayback = {\n  /**\n   * Use the WayBack machine to get the most recent representation of a file if a link is broken.\n   * @default false\n   */\n  recoverBrokenLinks: new ActionContextKey<boolean>('@comunica/bus-http:recover-broken-links'),\n};\n\nexport const KeysHttpMemento = {\n  /**\n   * The desired datetime for Memento datetime-negotiation.\n   */\n  datetime: new ActionContextKey<Date>('@comunica/actor-http-memento:datetime'),\n};\n\nexport const KeysHttpProxy = {\n  /**\n   * Interface.\n   */\n  httpProxyHandler: new ActionContextKey<IProxyHandler>('@comunica/actor-http-proxy:httpProxyHandler'),\n};\n\nexport const KeysInitQuery = {\n  /**\n   * The unidentified sources to query over.\n   */\n  querySourcesUnidentified: new ActionContextKey<QuerySourceUnidentified[]>(\n    '@comunica/actor-init-query:querySourcesUnidentified',\n  ),\n  /**\n   * Variables that have to be pre-bound to values in the query.\n   */\n  initialBindings: new ActionContextKey<RDF.Bindings>('@comunica/actor-init-query:initialBindings'),\n  /**\n   * The provided query's format.\n   * Defaults to { language: 'sparql', version: '1.1' }\n   */\n  queryFormat: new ActionContextKey<RDF.QueryFormat>('@comunica/actor-init-query:queryFormat'),\n  /**\n   * Which GraphQL bindings should be singularized.\n   */\n  graphqlSingularizeVariables: new ActionContextKey<any>('@comunica/actor-init-query:singularizeVariables'),\n  /**\n   * If HTTP and parsing failures are ignored.\n   */\n  lenient: new ActionContextKey<boolean>('@comunica/actor-init-query:lenient'),\n  /**\n   * The original query string.\n   */\n  queryString: new ActionContextKey<string>('@comunica/actor-init-query:queryString'),\n  /**\n   * The original parsed query.\n   */\n  query: new ActionContextKey<Algebra.Operation>('@comunica/actor-init-query:query'),\n  /**\n   * The query's base IRI.\n   */\n  baseIRI: new ActionContextKey<string>('@comunica/actor-init-query:baseIRI'),\n  /**\n   * Object to cache function argument overload resolutions.\n   * Defaults to an object that is reused across query executions.\n   */\n  functionArgumentsCache: new ActionContextKey<FunctionArgumentsCache>(\n    '@comunica/actor-init-query:functionArgumentsCache',\n  ),\n  /**\n   * A timestamp representing the current time.\n   *                 This is required for certain SPARQL operations such as NOW().\n   */\n  queryTimestamp: new ActionContextKey<Date>('@comunica/actor-init-query:queryTimestamp'),\n  /**\n   * @range {functionNamedNode: RDF.NamedNode) => ((args: RDF.Term[]) => Promise<RDF.Term>) | undefined}\n   * Extension function creator for a given function IRI.\n   * Returned value should be an async function implementation.\n   * Undefined may be returned if no implementation exists for the given function IRI.\n   *\n   * The dictionary-based extensionFunctions context entry may be used instead, but not simultaneously.\n   */\n  extensionFunctionCreator: new ActionContextKey<\n  (functionNamedNode: RDF.NamedNode) => ((args: RDF.Term[]) => Promise<RDF.Term>) | undefined\n    >('@comunica/actor-init-query:extensionFunctionCreator'),\n  /**\n   * Dictionary of extension functions.\n   * Key is the IRI of the function, and value is the async function implementation.\n   *\n   * The callback-based extensionFunctionCreator context entry may be used instead, but not simultaneously.\n   */\n  extensionFunctions: new ActionContextKey<\n  Record<string, (args: RDF.Term[]) => Promise<RDF.Term>>\n    >('@comunica/actor-init-query:extensionFunctions'),\n  /**\n   * Enables manipulation of the CLI arguments and their processing.\n   */\n  cliArgsHandlers: new ActionContextKey<ICliArgsHandler[]>('@comunica/actor-init-query:cliArgsHandlers'),\n  /**\n   * Explain mode of the query. Can be 'parsed', 'logical', 'physical', or 'physical-json'.\n   */\n  explain: new ActionContextKey<QueryExplainMode>('@comunica/actor-init-query:explain'),\n  /**\n   * Logs the used physical operators\n   */\n  physicalQueryPlanLogger: new ActionContextKey<IPhysicalQueryPlanLogger>(\n    '@comunica/actor-init-query:physicalQueryPlanLogger',\n  ),\n  /**\n   * The current physical operator within the query plan.\n   *              This is used to pass parent-child relationships for invoking the query plan logger.\n   */\n  physicalQueryPlanNode: new ActionContextKey<any>('@comunica/actor-init-query:physicalQueryPlanNode'),\n  /**\n   * A JSON-LD context\n   */\n  jsonLdContext: new ActionContextKey<any>('@context'),\n  /**\n   * A boolean value denoting whether caching is disabled or not.\n   */\n  noCache: new ActionContextKey<boolean>('@comunica/actor-init-query:noCache'),\n  /**\n   * A boolean value denoting whether results should be deduplicated or not.\n   */\n  distinctConstruct: new ActionContextKey<boolean>('@comunica/actor-init-query:distinctConstruct'),\n};\n\nexport const KeysQueryOperation = {\n  /**\n   * Context entry for the current query operation.\n   */\n  operation: new ActionContextKey<string>('@comunica/bus-query-operation:operation'),\n  /**\n   * @type {any} The metadata from the left streams within a join operation.\n   */\n  joinLeftMetadata: new ActionContextKey<MetadataBindings>('@comunica/bus-query-operation:joinLeftMetadata'),\n  /**\n   * An array of metadata from the right streams within a join operation.\n   */\n  joinRightMetadatas: new ActionContextKey<MetadataBindings[]>('@comunica/bus-query-operation:joinRightMetadatas'),\n  /**\n   * Indicates the bindings that were used to bind the operation.\n   */\n  joinBindings: new ActionContextKey<Bindings>('@comunica/bus-query-operation:joinBindings'),\n  /**\n   * Flag for indicating that only read operations are allowed, defaults to false.\n   */\n  readOnly: new ActionContextKey<boolean>('@comunica/bus-query-operation:readOnly'),\n  /**\n   * An internal context entry to mark that a property path with arbitrary length and a distinct key is being processed.\n   */\n  isPathArbitraryLengthDistinctKey: new ActionContextKey<boolean>(\n    '@comunica/bus-query-operation:isPathArbitraryLengthDistinct',\n  ),\n  /**\n   * An indicator that the stream will be limited to the given number of elements afterwards.\n   */\n  limitIndicator: new ActionContextKey<number>('@comunica/bus-query-operation:limitIndicator'),\n  /**\n   * If the default graph should also contain the union of all named graphs.\n   */\n  unionDefaultGraph: new ActionContextKey<boolean>('@comunica/bus-query-operation:unionDefaultGraph'),\n  /**\n   * The sources to query over.\n   */\n  querySources: new ActionContextKey<IQuerySourceWrapper[]>('@comunica/bus-query-operation:querySources'),\n};\n\nexport const KeysRdfParseJsonLd = {\n  /**\n   * @range {IDocumentLoader}\n   */\n  documentLoader: new ActionContextKey<IDocumentLoader>('@comunica/actor-rdf-parse-jsonld:documentLoader'),\n  /**\n   * @range {boolean}\n   */\n  strictValues: new ActionContextKey<boolean>('@comunica/actor-rdf-parse-jsonld:strictValues'),\n  /**\n   * @range {Record<string, any>}\n   */\n  parserOptions: new ActionContextKey<Record<string, any>>('@comunica/actor-rdf-parse-jsonld:parserOptions'),\n};\n\nexport const KeysRdfParseHtmlScript = {\n  /**\n   * An internal context flag to determine if the engine is already processing an HTML script tag.\n   */\n  processingHtmlScript: new ActionContextKey<boolean>('@comunica/actor-rdf-parse-html-script:processingHtmlScript'),\n  /**\n   * If all HTML script tags must be considered.\n   */\n  extractAllScripts: new ActionContextKey<boolean>('extractAllScripts'),\n};\n\nexport const KeysQuerySourceIdentify = {\n  /**\n   * A map containing unique IDs for each source\n   */\n  sourceIds: new ActionContextKey<Map<QuerySourceReference, string>>(\n    '@comunica/bus-query-source-identify:sourceIds',\n  ),\n  /**\n   * Hypermedia sources mapping to their aggregated store.\n   */\n  hypermediaSourcesAggregatedStores: new ActionContextKey<Map<string, IAggregatedStore>>(\n    '@comunica/bus-query-source-identify:hypermediaSourcesAggregatedStores',\n  ),\n  /**\n   * If links may be traversed from this source.\n   * This means that sources annotated with this flag are considered incomplete until all links have been traversed.\n   */\n  traverse: new ActionContextKey<boolean>('@comunica/bus-query-source-identify:traverse'),\n};\n\nexport const KeysRdfUpdateQuads = {\n  /**\n   * A data destination.\n   */\n  destination: new ActionContextKey<IDataDestination>('@comunica/bus-rdf-update-quads:destination'),\n};\n\nexport const KeysMergeBindingsContext = {\n  /**\n   * The data sources required to produce the binding\n   */\n  sourcesBinding: new ActionContextKey<string[]>('@comunica/bus-merge-bindings-context:sourcesBinding'),\n};\n\nexport const KeysRdfJoin = {\n  /**\n   * The last physical join actor that was executed.\n   */\n  lastPhysicalJoin: new ActionContextKey<string>('@comunica/bus-rdf-join:lastPhysicalJoin'),\n};\n","import type { IActionContext, IActionContextKey } from '@comunica/types';\nimport { Map } from 'immutable';\n\n/**\n * Implementation of {@link IActionContext} using Immutable.js.\n */\nexport class ActionContext implements IActionContext {\n  private readonly map: Map<string, any>;\n\n  public constructor(data: Record<string, any> = {}) {\n    this.map = Map<string, any>(data);\n  }\n\n  /**\n   * Will only set the value if the key is not already set.\n   */\n  public setDefault<V>(key: IActionContextKey<V>, value: V): IActionContext {\n    return this.has(key) ? this : this.set(key, value);\n  }\n\n  public set<V>(key: IActionContextKey<V>, value: V): IActionContext {\n    return this.setRaw(key.name, value);\n  }\n\n  public setRaw(key: string, value: any): IActionContext {\n    return new ActionContext(this.map.set(key, value));\n  }\n\n  public delete<V>(key: IActionContextKey<V>): IActionContext {\n    return new ActionContext(this.map.delete(key.name));\n  }\n\n  public get<V>(key: IActionContextKey<V>): V | undefined {\n    return this.getRaw(key.name);\n  }\n\n  public getRaw(key: string): any | undefined {\n    return this.map.get(key);\n  }\n\n  public getSafe<V>(key: IActionContextKey<V>): V {\n    if (!this.has(key)) {\n      throw new Error(`Context entry ${key.name} is required but not available`);\n    }\n    return <V> this.get(key);\n  }\n\n  public has<V>(key: IActionContextKey<V>): boolean {\n    return this.hasRaw(key.name);\n  }\n\n  public hasRaw(key: string): boolean {\n    return this.map.has(key);\n  }\n\n  public merge(...contexts: IActionContext[]): IActionContext {\n    // eslint-disable-next-line ts/no-this-alias\n    let context: IActionContext = this;\n    for (const source of contexts) {\n      for (const key of source.keys()) {\n        context = context.set(key, source.get(key));\n      }\n    }\n    return context;\n  }\n\n  public keys(): IActionContextKey<any>[] {\n    return [ ...<any> this.map.keys() ]\n      .map(keyName => new ActionContextKey(keyName));\n  }\n\n  public toJS(): any {\n    return this.map.toJS();\n  }\n\n  public toString(): string {\n    return `ActionContext(${JSON.stringify(this.map.toJS())})`;\n  }\n\n  public [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return `ActionContext(${JSON.stringify(this.map.toJS(), null, '  ')})`;\n  }\n\n  /**\n   * Convert the given object to an action context object if it is not an action context object yet.\n   * If it already is an action context object, return the object as-is.\n   * @param maybeActionContext An action context or record.\n   * @return {ActionContext} An action context object.\n   */\n  public static ensureActionContext(maybeActionContext?: IActionContext | Record<string, any>): IActionContext {\n    return maybeActionContext instanceof ActionContext ?\n      maybeActionContext :\n      new ActionContext(Map(maybeActionContext ?? {}));\n  }\n}\n\n/**\n * Simple implementation of {@link IActionContextKey}.\n */\nexport class ActionContextKey<V> implements IActionContextKey<V> {\n  /**\n   * A unique context key name.\n   */\n  public readonly name: string;\n\n  public constructor(name: string) {\n    this.name = name;\n  }\n}\n","import type { Actor, IAction, IActorOutput, IActorTest } from './Actor';\nimport type { Bus } from './Bus';\n\n/**\n * An ActionObserver can passively listen to {@link Actor#run} inputs and outputs for all actors on a certain bus.\n *\n * ActionObserver should not edit inputs and outputs,\n * they should be considered immutable.\n *\n * @see Actor\n * @see Bus\n *\n * @template I The input type of an actor.\n * @template O The output type of an actor.\n */\nexport abstract class ActionObserver<I extends IAction, O extends IActorOutput> {\n  public readonly name: string;\n  public readonly bus: Bus<Actor<I, IActorTest, O>, I, IActorTest, O>;\n\n  /**\n   * All enumerable properties from the `args` object are inherited to this observer.\n   *\n   * The observer will NOT automatically subscribe to the given bus when this constructor is called.\n   *\n   * @param {IActionObserverArgs<I extends IAction, O extends IActorOutput>} args Arguments object\n   * @throws When required arguments are missing.\n   */\n  protected constructor(args: IActionObserverArgs<I, O>) {\n    Object.assign(this, args);\n  }\n\n  /**\n   * Invoked when an action was run by an actor.\n   *\n   * @param actor               The action on which the {@link Actor#run} method was invoked.\n   * @param {I}          action The original action input.\n   * @param {Promise<O>} output A promise resolving to the final action output.\n   */\n  public abstract onRun(actor: Actor<I, IActorTest, O>, action: I, output: Promise<O>): void;\n}\n\nexport interface IActionObserverArgs<I extends IAction, O extends IActorOutput> {\n\n  /**\n   * The name for this observer.\n   * @default {<rdf:subject>}\n   */\n  name: string;\n\n  /**\n   * The bus this observer can subscribe to.\n   */\n  bus: Bus<Actor<I, IActorTest, O>, I, IActorTest, O>;\n}\n","import type { IActionContext, Logger } from '@comunica/types';\nimport type { Bus } from './Bus';\nimport { CONTEXT_KEY_LOGGER } from './ContextEntries';\n\n/**\n * An actor can act on messages of certain types and provide output of a certain type.\n *\n * The flow of an actor is as follows:\n * 1. Send a message to {@link Actor#test} to test if an actor can run that action.\n * 2. If the actor can reply to the message, let the actor run the action using {@link Actor#run}.\n *\n * An actor is typically subscribed to a bus,\n * using which the applicability to an action can be tested.\n *\n * @see Bus\n *\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\nexport abstract class Actor<I extends IAction, T extends IActorTest, O extends IActorOutput> implements\n    IActorArgs<I, T, O> {\n  public readonly name: string;\n  public readonly bus: Bus<Actor<I, T, O>, I, T, O>;\n  public readonly beforeActors: Actor<I, T, O>[] = [];\n\n  /**\n   * All enumerable properties from the `args` object are inherited to this actor.\n   *\n   * The actor will subscribe to the given bus when this constructor is called.\n   *\n   * @param {IActorArgs<I extends IAction, T extends IActorTest, O extends IActorOutput>} args Arguments object\n   * @param {string} args.name The name for this actor.\n   * @param {Bus<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>} args.bus\n   *        The bus this actor subscribes to.\n   * @throws When required arguments are missing.\n   */\n  protected constructor(args: IActorArgs<I, T, O>) {\n    Object.assign(this, args);\n    this.bus.subscribe(this);\n    if (this.beforeActors.length > 0) {\n      this.bus.addDependencies(this, this.beforeActors);\n    }\n  }\n\n  /**\n   * Get the logger from the given context.\n   * @param {ActionContext} context An optional context.\n   * @return {Logger} The logger or undefined.\n   */\n  public static getContextLogger(context: IActionContext): Logger | undefined {\n    return context.get(CONTEXT_KEY_LOGGER);\n  }\n\n  /**\n   * Check if this actor can run the given action,\n   * without actually running it.\n   *\n   * @param {I} action The action to test.\n   * @return {Promise<T>} A promise that resolves to the test result.\n   */\n  public abstract test(action: I): Promise<T>;\n\n  /**\n   * Run the given action on this actor.\n   *\n   * In most cases, this method should not be called directly.\n   * Instead, {@link #runObservable} should be called.\n   *\n   * @param {I} action The action to run.\n   * @return {Promise<T>} A promise that resolves to the run result.\n   */\n  public abstract run(action: I): Promise<O>;\n\n  /**\n   * Run the given action on this actor\n   * AND invokes the {@link Bus#onRun} method.\n   *\n   * @param {I} action The action to run.\n   * @return {Promise<T>} A promise that resolves to the run result.\n   */\n  public runObservable(action: I): Promise<O> {\n    const output: Promise<O> = this.run(action);\n    this.bus.onRun(this, action, output);\n    return output;\n  }\n\n  /**\n   * Initialize this actor.\n   * This should be used for doing things that take a while,\n   * such as opening files.\n   *\n   * @return {Promise<void>} A promise that resolves when the actor has been initialized.\n   */\n  public async initialize(): Promise<any> {\n    return true;\n  }\n\n  /**\n   * Deinitialize this actor.\n   * This should be used for cleaning up things when the application is shut down,\n   * such as closing files and removing temporary files.\n   *\n   * @return {Promise<void>} A promise that resolves when the actor has been deinitialized.\n   */\n  public async deinitialize(): Promise<any> {\n    return true;\n  }\n\n  /* Proxy methods for the (optional) logger that is defined in the context */\n\n  protected getDefaultLogData(context: IActionContext, data?: (() => any)): any {\n    const dataActual = data ? data() : {};\n    dataActual.actor = this.name;\n    return dataActual;\n  }\n\n  protected logTrace(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.trace(message, this.getDefaultLogData(context, data));\n    }\n  }\n\n  protected logDebug(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.debug(message, this.getDefaultLogData(context, data));\n    }\n  }\n\n  protected logInfo(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.info(message, this.getDefaultLogData(context, data));\n    }\n  }\n\n  protected logWarn(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.warn(message, this.getDefaultLogData(context, data));\n    }\n  }\n\n  protected logError(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.error(message, this.getDefaultLogData(context, data));\n    }\n  }\n\n  protected logFatal(context: IActionContext, message: string, data?: (() => any)): void {\n    const logger: Logger | undefined = Actor.getContextLogger(context);\n    if (logger) {\n      logger.fatal(message, this.getDefaultLogData(context, data));\n    }\n  }\n}\n\nexport interface IActorArgs<I extends IAction, T extends IActorTest, O extends IActorOutput> {\n  /**\n   * The name for this actor.\n   * @default {<rdf:subject>}\n   */\n  name: string;\n  /**\n   * The bus this actor subscribes to.\n   */\n  bus: Bus<Actor<I, T, O>, I, T, O>;\n  /**\n   * Actor that must be registered in the bus before this actor.\n   */\n  beforeActors?: Actor<I, T, O>[];\n}\n\n/**\n * Data interface for the type of action.\n */\nexport interface IAction {\n  /**\n   * The input context that is passed through by actors.\n   */\n  context: IActionContext;\n}\n\n/**\n * Data interface for the type of an actor test result.\n */\nexport interface IActorTest {\n\n}\n\n/**\n * Data interface for the type of an actor run result.\n */\nexport interface IActorOutput {\n\n}\n","import type { ActionObserver } from './ActionObserver';\nimport type { Actor, IAction, IActorOutput, IActorTest } from './Actor';\n\n/**\n * A publish-subscribe bus for sending actions to actors\n * to test whether or not they can run an action.\n *\n * This bus does not run the action itself,\n * for that a {@link Mediator} can be used.\n *\n * @see Actor\n * @see Mediator\n *\n * @template A The actor type that can subscribe to the sub.\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\nexport class Bus<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput> implements\n    IBusArgs {\n  public readonly name: string;\n  protected readonly actors: A[] = [];\n  protected readonly observers: ActionObserver<I, O>[] = [];\n  // Mapping from dependency (after) to dependents (before)\n  protected readonly dependencyLinks: Map<A, A[]> = new Map();\n\n  /**\n   * All enumerable properties from the `args` object are inherited to this bus.\n   *\n   * @param {IBusArgs} args Arguments object\n   * @param {string} args.name The name for the bus\n   * @throws When required arguments are missing.\n   */\n  public constructor(args: IBusArgs) {\n    Object.assign(this, args);\n  }\n\n  /**\n   * Subscribe the given actor to the bus.\n   * After this, the given actor can be unsubscribed from the bus by calling {@link Bus#unsubscribe}.\n   *\n   * An actor that is subscribed multiple times will exist that amount of times in the bus.\n   *\n   * @param {A} actor The actor to subscribe.\n   */\n  public subscribe(actor: A): void {\n    this.actors.push(actor);\n    this.reorderForDependencies();\n  }\n\n  /**\n   * Subscribe the given observer to the bus.\n   * After this, the given observer can be unsubscribed from the bus by calling {@link Bus#unsubscribeObserver}.\n   *\n   * An observer that is subscribed multiple times will exist that amount of times in the bus.\n   *\n   * @param {ActionObserver<I, O>} observer The observer to subscribe.\n   */\n  public subscribeObserver(observer: ActionObserver<I, O>): void {\n    this.observers.push(observer);\n  }\n\n  /**\n   * Unsubscribe the given actor from the bus.\n   *\n   * An actor that is subscribed multiple times will be unsubscribed only once.\n   *\n   * @param {A} actor The actor to unsubscribe\n   * @return {boolean} If the given actor was successfully unsubscribed,\n   *         otherwise it was not subscribed before.\n   */\n  public unsubscribe(actor: A): boolean {\n    const index: number = this.actors.indexOf(actor);\n    if (index >= 0) {\n      this.actors.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Unsubscribe the given observer from the bus.\n   *\n   * An observer that is subscribed multiple times will be unsubscribed only once.\n   *\n   * @param {ActionObserver<I, O>} observer The observer to unsubscribe.\n   * @return {boolean} If the given observer was successfully unsubscribed,\n   *         otherwise it was not subscribed before.\n   */\n  public unsubscribeObserver(observer: ActionObserver<I, O>): boolean {\n    const index: number = this.observers.indexOf(observer);\n    if (index >= 0) {\n      this.observers.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Publish an action to all actors in the bus to test if they can run the action.\n   *\n   * @param {I} action An action to publish\n   * @return {IActorReply<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest,\n   *         O extends IActorOutput>[]}\n   *         An array of reply objects. Each object contains a reference to the actor,\n   *         and a promise to its {@link Actor#test} result.\n   */\n  public publish(action: I): IActorReply<A, I, T, O>[] {\n    return this.actors.map((actor: A): IActorReply<A, I, T, O> => ({ actor, reply: actor.test(action) }));\n  }\n\n  /**\n   * Invoked when an action was run by an actor.\n   *\n   * @param actor               The action on which the {@link Actor#run} method was invoked.\n   * @param {I}          action The original action input.\n   * @param {Promise<O>} output A promise resolving to the final action output.\n   */\n  public onRun(actor: Actor<I, T, O>, action: I, output: Promise<O>): void {\n    for (const observer of this.observers) {\n      observer.onRun(actor, action, output);\n    }\n  }\n\n  /**\n   * Indicate that the given actor has the given actor dependencies.\n   *\n   * This will ensure that the given actor will be present in the bus *before* the given dependencies.\n   *\n   * @param {A} dependent A dependent actor that will be placed before the given actors.\n   * @param {A[]} dependencies Actor dependencies that will be placed after the given actor.\n   */\n  public addDependencies(dependent: A, dependencies: A[]): void {\n    for (const dependency of dependencies) {\n      let existingDependencies = this.dependencyLinks.get(dependency);\n      if (!existingDependencies) {\n        existingDependencies = [];\n        this.dependencyLinks.set(dependency, existingDependencies);\n      }\n      existingDependencies.push(dependent);\n    }\n    this.reorderForDependencies();\n  }\n\n  /**\n   * Reorder the bus based on all present dependencies.\n   */\n  public reorderForDependencies(): void {\n    if (this.dependencyLinks.size > 0) {\n      const actorsAfter = [];\n\n      // Temporarily remove all actors that have dependencies\n      for (const actorAfter of this.dependencyLinks.keys()) {\n        const dependentPos = this.actors.indexOf(actorAfter);\n        if (dependentPos >= 0) {\n          this.actors.splice(dependentPos, 1);\n          actorsAfter.push(actorAfter);\n        }\n      }\n\n      // Iteratively append actors based on the first dependency link\n      // that has all of its dependencies available in the array\n      while (actorsAfter.length > 0) {\n        // Find the first actor that has all of its dependencies available.\n        let activeActorAfterId = -1;\n        for (let i = 0; i < actorsAfter.length; i++) {\n          let validLink = true;\n          for (const dependency of this.dependencyLinks.get(actorsAfter[i])!) {\n            if (!this.actors.includes(dependency) && actorsAfter.includes(dependency)) {\n              validLink = false;\n              break;\n            }\n          }\n          if (validLink) {\n            activeActorAfterId = i;\n            break;\n          }\n        }\n\n        // If none of the pending links are possible, there must be a cyclic dependency\n        if (activeActorAfterId < 0) {\n          throw new Error(`Cyclic dependency links detected in bus ${this.name}`);\n        }\n\n        // The dependent may not be available (yet), so we don't add it to the array (yet).\n        const activeActorAfter = actorsAfter.splice(activeActorAfterId, 1)[0];\n        this.actors.push(activeActorAfter);\n      }\n    }\n  }\n}\n\nexport interface IBusArgs {\n  /**\n   * The name for this bus.\n   * @default {<rdf:subject>}\n   */\n  name: string;\n}\n\n/**\n * Data interface for holding an actor and a promise to a reply from that actor.\n */\nexport interface IActorReply<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n> {\n  actor: A;\n  reply: Promise<T>;\n}\n\nexport type IReply<\n  I extends IAction = IAction,\n  O extends IActorOutput = IActorOutput,\n  T extends IActorTest = IActorTest,\n> = IActorReply<Actor<I, T, O>, I, T, O>;\n\nexport type IBus<I extends IAction = IAction, O extends IActorOutput = IActorOutput, T extends IActorTest = IActorTest>\n= Bus<Actor<I, T, O>, I, T, O>;\n","import type { Actor, IAction, IActorOutput, IActorTest } from './Actor';\nimport type { IActorReply, IBusArgs } from './Bus';\nimport { Bus } from './Bus';\n\n/**\n * A bus that indexes identified actors,\n * so that actions with a corresponding identifier can be published more efficiently.\n *\n * Multiple actors with the same identifier can be subscribed.\n *\n * If actors or actions do not have a valid identifier,\n * then this will fallback to the normal bus behaviour.\n *\n * @see Bus\n *\n * @template A The actor type that can subscribe to the sub.\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\nexport class BusIndexed<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>\n  extends Bus<A, I, T, O> {\n  protected readonly actorsIndex: Record<string, A[]> = {};\n  protected readonly actorIdentifierFields: string[];\n  protected readonly actionIdentifierFields: string[];\n\n  /**\n   * All enumerable properties from the `args` object are inherited to this bus.\n   *\n   * @param {IBusIndexedArgs} args Arguments object\n   * @param {string} args.name The name for the bus\n   * @throws When required arguments are missing.\n   */\n  public constructor(args: IBusIndexedArgs) {\n    super(args);\n  }\n\n  public override subscribe(actor: A): void {\n    const actorId = this.getActorIdentifier(actor) || '_undefined_';\n    let actors = this.actorsIndex[actorId];\n    if (!actors) {\n      actors = this.actorsIndex[actorId] = [];\n    }\n    actors.push(actor);\n    super.subscribe(actor);\n  }\n\n  public override unsubscribe(actor: A): boolean {\n    const actorId = this.getActorIdentifier(actor) || '_undefined_';\n    const actors = this.actorsIndex[actorId];\n    if (actors) {\n      const i = actors.indexOf(actor);\n      if (i >= 0) {\n        actors.splice(i, 1);\n      }\n      if (actors.length === 0) {\n        delete this.actorsIndex[actorId];\n      }\n    }\n    return super.unsubscribe(actor);\n  }\n\n  public override publish(action: I): IActorReply<A, I, T, O>[] {\n    const actionId = this.getActionIdentifier(action);\n    if (actionId) {\n      const actors = [ ...this.actorsIndex[actionId] || [], ...this.actorsIndex._undefined_ || [] ];\n      return actors.map((actor: A): IActorReply<A, I, T, O> => ({ actor, reply: actor.test(action) }));\n    }\n    return super.publish(action);\n  }\n\n  protected getActorIdentifier(actor: A): string {\n    return this.actorIdentifierFields.reduce((object: any, field): A => object[field], actor);\n  }\n\n  protected getActionIdentifier(action: I): string {\n    return this.actionIdentifierFields.reduce((object: any, field): A => object[field], action);\n  }\n}\n\nexport interface IBusIndexedArgs extends IBusArgs {\n  actorIdentifierFields: string[];\n  actionIdentifierFields: string[];\n}\n","import type { Logger } from '@comunica/types';\nimport { ActionContextKey } from './ActionContext';\n\nexport const CONTEXT_KEY_LOGGER = new ActionContextKey<Logger>('@comunica/core:log');\n","import type { Actor, IAction, IActorOutput, IActorTest } from './Actor';\nimport type { Bus, IActorReply } from './Bus';\n\n/**\n * A mediator can mediate an action over a bus of actors.\n *\n * It does the following:\n * 1. Accepts an action in {@link Mediator#mediate}.\n * 2. Sends the action to the bus to test its applicability on all actors.\n * 3. It _mediates_ over these test results.\n * 4. It selects the _best_ actor.\n * 5. The action is run by the _best_ actor, and the result if returned.\n *\n * The _mediates_ and _best_ parts are filled in by subclasses of this abstract Mediator class.\n *\n * @template A The type of actor to mediator over.\n * @template I The input type of an actor.\n * @template T The test type of an actor.\n * @template O The output type of an actor.\n */\nexport abstract class Mediator<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n> implements IMediatorArgs<A, I, T, O> {\n  public readonly name: string;\n  public readonly bus: Bus<A, I, T, O>;\n\n  /**\n   * All enumerable properties from the `args` object are inherited to this mediator.\n   *\n   * @param {IMediatorArgs<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest,\n   * O extends IActorOutput>} args Arguments object\n   * @param {string} args.name The name for this mediator.\n   * @param {Bus<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>} args.bus\n   *        The bus this mediator will mediate over.\n   * @throws When required arguments are missing.\n   */\n  protected constructor(args: IMediatorArgs<A, I, T, O>) {\n    Object.assign(this, args);\n  }\n\n  /**\n   * Publish the given action in the bus.\n   *\n   * This will send the test action on all actors in the bus.\n   * All actor replies will be returned.\n   *\n   * @param {I} action The action to mediate for.\n   * @return {IActorReply<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>[]}\n   * The list of actor replies.\n   */\n  public publish(action: I): IActorReply<A, I, T, O>[] {\n    // Test all actors in the bus\n    const actors: IActorReply<A, I, T, O>[] = this.bus.publish(action);\n    if (actors.length === 0) {\n      throw new Error(`No actors are able to reply to a message in the bus ${this.bus.name}`);\n    }\n    return actors;\n  }\n\n  /**\n   * Mediate for the given action to get an actor.\n   *\n   * This will send the test action on all actors in the bus.\n   * The actor that tests _best_ will be returned.\n   *\n   * @param {I} action The action to mediate for.\n   * @return {Promise<O extends IActorOutput>} A promise that resolves to the _best_ actor.\n   */\n  public async mediateActor(action: I): Promise<A> {\n    // Mediate to one actor and run that actor.\n    return await this.mediateWith(action, this.publish(action));\n  }\n\n  /**\n   * Mediate for the given action.\n   *\n   * This will send the test action on all actors in the bus.\n   * The action will be run on the actor that tests _best_,\n   * of which the result will be returned.\n   *\n   * @param {I} action The action to mediate for.\n   * @return {Promise<O extends IActorOutput>} A promise that resolves to the mediation result.\n   */\n  public async mediate(action: I): Promise<O> {\n    // Mediate to one actor and run the action on it\n    const actor: A = await this.mediateActor(action);\n    return actor.runObservable(action);\n  }\n\n  /**\n   * Mediate for the given action with the given actor test results for the action.\n   *\n   * One actor must be returned that provided the _best_ test result.\n   * How '_best_' is interpreted, depends on the implementation of the Mediator.\n   *\n   * @param {I} action The action to mediate for.\n   * @param {IActorReply<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest,\n   * O extends IActorOutput>[]} testResults The actor test results for the action.\n   * @return {Promise<A extends Actor<I, T, O>>} A promise that resolves to the _best_ actor.\n   */\n  protected abstract mediateWith(action: I, testResults: IActorReply<A, I, T, O>[]): Promise<A>;\n}\n\nexport interface IMediatorArgs<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n> {\n  /**\n   * The name for this mediator.\n   * @default {<rdf:subject>}\n   */\n  name: string;\n  /**\n   * The bus this mediator will mediate over.\n   */\n  bus: Bus<A, I, T, O>;\n}\n\nexport type Mediate<I extends IAction, O extends IActorOutput, T extends IActorTest = IActorTest> =\nMediator<Actor<I, T, O>, I, T, O>;\n","import type * as RDF from '@rdfjs/types';\n\n/**\n * A blank node that is scoped to a set of bindings.\n */\nexport class BlankNodeBindingsScoped implements RDF.BlankNode {\n  public readonly termType = 'BlankNode';\n  public readonly singleBindingsScope = true;\n  public readonly value: string;\n\n  public constructor(value: string) {\n    this.value = value;\n  }\n\n  public equals(other: RDF.Term | null | undefined): boolean {\n    // eslint-disable-next-line no-implicit-coercion\n    return !!other && other.termType === 'BlankNode' && other.value === this.value;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\n\n/**\n * A blank node that is scoped to a certain source.\n */\nexport class BlankNodeScoped implements RDF.BlankNode {\n  public readonly termType = 'BlankNode';\n  public readonly value: string;\n  /**\n   * This value can be obtained by consumers in query results,\n   * so that this can be passed into another query as an IRI,\n   * in order to obtain more results relating to this (blank) node.\n   */\n  public readonly skolemized: RDF.NamedNode;\n\n  public constructor(value: string, skolemized: RDF.NamedNode) {\n    this.value = value;\n    this.skolemized = skolemized;\n  }\n\n  public equals(other: RDF.Term | null | undefined): boolean {\n    // eslint-disable-next-line no-implicit-coercion\n    return !!other && other.termType === 'BlankNode' && other.value === this.value;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport * as RdfString from 'rdf-string';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport type * as E from '../expressions';\nimport { TermTransformer } from '../transformers/TermTransformer';\nimport type { ITermTransformer } from '../transformers/TermTransformer';\nimport { TypeAlias } from '../util/Consts';\nimport { isSubTypeOf } from '../util/TypeHandling';\nimport type { IAggregatorComponentClass } from '.';\n\nexport abstract class AggregatorComponent {\n  public abstract put(bindings: RDF.Term | undefined): void;\n  public abstract result(): RDF.Term | undefined;\n\n  protected separator: string;\n  protected termTransformer: ITermTransformer;\n\n  public static emptyValue(): RDF.Term | undefined {\n    return undefined;\n  }\n\n  public constructor(expr: Algebra.AggregateExpression, protected sharedContext: ICompleteSharedContext) {\n    this.separator = expr.separator || ' ';\n    this.termTransformer = new TermTransformer(sharedContext.superTypeProvider);\n  }\n\n  protected termToNumericOrError(term: RDF.Term): E.NumericLiteral {\n    if (term.termType !== 'Literal') {\n      throw new Error(`Term with value ${term.value} has type ${term.termType} and is not a numeric literal`);\n    } else if (\n      !isSubTypeOf(term.datatype.value, TypeAlias.SPARQL_NUMERIC, this.sharedContext.superTypeProvider)\n    ) {\n      throw new Error(`Term datatype ${term.datatype.value} with value ${term.value} has type ${term.termType} and is not a numeric literal`);\n    }\n    return <E.NumericLiteral> this.termTransformer.transformLiteral(term);\n  }\n}\n\n/**\n * A base aggregator that can handle distinct and possibly wildcards.\n */\nexport class Aggregator {\n  protected distinct: boolean;\n  protected variableValues: Map<string, Set<string>> = new Map();\n\n  public constructor(expr: Algebra.AggregateExpression, protected aggregatorComponent: AggregatorComponent) {\n    this.distinct = expr.distinct;\n  }\n\n  public static emptyValue(component: IAggregatorComponentClass): RDF.Term | undefined {\n    return component.emptyValue();\n  }\n\n  public result(): RDF.Term | undefined {\n    return this.aggregatorComponent.result();\n  }\n\n  public put(bindings: RDF.Term, variable = ''): void {\n    if (!this.canSkip(bindings, variable)) {\n      this.aggregatorComponent.put(bindings);\n      this.addSeen(bindings, variable);\n    }\n  }\n\n  private canSkip(term: RDF.Term, variable: string): boolean {\n    const set = this.variableValues.get(variable);\n    return this.distinct && set !== undefined && set.has(RdfString.termToString(term));\n  }\n\n  private addSeen(term: RDF.Term, variable: string): void {\n    if (this.distinct) {\n      if (!this.variableValues.has(variable)) {\n        this.variableValues.set(variable, new Set());\n      }\n      this.variableValues.get(variable)!.add(RdfString.termToString(term));\n    }\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport * as E from '../expressions';\nimport { regularFunctions } from '../functions';\nimport { integer } from '../functions/Helpers';\nimport * as C from '../util/Consts';\nimport { AggregatorComponent } from './Aggregator';\n\ninterface IAverageState {\n  sum: E.NumericLiteral;\n  count: number;\n}\n\nexport class Average extends AggregatorComponent {\n  private readonly summer = regularFunctions[C.RegularOperator.ADDITION];\n  private readonly divider = regularFunctions[C.RegularOperator.DIVISION];\n  private state: IAverageState | undefined = undefined;\n\n  public static override emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public put(term: RDF.Term): void {\n    if (this.state === undefined) {\n      const sum = this.termToNumericOrError(term);\n      this.state = { sum, count: 1 };\n    } else {\n      const internalTerm = this.termToNumericOrError(term);\n      this.state.sum = <E.NumericLiteral> this.summer.apply([ this.state.sum, internalTerm ], this.sharedContext);\n      this.state.count++;\n    }\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return Average.emptyValue();\n    }\n    const count = new E.IntegerLiteral(this.state.count);\n    const result = this.divider.apply([ this.state.sum, count ], this.sharedContext);\n    return result.toRDF();\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { integer } from '../functions/Helpers';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class Count extends AggregatorComponent {\n  private state: number | undefined = undefined;\n  public static override emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public put(): void {\n    if (this.state === undefined) {\n      this.state = 0;\n    }\n    this.state++;\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return Count.emptyValue();\n    }\n    return integer(this.state).toRDF();\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { langString, string } from '../functions/Helpers';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class GroupConcat extends AggregatorComponent {\n  private state: string | undefined = undefined;\n  private lastLanguageValid = true;\n  private lastLanguage: string | undefined = undefined;\n\n  public static override emptyValue(): RDF.Term {\n    return string('').toRDF();\n  }\n\n  public put(term: RDF.Term): void {\n    if (this.state === undefined) {\n      this.state = term.value;\n      if (term.termType === 'Literal') {\n        this.lastLanguage = term.language;\n      }\n    } else {\n      this.state += this.separator + term.value;\n      if (this.lastLanguageValid && term.termType === 'Literal' && this.lastLanguage !== term.language) {\n        this.lastLanguageValid = false;\n        this.lastLanguage = undefined;\n      }\n    }\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return GroupConcat.emptyValue();\n    }\n    if (this.lastLanguageValid && this.lastLanguage) {\n      return langString(this.state, this.lastLanguage).toRDF();\n    }\n    return string(this.state).toRDF();\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { orderTypes } from '../util/Ordering';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class Max extends AggregatorComponent {\n  private state: RDF.Term | undefined = undefined;\n\n  public put(term: RDF.Term): void {\n    if (term.termType !== 'Literal') {\n      throw new Error(`Term with value ${term.value} has type ${term.termType} and is not a literal`);\n    }\n    if (this.state === undefined) {\n      this.state = term;\n    } else if (orderTypes(this.state, term) === -1) {\n      this.state = term;\n    }\n  }\n\n  public result(): RDF.Term | undefined {\n    if (this.state === undefined) {\n      return Max.emptyValue();\n    }\n    return this.state;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { orderTypes } from '../util/Ordering';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class Min extends AggregatorComponent {\n  private state: RDF.Term | undefined = undefined;\n\n  public put(term: RDF.Term): void {\n    if (term.termType !== 'Literal') {\n      throw new Error(`Term with value ${term.value} has type ${term.termType} and is not a literal`);\n    }\n    if (this.state === undefined) {\n      this.state = term;\n    } else if (orderTypes(this.state, term) === 1) {\n      this.state = term;\n    }\n  }\n\n  public result(): RDF.Term | undefined {\n    if (this.state === undefined) {\n      return Min.emptyValue();\n    }\n    return this.state;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class Sample extends AggregatorComponent {\n  private state: RDF.Term | undefined = undefined;\n\n  public put(term: RDF.Term): void {\n    // First value is our sample\n    if (this.state === undefined) {\n      this.state = term;\n    }\n  }\n\n  public result(): RDF.Term | undefined {\n    if (this.state === undefined) {\n      return Sample.emptyValue();\n    }\n    return this.state;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type * as E from '../expressions';\nimport { regularFunctions } from '../functions';\nimport { integer } from '../functions/Helpers';\nimport * as C from '../util/Consts';\nimport { AggregatorComponent } from './Aggregator';\n\ntype SumState = E.NumericLiteral;\n\nexport class Sum extends AggregatorComponent {\n  private state: SumState | undefined = undefined;\n  private readonly summer = regularFunctions[C.RegularOperator.ADDITION];\n\n  public static override emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public put(term: RDF.Term): void {\n    if (this.state === undefined) {\n      this.state = this.termToNumericOrError(term);\n    } else {\n      const internalTerm = this.termToNumericOrError(term);\n      this.state = <E.NumericLiteral> this.summer.apply([ this.state, internalTerm ], this.sharedContext);\n    }\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return Sum.emptyValue();\n    }\n    return this.state.toRDF();\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport * as RdfString from 'rdf-string';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { integer } from '../functions/Helpers';\n\n/**\n * Implementation of the COUNT aggregator on a wildcard.\n * We choose to make this is separate class, because it would pollute the code of the other aggregators.\n */\nexport class WildcardCountAggregator {\n  private readonly distinct: boolean;\n\n  // Key: string representation of a ',' separated list of terms.\n  // Value: string representation of a ',' separated list of variables sorted by name.\n  private readonly bindingValues: Map<string, Set<string>> = new Map();\n  private counter = 0;\n\n  public constructor(expr: Algebra.AggregateExpression) {\n    this.distinct = expr.distinct;\n  }\n\n  public putBindings(bindings: RDF.Bindings): void {\n    if (!this.handleDistinct(bindings)) {\n      this.counter += 1;\n    }\n  }\n\n  public static emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public result(): RDF.Term {\n    return integer(this.counter).toRDF();\n  }\n\n  /**\n   * Returns true if the given bindings should be skipped.\n   * @param bindings\n   * @private\n   */\n  private handleDistinct(bindings: RDF.Bindings): boolean {\n    if (this.distinct) {\n      const bindingList: [RDF.Variable, RDF.Term][] = [ ...bindings ];\n      bindingList.sort((first, snd) => first[0].value.localeCompare(snd[0].value));\n      const variables = bindingList.map(([ variable ]) => variable.value).join(',');\n      const terms = bindingList.map(([ , term ]) => RdfString.termToString(term)).join(',');\n\n      const set = this.bindingValues.get(variables);\n      const result = set !== undefined && set.has(terms);\n\n      // Add to the set:\n      if (!set) {\n        this.bindingValues.set(variables, new Set());\n      }\n      this.bindingValues.get(variables)!.add(terms);\n\n      return result;\n    }\n    return false;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport { BaseAggregateEvaluator } from './evaluatorHelpers/BaseAggregateEvaluator';\nimport type { ISyncEvaluatorContext } from './SyncEvaluator';\nimport { SyncEvaluator } from './SyncEvaluator';\n\n// TODO: Support hooks & change name to SyncAggregateEvaluator\nexport class AggregateEvaluator extends BaseAggregateEvaluator {\n  private readonly evaluator: SyncEvaluator;\n\n  public constructor(expr: Algebra.AggregateExpression, context?: ISyncEvaluatorContext, throwError?: boolean) {\n    super(expr, SyncEvaluator.completeContext(context ?? {}), throwError);\n    this.evaluator = new SyncEvaluator(expr.expression, context);\n  }\n\n  public put(bindings: RDF.Bindings): void {\n    if (this.errorOccurred) {\n      return;\n    }\n    if (this.isWildcard) {\n      this.wildcardAggregator!.putBindings(bindings);\n    } else {\n      try {\n        const startTerm = this.evaluator.evaluate(bindings);\n        this.aggregator.put(startTerm);\n      } catch (error: unknown) {\n        this.safeThrow(error);\n      }\n    }\n  }\n\n  protected safeThrow(err: unknown): void {\n    if (this.throwError) {\n      throw err;\n    } else {\n      this.errorOccurred = true;\n    }\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport type { IAsyncEvaluatorContext } from './AsyncEvaluator';\nimport { AsyncEvaluator } from './AsyncEvaluator';\nimport { BaseAggregateEvaluator } from './evaluatorHelpers/BaseAggregateEvaluator';\n\nexport class AsyncAggregateEvaluator extends BaseAggregateEvaluator {\n  private readonly evaluator: AsyncEvaluator;\n\n  public constructor(expr: Algebra.AggregateExpression, context?: IAsyncEvaluatorContext, throwError?: boolean) {\n    super(expr, AsyncEvaluator.completeContext(context ?? {}), throwError);\n    this.evaluator = new AsyncEvaluator(expr.expression, context);\n    this.errorOccurred = false;\n  }\n\n  public async put(bindings: RDF.Bindings): Promise<void> {\n    if (this.errorOccurred) {\n      return;\n    }\n    if (this.isWildcard) {\n      this.wildcardAggregator!.putBindings(bindings);\n    } else {\n      try {\n        const startTerm = await this.evaluator.evaluate(bindings);\n        if (!startTerm || this.errorOccurred) {\n          return;\n        }\n        this.aggregator.put(startTerm);\n      } catch (error: unknown) {\n        this.safeThrow(error);\n      }\n    }\n  }\n\n  protected safeThrow(err: unknown): void {\n    if (this.throwError) {\n      throw err;\n    } else {\n      this.errorOccurred = true;\n    }\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { LRUCache } from 'lru-cache';\nimport type { Algebra as Alg } from 'sparqlalgebrajs';\nimport type * as E from '../expressions/Expressions';\nimport { AlgebraTransformer } from '../transformers/AlgebraTransformer';\nimport type { IExpressionEvaluator } from '../Types';\nimport { extractTimeZone } from '../util/DateTimeHelpers';\nimport type { ICompleteAsyncEvaluatorContext } from './evaluatorHelpers/AsyncRecursiveEvaluator';\nimport { AsyncRecursiveEvaluator } from './evaluatorHelpers/AsyncRecursiveEvaluator';\nimport type { ISharedContext } from './evaluatorHelpers/BaseExpressionEvaluator';\n\nexport type AsyncExtensionFunction = (args: RDF.Term[]) => Promise<RDF.Term>;\nexport type AsyncExtensionFunctionCreator = (functionNamedNode: RDF.NamedNode) => AsyncExtensionFunction | undefined;\n\nexport interface IAsyncEvaluatorContext extends ISharedContext {\n  exists?: (expression: Alg.ExistenceExpression, mapping: RDF.Bindings) => Promise<boolean>;\n  aggregate?: (expression: Alg.AggregateExpression) => Promise<RDF.Term>;\n  bnode?: (input?: string) => Promise<RDF.BlankNode>;\n  extensionFunctionCreator?: AsyncExtensionFunctionCreator;\n}\n\nexport class AsyncEvaluator {\n  private readonly expr: E.Expression;\n  private readonly evaluator: IExpressionEvaluator<E.Expression, Promise<E.TermExpression>>;\n\n  public static completeContext(context: IAsyncEvaluatorContext): ICompleteAsyncEvaluatorContext {\n    const now = context.now ?? new Date(Date.now());\n    return {\n      now,\n      baseIRI: context.baseIRI ?? undefined,\n      functionArgumentsCache: context.functionArgumentsCache ?? {},\n      superTypeProvider: {\n        cache: context.typeCache ?? new LRUCache({ max: 1_000 }),\n        discoverer: context.getSuperType ?? (() => 'term'),\n      },\n      extensionFunctionCreator: context.extensionFunctionCreator,\n      exists: context.exists,\n      aggregate: context.aggregate,\n      bnode: context.bnode,\n      defaultTimeZone: context.defaultTimeZone ?? extractTimeZone(now),\n    };\n  }\n\n  public constructor(public algExpr: Alg.Expression, context: IAsyncEvaluatorContext = {}) {\n    // eslint-disable-next-line unicorn/no-useless-undefined\n    const creator = context.extensionFunctionCreator ?? (() => undefined);\n    const baseContext = AsyncEvaluator.completeContext(context);\n\n    const transformer = new AlgebraTransformer({\n      type: 'async',\n      creator,\n      ...baseContext,\n    });\n    this.expr = transformer.transformAlgebra(algExpr);\n\n    this.evaluator = new AsyncRecursiveEvaluator(baseContext, transformer);\n  }\n\n  public async evaluate(mapping: RDF.Bindings): Promise<RDF.Term> {\n    const result = await this.evaluator.evaluate(this.expr, mapping);\n    return result.toRDF();\n  }\n\n  public async evaluateAsEBV(mapping: RDF.Bindings): Promise<boolean> {\n    const result = await this.evaluator.evaluate(this.expr, mapping);\n    return result.coerceEBV();\n  }\n\n  public async evaluateAsInternal(mapping: RDF.Bindings): Promise<E.TermExpression> {\n    return await this.evaluator.evaluate(this.expr, mapping);\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { LRUCache } from 'lru-cache';\nimport type { Algebra as Alg } from 'sparqlalgebrajs';\nimport type * as E from '../expressions/Expressions';\nimport { AlgebraTransformer } from '../transformers/AlgebraTransformer';\nimport type { IExpressionEvaluator } from '../Types';\nimport { extractTimeZone } from '../util/DateTimeHelpers';\nimport type { ISharedContext } from './evaluatorHelpers/BaseExpressionEvaluator';\nimport type { ICompleteSyncEvaluatorContext } from './evaluatorHelpers/SyncRecursiveEvaluator';\nimport { SyncRecursiveEvaluator } from './evaluatorHelpers/SyncRecursiveEvaluator';\n\nexport interface ISyncEvaluatorContext extends ISharedContext {\n  exists?: (expression: Alg.ExistenceExpression, mapping: RDF.Bindings) => boolean;\n  aggregate?: (expression: Alg.AggregateExpression) => RDF.Term;\n  bnode?: (input?: string) => RDF.BlankNode;\n  extensionFunctionCreator?: SyncExtensionFunctionCreator;\n}\n\nexport type SyncExtensionFunction = (args: RDF.Term[]) => RDF.Term;\nexport type SyncExtensionFunctionCreator = (functionNamedNode: RDF.NamedNode) => SyncExtensionFunction | undefined;\n\nexport class SyncEvaluator {\n  private readonly expr: E.Expression;\n  private readonly evaluator: IExpressionEvaluator<E.Expression, E.TermExpression>;\n\n  public static completeContext(context: ISyncEvaluatorContext): ICompleteSyncEvaluatorContext {\n    const now = context.now ?? new Date(Date.now());\n    return {\n      now,\n      baseIRI: context.baseIRI ?? undefined,\n      functionArgumentsCache: context.functionArgumentsCache ?? {},\n      superTypeProvider: {\n        cache: context.typeCache ?? new LRUCache({ max: 1_000 }),\n        discoverer: context.getSuperType ?? (() => 'term'),\n      },\n      extensionFunctionCreator: context.extensionFunctionCreator,\n      exists: context.exists,\n      aggregate: context.aggregate,\n      bnode: context.bnode,\n      defaultTimeZone: context.defaultTimeZone ?? extractTimeZone(now),\n    };\n  }\n\n  public constructor(public algExpr: Alg.Expression, public context: ISyncEvaluatorContext = {}) {\n    // eslint-disable-next-line unicorn/no-useless-undefined\n    const creator = context.extensionFunctionCreator ?? (() => undefined);\n    const baseContext = SyncEvaluator.completeContext(context);\n\n    const transformer = new AlgebraTransformer({\n      type: 'sync',\n      creator,\n      ...baseContext,\n    });\n    this.expr = transformer.transformAlgebra(algExpr);\n\n    this.evaluator = new SyncRecursiveEvaluator(baseContext, transformer);\n  }\n\n  public evaluate(mapping: RDF.Bindings): RDF.Term {\n    const result = this.evaluator.evaluate(this.expr, mapping);\n    return result.toRDF();\n  }\n\n  public evaluateAsEBV(mapping: RDF.Bindings): boolean {\n    const result = this.evaluator.evaluate(this.expr, mapping);\n    return result.coerceEBV();\n  }\n\n  public evaluateAsInternal(mapping: RDF.Bindings): E.TermExpression {\n    return this.evaluator.evaluate(this.expr, mapping);\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra as Alg } from 'sparqlalgebrajs';\nimport * as E from '../../expressions';\nimport type { AsyncExtension } from '../../expressions';\nimport type { EvalContextAsync } from '../../functions';\nimport type { ITermTransformer } from '../../transformers/TermTransformer';\nimport { TermTransformer } from '../../transformers/TermTransformer';\nimport type { IExpressionEvaluator } from '../../Types';\nimport * as Err from '../../util/Errors';\nimport type { ISuperTypeProvider } from '../../util/TypeHandling';\nimport type { AsyncExtensionFunctionCreator } from '../AsyncEvaluator';\nimport { BaseExpressionEvaluator } from './BaseExpressionEvaluator';\nimport type { ICompleteSharedContext } from './BaseExpressionEvaluator';\n\nexport interface ICompleteAsyncEvaluatorContext extends ICompleteSharedContext {\n  exists?: (expression: Alg.ExistenceExpression, mapping: RDF.Bindings) => Promise<boolean>;\n  aggregate?: (expression: Alg.AggregateExpression) => Promise<RDF.Term>;\n  bnode?: (input?: string) => Promise<RDF.BlankNode>;\n  extensionFunctionCreator?: AsyncExtensionFunctionCreator;\n}\n\nexport class AsyncRecursiveEvaluator extends BaseExpressionEvaluator\n  implements IExpressionEvaluator<E.Expression, Promise<E.Term>> {\n  protected openWorldType: ISuperTypeProvider;\n  private readonly subEvaluators: Record<string, (expr: E.Expression, mapping: RDF.Bindings) =>\n  Promise<E.Term> | E.Term> = {\n    // Shared\n      [E.ExpressionType.Term]: (expr, _mapping) => this.term(<E.Term> expr),\n      [E.ExpressionType.Variable]: (expr, mapping) => this.variable(<E.Variable> expr, mapping),\n\n      // Sync\n      [E.ExpressionType.Operator]: (expr, mapping) => this.evalOperator(<E.Operator> expr, mapping),\n      [E.ExpressionType.SpecialOperator]: (expr, mapping) => this\n        .evalSpecialOperator(<E.SpecialOperator> expr, mapping),\n      [E.ExpressionType.Named]: (expr, mapping) => this.evalNamed(<E.Named> expr, mapping),\n      [E.ExpressionType.Existence]: (expr, mapping) => this.evalExistence(<E.Existence> expr, mapping),\n      [E.ExpressionType.Aggregate]: (expr, _mapping) => this.evalAggregate(<E.Aggregate> expr),\n      [E.ExpressionType.AsyncExtension]: (expr, mapping) => this.evalAsyncExtension(<E.AsyncExtension> expr, mapping),\n    };\n\n  public constructor(private readonly context: ICompleteAsyncEvaluatorContext, termTransformer?: ITermTransformer) {\n    super(termTransformer ?? new TermTransformer(context.superTypeProvider));\n  }\n\n  public async evaluate(expr: E.Expression, mapping: RDF.Bindings): Promise<E.Term> {\n    const evaluator = this.subEvaluators[expr.expressionType];\n    if (!evaluator) {\n      throw new Err.InvalidExpressionType(expr);\n    }\n    return evaluator.bind(this)(expr, mapping);\n  }\n\n  private async evalOperator(expr: E.Operator, mapping: RDF.Bindings): Promise<E.Term> {\n    const argPromises = expr.args.map(arg => this.evaluate(arg, mapping));\n    const argResults = await Promise.all(argPromises);\n    return expr.apply(argResults);\n  }\n\n  private async evalSpecialOperator(expr: E.SpecialOperator, mapping: RDF.Bindings): Promise<E.Term> {\n    const evaluate = this.evaluate.bind(this);\n    const context: EvalContextAsync = {\n      args: expr.args,\n      mapping,\n\n      superTypeProvider: this.context.superTypeProvider,\n      now: this.context.now,\n      baseIRI: this.context.baseIRI,\n      functionArgumentsCache: this.context.functionArgumentsCache,\n\n      evaluate,\n      bnode: this.context.bnode,\n      defaultTimeZone: this.context.defaultTimeZone,\n    };\n    return expr.applyAsync(context);\n  }\n\n  private async _evalAsyncArgs(args: E.Expression[], mapping: RDF.Bindings): Promise<E.TermExpression[]> {\n    const argPromises = args.map(arg => this.evaluate(arg, mapping));\n    return await Promise.all(argPromises);\n  }\n\n  private async evalNamed(expr: E.Named, mapping: RDF.Bindings): Promise<E.Term> {\n    return expr.apply(await this._evalAsyncArgs(expr.args, mapping));\n  }\n\n  private async evalAsyncExtension(expr: AsyncExtension, mapping: RDF.Bindings): Promise<E.Term> {\n    return await expr.apply(await this._evalAsyncArgs(expr.args, mapping));\n  }\n\n  private async evalExistence(expr: E.Existence, mapping: RDF.Bindings): Promise<E.Term> {\n    if (!this.context.exists) {\n      throw new Err.NoExistenceHook();\n    }\n\n    return new E.BooleanLiteral(await this.context.exists(expr.expression, mapping));\n  }\n\n  // TODO: Remove?\n  private async evalAggregate(expr: E.Aggregate): Promise<E.Term> {\n    if (!this.context.aggregate) {\n      throw new Err.NoAggregator();\n    }\n\n    return this.termTransformer.transformRDFTermUnsafe(await this.context.aggregate(expr.expression));\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { Algebra } from 'sparqlalgebrajs';\nimport { aggregators } from '../../aggregators';\nimport { Aggregator } from '../../aggregators/Aggregator';\nimport { WildcardCountAggregator } from '../../aggregators/WildcardCountAggregator';\nimport type { SetFunction } from '../../util/Consts';\nimport * as Err from '../../util/Errors';\nimport type { ICompleteSharedContext } from './BaseExpressionEvaluator';\n\nexport abstract class BaseAggregateEvaluator {\n  protected expression: Algebra.AggregateExpression;\n  protected aggregator: Aggregator;\n  protected throwError = false;\n  protected isWildcard = false;\n  protected wildcardAggregator: WildcardCountAggregator | undefined;\n  protected errorOccurred = false;\n\n  protected constructor(\n    expr: Algebra.AggregateExpression,\n    sharedContext: ICompleteSharedContext,\n    throwError?: boolean,\n  ) {\n    this.expression = expr;\n    this.aggregator = new Aggregator(expr, new aggregators[<SetFunction> expr.aggregator](expr, sharedContext));\n    this.throwError = throwError ?? false;\n    this.isWildcard = expr.expression.expressionType === Algebra.expressionTypes.WILDCARD;\n    if (this.isWildcard) {\n      this.wildcardAggregator = new WildcardCountAggregator(expr);\n    }\n  }\n\n  /**\n   * The spec says to throw an error when a set function is called on an empty\n   * set (unless explicitly mentioned otherwise like COUNT).\n   * However, aggregate error handling says to not bind the result in case of an\n   * error. So to simplify logic in the caller, we return undefined by default.\n   *\n   * @param expr the aggregate expression\n   * @param throwError whether this function should respect the spec and throw an error if no empty value is defined\n   */\n  public static emptyValue(expr: Algebra.AggregateExpression, throwError = false): RDF.Term | undefined {\n    let val: RDF.Term | undefined;\n    if (expr.expression.expressionType === Algebra.expressionTypes.WILDCARD) {\n      val = WildcardCountAggregator.emptyValue();\n    } else {\n      val = Aggregator.emptyValue(aggregators[<SetFunction> expr.aggregator]);\n    }\n    if (val === undefined && throwError) {\n      throw new Err.EmptyAggregateError();\n    }\n    return val;\n  }\n\n  public result(): RDF.Term | undefined {\n    if (this.errorOccurred) {\n      return undefined;\n    }\n    if (this.isWildcard) {\n      return this.wildcardAggregator!.result();\n    }\n    return this.aggregator.result();\n  }\n\n  /**\n   * Put a binding from the result stream in the aggregate state.\n   *\n   * If any binding evaluation errors, the corresponding aggregate variable should be unbound.\n   * If this happens, calling @see result() will return @constant undefined\n   *\n   * @param bindings the bindings to pass to the expression\n   */\n  public abstract put(bindings: RDF.Bindings): void | Promise<void>;\n\n  protected abstract safeThrow(err: unknown): void;\n}\n","import type * as RDF from '@rdfjs/types';\nimport type * as E from '../../expressions';\nimport { expressionToVar } from '../../functions/Helpers';\nimport type { FunctionArgumentsCache } from '../../functions/OverloadTree';\nimport type { ITermTransformer } from '../../transformers/TermTransformer';\nimport type { ITimeZoneRepresentation } from '../../util/DateTimeHelpers';\nimport * as Err from '../../util/Errors';\nimport type { ISuperTypeProvider, SuperTypeCallback, TypeCache } from '../../util/TypeHandling';\n\nexport interface ISharedContext {\n  now?: Date;\n  baseIRI?: string;\n  typeCache?: TypeCache;\n  getSuperType?: SuperTypeCallback;\n  functionArgumentsCache?: FunctionArgumentsCache;\n  defaultTimeZone?: ITimeZoneRepresentation;\n}\n\nexport interface ICompleteSharedContext {\n  now: Date;\n  baseIRI?: string;\n  functionArgumentsCache: FunctionArgumentsCache;\n  superTypeProvider: ISuperTypeProvider;\n  defaultTimeZone: ITimeZoneRepresentation;\n}\n\nexport class BaseExpressionEvaluator {\n  public constructor(protected readonly termTransformer: ITermTransformer) {}\n\n  protected term(expr: E.Term): E.Term {\n    return expr;\n  }\n\n  protected variable(expr: E.Variable, mapping: RDF.Bindings): E.Term {\n    const term = mapping.get(expressionToVar(expr));\n    if (!term) {\n      throw new Err.UnboundVariableError(expr.name, mapping);\n    }\n    return this.termTransformer.transformRDFTermUnsafe(term);\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra as Alg } from 'sparqlalgebrajs';\nimport * as E from '../../expressions';\nimport type { SyncExtension } from '../../expressions';\nimport type { EvalContextSync } from '../../functions';\nimport type { ITermTransformer } from '../../transformers/TermTransformer';\nimport { TermTransformer } from '../../transformers/TermTransformer';\nimport type { IExpressionEvaluator } from '../../Types';\nimport * as Err from '../../util/Errors';\nimport type { ISuperTypeProvider } from '../../util/TypeHandling';\nimport type { SyncExtensionFunctionCreator } from '../SyncEvaluator';\nimport type { ICompleteSharedContext } from './BaseExpressionEvaluator';\nimport { BaseExpressionEvaluator } from './BaseExpressionEvaluator';\n\nexport interface ICompleteSyncEvaluatorContext extends ICompleteSharedContext {\n  exists?: (expression: Alg.ExistenceExpression, mapping: RDF.Bindings) => boolean;\n  aggregate?: (expression: Alg.AggregateExpression) => RDF.Term;\n  bnode?: (input?: string) => RDF.BlankNode;\n  extensionFunctionCreator?: SyncExtensionFunctionCreator;\n}\n\nexport class SyncRecursiveEvaluator extends BaseExpressionEvaluator\n  implements IExpressionEvaluator<E.Expression, E.Term> {\n  protected openWorldType: ISuperTypeProvider;\n  private readonly subEvaluators: Record<string, (expr: E.Expression, mapping: RDF.Bindings) => E.Term> = {\n    // Shared\n    [E.ExpressionType.Term]: (expr, _mapping) => this.term(<E.Term> expr),\n    [E.ExpressionType.Variable]: (expr, mapping) => this.variable(<E.Variable> expr, mapping),\n\n    // Sync\n    [E.ExpressionType.Operator]: (expr, mapping) => this.evalOperator(<E.Operator> expr, mapping),\n    [E.ExpressionType.SpecialOperator]: (expr, mapping) => this.evalSpecialOperator(<E.SpecialOperator> expr, mapping),\n    [E.ExpressionType.Named]: (expr, mapping) => this.evalNamed(<E.Named> expr, mapping),\n    [E.ExpressionType.Existence]: (expr, mapping) => this.evalExistence(<E.Existence> expr, mapping),\n    [E.ExpressionType.Aggregate]: (expr, _mapping) => this.evalAggregate(<E.Aggregate> expr),\n    [E.ExpressionType.SyncExtension]: (expr, mapping) => this.evalSyncExtension(<E.SyncExtension> expr, mapping),\n  };\n\n  public constructor(private readonly context: ICompleteSyncEvaluatorContext, termTransformer?: ITermTransformer) {\n    super(termTransformer ?? new TermTransformer(context.superTypeProvider));\n  }\n\n  public evaluate(expr: E.Expression, mapping: RDF.Bindings): E.Term {\n    const evaluator = this.subEvaluators[expr.expressionType];\n    if (!evaluator) {\n      throw new Err.InvalidExpressionType(expr);\n    }\n    return evaluator.bind(this)(expr, mapping);\n  }\n\n  private evalOperator(expr: E.Operator, mapping: RDF.Bindings): E.Term {\n    const args = expr.args.map(arg => this.evaluate(arg, mapping));\n    return expr.apply(args);\n  }\n\n  private evalSpecialOperator(expr: E.SpecialOperator, mapping: RDF.Bindings): E.Term {\n    const evaluate = this.evaluate.bind(this);\n    const context: EvalContextSync = {\n      args: expr.args,\n      mapping,\n\n      superTypeProvider: this.context.superTypeProvider,\n      now: this.context.now,\n      baseIRI: this.context.baseIRI,\n      functionArgumentsCache: this.context.functionArgumentsCache,\n\n      evaluate,\n      bnode: this.context.bnode,\n      defaultTimeZone: this.context.defaultTimeZone,\n    };\n    return expr.applySynchronously(context);\n  }\n\n  private evalNamed(expr: E.Named, mapping: RDF.Bindings): E.Term {\n    const args = expr.args.map(arg => this.evaluate(arg, mapping));\n    return expr.apply(args);\n  }\n\n  private evalSyncExtension(expr: SyncExtension, mapping: RDF.Bindings): E.Term {\n    const args = expr.args.map(arg => this.evaluate(arg, mapping));\n    return expr.apply(args);\n  }\n\n  private evalExistence(expr: E.Existence, mapping: RDF.Bindings): E.Term {\n    if (!this.context.exists) {\n      throw new Err.NoExistenceHook();\n    }\n\n    return new E.BooleanLiteral(this.context.exists(expr.expression, mapping));\n  }\n\n  private evalAggregate(expr: E.Aggregate): E.Term {\n    if (!this.context.aggregate) {\n      throw new Err.NoAggregator();\n    }\n\n    return this.termTransformer.transformRDFTermUnsafe(this.context.aggregate(expr.expression));\n  }\n}\n","import type { Algebra as Alg } from 'sparqlalgebrajs';\n\nimport type { AggregateExpression } from './Expressions';\nimport {\n  ExpressionType,\n} from './Expressions';\n\nexport class Aggregate implements AggregateExpression {\n  public expressionType: ExpressionType.Aggregate = ExpressionType.Aggregate;\n\n  public constructor(\n    public name: string,\n    public expression: Alg.AggregateExpression,\n  ) {}\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { AsyncExtensionApplication, AsyncExtensionExpression, Expression } from './Expressions';\nimport { ExpressionType } from './Expressions';\n\nexport class AsyncExtension implements AsyncExtensionExpression {\n  public expressionType: ExpressionType.AsyncExtension = ExpressionType.AsyncExtension;\n\n  public constructor(\n    public name: RDF.NamedNode,\n    public args: Expression[],\n    public apply: AsyncExtensionApplication,\n  ) {}\n}\n","import type { Algebra as Alg } from 'sparqlalgebrajs';\n\nimport type { ExistenceExpression } from './Expressions';\nimport { ExpressionType } from './Expressions';\n\nexport class Existence implements ExistenceExpression {\n  public expressionType: ExpressionType.Existence = ExpressionType.Existence;\n  public constructor(public expression: Alg.ExistenceExpression) {}\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport type { EvalContextAsync, EvalContextSync } from '../functions';\n\nexport enum ExpressionType {\n  Aggregate = 'aggregate',\n  Existence = 'existence',\n  Named = 'named',\n  Operator = 'operator',\n  SpecialOperator = 'specialOperator',\n  Term = 'term',\n  Variable = 'variable',\n  AsyncExtension = 'asyncExtension',\n  SyncExtension = 'syncExtension',\n}\n\nexport type Expression =\n  AggregateExpression |\n  ExistenceExpression |\n  NamedExpression |\n  OperatorExpression |\n  SpecialOperatorExpression |\n  TermExpression |\n  VariableExpression |\n  AsyncExtensionExpression |\n  SyncExtensionExpression;\n\nexport interface IExpressionProps {\n  expressionType: ExpressionType;\n}\n\nexport type AggregateExpression = IExpressionProps & {\n  expressionType: ExpressionType.Aggregate;\n  name: string;\n  expression: Algebra.AggregateExpression;\n};\n\nexport type ExistenceExpression = IExpressionProps & {\n  expressionType: ExpressionType.Existence;\n  expression: Algebra.ExistenceExpression;\n};\n\nexport type NamedExpression = IExpressionProps & {\n  expressionType: ExpressionType.Named;\n  name: RDF.NamedNode;\n  apply: SimpleApplication;\n  args: Expression[];\n};\n\nexport type AsyncExtensionExpression = IExpressionProps & {\n  expressionType: ExpressionType.AsyncExtension;\n  name: RDF.NamedNode;\n  apply: AsyncExtensionApplication;\n  args: Expression[];\n};\n\nexport type SyncExtensionExpression = IExpressionProps & {\n  expressionType: ExpressionType.SyncExtension;\n  name: RDF.NamedNode;\n  apply: SimpleApplication;\n  args: Expression[];\n};\n\nexport type OperatorExpression = IExpressionProps & {\n  expressionType: ExpressionType.Operator;\n  args: Expression[];\n  apply: SimpleApplication;\n};\n\nexport type SpecialOperatorExpression = IExpressionProps & {\n  expressionType: ExpressionType.SpecialOperator;\n  args: Expression[];\n  applyAsync: SpecialApplicationAsync;\n  applySynchronously: SpecialApplicationSync;\n};\n\n// TODO: Create alias Term = TermExpression\nexport function asTermType(type: string): TermType | undefined {\n  if (type === 'namedNode' || type === 'literal' || type === 'blankNode' || type === 'quad') {\n    return type;\n  }\n  return undefined;\n}\nexport type TermType = 'namedNode' | 'literal' | 'blankNode' | 'quad';\nexport type TermExpression = IExpressionProps & {\n  expressionType: ExpressionType.Term;\n  termType: TermType;\n  str: () => string;\n  coerceEBV: () => boolean;\n  toRDF: () => RDF.Term;\n};\n\nexport type VariableExpression = IExpressionProps & {\n  expressionType: ExpressionType.Variable;\n  name: string;\n};\n\n// Export type Application = SimpleApplication | SpecialApplication;\nexport type SimpleApplication = (args: TermExpression[]) => TermExpression;\nexport type SimpleApplicationTuple<T> = (args: T) => TermExpression;\nexport type AsyncExtensionApplication = (args: TermExpression[]) => Promise<TermExpression>;\n\nexport type SpecialApplicationAsync = (context: EvalContextAsync) => Promise<TermExpression>;\n\nexport type SpecialApplicationSync = (context: EvalContextSync) => TermExpression;\n","import type * as RDF from '@rdfjs/types';\n\nimport type { Expression, NamedExpression, SimpleApplication } from './Expressions';\nimport {\n  ExpressionType,\n} from './Expressions';\n\nexport class Named implements NamedExpression {\n  public expressionType: ExpressionType.Named = ExpressionType.Named;\n\n  public constructor(\n    public name: RDF.NamedNode,\n    public args: Expression[],\n    public apply: SimpleApplication,\n  ) {}\n}\n","import type { Expression, OperatorExpression, SimpleApplication } from './Expressions';\nimport {\n  ExpressionType,\n} from './Expressions';\n\nexport class Operator implements OperatorExpression {\n  public expressionType: ExpressionType.Operator = ExpressionType.Operator;\n\n  public constructor(public args: Expression[], public apply: SimpleApplication) {}\n}\n","import type {\n  Expression,\n  SpecialApplicationAsync,\n  SpecialApplicationSync,\n  SpecialOperatorExpression,\n} from './Expressions';\nimport {\n  ExpressionType,\n} from './Expressions';\n\nexport class SpecialOperator implements SpecialOperatorExpression {\n  public expressionType: ExpressionType.SpecialOperator = ExpressionType.SpecialOperator;\n\n  public constructor(\n    public args: Expression[],\n    public applyAsync: SpecialApplicationAsync,\n    public applySynchronously: SpecialApplicationSync,\n  ) {}\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Expression, SimpleApplication, SyncExtensionExpression } from './Expressions';\nimport { ExpressionType } from './Expressions';\n\nexport class SyncExtension implements SyncExtensionExpression {\n  public expressionType: ExpressionType.SyncExtension = ExpressionType.SyncExtension;\n\n  public constructor(\n    public name: RDF.NamedNode,\n    public args: Expression[],\n    public apply: SimpleApplication,\n  ) {}\n}\n","import type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport { TermTransformer } from '../transformers/TermTransformer';\nimport * as C from '../util/Consts';\nimport { TypeAlias, TypeURL } from '../util/Consts';\n\nimport type {\n  IDateRepresentation,\n  IDateTimeRepresentation,\n  IDurationRepresentation,\n  ITimeRepresentation,\n  IYearMonthDurationRepresentation,\n} from '../util/DateTimeHelpers';\nimport * as Err from '../util/Errors';\nimport { serializeDateTime, serializeDuration, serializeTime, serializeDate } from '../util/Serialization';\nimport type { ISuperTypeProvider } from '../util/TypeHandling';\nimport { isSubTypeOf } from '../util/TypeHandling';\nimport type { TermExpression, TermType } from './Expressions';\nimport { ExpressionType } from './Expressions';\n\nconst DF = new DataFactory();\n\nexport abstract class Term implements TermExpression {\n  public expressionType: ExpressionType.Term = ExpressionType.Term;\n  public abstract termType: TermType;\n\n  public abstract toRDF(): RDF.Term;\n\n  public str(): string {\n    throw new Err.InvalidArgumentTypes([ this ], C.RegularOperator.STR);\n  }\n\n  public coerceEBV(): boolean {\n    throw new Err.EBVCoercionError(this);\n  }\n}\n\n// NamedNodes -----------------------------------------------------------------\nexport class NamedNode extends Term {\n  public termType: TermType = 'namedNode';\n  public constructor(public value: string) {\n    super();\n  }\n\n  public toRDF(): RDF.Term {\n    return DF.namedNode(this.value);\n  }\n\n  public override str(): string {\n    return this.value;\n  }\n}\n\n// BlankNodes -----------------------------------------------------------------\n\nexport class BlankNode extends Term {\n  public value: RDF.BlankNode;\n  public termType: TermType = 'blankNode';\n\n  public constructor(value: RDF.BlankNode | string) {\n    super();\n    this.value = typeof value === 'string' ? DF.blankNode(value) : value;\n  }\n\n  public toRDF(): RDF.Term {\n    return this.value;\n  }\n}\n\n// Quads -----------------------------------------------------------------\nexport class Quad extends Term {\n  public termType: TermType = 'quad';\n  private readonly transformer: TermTransformer;\n  private readonly valueTerm: RDF.BaseQuad;\n\n  public constructor(input: RDF.BaseQuad, superTypeProvider: ISuperTypeProvider) {\n    super();\n    this.transformer = new TermTransformer(superTypeProvider);\n    this.valueTerm = input;\n  }\n\n  public toRDF(): RDF.BaseQuad {\n    return this.valueTerm;\n  }\n\n  public get subject(): Term {\n    return this.transformer.transformRDFTermUnsafe(this.RDFsubject);\n  }\n\n  public get predicate(): Term {\n    return this.transformer.transformRDFTermUnsafe(this.RDFpredicate);\n  }\n\n  public get object(): Term {\n    return this.transformer.transformRDFTermUnsafe(this.RDFobject);\n  }\n\n  public get RDFsubject(): RDF.Term {\n    return this.toRDF().subject;\n  }\n\n  public get RDFpredicate(): RDF.Term {\n    return this.toRDF().predicate;\n  }\n\n  public get RDFobject(): RDF.Term {\n    return this.toRDF().object;\n  }\n}\n\n// Literals-- -----------------------------------------------------------------\nexport function isLiteralTermExpression(expr: TermExpression): Literal<any> | undefined {\n  if (expr.termType === 'literal') {\n    return <Literal<any>> expr;\n  }\n  return undefined;\n}\n\nexport interface ISerializable {\n  toString: () => string;\n}\n\nexport class Literal<T extends ISerializable> extends Term {\n  public termType = <const> 'literal';\n  /**\n   * @param typedValue internal representation of this literal's value\n   * @param dataType a string representing the datatype. Can be of type @see LiteralTypes or any URI\n   * @param strValue the string value of this literal. In other words, the string representing the RDF.literal value.\n   * @param language the language, mainly for language enabled strings like RDF_LANG_STRING\n   */\n  public constructor(\n    public typedValue: T,\n    public dataType: string,\n    public strValue?: string,\n    public language?: string,\n  ) {\n    super();\n  }\n\n  public toRDF(): RDF.Literal {\n    return DF.literal(\n      this.strValue ?? this.str(),\n      this.language ?? DF.namedNode(this.dataType),\n    );\n  }\n\n  public override str(): string {\n    return this.strValue ?? this.typedValue.toString();\n  }\n}\n\nexport abstract class NumericLiteral extends Literal<number> {\n  protected constructor(\n    public override typedValue: number,\n    dataType: string,\n    public override strValue?: string,\n    public override language?: string,\n  ) {\n    super(typedValue, dataType, strValue, language);\n  }\n\n  protected abstract specificFormatter(val: number): string;\n\n  public override coerceEBV(): boolean {\n    return Boolean(this.typedValue);\n  }\n\n  public override toRDF(): RDF.Literal {\n    const term = super.toRDF();\n    if (!Number.isFinite(this.typedValue)) {\n      term.value = term.value.replace('Infinity', 'INF');\n    }\n    return term;\n  }\n\n  public override str(): string {\n    return this.strValue ??\n      this.specificFormatter(this.typedValue);\n  }\n}\n\nexport class IntegerLiteral extends NumericLiteral {\n  public constructor(\n    public override typedValue: number,\n    dataType?: string,\n    public override strValue?: string,\n    public override language?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_INTEGER, strValue, language);\n  }\n\n  protected specificFormatter(val: number): string {\n    return val.toFixed(0);\n  }\n}\n\nexport class DecimalLiteral extends NumericLiteral {\n  public constructor(\n    public override typedValue: number,\n    dataType?: string,\n    public override strValue?: string,\n    public override language?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_DECIMAL, strValue, language);\n  }\n\n  protected specificFormatter(val: number): string {\n    return val.toString();\n  }\n}\n\nexport class FloatLiteral extends NumericLiteral {\n  public constructor(\n    public override typedValue: number,\n    dataType?: string,\n    public override strValue?: string,\n    public override language?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_FLOAT, strValue, language);\n  }\n\n  protected specificFormatter(val: number): string {\n    return val.toString();\n  }\n}\n\nexport class DoubleLiteral extends NumericLiteral {\n  public constructor(\n    public override typedValue: number,\n    dataType?: string,\n    public override strValue?: string,\n    public override language?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_DOUBLE, strValue, language);\n  }\n\n  protected specificFormatter(val: number): string {\n    if (!Number.isFinite(val)) {\n      if (val > 0) {\n        return 'INF';\n      }\n      if (val < 0) {\n        return '-INF';\n      }\n      return 'NaN';\n    }\n\n    const jsExponential = val.toExponential();\n    const [ jsMantisse, jsExponent ] = jsExponential.split('e');\n\n    // Leading + must be removed for integer\n    // https://www.w3.org/TR/xmlschema-2/#integer\n    const exponent = jsExponent.replace(/\\+/u, '');\n\n    // SPARQL test suite prefers trailing zero's\n    const mantisse = jsMantisse.includes('.') ?\n      jsMantisse :\n      `${jsMantisse}.0`;\n\n    return `${mantisse}E${exponent}`;\n  }\n}\n\nexport class BooleanLiteral extends Literal<boolean> {\n  public constructor(public override typedValue: boolean, public override strValue?: string, dataType?: string) {\n    super(typedValue, dataType ?? TypeURL.XSD_BOOLEAN, strValue);\n  }\n\n  public override coerceEBV(): boolean {\n    return this.typedValue;\n  }\n}\n\nexport class LangStringLiteral extends Literal<string> {\n  public constructor(public override typedValue: string, public override language: string, dataType?: string) {\n    super(typedValue, dataType ?? TypeURL.RDF_LANG_STRING, typedValue, language);\n  }\n\n  public override coerceEBV(): boolean {\n    return this.str().length > 0;\n  }\n}\n\n// https://www.w3.org/TR/2004/REC-rdf-concepts-20040210/#dfn-plain-literal\n// https://www.w3.org/TR/sparql11-query/#defn_SimpleLiteral\n// https://www.w3.org/TR/sparql11-query/#func-strings\n// This does not include language tagged literals\nexport class StringLiteral extends Literal<string> {\n  /**\n   * @param typedValue\n   * @param dataType Should be type that implements XSD_STRING\n   */\n  public constructor(public override typedValue: string, dataType?: string) {\n    super(typedValue, dataType ?? TypeURL.XSD_STRING, typedValue);\n  }\n\n  public override coerceEBV(): boolean {\n    return this.str().length > 0;\n  }\n}\n\nexport class DateTimeLiteral extends Literal<IDateTimeRepresentation> {\n  public constructor(\n    public override typedValue: IDateTimeRepresentation,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_DATE_TIME, strValue);\n  }\n\n  public override str(): string {\n    return serializeDateTime(this.typedValue);\n  }\n}\n\nexport class TimeLiteral extends Literal<ITimeRepresentation> {\n  public constructor(\n    public override typedValue: ITimeRepresentation,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_TIME, strValue);\n  }\n\n  public override str(): string {\n    return serializeTime(this.typedValue);\n  }\n}\n\nexport class DateLiteral extends Literal<IDateRepresentation> {\n  public constructor(\n    public override typedValue: IDateRepresentation,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_DATE, strValue);\n  }\n\n  public override str(): string {\n    return serializeDate(this.typedValue);\n  }\n}\n\nexport class DurationLiteral extends Literal<Partial<IDurationRepresentation>> {\n  public constructor(\n    public override typedValue: Partial<IDurationRepresentation>,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_DURATION, strValue);\n  }\n\n  public override str(): string {\n    return serializeDuration(this.typedValue);\n  }\n}\n\nexport class DayTimeDurationLiteral extends DurationLiteral {\n  public constructor(\n    public override typedValue: Partial<IDurationRepresentation>,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, strValue, dataType ?? TypeURL.XSD_DAY_TIME_DURATION);\n  }\n}\n\nexport class YearMonthDurationLiteral extends Literal<Partial<IYearMonthDurationRepresentation>> {\n  public constructor(\n    public override typedValue: Partial<IYearMonthDurationRepresentation>,\n    public override strValue?: string,\n    dataType?: string,\n  ) {\n    super(typedValue, dataType ?? TypeURL.XSD_YEAR_MONTH_DURATION, strValue);\n  }\n\n  public override str(): string {\n    return serializeDuration(this.typedValue, 'P0M');\n  }\n}\n\n/**\n * This class is used when a literal is parsed, and it's value is\n * an invalid lexical form for it's datatype. The spec defines value with\n * invalid lexical form are still valid terms, and as such we can not error\n * immediately. This class makes sure that the typedValue will remain undefined,\n * and the category 'nonlexical'. This way, only when operators apply to the\n * 'nonlexical' category, they will keep working, otherwise they will throw a\n * type error.\n * This seems to match the spec, except maybe for functions that accept\n * non-lexical values for their datatype.\n *\n * See:\n *  - https://www.w3.org/TR/xquery/#dt-type-error\n *  - https://www.w3.org/TR/rdf-concepts/#section-Literal-Value\n *  - https://www.w3.org/TR/xquery/#dt-ebv\n *  - ... some other more precise thing i can't find...\n */\nexport class NonLexicalLiteral extends Literal<{ toString: () => 'undefined' }> {\n  public constructor(\n    typedValue: undefined,\n    dataType: string,\n    private readonly openWorldType: ISuperTypeProvider,\n    strValue?: string,\n    language?: string,\n  ) {\n    super({ toString: () => 'undefined' }, dataType, strValue, language);\n  }\n\n  public override coerceEBV(): boolean {\n    const isNumericOrBool =\n      isSubTypeOf(this.dataType, TypeURL.XSD_BOOLEAN, this.openWorldType) ||\n      isSubTypeOf(this.dataType, TypeAlias.SPARQL_NUMERIC, this.openWorldType);\n    if (isNumericOrBool) {\n      return false;\n    }\n    throw new Err.EBVCoercionError(this);\n  }\n\n  public override toRDF(): RDF.Literal {\n    return DF.literal(\n      this.str(),\n      this.language ?? DF.namedNode(this.dataType),\n    );\n  }\n\n  public override str(): string {\n    return this.strValue ?? '';\n  }\n}\n\nexport function isNonLexicalLiteral(lit: Literal<any>): NonLexicalLiteral | undefined {\n  if (lit instanceof NonLexicalLiteral) {\n    return lit;\n  }\n  return undefined;\n}\n","import type { VariableExpression } from './Expressions';\nimport { ExpressionType } from './Expressions';\n\nexport class Variable implements VariableExpression {\n  public expressionType: ExpressionType.Variable = ExpressionType.Variable;\n  public name: string;\n  public constructor(name: string) {\n    this.name = name;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport type * as E from '../expressions';\nimport type * as C from '../util/Consts';\nimport * as Err from '../util/Errors';\nimport type { ISuperTypeProvider } from '../util/TypeHandling';\nimport type { ImplementationFunction, OverloadTree, FunctionArgumentsCache } from './OverloadTree';\n\nexport interface IEvalSharedContext extends ICompleteSharedContext {\n  args: E.Expression[];\n  mapping: RDF.Bindings;\n}\nexport interface IEvalContext<Term, BNode> extends IEvalSharedContext {\n  bnode?: (input?: string) => BNode;\n  evaluate: (expr: E.Expression, mapping: RDF.Bindings) => Term;\n}\n\nexport type EvalContextAsync = IEvalContext<Promise<E.TermExpression>, Promise<RDF.BlankNode>>;\nexport type EvalContextSync = IEvalContext<E.TermExpression, RDF.BlankNode>;\n\n// ----------------------------------------------------------------------------\n// Overloaded Functions\n// ----------------------------------------------------------------------------\n\n// Function and operator arguments are 'flattened' in the SPARQL spec.\n// If the argument is a literal, the datatype often also matters.\nexport type ArgumentType = 'term' | E.TermType | C.TypeURL | C.TypeAlias;\n\nexport interface IOverloadedDefinition {\n  arity: number | number[];\n  overloads: OverloadTree;\n}\n\nexport abstract class BaseFunction<Operator> {\n  public arity: number | number[];\n  private readonly overloads: OverloadTree;\n\n  protected constructor(public operator: Operator, definition: IOverloadedDefinition) {\n    this.arity = definition.arity;\n    this.overloads = definition.overloads;\n  }\n\n  /**\n   * A function application works by monomorphing the function to a specific\n   * instance depending on the runtime types. We then just apply this function\n   * to the args.\n   */\n  public apply = (args: E.TermExpression[], context: ICompleteSharedContext):\n  E.TermExpression => {\n    const concreteFunction =\n      this.monomorph(args, context.superTypeProvider, context.functionArgumentsCache) ??\n      this.handleInvalidTypes(args);\n    return concreteFunction(context)(args);\n  };\n\n  protected abstract handleInvalidTypes(args: E.TermExpression[]): never;\n\n  /**\n   * We monomorph by checking the map of overloads for keys corresponding\n   * to the runtime types. We start by checking for an implementation for the\n   * most concrete types (integer, string, date, IRI), if we find none,\n   * we consider their term types (literal, blank, IRI), and lastly we consider\n   * all arguments as generic terms.\n   *\n   * Another option would be to populate the overloads with an implementation\n   * for every concrete type when the function is generic over termtypes or\n   * terms.\n   */\n  private monomorph(\n    args: E.TermExpression[],\n    superTypeProvider: ISuperTypeProvider,\n    functionArgumentsCache: FunctionArgumentsCache,\n  ): ImplementationFunction | undefined {\n    return this.overloads.search(args, superTypeProvider, functionArgumentsCache);\n  }\n}\n\n// Regular Functions ----------------------------------------------------------\n\n/**\n * Varying kinds of functions take arguments of different types on which the\n * specific behaviour is dependant. Although their behaviour is often varying,\n * it is always relatively simple, and better suited for synced behaviour.\n * The types of their arguments are always terms, but might differ in\n * their term-type (eg: iri, literal),\n * their specific literal type (eg: string, integer),\n * their arity (see BNODE),\n * or even their specific numeric type (eg: integer, float).\n *\n * Examples include:\n *  - Arithmetic operations such as: *, -, /, +\n *  - Bool operators such as: =, !=, <=, <, ...\n *  - Functions such as: str, IRI\n *\n * See also: https://www.w3.org/TR/sparql11-query/#func-rdfTerms\n * and https://www.w3.org/TR/sparql11-query/#OperatorMapping\n */\nexport class RegularFunction extends BaseFunction<C.RegularOperator> {\n  protected functionClass = <const> 'regular';\n\n  public constructor(op: C.RegularOperator, definition: IOverloadedDefinition) {\n    super(op, definition);\n  }\n\n  protected handleInvalidTypes(args: E.TermExpression[]): never {\n    throw new Err.InvalidArgumentTypes(args, this.operator);\n  }\n}\n\n// Named Functions ------------------------------------------------------------\nexport class NamedFunction extends BaseFunction<C.NamedOperator> {\n  protected functionClass = <const> 'named';\n\n  public constructor(op: C.NamedOperator, definition: IOverloadedDefinition) {\n    super(op, definition);\n  }\n\n  protected handleInvalidTypes(args: E.TermExpression[]): never {\n    throw new Err.InvalidArgumentTypes(args, this.operator);\n  }\n}\n\n// Special Functions ----------------------------------------------------------\n/**\n * Special Functions are those that don't really fit in sensible categories and\n * have extremely heterogeneous signatures that make them impossible to abstract\n * over. They are small in number, and their behaviour is often complex and open\n * for multiple correct implementations with different trade-offs.\n *\n * Due to their varying nature, they need all available information present\n * during evaluation. This reflects in the signature of the apply() method.\n *\n * They need access to an evaluator to be able to even implement their logic.\n * Especially relevant for IF, and the logical connectives.\n *\n * They can have both sync and async implementations, and both would make sense\n * in some contexts.\n */\nexport class SpecialFunction {\n  public functionClass = <const> 'special';\n  public arity: number;\n  public applySynchronously: E.SpecialApplicationSync;\n  public applyAsync: E.SpecialApplicationAsync;\n  public checkArity: (args: E.Expression[]) => boolean;\n\n  public constructor(public operator: C.SpecialOperator, definition: ISpecialDefinition) {\n    this.arity = definition.arity;\n    this.applySynchronously = definition.applySynchronously;\n    this.applyAsync = definition.applyAsync;\n    this.checkArity = definition.checkArity ?? defaultArityCheck(this.arity);\n  }\n}\n\nfunction defaultArityCheck(arity: number): (args: E.Expression[]) => boolean {\n  return (args: E.Expression[]): boolean => {\n    // Infinity is used to represent var-args, so it's always correct.\n    if (arity === Number.POSITIVE_INFINITY) {\n      return true;\n    }\n\n    return args.length === arity;\n  };\n}\n\nexport interface ISpecialDefinition {\n  arity: number;\n  applyAsync: E.SpecialApplicationAsync;\n  applySynchronously: E.SpecialApplicationSync;\n  checkArity?: (args: E.Expression[]) => boolean;\n}\n","/**\n * These helpers provide a (albeit inflexible) DSL for writing function\n * definitions for the SPARQL functions.\n */\nimport type * as RDF from '@rdfjs/types';\nimport { DataFactory } from 'rdf-data-factory';\nimport type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport type { Literal, TermExpression, Quad, ISerializable } from '../expressions';\nimport * as E from '../expressions';\nimport { NonLexicalLiteral } from '../expressions';\nimport * as C from '../util/Consts';\nimport { TypeURL } from '../util/Consts';\nimport type { IDateTimeRepresentation } from '../util/DateTimeHelpers';\nimport * as Err from '../util/Errors';\nimport type { ArgumentType } from './Core';\nimport type { ImplementationFunction, ImplementationFunctionTuple } from './OverloadTree';\nimport { OverloadTree } from './OverloadTree';\n\ntype Term = E.TermExpression;\n\nconst DF = new DataFactory();\n\nexport function declare(identifier: string): Builder {\n  return new Builder(identifier);\n}\n\nexport class Builder {\n  private readonly overloadTree: OverloadTree;\n  private collected: boolean;\n\n  public constructor(identifier: string) {\n    this.overloadTree = new OverloadTree(identifier);\n    this.collected = false;\n  }\n\n  public collect(): OverloadTree {\n    if (this.collected) {\n      // Only 1 time allowed because we can't copy a tree. (And we don't need this).\n      throw new Error('Builders can only be collected once!');\n    }\n    this.collected = true;\n    return this.overloadTree;\n  }\n\n  private static wrapInvalidLexicalProtected(func: ImplementationFunction): ImplementationFunction {\n    return (context: ICompleteSharedContext) => (args: TermExpression[]) => {\n      for (const [ index, arg ] of args.entries()) {\n        if (arg instanceof NonLexicalLiteral) {\n          throw new Err.InvalidLexicalForm(args[index].toRDF());\n        }\n      }\n      return func(context)(args);\n    };\n  }\n\n  public set(\n    argTypes: [],\n    func: ImplementationFunctionTuple<[]>,\n    addInvalidHandling?: boolean,\n  ): Builder;\n  public set<T1 extends TermExpression>(\n    argTypes: [ArgumentType],\n    func: ImplementationFunctionTuple<[T1]>,\n    addInvalidHandling?: boolean,\n  ): Builder;\n  public set<T1 extends TermExpression, T2 extends TermExpression>(\n    argTypes: [ArgumentType, ArgumentType],\n    func: ImplementationFunctionTuple<[T1, T2]>,\n    addInvalidHandling?: boolean,\n  ): Builder;\n  public set<T1 extends TermExpression, T2 extends TermExpression, T3 extends TermExpression>(\n    argTypes: [ArgumentType, ArgumentType, ArgumentType],\n    func: ImplementationFunctionTuple<[T1, T2, T3]>,\n    addInvalidHandling?: boolean,\n  ): Builder;\n  public set<\n    T1 extends TermExpression,\n    T2 extends TermExpression,\n    T3 extends TermExpression,\n    T4 extends TermExpression,\n  >(\n    argTypes: [ArgumentType, ArgumentType, ArgumentType, ArgumentType],\n    func: ImplementationFunctionTuple<[T1, T2, T3, T4]>,\n    addInvalidHandling?: boolean,\n  ): Builder;\n  public set(argTypes: ArgumentType[], func: ImplementationFunction, addInvalidHandling?: boolean): Builder;\n  public set(argTypes: ArgumentType[], func: ImplementationFunction, addInvalidHandling = true): Builder {\n    this.overloadTree.addOverload(argTypes, addInvalidHandling ? Builder.wrapInvalidLexicalProtected(func) : func);\n    return this;\n  }\n\n  public copy({ from, to }: { from: ArgumentType[]; to: ArgumentType[] }): Builder {\n    const impl = this.overloadTree.getImplementationExact(from);\n    if (!impl) {\n      throw new Err.UnexpectedError(\n        'Tried to copy implementation, but types not found',\n        { from, to },\n      );\n    }\n    return this.set(to, impl);\n  }\n\n  public onUnary<T extends Term>(type: ArgumentType, op: (context: ICompleteSharedContext) =>\n  (val: T) => Term, addInvalidHandling = true): Builder {\n    return this.set([ type ], context => ([ val ]: [T]) => op(context)(val), addInvalidHandling);\n  }\n\n  public onUnaryTyped<T extends ISerializable>(\n    type: ArgumentType,\n    op: (context: ICompleteSharedContext) => (val: T) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set([ type ], context => ([ val ]: [E.Literal<T>]) => op(context)(val.typedValue), addInvalidHandling);\n  }\n\n  public onBinary<L extends Term, R extends Term>(\n    types: [ArgumentType, ArgumentType],\n    op: (context: ICompleteSharedContext) => (left: L, right: R) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(types, context => ([ left, right ]: [L, R]) => op(context)(left, right), addInvalidHandling);\n  }\n\n  public onBinaryTyped<L extends ISerializable, R extends ISerializable>(\n    types: [ArgumentType, ArgumentType],\n    op: (context: ICompleteSharedContext) => (left: L, right: R) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      types,\n      context => ([ left, right ]: [E.Literal<L>, E.Literal<R>]) => op(context)(left.typedValue, right.typedValue),\n      addInvalidHandling,\n    );\n  }\n\n  public onTernaryTyped<A1 extends ISerializable, A2 extends ISerializable, A3 extends ISerializable>(\n    types: [ArgumentType, ArgumentType, ArgumentType],\n    op: (context: ICompleteSharedContext)\n    => (a1: A1, a2: A2, a3: A3) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(types, context => ([ a1, a2, a3 ]: [E.Literal<A1>, E.Literal<A2>, E.Literal<A3>]) =>\n      op(context)(a1.typedValue, a2.typedValue, a3.typedValue), addInvalidHandling);\n  }\n\n  public onTernary<A1 extends Term, A2 extends Term, A3 extends Term>(\n    types: [ArgumentType, ArgumentType, ArgumentType],\n    op: (context: ICompleteSharedContext) => (a1: A1, a2: A2, a3: A3) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(types, context => ([ a1, a2, a3 ]: [A1, A2, A3]) => op(context)(a1, a2, a3), addInvalidHandling);\n  }\n\n  public onQuaternaryTyped<\n    A1 extends ISerializable,\nA2 extends ISerializable,\nA3 extends ISerializable,\nA4 extends ISerializable,\n>(\n    types: [ArgumentType, ArgumentType, ArgumentType, ArgumentType],\n    op: (context: ICompleteSharedContext) => (a1: A1, a2: A2, a3: A3, a4: A4) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(types, context =>\n      ([ a1, a2, a3, a4 ]: [E.Literal<A1>, E.Literal<A2>, E.Literal<A3>, E.Literal<A4>]) =>\n        op(context)(a1.typedValue, a2.typedValue, a3.typedValue, a4.typedValue), addInvalidHandling);\n  }\n\n  public onTerm1<T extends Term>(\n    op: (context: ICompleteSharedContext) => (term: T) => Term,\naddInvalidHandling = false,\n  ): Builder {\n    return this.set(\n      [ 'term' ],\n      context => ([ term ]: [T]) => op(context)(term),\n      addInvalidHandling,\n    );\n  }\n\n  public onTerm3(op: (context: ICompleteSharedContext) => (t1: Term, t2: Term, t3: Term) => Term): Builder {\n    return this.set(\n      [ 'term', 'term', 'term' ],\n      context => ([ t1, t2, t3 ]: [Term, Term, Term]) => op(context)(t1, t2, t3),\n    );\n  }\n\n  public onQuad1(op: (context: ICompleteSharedContext) => (term: Term & Quad) => Term): Builder {\n    return this.set([ 'quad' ], context => ([ term ]: [Term & Quad]) => op(context)(term));\n  }\n\n  public onLiteral1<T extends ISerializable>(\n    op: (context: ICompleteSharedContext) => (lit: E.Literal<T>) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ 'literal' ],\n      context => ([ term ]: [E.Literal<T>]) => op(context)(term),\n      addInvalidHandling,\n    );\n  }\n\n  public onBoolean1(\n    op: (context: ICompleteSharedContext) => (lit: E.BooleanLiteral) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeURL.XSD_BOOLEAN ],\n      context => ([ lit ]: [E.BooleanLiteral]) => op(context)(lit),\n      addInvalidHandling,\n    );\n  }\n\n  public onBoolean1Typed(\n    op: (context: ICompleteSharedContext) => (lit: boolean) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeURL.XSD_BOOLEAN ],\n      context => ([ lit ]: [E.BooleanLiteral]) => op(context)(lit.typedValue),\n      addInvalidHandling,\n    );\n  }\n\n  public onString1(\n    op: (context: ICompleteSharedContext) => (lit: E.Literal<string>) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeURL.XSD_STRING ],\n      context => ([ lit ]: [E.Literal<string>]) => op(context)(lit),\n      addInvalidHandling,\n    );\n  }\n\n  public onString1Typed(\n    op: (context: ICompleteSharedContext) => (lit: string) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeURL.XSD_STRING ],\n      context => ([ lit ]: [E.Literal<string>]) => op(context)(lit.typedValue),\n      addInvalidHandling,\n    );\n  }\n\n  public onLangString1(\n    op: (context: ICompleteSharedContext) => (lit: E.LangStringLiteral) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeURL.RDF_LANG_STRING ],\n      context => ([ lit ]: [E.LangStringLiteral]) => op(context)(lit),\n      addInvalidHandling,\n    );\n  }\n\n  public onStringly1(\n    op: (context: ICompleteSharedContext) => (lit: E.Literal<string>) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeAlias.SPARQL_STRINGLY ],\n      context => ([ lit ]: [E.Literal<string>]) => op(context)(lit),\n      addInvalidHandling,\n    );\n  }\n\n  public onStringly1Typed(\n    op: (context: ICompleteSharedContext) => (lit: string) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeAlias.SPARQL_STRINGLY ],\n      context => ([ lit ]: [E.Literal<string>]) => op(context)(lit.typedValue),\n      addInvalidHandling,\n    );\n  }\n\n  public onNumeric1(\n    op: (context: ICompleteSharedContext) => (val: E.NumericLiteral) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this.set(\n      [ C.TypeAlias.SPARQL_NUMERIC ],\n      context => ([ val ]: [E.NumericLiteral]) => op(context)(val),\n      addInvalidHandling,\n    );\n  }\n\n  public onDateTime1(\n    op: (context: ICompleteSharedContext) => (date: E.DateTimeLiteral) => Term,\naddInvalidHandling = true,\n  ): Builder {\n    return this\n      .set(\n        [ C.TypeURL.XSD_DATE_TIME ],\n        context => ([ val ]: [E.DateTimeLiteral]) => op(context)(val),\n        addInvalidHandling,\n      );\n  }\n\n  /**\n   * We return the base types and not the provided types because we don't want to create invalid terms.\n   * Providing negative number to a function unary - for example should not\n   * return a term of type negative number having a positive value.\n   * @param op the numeric operator performed\n   * @param addInvalidHandling whether to add invalid handling,\n   *   whether to add @param op in @see wrapInvalidLexicalProtected\n   */\n  public numericConverter(\n    op: (context: ICompleteSharedContext) => (val: number) => number,\naddInvalidHandling = true,\n  ): Builder {\n    const evalHelper = (context: ICompleteSharedContext) => (arg: Term): number =>\n      op(context)((<Literal<number>>arg).typedValue);\n    return this.onUnary(TypeURL.XSD_INTEGER, context => arg =>\n      integer(evalHelper(context)(arg)), addInvalidHandling)\n      .onUnary(TypeURL.XSD_DECIMAL, context => arg =>\n        decimal(evalHelper(context)(arg)), addInvalidHandling)\n      .onUnary(TypeURL.XSD_FLOAT, context => arg =>\n        float(evalHelper(context)(arg)), addInvalidHandling)\n      .onUnary(TypeURL.XSD_DOUBLE, context => arg =>\n        double(evalHelper(context)(arg)), addInvalidHandling);\n  }\n\n  /**\n   * !!! Be aware when using this function, it will create different overloads with different return types !!!\n   * Arithmetic operators take 2 numeric arguments, and return a single numerical\n   * value. The type of the return value is heavily dependent on the types of the\n   * input arguments. In JS everything is a double, but in SPARQL it is not.\n   *\n   * The different arguments are handled by type promotion and subtype substitution.\n   * The way numeric function arguments work is described here:\n   * https://www.w3.org/TR/xpath20/#mapping\n   * Above url is referenced in the sparql spec: https://www.w3.org/TR/sparql11-query/#OperatorMapping\n   */\n  public arithmetic(\n    op: (context: ICompleteSharedContext) => (left: number, right: number) => number,\naddInvalidHandling = true,\n  ): Builder {\n    const evalHelper = (context: ICompleteSharedContext) => (left: Term, right: Term): number =>\n      op(context)((<Literal<number>>left).typedValue, (<Literal<number>>right).typedValue);\n    return this.onBinary([ TypeURL.XSD_INTEGER, TypeURL.XSD_INTEGER ], context => (left, right) =>\n      integer(evalHelper(context)(left, right)), addInvalidHandling)\n      .onBinary([ TypeURL.XSD_DECIMAL, TypeURL.XSD_DECIMAL ], context => (left, right) =>\n        decimal(evalHelper(context)(left, right)), addInvalidHandling)\n      .onBinary([ TypeURL.XSD_FLOAT, TypeURL.XSD_FLOAT ], context => (left, right) =>\n        float(evalHelper(context)(left, right)), addInvalidHandling)\n      .onBinary([ TypeURL.XSD_DOUBLE, TypeURL.XSD_DOUBLE ], context => (left, right) =>\n        double(evalHelper(context)(left, right)), addInvalidHandling);\n  }\n\n  public numberTest(test: (context: ICompleteSharedContext) => (left: number, right: number) => boolean): Builder {\n    return this.numeric(context => ([ left, right ]: E.NumericLiteral[]) => {\n      const result = test(context)(left.typedValue, right.typedValue);\n      return bool(result);\n    });\n  }\n\n  public stringTest(\n    test: (context: ICompleteSharedContext) => (left: string, right: string) => boolean,\naddInvalidHandling = true,\n  ): Builder {\n    return this\n      .set(\n        [ C.TypeURL.XSD_STRING, C.TypeURL.XSD_STRING ],\n        context => ([ left, right ]: E.StringLiteral[]) => {\n          const result = test(context)(left.typedValue, right.typedValue);\n          return bool(result);\n        },\n        addInvalidHandling,\n      );\n  }\n\n  public booleanTest(\n    test: (context: ICompleteSharedContext) => (left: boolean, right: boolean) => boolean,\naddInvalidHandling = true,\n  ): Builder {\n    return this\n      .set(\n        [ C.TypeURL.XSD_BOOLEAN, C.TypeURL.XSD_BOOLEAN ],\n        context => ([ left, right ]: E.BooleanLiteral[]) => {\n          const result = test(context)(left.typedValue, right.typedValue);\n          return bool(result);\n        },\n        addInvalidHandling,\n      );\n  }\n\n  public dateTimeTest(test: (context: ICompleteSharedContext)\n  => (left: IDateTimeRepresentation, right: IDateTimeRepresentation) => boolean, addInvalidHandling = true): Builder {\n    return this\n      .set(\n        [ C.TypeURL.XSD_DATE_TIME, C.TypeURL.XSD_DATE_TIME ],\n        context => ([ left, right ]: E.DateTimeLiteral[]) => {\n          const result = test(context)(left.typedValue, right.typedValue);\n          return bool(result);\n        },\n        addInvalidHandling,\n      );\n  }\n\n  public numeric<T extends TermExpression>(op: ImplementationFunctionTuple<[T, T]>): Builder {\n    return this.set([ C.TypeAlias.SPARQL_NUMERIC, C.TypeAlias.SPARQL_NUMERIC ], op);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Literal Construction helpers\n// ----------------------------------------------------------------------------\n\nexport function bool(val: boolean): E.BooleanLiteral {\n  return new E.BooleanLiteral(val);\n}\n\nexport function integer(num: number): E.IntegerLiteral {\n  return new E.IntegerLiteral(num);\n}\n\nexport function decimal(num: number): E.DecimalLiteral {\n  return new E.DecimalLiteral(num);\n}\n\nexport function float(num: number): E.FloatLiteral {\n  return new E.FloatLiteral(num);\n}\n\nexport function double(num: number): E.DoubleLiteral {\n  return new E.DoubleLiteral(num);\n}\n\nexport function string(str: string): E.StringLiteral {\n  return new E.StringLiteral(str);\n}\n\nexport function langString(str: string, lang: string): E.LangStringLiteral {\n  return new E.LangStringLiteral(str, lang);\n}\n\nexport function dateTime(date: IDateTimeRepresentation, str: string): E.DateTimeLiteral {\n  return new E.DateTimeLiteral(date, str);\n}\n\nexport function expressionToVar(variableExpression: E.VariableExpression): RDF.Variable {\n  return DF.variable(variableExpression.name.slice(1));\n}\n","import type { DateLiteral, DateTimeLiteral, TimeLiteral } from '../expressions';\nimport * as E from '../expressions';\nimport { DurationLiteral } from '../expressions';\nimport type * as C from '../util/Consts';\nimport { TypeURL } from '../util/Consts';\nimport { trimToDayTimeDuration, trimToYearMonthDuration } from '../util/DateTimeHelpers';\nimport * as Err from '../util/Errors';\nimport {\n  parseDate,\n  parseDateTime,\n  parseDayTimeDuration,\n  parseDuration,\n  parseTime,\n  parseYearMonthDuration,\n  parseXSDDecimal,\n  parseXSDFloat,\n  parseXSDInteger,\n} from '../util/Parsing';\n\nimport type { IOverloadedDefinition } from './Core';\nimport { bool, dateTime, decimal, declare, double, float, integer, string } from './Helpers';\n\ntype Term = E.TermExpression;\n\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Begin definitions.\n\n// ----------------------------------------------------------------------------\n// XPath Constructor functions\n// https://www.w3.org/TR/sparql11-query/#\n// https://www.w3.org/TR/xpath-functions/#casting-from-primitive-to-primitive\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/xpath-functions/#casting-to-string\n */\nconst xsdToString = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_STRING)\n    .onNumeric1(() => (val: E.NumericLiteral) => string(float(val.typedValue).str()))\n    .onBoolean1Typed(() => val => string(bool(val).str()))\n    .onTerm1(() => (val: E.StringLiteral) => string(val.str()))\n    .collect(),\n};\n\nconst xsdToFloat = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_FLOAT)\n    .onNumeric1(() => (val: E.NumericLiteral) => float(val.typedValue))\n    .onBoolean1Typed(() => val => float(val ? 1 : 0))\n    .onUnary(TypeURL.XSD_STRING, () => (val: E.StringLiteral) => {\n      const result = parseXSDFloat(val.str());\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_FLOAT);\n      }\n      return float(result);\n    }, false)\n    .collect(),\n};\n\nconst xsdToDouble = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DOUBLE)\n    .onNumeric1(() => (val: E.NumericLiteral) => double(val.typedValue))\n    .onBoolean1Typed(() => val => double(val ? 1 : 0))\n    .onUnary(TypeURL.XSD_STRING, () => (val: E.Term) => {\n      const result = parseXSDFloat(val.str());\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_DOUBLE);\n      }\n      return double(result);\n    }, false)\n    .collect(),\n};\n\nconst xsdToDecimal = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DECIMAL)\n    .onNumeric1(() => (val: E.Term) => {\n      const result = parseXSDDecimal(val.str());\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_DECIMAL);\n      }\n      return decimal(result);\n    })\n    .onString1(() => (val: E.Term) => {\n      const str = val.str();\n      const result = /^([+-])?(\\d+(\\.\\d+)?)$/u.test(str) ? parseXSDDecimal(str) : undefined;\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_DECIMAL);\n      }\n      return decimal(result);\n    }, false)\n    .onBoolean1Typed(() => val => decimal(val ? 1 : 0))\n    .collect(),\n};\n\nconst xsdToInteger = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_INTEGER)\n    .onBoolean1Typed(() => val => integer(val ? 1 : 0))\n    .onNumeric1(() => (val: E.Term) => {\n      const result = parseXSDInteger(val.str());\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_INTEGER);\n      }\n      return integer(result);\n    }, false)\n    .onString1(() => (val: E.Term) => {\n      const str = val.str();\n      const result = /^\\d+$/u.test(str) ? parseXSDInteger(str) : undefined;\n      if (result === undefined) {\n        throw new Err.CastError(val, TypeURL.XSD_INTEGER);\n      }\n      return integer(result);\n    })\n    .collect(),\n};\n\nconst xsdToDatetime = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DATE_TIME)\n    .onUnary(TypeURL.XSD_DATE_TIME, () => (val: E.DateTimeLiteral) => val)\n    .onUnary(TypeURL.XSD_STRING, () => (val: Term) =>\n      dateTime(parseDateTime(val.str()), val.str()), false)\n    .onUnary(TypeURL.XSD_DATE, () => (val: E.DateLiteral) =>\n      new E.DateTimeLiteral({ ...val.typedValue, hours: 0, minutes: 0, seconds: 0 }))\n    .collect(),\n};\n\nconst xsdToBoolean = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_BOOLEAN)\n    .onNumeric1(() => (val: E.NumericLiteral) => bool(val.coerceEBV()), true)\n    .onUnary(TypeURL.XSD_BOOLEAN, () => (val: Term) => bool(val.coerceEBV()), true)\n    .onUnary(TypeURL.XSD_STRING, () => (val: Term) => {\n      switch (val.str()) {\n        case 'true':\n          return bool(true);\n        case 'false':\n          return bool(false);\n        case '1':\n          return bool(true);\n        case '0':\n          return bool(false);\n        default:\n          throw new Err.CastError(val, TypeURL.XSD_BOOLEAN);\n      }\n    }, false)\n    .collect(),\n};\n\n// End definitions.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n\n// Additional definitions to implement https://github.com/w3c/sparql-12/blob/main/SEP/SEP-0002/sep-0002.md\n// The additional casts are listed in https://www.w3.org/TR/xpath-functions/#casting-from-primitive-to-primitive\nconst xsdToTime = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_TIME)\n    .onUnary(TypeURL.XSD_TIME, () => (val: TimeLiteral) => new E.TimeLiteral(val.typedValue, val.strValue))\n    .onUnary(TypeURL.XSD_DATE_TIME, () => (val: DateTimeLiteral) =>\n      new E.TimeLiteral(val.typedValue))\n    .onStringly1(() => (val: Term) => new E.TimeLiteral(parseTime(val.str())))\n    .collect(),\n};\n\nconst xsdToDate = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DATE)\n    .onUnary(TypeURL.XSD_DATE, () => (val: DateLiteral) => new E.DateLiteral(val.typedValue, val.strValue))\n    .onUnary(TypeURL.XSD_DATE_TIME, () => (val: DateTimeLiteral) =>\n      new E.DateLiteral(val.typedValue))\n    .onStringly1(() => (val: E.Term) => new E.DateLiteral(parseDate(val.str())))\n    .collect(),\n};\n\nconst xsdToDuration = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DURATION)\n    // https://www.w3.org/TR/xpath-functions/#casting-to-durations\n    .onUnary(TypeURL.XSD_DURATION, () => (val: E.DurationLiteral) =>\n      // Copy is needed to make sure the dataType is changed, even when the provided type was a subtype\n      new E.DurationLiteral(val.typedValue, val.strValue))\n    .onStringly1(() => (val: Term) =>\n      new DurationLiteral(parseDuration(val.str())))\n    .collect(),\n};\n\nconst xsdToDayTimeDuration = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_DAY_TIME_DURATION)\n    // https://www.w3.org/TR/xpath-functions/#casting-to-durations\n    .onUnary(TypeURL.XSD_DURATION, () => (val: E.DurationLiteral) =>\n      // Copy is needed to make sure the dataType is changed, even when the provided type was a subtype\n      new E.DayTimeDurationLiteral(trimToDayTimeDuration(val.typedValue)))\n    .onStringly1(() => (val: Term) =>\n      new E.DayTimeDurationLiteral(parseDayTimeDuration(val.str())))\n    .collect(),\n};\n\nconst xsdToYearMonthDuration = {\n  arity: 1,\n  overloads: declare(TypeURL.XSD_YEAR_MONTH_DURATION)\n    // https://www.w3.org/TR/xpath-functions/#casting-to-durations\n    .onUnary(TypeURL.XSD_DURATION, () => (val: E.DurationLiteral) =>\n      // Copy is needed to make sure the dataType is changed, even when the provided type was a subtype\n      new E.YearMonthDurationLiteral(trimToYearMonthDuration(val.typedValue)))\n    .onStringly1(() => (val: Term) =>\n      new E.YearMonthDurationLiteral(parseYearMonthDuration(val.str())))\n    .collect(),\n};\n\nexport const namedDefinitions: Record<C.NamedOperator, IOverloadedDefinition> = {\n  // --------------------------------------------------------------------------\n  // XPath Constructor functions\n  // https://www.w3.org/TR/sparql11-query/#FunctionMapping\n  // --------------------------------------------------------------------------\n  [TypeURL.XSD_STRING]: xsdToString,\n  [TypeURL.XSD_FLOAT]: xsdToFloat,\n  [TypeURL.XSD_DOUBLE]: xsdToDouble,\n  [TypeURL.XSD_DECIMAL]: xsdToDecimal,\n  [TypeURL.XSD_INTEGER]: xsdToInteger,\n  [TypeURL.XSD_DATE_TIME]: xsdToDatetime,\n  [TypeURL.XSD_DATE]: xsdToDate,\n  [TypeURL.XSD_BOOLEAN]: xsdToBoolean,\n  [TypeURL.XSD_TIME]: xsdToTime,\n  [TypeURL.XSD_DURATION]: xsdToDuration,\n  [TypeURL.XSD_DAY_TIME_DURATION]: xsdToDayTimeDuration,\n  [TypeURL.XSD_YEAR_MONTH_DURATION]: xsdToYearMonthDuration,\n};\n","import type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport type * as E from '../expressions';\nimport { isLiteralTermExpression, TermExpression } from '../expressions';\nimport type { KnownLiteralTypes } from '../util/Consts';\nimport type { GeneralSuperTypeDict, ISuperTypeProvider, OverrideType } from '../util/TypeHandling';\nimport {\n  asGeneralType,\n  asKnownLiteralType,\n  asOverrideType,\n  getSuperTypes,\n  superTypeDictTable,\n  typePromotion,\n} from '../util/TypeHandling';\nimport type { ArgumentType } from './Core';\n\nexport type SearchStack = OverloadTree[];\nexport type ImplementationFunction = (sharedContext: ICompleteSharedContext) => E.SimpleApplication;\nexport type ImplementationFunctionTuple<T> = (sharedContext: ICompleteSharedContext) => E.SimpleApplicationTuple<T>;\ninterface IFunctionArgumentsCacheObj {\n  func?: ImplementationFunction;\n  cache?: FunctionArgumentsCache;\n}\nexport type FunctionArgumentsCache = Record<string, IFunctionArgumentsCacheObj>;\n/**\n * Maps argument types on their specific implementation in a tree like structure.\n * When adding any functionality to this class, make sure you add it to SpecialFunctions as well.\n */\nexport class OverloadTree {\n  private implementation?: ImplementationFunction | undefined;\n  // We need this field. e.g. decimal decimal should be kept even when double double is added.\n  // We use promotion count to check priority.\n  private promotionCount?: number | undefined;\n  private readonly generalOverloads: Record<'term' | E.TermType, OverloadTree>;\n  private readonly literalOverLoads: [OverrideType, OverloadTree][];\n  private readonly depth: number;\n\n  public constructor(private readonly identifier: string, depth?: number) {\n    this.implementation = undefined;\n    this.generalOverloads = Object.create(null);\n    this.literalOverLoads = [];\n    this.depth = depth ?? 0;\n    this.promotionCount = undefined;\n  }\n\n  private getSubtree(overrideType: ArgumentType): OverloadTree | undefined {\n    const generalType = asGeneralType(overrideType);\n    if (generalType) {\n      return this.generalOverloads[generalType];\n    }\n    for (const [ type, overloadTree ] of this.literalOverLoads) {\n      if (overrideType === type) {\n        return overloadTree;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the implementation for the types that exactly match @param args .\n   */\n  public getImplementationExact(args: ArgumentType[]): ImplementationFunction | undefined {\n    // eslint-disable-next-line ts/no-this-alias\n    let node: OverloadTree | undefined = this;\n    for (const expression of args) {\n      node = node.getSubtree(expression);\n      if (!node) {\n        return undefined;\n      }\n    }\n    return node.implementation;\n  }\n\n  /**\n   * Searches in a depth first way for the best matching overload. considering this a the tree's root.\n   * @param args the arguments to the function.\n   * @param superTypeProvider\n   * @param functionArgumentsCache\n   */\n  public search(\n    args: E.TermExpression[],\n    superTypeProvider: ISuperTypeProvider,\n    functionArgumentsCache: FunctionArgumentsCache,\n  ):\n    ImplementationFunction | undefined {\n    let cacheIter: IFunctionArgumentsCacheObj | undefined = functionArgumentsCache[this.identifier];\n    let searchIndex = 0;\n    while (searchIndex < args.length && cacheIter?.cache) {\n      const term = args[searchIndex];\n      const literalExpression = isLiteralTermExpression(term);\n      cacheIter = cacheIter.cache[literalExpression ? literalExpression.dataType : term.termType];\n      searchIndex++;\n    }\n    if (searchIndex === args.length && cacheIter?.func) {\n      return cacheIter.func;\n    }\n\n    // SearchStack is a stack of all node's that need to be checked for implementation.\n    // It provides an easy way to keep order in our search.\n    const searchStack: { node: OverloadTree; index: number }[] = [];\n    const startIndex = 0;\n    if (args.length === 0) {\n      return this.implementation;\n    }\n    // GetSubTreeWithArg return a SearchStack containing the node's that should be contacted next.\n    // We also log the index since there is no other way to remember this index.\n    // the provided stack should be pushed on top of our search stack since it also has it's order.\n    searchStack.push(...this.getSubTreeWithArg(args[startIndex], superTypeProvider).map(node =>\n      ({ node, index: startIndex + 1 })));\n    while (searchStack.length > 0) {\n      const { index, node } = <{ node: OverloadTree; index: number }>searchStack.pop();\n      // We check the implementation because it would be possible a path is created but not implemented.\n      // ex: f(double, double, double) and f(term, term). and calling f(double, double).\n      if (index === args.length && node.implementation) {\n        this.addToCache(functionArgumentsCache, args, node.implementation);\n        return node.implementation;\n      }\n      searchStack.push(...node.getSubTreeWithArg(args[index], superTypeProvider).map(item =>\n        ({ node: item, index: index + 1 })));\n    }\n    // Calling a function with one argument but finding no implementation should return no implementation.\n    // Not even the one with no arguments.\n    return undefined;\n  }\n\n  private addToCache(\n    functionArgumentsCache: FunctionArgumentsCache,\n    args: E.TermExpression[],\n    func?: ImplementationFunction | undefined,\n  ): void {\n    function getDefault(lruCache: FunctionArgumentsCache, key: string): IFunctionArgumentsCacheObj {\n      if (!(key in lruCache)) {\n        lruCache[key] = {};\n      }\n      return lruCache[key];\n    }\n    let cache = getDefault(functionArgumentsCache, this.identifier);\n    for (const term of args) {\n      const literalExpression = isLiteralTermExpression(term);\n      const key = literalExpression ? literalExpression.dataType : term.termType;\n      cache.cache = cache.cache ?? {};\n      cache = getDefault(cache.cache, key);\n    }\n    cache.func = func;\n  }\n\n  /**\n   * Adds an overload to the tree structure considering this as the tree's root.\n   * @param argumentTypes a list of argumentTypes that would need to be provided in\n   * the same order to get the implementation.\n   * @param func the implementation for this overload.\n   */\n  public addOverload(argumentTypes: ArgumentType[], func: ImplementationFunction): void {\n    this._addOverload([ ...argumentTypes ], func, 0);\n  }\n\n  private _addOverload(argumentTypes: ArgumentType[], func: ImplementationFunction, promotionCount: number): void {\n    const [ argumentType, ..._argumentTypes ] = argumentTypes;\n    if (!argumentType) {\n      if (this.promotionCount === undefined || promotionCount <= this.promotionCount) {\n        this.promotionCount = promotionCount;\n        this.implementation = func;\n      }\n      return;\n    }\n    let nextTree = this.getSubtree(argumentType);\n    if (!nextTree) {\n      const newNode = new OverloadTree(this.identifier, this.depth + 1);\n      const generalType = asGeneralType(argumentType);\n      if (generalType) {\n        this.generalOverloads[generalType] = newNode;\n      }\n      const overrideType = asOverrideType(argumentType);\n      if (overrideType) {\n        this.literalOverLoads.push([ overrideType, newNode ]);\n      }\n      nextTree = newNode;\n    }\n    nextTree._addOverload(_argumentTypes, func, promotionCount);\n\n    if (typePromotion[argumentType]) {\n      for (const ret of typePromotion[argumentType]!) {\n        this.addPromotedOverload(\n          ret.typeToPromote,\n          func,\n          ret.conversionFunction,\n          _argumentTypes,\n          promotionCount,\n        );\n      }\n    }\n  }\n\n  private addPromotedOverload(\n    typeToPromote: OverrideType,\n    func: ImplementationFunction,\n    conversionFunction: (arg: E.TermExpression) => E.TermExpression,\n    argumentTypes: ArgumentType[],\n    promotionCount: number,\n  ): void {\n    let nextTree = this.getSubtree(typeToPromote);\n    if (!nextTree) {\n      const newNode = new OverloadTree(this.identifier, this.depth + 1);\n      this.literalOverLoads.push([ typeToPromote, newNode ]);\n      nextTree = newNode;\n    }\n    nextTree._addOverload(argumentTypes, funcConf => args => func(funcConf)([\n      ...args.slice(0, this.depth),\n      conversionFunction(args[this.depth]),\n      ...args.slice(this.depth + 1, args.length),\n    ]), promotionCount + 1);\n  }\n\n  /**\n   * @param arg term to try and match to possible overloads of this node.\n   * @param openWorldType interface allowing to discover relations between types.\n   * @returns SearchStack a stack with top element the next node that should be asked for implementation or overload.\n   */\n  private getSubTreeWithArg(arg: E.TermExpression, openWorldType: ISuperTypeProvider): SearchStack {\n    const res: SearchStack = [];\n    const literalExpression = isLiteralTermExpression(arg);\n    // These types refer to Type exported by lib/util/Consts.ts\n    if (this.generalOverloads.term) {\n      res.push(this.generalOverloads.term);\n    }\n    // TermTypes are defined in E.TermType.\n    if (this.generalOverloads[arg.termType]) {\n      res.push(this.generalOverloads[arg.termType]);\n    }\n    if (literalExpression) {\n      // Defending implementation. Mainly the scary sort.\n      // This function has cost O(n) + O(m * log(m)) with n = amount of overloads and m = amount of matched overloads\n      // We map over each of the overloads, filter only the once that can be used (this is normally 1 or 2).\n      // The sort function on an array with 1 or 2 arguments will be negligible.\n      const concreteType = asKnownLiteralType(literalExpression.dataType);\n      let subExtensionTable: GeneralSuperTypeDict;\n      if (concreteType) {\n        // Concrete dataType is known by expression-evaluator.\n        subExtensionTable = superTypeDictTable[concreteType];\n      } else {\n        // Datatype is a custom datatype\n        subExtensionTable = getSuperTypes(literalExpression.dataType, openWorldType);\n      }\n      const matches: [number, OverloadTree][] = this.literalOverLoads.filter(([ matchType, _ ]) =>\n        matchType in subExtensionTable)\n        .map(([ matchType, tree ]) => [ subExtensionTable[<KnownLiteralTypes> matchType], tree ]);\n      // eslint-disable-next-line unused-imports/no-unused-vars\n      matches.sort(([ prioA, matchTypeA ], [ prioB, matchTypeB ]) => prioA - prioB);\n      res.push(...matches.map(([ _, sortedType ]) => sortedType));\n    }\n    return res;\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport { BigNumber } from 'bignumber.js';\nimport { sha1, sha256, sha384, sha512 } from 'hash.js';\nimport { DataFactory } from 'rdf-data-factory';\nimport { resolve as resolveRelativeIri } from 'relative-to-absolute-iri';\nimport { hash as md5 } from 'spark-md5';\nimport * as uuid from 'uuid';\n\nimport type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport * as E from '../expressions';\nimport type { Quad } from '../expressions';\nimport { TermTransformer } from '../transformers/TermTransformer';\nimport * as C from '../util/Consts';\nimport { RegularOperator, TypeAlias, TypeURL } from '../util/Consts';\nimport type { IDayTimeDurationRepresentation } from '../util/DateTimeHelpers';\nimport {\n  dayTimeDurationsToSeconds,\n  defaultedDateTimeRepresentation,\n  defaultedDayTimeDurationRepresentation,\n  defaultedDurationRepresentation,\n  defaultedYearMonthDurationRepresentation,\n  extractRawTimeZone,\n  negateDuration,\n  toDateTimeRepresentation,\n  toUTCDate,\n  yearMonthDurationsToMonths,\n} from '../util/DateTimeHelpers';\nimport * as Err from '../util/Errors';\nimport { orderTypes } from '../util/Ordering';\nimport { addDurationToDateTime, elapsedDuration } from '../util/SpecAlgos';\nimport type { IOverloadedDefinition } from './Core';\nimport { RegularFunction } from './Core';\nimport { bool, decimal, declare, double, integer, langString, string } from './Helpers';\nimport * as X from './XPathFunctions';\nimport { regularFunctions } from '.';\n\nconst DF = new DataFactory<RDF.BaseQuad>();\n\ntype Term = E.TermExpression;\n\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// Begin definitions\n\n// ----------------------------------------------------------------------------\n// Operator Mapping\n// https://www.w3.org/TR/sparql11-query/#OperatorMapping\n// ----------------------------------------------------------------------------\n\nconst not = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.NOT)\n    .onTerm1(() => val => bool(!val.coerceEBV()))\n    .collect(),\n};\n\nconst unaryPlus = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.UPLUS)\n    .numericConverter(() => val => val)\n    .collect(),\n};\n\nconst unaryMinus = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.UMINUS)\n    .numericConverter(() => val => -val)\n    .collect(),\n};\n\nconst multiplication = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.MULTIPLICATION)\n    .arithmetic(() => (left, right) => new BigNumber(left).times(right).toNumber())\n    .collect(),\n};\n\nconst division = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.DIVISION)\n    .arithmetic(() => (left, right) => new BigNumber(left).div(right).toNumber())\n    .onBinaryTyped(\n      [ TypeURL.XSD_INTEGER, TypeURL.XSD_INTEGER ],\n      () => (left: number, right: number) => {\n        if (right === 0) {\n          throw new Err.ExpressionError('Integer division by 0');\n        }\n        return decimal(new BigNumber(left).div(right).toNumber());\n      },\n    )\n    .collect(),\n};\n\nconst addition = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.ADDITION)\n    .arithmetic(() => (left, right) => new BigNumber(left).plus(right).toNumber())\n    .set([ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ date, dur ]: [ E.DateTimeLiteral, E.DayTimeDurationLiteral ]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-add-dayTimeDuration-to-dateTime\n        new E.DateTimeLiteral(addDurationToDateTime(date.typedValue, defaultedDurationRepresentation(dur.typedValue))))\n    .copy({\n      from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DAY_TIME_DURATION ],\n      to: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_YEAR_MONTH_DURATION ],\n    })\n    .set([ TypeURL.XSD_DATE, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ date, dur ]: [E.DateLiteral, E.DurationLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-add-dayTimeDuration-to-date\n        new E.DateLiteral(\n          addDurationToDateTime(\n            defaultedDateTimeRepresentation(date.typedValue),\n            defaultedDurationRepresentation(dur.typedValue),\n          ),\n        ))\n    .copy({\n      from: [ TypeURL.XSD_DATE, TypeURL.XSD_DAY_TIME_DURATION ],\n      to: [ TypeURL.XSD_DATE, TypeURL.XSD_YEAR_MONTH_DURATION ],\n    })\n    .set([ TypeURL.XSD_TIME, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ time, dur ]: [E.TimeLiteral, E.DurationLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-add-dayTimeDuration-to-time\n        new E.TimeLiteral(\n          addDurationToDateTime(\n            defaultedDateTimeRepresentation(time.typedValue),\n            defaultedDurationRepresentation(dur.typedValue),\n          ),\n        ))\n    .copy({\n      from: [ TypeURL.XSD_TIME, TypeURL.XSD_DAY_TIME_DURATION ],\n      to: [ TypeURL.XSD_TIME, TypeURL.XSD_YEAR_MONTH_DURATION ],\n    })\n    .collect(),\n};\n\nconst subtraction = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.SUBTRACTION)\n    .arithmetic(() => (left, right) => new BigNumber(left).minus(right).toNumber())\n    .set([ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ], ({ defaultTimeZone }) =>\n      ([ date1, date2 ]: [ E.DateTimeLiteral, E.DateTimeLiteral ]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-subtract-dateTimes;\n        new E.DayTimeDurationLiteral(elapsedDuration(date1.typedValue, date2.typedValue, defaultTimeZone)))\n    .copy({ from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_DATE, TypeURL.XSD_DATE ]})\n    .copy({ from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_TIME, TypeURL.XSD_TIME ]})\n    .set([ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ date, dur ]: [ E.DateTimeLiteral, E.DayTimeDurationLiteral ]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-subtract-dayTimeDuration-from-dateTime\n        new E.DateTimeLiteral(addDurationToDateTime(\n          date.typedValue,\n          defaultedDurationRepresentation(negateDuration(dur.typedValue)),\n        )))\n    .copy({\n      from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DAY_TIME_DURATION ],\n      to: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_YEAR_MONTH_DURATION ],\n    })\n    .set([ TypeURL.XSD_DATE, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ date, dur ]: [ E.DateLiteral, E.DayTimeDurationLiteral ]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-subtract-dayTimeDuration-from-date\n        new E.DateLiteral(addDurationToDateTime(\n          defaultedDateTimeRepresentation(date.typedValue),\n          defaultedDurationRepresentation(negateDuration(dur.typedValue)),\n        )))\n    .copy({\n      from: [ TypeURL.XSD_DATE, TypeURL.XSD_DAY_TIME_DURATION ],\n      to: [ TypeURL.XSD_DATE, TypeURL.XSD_YEAR_MONTH_DURATION ],\n    })\n    .set([ TypeURL.XSD_TIME, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ time, dur ]: [ E.TimeLiteral, E.DayTimeDurationLiteral ]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-subtract-dayTimeDuration-from-date\n        new E.TimeLiteral(addDurationToDateTime(\n          defaultedDateTimeRepresentation(time.typedValue),\n          defaultedDurationRepresentation(negateDuration(dur.typedValue)),\n        )))\n    .collect(),\n};\n\n// https://www.w3.org/TR/sparql11-query/#func-RDFterm-equal\nconst equality = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.EQUAL)\n    .numberTest(() => (left, right) => left === right)\n    .stringTest(() => (left, right) => left.localeCompare(right) === 0)\n    .set(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => ([ left, right ]: E.LangStringLiteral[]) => bool(left.str() === right.str() &&\n        left.language === right.language),\n    )\n    // Fall through: a TypeURL.XSD_STRING is never equal to a TypeURL.RDF_LANG_STRING.\n    .set([ TypeAlias.SPARQL_STRINGLY, TypeAlias.SPARQL_STRINGLY ], () => () => bool(false))\n    .booleanTest(() => (left, right) => left === right)\n    .dateTimeTest(({ defaultTimeZone }) => (left, right) =>\n      toUTCDate(left, defaultTimeZone).getTime() === toUTCDate(right, defaultTimeZone).getTime())\n    .copy({\n      // https://www.w3.org/TR/xpath-functions/#func-date-equal\n      from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ],\n      to: [ TypeURL.XSD_DATE, TypeURL.XSD_DATE ],\n    })\n    .set(\n      [ 'quad', 'quad' ],\n      context => ([ left, right ]) => {\n        const op: RegularFunction = new RegularFunction(RegularOperator.EQUAL, equality);\n        return bool(\n          (<E.BooleanLiteral> op.apply([ (<Quad> left).subject, (<Quad> right).subject ], context)).coerceEBV() &&\n          (<E.BooleanLiteral> op.apply([ (<Quad> left).predicate, (<Quad> right).predicate ], context)).coerceEBV() &&\n          (<E.BooleanLiteral> op.apply([ (<Quad> left).object, (<Quad> right).object ], context)).coerceEBV(),\n        );\n      },\n      false,\n    )\n    .set(\n      [ 'term', 'term' ],\n      () => ([ left, right ]) => bool(RDFTermEqual(left, right)),\n      false,\n    )\n    .set([ TypeURL.XSD_DURATION, TypeURL.XSD_DURATION ], () =>\n      ([ dur1, dur2 ]: [ E.DurationLiteral, E.DurationLiteral ]) =>\n        bool(yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur1.typedValue)) ===\n          yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur2.typedValue)) &&\n          dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur1.typedValue)) ===\n          dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur2.typedValue))))\n    .set([ TypeURL.XSD_TIME, TypeURL.XSD_TIME ], ({ defaultTimeZone }) =>\n      ([ time1, time2 ]: [E.TimeLiteral, E.TimeLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-time-equal\n        bool(toUTCDate(defaultedDateTimeRepresentation(time1.typedValue), defaultTimeZone).getTime() ===\n          toUTCDate(defaultedDateTimeRepresentation(time2.typedValue), defaultTimeZone).getTime()))\n    .collect(),\n};\n\nfunction RDFTermEqual(_left: Term, _right: Term): boolean {\n  const left = _left.toRDF();\n  const right = _right.toRDF();\n  const val = left.equals(right);\n  if (!val && (left.termType === 'Literal') && (right.termType === 'Literal')) {\n    throw new Err.RDFEqualTypeError([ _left, _right ]);\n  }\n  return val;\n}\n\nconst inequality = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.NOT_EQUAL)\n    .set([ 'term', 'term' ], context =>\n      ([ first, second ]) =>\n        bool(!(<E.BooleanLiteral> regularFunctions[C.RegularOperator.EQUAL]\n          .apply([ first, second ], context)).typedValue))\n    .collect(),\n};\n\nconst lesserThan = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.LT)\n    .numberTest(() => (left, right) => left < right)\n    .stringTest(() => (left, right) => left.localeCompare(right) === -1)\n    .booleanTest(() => (left, right) => left < right)\n    .set(\n      [ 'quad', 'quad' ],\n      () => ([ left, right ]) => bool(orderTypes(left.toRDF(), right.toRDF(), true) === -1),\n      false,\n    )\n    .dateTimeTest(({ defaultTimeZone }) => (left, right) =>\n      toUTCDate(left, defaultTimeZone).getTime() < toUTCDate(right, defaultTimeZone).getTime())\n    .copy({\n      // https://www.w3.org/TR/xpath-functions/#func-date-less-than\n      from: [ TypeURL.XSD_DATE_TIME, TypeURL.XSD_DATE_TIME ],\n      to: [ TypeURL.XSD_DATE, TypeURL.XSD_DATE ],\n    })\n    .set([ TypeURL.XSD_YEAR_MONTH_DURATION, TypeURL.XSD_YEAR_MONTH_DURATION ], () =>\n      ([ dur1L, dur2L ]: [E.YearMonthDurationLiteral, E.YearMonthDurationLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-yearMonthDuration-less-than\n        bool(yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur1L.typedValue)) <\n          yearMonthDurationsToMonths(defaultedYearMonthDurationRepresentation(dur2L.typedValue))))\n    .set([ TypeURL.XSD_DAY_TIME_DURATION, TypeURL.XSD_DAY_TIME_DURATION ], () =>\n      ([ dur1, dur2 ]: [E.DayTimeDurationLiteral, E.DayTimeDurationLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-dayTimeDuration-greater-than\n        bool(dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur1.typedValue)) <\n          dayTimeDurationsToSeconds(defaultedDayTimeDurationRepresentation(dur2.typedValue))))\n    .set([ TypeURL.XSD_TIME, TypeURL.XSD_TIME ], ({ defaultTimeZone }) =>\n      ([ time1, time2 ]: [E.TimeLiteral, E.TimeLiteral]) =>\n        // https://www.w3.org/TR/xpath-functions/#func-time-less-than\n        bool(toUTCDate(defaultedDateTimeRepresentation(time1.typedValue), defaultTimeZone).getTime() <\n          toUTCDate(defaultedDateTimeRepresentation(time2.typedValue), defaultTimeZone).getTime()))\n    .collect(),\n};\n\nconst greaterThan = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.GT)\n    .set([ 'term', 'term' ], context =>\n      ([ first, second ]) =>\n        // X < Y -> Y > X\n        regularFunctions[C.RegularOperator.LT].apply([ second, first ], context))\n    .collect(),\n};\n\nconst lesserThanEqual = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.LTE)\n    .set([ 'term', 'term' ], context =>\n      ([ first, second ]) =>\n        // X <= Y -> X < Y || X = Y\n        // First check if the first is lesser than the second, then check if they are equal.\n        // Doing this, the correct error will be thrown, each type that has a lesserThanEqual has a matching lesserThan.\n        bool(\n          (<E.BooleanLiteral> regularFunctions[C.RegularOperator.LT].apply([ first, second ], context)).typedValue ||\n          (<E.BooleanLiteral> regularFunctions[C.RegularOperator.EQUAL].apply([ first, second ], context)).typedValue,\n        ))\n    .collect(),\n};\n\nconst greaterThanEqual = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.GTE)\n    .set([ 'term', 'term' ], context =>\n      ([ first, second ]) =>\n        // X >= Y -> Y <= X\n        regularFunctions[C.RegularOperator.LTE].apply([ second, first ], context))\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Functions on RDF Terms\n// https://www.w3.org/TR/sparql11-query/#func-rdfTerms\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-isIRI\n */\nconst isIRI = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IS_IRI)\n    .onTerm1(() => term => bool(term.termType === 'namedNode'))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-isBlank\n */\nconst isBlank = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IS_BLANK)\n    .onTerm1(() => term => bool(term.termType === 'blankNode'))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-isLiteral\n */\nconst isLiteral = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IS_LITERAL)\n    .onTerm1(() => term => bool(term.termType === 'literal'))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-isNumeric\n */\nconst isNumeric = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IS_NUMERIC)\n    .onNumeric1(() => () => bool(true))\n    .onTerm1(() => () => bool(false))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-str\n */\nconst STR = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.STR)\n    .onTerm1(() => term => string(term.str()))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-lang\n */\nconst lang = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.LANG)\n    .onLiteral1(() => lit => string(lit.language ?? ''))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-datatype\n */\nconst datatype = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.DATATYPE)\n    .onLiteral1(() => lit => new E.NamedNode(lit.dataType))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-iri\n */\nconst IRI = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IRI)\n    .set([ 'namedNode' ], context => (args) => {\n      const lit = <E.NamedNode> args[0];\n      const iri = resolveRelativeIri(lit.str(), context.baseIRI ?? '');\n      return new E.NamedNode(iri);\n    })\n    .onString1(context => (lit) => {\n      const iri = resolveRelativeIri(lit.str(), context.baseIRI ?? '');\n      return new E.NamedNode(iri);\n    })\n    .collect(),\n};\n\n// See special functions\n// const BNODE = {};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strdt\n */\nconst STRDT = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRDT).set(\n    [ TypeURL.XSD_STRING, 'namedNode' ],\n    ({ superTypeProvider }) => ([ str, iri ]: [E.StringLiteral, E.NamedNode]) => {\n      const lit = DF.literal(str.typedValue, DF.namedNode(iri.value));\n      return new TermTransformer(superTypeProvider).transformLiteral(lit);\n    },\n  ).collect(),\n};\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strlang\n */\nconst STRLANG = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRLANG)\n    .onBinaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (val: string, language: string) => new E.LangStringLiteral(val, language.toLowerCase()),\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-uuid\n */\nconst UUID = {\n  arity: 0,\n  overloads: declare(C.RegularOperator.UUID)\n    .set([], () => () => new E.NamedNode(`urn:uuid:${uuid.v4()}`))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-struuid\n */\nconst STRUUID = {\n  arity: 0,\n  overloads: declare(C.RegularOperator.STRUUID)\n    .set([], () => () => string(uuid.v4()))\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Functions on strings\n// https://www.w3.org/TR/sparql11-query/#func-forms\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strlen\n */\nconst STRLEN = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.STRLEN)\n    .onStringly1(() => str => integer([ ...str.typedValue ].length))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-substr\n */\nconst SUBSTR = {\n  arity: [ 2, 3 ],\n  overloads: declare(C.RegularOperator.SUBSTR)\n    .onBinaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_INTEGER ],\n      () => (source: string, startingLoc: number) => string([ ...source ].slice(startingLoc - 1).join('')),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.XSD_INTEGER ],\n      () => (source: E.LangStringLiteral, startingLoc: E.NumericLiteral) => {\n        const sub = [ ...source.typedValue ].slice(startingLoc.typedValue - 1).join('');\n        return langString(sub, source.language);\n      },\n    )\n    .onTernaryTyped([\n      TypeURL.XSD_STRING,\n      TypeURL.XSD_INTEGER,\n      TypeURL.XSD_INTEGER,\n    ], () => (source: string, startingLoc: number, length: number) =>\n      string([ ...source ].slice(startingLoc - 1, length + startingLoc - 1).join('')))\n    .onTernary([\n      TypeURL.RDF_LANG_STRING,\n      TypeURL.XSD_INTEGER,\n      TypeURL.XSD_INTEGER,\n    ], () => (source: E.LangStringLiteral, startingLoc: E.NumericLiteral, length: E.NumericLiteral) => {\n      const sub = [ ...source.typedValue ]\n        .slice(startingLoc.typedValue - 1, length.typedValue + startingLoc.typedValue - 1).join('');\n      return langString(sub, source.language);\n    })\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-ucase\n */\nconst UCASE = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.UCASE)\n    .onString1Typed(() => lit => string(lit.toUpperCase()))\n    .onLangString1(() => lit => langString(lit.typedValue.toUpperCase(), lit.language))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-lcase\n */\nconst LCASE = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.LCASE)\n    .onString1Typed(() => lit => string(lit.toLowerCase()))\n    .onLangString1(() => lit => langString(lit.typedValue.toLowerCase(), lit.language))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strstarts\n * for this and the following functions you'll see (string, langstring) is not allowed. This behaviour is defined in:\n * https://www.w3.org/TR/sparql11-query/#func-arg-compatibility\n */\nconst STRSTARTS = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRSTARTS)\n    .onBinaryTyped(\n      [ TypeAlias.SPARQL_STRINGLY, TypeURL.XSD_STRING ],\n      () => (arg1: string, arg2: string) => bool(arg1.startsWith(arg2)),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.LangStringLiteral) => {\n        if (arg1.language !== arg2.language) {\n          throw new Err.IncompatibleLanguageOperation(arg1, arg2);\n        }\n        return bool(arg1.typedValue.startsWith(arg2.typedValue));\n      },\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strends\n */\nconst STRENDS = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRENDS)\n    .onBinaryTyped(\n      [ TypeAlias.SPARQL_STRINGLY, TypeURL.XSD_STRING ],\n      () => (arg1: string, arg2: string) => bool(arg1.endsWith(arg2)),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.LangStringLiteral) => {\n        if (arg1.language !== arg2.language) {\n          throw new Err.IncompatibleLanguageOperation(arg1, arg2);\n        }\n        return bool(arg1.typedValue.endsWith(arg2.typedValue));\n      },\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-contains\n */\nconst CONTAINS = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.CONTAINS)\n    .onBinaryTyped(\n      [ TypeAlias.SPARQL_STRINGLY, TypeURL.XSD_STRING ],\n      () => (arg1: string, arg2: string) => bool(arg1.includes(arg2)),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.LangStringLiteral) => {\n        if (arg1.language !== arg2.language) {\n          throw new Err.IncompatibleLanguageOperation(arg1, arg2);\n        }\n        return bool(arg1.typedValue.includes(arg2.typedValue));\n      },\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strbefore\n */\nconst STRBEFORE = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRBEFORE)\n    .onBinaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (arg1: string, arg2: string) => string(arg1.slice(0, Math.max(0, arg1.indexOf(arg2)))),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.XSD_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.StringLiteral) => {\n        const [ a1, a2 ] = [ arg1.typedValue, arg2.typedValue ];\n        const sub = arg1.typedValue.slice(0, Math.max(0, a1.indexOf(a2)));\n        return sub || !a2 ? langString(sub, arg1.language) : string(sub);\n      },\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.LangStringLiteral) => {\n        if (arg1.language !== arg2.language) {\n          throw new Err.IncompatibleLanguageOperation(arg1, arg2);\n        }\n        const [ a1, a2 ] = [ arg1.typedValue, arg2.typedValue ];\n        const sub = arg1.typedValue.slice(0, Math.max(0, a1.indexOf(a2)));\n        return sub || !a2 ? langString(sub, arg1.language) : string(sub);\n      },\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-strafter\n */\nconst STRAFTER = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.STRAFTER)\n    .onBinaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (arg1: string, arg2: string) => string(arg1.slice(arg1.indexOf(arg2)).slice(arg2.length)),\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.XSD_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.StringLiteral) => {\n        const [ a1, a2 ] = [ arg1.typedValue, arg2.typedValue ];\n        const sub = a1.slice(a1.indexOf(a2)).slice(a2.length);\n        return sub || !a2 ? langString(sub, arg1.language) : string(sub);\n      },\n    )\n    .onBinary(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.RDF_LANG_STRING ],\n      () => (arg1: E.LangStringLiteral, arg2: E.LangStringLiteral) => {\n        if (arg1.language !== arg2.language) {\n          throw new Err.IncompatibleLanguageOperation(arg1, arg2);\n        }\n        const [ a1, a2 ] = [ arg1.typedValue, arg2.typedValue ];\n        const sub = a1.slice(a1.indexOf(a2)).slice(a2.length);\n        return sub || !a2 ? langString(sub, arg1.language) : string(sub);\n      },\n    )\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-encode\n */\nconst ENCODE_FOR_URI = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.ENCODE_FOR_URI)\n    .onStringly1Typed(() => val => string(encodeURI(val))).collect(),\n};\n\n// See special operators\n// const CONCAT = {}\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-langMatches\n */\nconst langmatches = {\n  arity: 2,\n  overloads: declare(C.RegularOperator.LANG_MATCHES)\n    .onBinaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (tag: string, range: string) => bool(X.langMatches(tag, range)),\n    ).collect(),\n};\n\nfunction regex2(): (text: string, pattern: string) => E.BooleanLiteral {\n  return (text: string, pattern: string) => bool(X.matches(text, pattern));\n}\nfunction regex3(): (text: string, pattern: string, flags: string) => E.BooleanLiteral {\n  return (text: string, pattern: string, flags: string) => bool(X.matches(text, pattern, flags));\n}\n/**\n * https://www.w3.org/TR/sparql11-query/#func-regex\n */\nconst REGEX = {\n  arity: [ 2, 3 ],\n  overloads: declare(C.RegularOperator.REGEX)\n    .onBinaryTyped([ TypeAlias.SPARQL_STRINGLY, TypeURL.XSD_STRING ], regex2)\n    .onTernaryTyped([ TypeAlias.SPARQL_STRINGLY, TypeURL.XSD_STRING, TypeURL.XSD_STRING ], regex3)\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-replace\n */\nconst REPLACE = {\n  arity: [ 3, 4 ],\n  overloads: declare(C.RegularOperator.REPLACE)\n    .onTernaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (arg: string, pattern: string, replacement: string) =>\n        string(X.replace(arg, pattern, replacement)),\n    )\n    .set(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => ([ arg, pattern, replacement ]: [E.LangStringLiteral, E.StringLiteral, E.StringLiteral]) => {\n        const result = X.replace(arg.typedValue, pattern.typedValue, replacement.typedValue);\n        return langString(result, arg.language);\n      },\n    )\n    .onQuaternaryTyped(\n      [ TypeURL.XSD_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => (arg: string, pattern: string, replacement: string, flags: string) =>\n        string(X.replace(arg, pattern, replacement, flags)),\n    )\n    .set(\n      [ TypeURL.RDF_LANG_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING, TypeURL.XSD_STRING ],\n      () => ([ arg, pattern, replacement, flags ]:\n      [E.LangStringLiteral, E.StringLiteral, E.StringLiteral, E.StringLiteral]) => {\n        const result = X.replace(arg.typedValue, pattern.typedValue, replacement.typedValue, flags.typedValue);\n        return langString(result, arg.language);\n      },\n    )\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Functions on numerics\n// https://www.w3.org/TR/sparql11-query/#func-numerics\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-abs\n */\nconst abs = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.ABS)\n    .numericConverter(() => num => Math.abs(num))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-round\n */\nconst round = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.ROUND)\n    .numericConverter(() => num => Math.round(num))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-ceil\n */\nconst ceil = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.CEIL)\n    .numericConverter(() => num => Math.ceil(num))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-floor\n */\nconst floor = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.FLOOR)\n    .numericConverter(() => num => Math.floor(num))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#idp2130040\n */\nconst rand = {\n  arity: 0,\n  overloads: declare(C.RegularOperator.RAND)\n    .set([], () => () => double(Math.random()))\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Functions on Dates and Times\n// https://www.w3.org/TR/sparql11-query/#func-date-time\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-now\n */\nconst now = {\n  arity: 0,\n  overloads: declare(C.RegularOperator.NOW).set([], (sharedContext: ICompleteSharedContext) => () =>\n    new E.DateTimeLiteral(toDateTimeRepresentation(\n      { date: sharedContext.now, timeZone: sharedContext.defaultTimeZone },\n    ))).collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-year\n */\nconst year = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.YEAR)\n    .onDateTime1(\n      () => date => integer(date.typedValue.year),\n    )\n    .set([ TypeURL.XSD_DATE ], () => ([ date ]: [E.DateLiteral ]) => integer(date.typedValue.year))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-month\n */\nconst month = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.MONTH)\n    .onDateTime1(\n      () => date => integer(date.typedValue.month),\n    )\n    .set([ TypeURL.XSD_DATE ], () => ([ date ]: [ E.DateLiteral]) => integer(date.typedValue.month))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-day\n */\nconst day = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.DAY)\n    .onDateTime1(\n      () => date => integer(date.typedValue.day),\n    )\n    .set([ TypeURL.XSD_DATE ], () => ([ date ]: [ E.DateLiteral]) => integer(date.typedValue.day))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-hours\n */\nconst hours = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.HOURS)\n    .onDateTime1(\n      () => date => integer(date.typedValue.hours),\n    )\n    .set([ TypeURL.XSD_TIME ], () => ([ time ]: [ E.TimeLiteral]) => integer(time.typedValue.hours))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-minutes\n */\nconst minutes = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.MINUTES)\n    .onDateTime1(() => date => integer(date.typedValue.minutes))\n    .set([ TypeURL.XSD_TIME ], () => ([ time ]: [ E.TimeLiteral]) => integer(time.typedValue.minutes))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-seconds\n */\nconst seconds = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SECONDS)\n    .onDateTime1(() => date => decimal(date.typedValue.seconds))\n    .set([ TypeURL.XSD_TIME ], () => ([ time ]: [ E.TimeLiteral]) => integer(time.typedValue.seconds))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-timezone\n */\nconst timezone = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.TIMEZONE)\n    .onDateTime1(\n      () => (date) => {\n        const duration: Partial<IDayTimeDurationRepresentation> = {\n          hours: date.typedValue.zoneHours,\n          minutes: date.typedValue.zoneMinutes,\n        };\n        if (duration.hours === undefined && duration.minutes === undefined) {\n          throw new Err.InvalidTimezoneCall(date.str());\n        }\n        return new E.DayTimeDurationLiteral(duration);\n      },\n    )\n    .copy({ from: [ TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_DATE ]})\n    .copy({ from: [ TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_TIME ]})\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-tz\n */\nconst tz = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.TZ)\n    .onDateTime1(\n      () => date => string(extractRawTimeZone(date.str())),\n    )\n    .copy({ from: [ TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_DATE ]})\n    .copy({ from: [ TypeURL.XSD_DATE_TIME ], to: [ TypeURL.XSD_TIME ]})\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Hash functions\n// https://www.w3.org/TR/sparql11-query/#func-hash\n// ----------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-md5\n */\nconst MD5 = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.MD5)\n    .onString1Typed(() => str => string(md5(str)))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sha1\n */\nconst SHA1 = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SHA1)\n    .onString1Typed(() => str => string(sha1().update(str).digest('hex')))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sha256\n */\nconst SHA256 = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SHA256)\n    .onString1Typed(() => str => string(sha256().update(str).digest('hex')))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sha384\n */\nconst SHA384 = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SHA384)\n    .onString1Typed(() => str => string(sha384().update(str).digest('hex')))\n    .collect(),\n};\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sha512\n */\nconst SHA512 = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SHA512)\n    .onString1Typed(() => str => string(sha512().update(str).digest('hex')))\n    .collect(),\n};\n\n// ----------------------------------------------------------------------------\n// Functions for quoted triples\n// https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#triple-function\n// ----------------------------------------------------------------------------\n\n/**\n * https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#triple-function\n */\nconst triple = {\n  arity: 3,\n  overloads: declare(C.RegularOperator.TRIPLE)\n    .onTerm3(\n      context => (...args) => new E.Quad(\n        DF.quad(args[0].toRDF(), args[1].toRDF(), args[2].toRDF()),\n        context.superTypeProvider,\n      ),\n    )\n    .collect(),\n};\n\n/**\n * https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#subject\n */\nconst subject = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.SUBJECT)\n    .onQuad1(() => quad => quad.subject)\n    .collect(),\n};\n\n/**\n * https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#predicate\n */\nconst predicate = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.PREDICATE)\n    .onQuad1(() => quad => quad.predicate)\n    .collect(),\n};\n\n/**\n * https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#object\n */\nconst object = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.OBJECT)\n    .onQuad1(() => quad => quad.object)\n    .collect(),\n};\n\n/**\n * https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#istriple\n */\nconst istriple = {\n  arity: 1,\n  overloads: declare(C.RegularOperator.IS_TRIPLE)\n    .onTerm1(() => term => bool(term.termType === 'quad'))\n    .collect(),\n};\n\n// End definitions.\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n// ----------------------------------------------------------------------------\n\n/**\n * Collect all the definitions from above into an object\n */\nexport const definitions: Record<C.RegularOperator, IOverloadedDefinition> = {\n  // --------------------------------------------------------------------------\n  // Operator Mapping\n  // https://www.w3.org/TR/sparql11-query/#OperatorMapping\n  // --------------------------------------------------------------------------\n  '!': not,\n  uplus: unaryPlus,\n  uminus: unaryMinus,\n  '*': multiplication,\n  '/': division,\n  '+': addition,\n  '-': subtraction,\n  '=': equality,\n  '!=': inequality,\n  '<': lesserThan,\n  '>': greaterThan,\n  '<=': lesserThanEqual,\n  '>=': greaterThanEqual,\n\n  // --------------------------------------------------------------------------\n  // Functions on RDF Terms\n  // https://www.w3.org/TR/sparql11-query/#func-rdfTerms\n  // --------------------------------------------------------------------------\n  isiri: isIRI,\n  isuri: isIRI,\n  isblank: isBlank,\n  isliteral: isLiteral,\n  isnumeric: isNumeric,\n  str: STR,\n  lang,\n  datatype,\n  iri: IRI,\n  uri: IRI,\n  // 'BNODE': BNODE (see special operators),\n  strdt: STRDT,\n  strlang: STRLANG,\n  uuid: UUID,\n  struuid: STRUUID,\n\n  // --------------------------------------------------------------------------\n  // Functions on strings\n  // https://www.w3.org/TR/sparql11-query/#func-forms\n  // --------------------------------------------------------------------------\n  strlen: STRLEN,\n  substr: SUBSTR,\n  ucase: UCASE,\n  lcase: LCASE,\n  strstarts: STRSTARTS,\n  strends: STRENDS,\n  contains: CONTAINS,\n  strbefore: STRBEFORE,\n  strafter: STRAFTER,\n  encode_for_uri: ENCODE_FOR_URI,\n  // 'concat': CONCAT (see special operators)\n  langmatches,\n  regex: REGEX,\n  replace: REPLACE,\n\n  // --------------------------------------------------------------------------\n  // Functions on numerics\n  // https://www.w3.org/TR/sparql11-query/#func-numerics\n  // --------------------------------------------------------------------------\n  abs,\n  round,\n  ceil,\n  floor,\n  rand,\n\n  // --------------------------------------------------------------------------\n  // Functions on Dates and Times\n  // https://www.w3.org/TR/sparql11-query/#func-date-time\n  // --------------------------------------------------------------------------\n  now,\n  year,\n  month,\n  day,\n  hours,\n  minutes,\n  seconds,\n  timezone,\n  tz,\n\n  // --------------------------------------------------------------------------\n  // Hash functions\n  // https://www.w3.org/TR/sparql11-query/#func-hash\n  // --------------------------------------------------------------------------\n  md5: MD5,\n  sha1: SHA1,\n  sha256: SHA256,\n  sha384: SHA384,\n  sha512: SHA512,\n\n  // --------------------------------------------------------------------------\n  // Functions for quoted triples\n  // https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#triple-function\n  // --------------------------------------------------------------------------\n  triple,\n  subject,\n  predicate,\n  object,\n  istriple,\n};\n","import type * as RDF from '@rdfjs/types';\nimport * as uuid from 'uuid';\nimport * as E from '../expressions';\nimport * as C from '../util/Consts';\nimport * as Err from '../util/Errors';\nimport { bool, declare, expressionToVar, langString, string } from './Helpers';\nimport type { EvalContextAsync, EvalContextSync, OverloadTree } from '.';\nimport { regularFunctions, specialFunctions } from '.';\n\ntype Term = E.TermExpression;\ntype PTerm = Promise<E.TermExpression>;\n\n// ----------------------------------------------------------------------------\n// Functional forms\n// ----------------------------------------------------------------------------\n\n// BOUND ----------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-bound\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst bound: ISpecialDefinition = {\n  arity: 1,\n  async applyAsync({ args, mapping }: EvalContextAsync): PTerm {\n    return bound_({ args, mapping });\n  },\n  applySynchronously({ args, mapping }: EvalContextSync): Term {\n    return bound_({ args, mapping });\n  },\n};\n\nfunction bound_({ args, mapping }: { args: E.Expression[]; mapping: RDF.Bindings }): E.BooleanLiteral {\n  const variable = <E.VariableExpression> args[0];\n  if (variable.expressionType !== E.ExpressionType.Variable) {\n    throw new Err.InvalidArgumentTypes(args, C.SpecialOperator.BOUND);\n  }\n  const val = mapping.has(expressionToVar(variable));\n  return bool(val);\n}\n\n// IF -------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-if\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst ifSPARQL: ISpecialDefinition = {\n  arity: 3,\n  async applyAsync({ args, mapping, evaluate }: EvalContextAsync): PTerm {\n    const valFirst = await evaluate(args[0], mapping);\n    const ebv = valFirst.coerceEBV();\n    return ebv ?\n      evaluate(args[1], mapping) :\n      evaluate(args[2], mapping);\n  },\n  applySynchronously({ args, mapping, evaluate }: EvalContextSync): Term {\n    const valFirst = evaluate(args[0], mapping);\n    const ebv = valFirst.coerceEBV();\n    return ebv ?\n      evaluate(args[1], mapping) :\n      evaluate(args[2], mapping);\n  },\n};\n\n// COALESCE -------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-coalesce\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst coalesce: ISpecialDefinition = {\n  arity: Number.POSITIVE_INFINITY,\n  async applyAsync({ args, mapping, evaluate }: EvalContextAsync): PTerm {\n    const errors: Error[] = [];\n    for (const expr of args) {\n      try {\n        return await evaluate(expr, mapping);\n      } catch (error: unknown) {\n        errors.push(<Error> error);\n      }\n    }\n    throw new Err.CoalesceError(errors);\n  },\n  applySynchronously({ args, mapping, evaluate }: EvalContextSync): Term {\n    const errors: Error[] = [];\n    for (const expr of args) {\n      try {\n        return evaluate(expr, mapping);\n      } catch (error: unknown) {\n        errors.push(<Error> error);\n      }\n    }\n    throw new Err.CoalesceError(errors);\n  },\n};\n\n// Logical-or (||) ------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-logical-or\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst logicalOr: ISpecialDefinition = {\n  arity: 2,\n  async applyAsync({ args, mapping, evaluate }: EvalContextAsync): PTerm {\n    const [ leftExpr, rightExpr ] = args;\n    try {\n      const leftTerm = await evaluate(leftExpr, mapping);\n      const left = leftTerm.coerceEBV();\n      if (left) {\n        return bool(true);\n      }\n      const rightTerm = await evaluate(rightExpr, mapping);\n      const right = rightTerm.coerceEBV();\n      return bool(right);\n    } catch (error: unknown) {\n      const rightErrorTerm = await evaluate(rightExpr, mapping);\n      const rightError = rightErrorTerm.coerceEBV();\n      if (!rightError) {\n        throw error;\n      }\n      return bool(true);\n    }\n  },\n  applySynchronously({ args, mapping, evaluate }: EvalContextSync): Term {\n    const [ leftExpr, rightExpr ] = args;\n    try {\n      const leftTerm = evaluate(leftExpr, mapping);\n      const left = leftTerm.coerceEBV();\n      if (left) {\n        return bool(true);\n      }\n      const rightTerm = evaluate(rightExpr, mapping);\n      const right = rightTerm.coerceEBV();\n      return bool(right);\n    } catch (error: unknown) {\n      const rightErrorTerm = evaluate(rightExpr, mapping);\n      const rightError = rightErrorTerm.coerceEBV();\n      if (!rightError) {\n        throw error;\n      }\n      return bool(true);\n    }\n  },\n};\n\n// Logical-and (&&) -----------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-logical-and\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst logicalAnd: ISpecialDefinition = {\n  arity: 2,\n  async applyAsync({ args, mapping, evaluate }: EvalContextAsync): PTerm {\n    const [ leftExpr, rightExpr ] = args;\n    try {\n      const leftTerm = await evaluate(leftExpr, mapping);\n      const left = leftTerm.coerceEBV();\n      if (!left) {\n        return bool(false);\n      }\n      const rightTerm = await evaluate(rightExpr, mapping);\n      const right = rightTerm.coerceEBV();\n      return bool(right);\n    } catch (error: unknown) {\n      const rightErrorTerm = await evaluate(rightExpr, mapping);\n      const rightError = rightErrorTerm.coerceEBV();\n      if (rightError) {\n        throw error;\n      }\n      return bool(false);\n    }\n  },\n  applySynchronously({ args, mapping, evaluate }: EvalContextSync): Term {\n    const [ leftExpr, rightExpr ] = args;\n    try {\n      const leftTerm = evaluate(leftExpr, mapping);\n      const left = leftTerm.coerceEBV();\n      if (!left) {\n        return bool(false);\n      }\n      const rightTerm = evaluate(rightExpr, mapping);\n      const right = rightTerm.coerceEBV();\n      return bool(right);\n    } catch (error: unknown) {\n      const rightErrorTerm = evaluate(rightExpr, mapping);\n      const rightError = rightErrorTerm.coerceEBV();\n      if (rightError) {\n        throw error;\n      }\n      return bool(false);\n    }\n  },\n};\n\n// SameTerm -------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-sameTerm\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst sameTerm: ISpecialDefinition = {\n  arity: 2,\n  async applyAsync({ args, mapping, evaluate }: EvalContextAsync): PTerm {\n    const [ leftExpr, rightExpr ] = args.map(arg => evaluate(arg, mapping));\n    const [ left, right ] = await Promise.all([ leftExpr, rightExpr ]);\n    return bool(left.toRDF().equals(right.toRDF()));\n  },\n  applySynchronously({ args, mapping, evaluate }: EvalContextSync): Term {\n    const [ left, right ] = args.map(arg => evaluate(arg, mapping));\n    return bool(left.toRDF().equals(right.toRDF()));\n  },\n};\n\n// IN -------------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-in\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst inSPARQL: ISpecialDefinition = {\n  arity: Number.POSITIVE_INFINITY,\n  checkArity(args: E.Expression[]) {\n    return args.length > 0;\n  },\n  async applyAsync(context: EvalContextAsync): PTerm {\n    const { args, mapping, evaluate } = context;\n    const [ leftExpr, ...remaining ] = args;\n    const left = await evaluate(leftExpr, mapping);\n    return inRecursiveAsync(left, { ...context, args: remaining }, []);\n  },\n  applySynchronously(context: EvalContextSync): Term {\n    const { args, mapping, evaluate } = context;\n    const [ leftExpr, ...remaining ] = args;\n    const left = evaluate(leftExpr, mapping);\n    return inRecursiveSync(left, { ...context, args: remaining }, []);\n  },\n};\n\nasync function inRecursiveAsync(\n  needle: Term,\n  context: EvalContextAsync,\n  results: (Error | false)[],\n): PTerm {\n  const { args, mapping, evaluate } = context;\n  if (args.length === 0) {\n    const noErrors = results.every(val => !val);\n    return noErrors ? bool(false) : Promise.reject(new Err.InError(results));\n  }\n\n  try {\n    const nextExpression = args.shift();\n    // We know this will not be undefined because we check args.length === 0\n    const next = await evaluate(nextExpression!, mapping);\n    const isEqual = regularFunctions[C.RegularOperator.EQUAL];\n    if ((<E.BooleanLiteral> isEqual.apply([ needle, next ], context)).typedValue) {\n      return bool(true);\n    }\n    return inRecursiveAsync(needle, context, [ ...results, false ]);\n  } catch (error: unknown) {\n    return inRecursiveAsync(needle, context, [ ...results, <Error> error ]);\n  }\n}\n\nfunction inRecursiveSync(\n  needle: Term,\n  context: EvalContextSync,\n  results: (Error | false)[],\n): Term {\n  const { args, mapping, evaluate } = context;\n  if (args.length === 0) {\n    const noErrors = results.every(val => !val);\n    if (noErrors) {\n      return bool(false);\n    }\n    throw new Err.InError(results);\n  }\n\n  try {\n    const nextExpression = args.shift();\n    // We know this will not be undefined because we check args.length === 0\n    const next = evaluate(nextExpression!, mapping);\n    const isEqual = regularFunctions[C.RegularOperator.EQUAL];\n    if ((<E.BooleanLiteral> isEqual.apply([ needle, next ], context)).typedValue) {\n      return bool(true);\n    }\n    return inRecursiveSync(needle, context, [ ...results, false ]);\n  } catch (error: unknown) {\n    return inRecursiveSync(needle, context, [ ...results, <Error> error ]);\n  }\n}\n\n// NOT IN ---------------------------------------------------------------------\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-not-in\n * This function doesn't require type promotion or subtype-substitution, everything works on TermExpression\n */\nconst notInSPARQL: ISpecialDefinition = {\n  arity: Number.POSITIVE_INFINITY,\n  checkArity(args: E.Expression[]) {\n    return args.length > 0;\n  },\n  async applyAsync(context: EvalContextAsync): PTerm {\n    const _in = specialFunctions[C.SpecialOperator.IN];\n    const isIn = await _in.applyAsync(context);\n    return bool(!(<E.BooleanLiteral> isIn).typedValue);\n  },\n  applySynchronously(context: EvalContextSync): Term {\n    const _in = specialFunctions[C.SpecialOperator.IN];\n    const isIn = _in.applySynchronously(context);\n    return bool(!(<E.BooleanLiteral> isIn).typedValue);\n  },\n};\n\n// ----------------------------------------------------------------------------\n// Annoying functions\n// ----------------------------------------------------------------------------\n\n// CONCAT ---------------------------------------------------------------------\n\n/**\n * This OverloadTree with the constant function will handle both type promotion and subtype-substitution\n */\nconst concatTree: OverloadTree = declare(C.SpecialOperator.CONCAT).onStringly1(() => expr => expr)\n  .collect();\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-concat\n */\nconst concat: ISpecialDefinition = {\n  arity: Number.POSITIVE_INFINITY,\n  async applyAsync(context: EvalContextAsync): PTerm {\n    const { args, mapping, evaluate, functionArgumentsCache, superTypeProvider } = context;\n    const pLits: Promise<E.Literal<string>>[] = args\n      .map(async expr => evaluate(expr, mapping))\n      .map(async(pTerm) => {\n        const operation = concatTree.search([ await pTerm ], superTypeProvider, functionArgumentsCache);\n        if (!operation) {\n          throw new Err.InvalidArgumentTypes(args, C.SpecialOperator.CONCAT);\n        }\n        return <E.Literal<string>> operation(context)([ await pTerm ]);\n      });\n    const lits = await Promise.all(pLits);\n    const strings = lits.map(lit => lit.typedValue);\n    const joined = strings.join('');\n    const lang = langAllEqual(lits) ? lits[0].language : undefined;\n    return lang ? langString(joined, lang) : string(joined);\n  },\n\n  applySynchronously(context: EvalContextSync): Term {\n    const { args, mapping, evaluate, superTypeProvider, functionArgumentsCache } = context;\n    const lits = args\n      .map(expr => evaluate(expr, mapping))\n      .map((pTerm) => {\n        const operation = concatTree.search([ pTerm ], superTypeProvider, functionArgumentsCache);\n        if (!operation) {\n          throw new Err.InvalidArgumentTypes(args, C.SpecialOperator.CONCAT);\n        }\n        return <E.Literal<string>> operation(context)([ pTerm ]);\n      });\n    const strings = lits.map(lit => lit.typedValue);\n    const joined = strings.join('');\n    const lang = langAllEqual(lits) ? lits[0].language : undefined;\n    return lang ? langString(joined, lang) : string(joined);\n  },\n};\n\nfunction langAllEqual(lits: E.Literal<string>[]): boolean {\n  return lits.length > 0 && lits.every(lit => lit.language === lits[0].language);\n}\n\n// ----------------------------------------------------------------------------\n// Context dependant functions\n// ----------------------------------------------------------------------------\n\n// BNODE ---------------------------------------------------------------------\n\n/**\n * This OverloadTree with the constant function will handle both type promotion and subtype-substitution\n */\nconst bnodeTree = declare(C.SpecialOperator.BNODE).onString1(() => arg => arg).collect();\n\n/**\n * https://www.w3.org/TR/sparql11-query/#func-bnode\n * id has to be distinct over all id's in dataset\n */\nconst BNODE: ISpecialDefinition = {\n  arity: Number.POSITIVE_INFINITY,\n  checkArity(args: E.Expression[]) {\n    return args.length === 0 || args.length === 1;\n  },\n  async applyAsync(context: EvalContextAsync): PTerm {\n    const { args, mapping, evaluate, superTypeProvider, functionArgumentsCache } = context;\n    const input = args.length === 1 ?\n      await evaluate(args[0], mapping) :\n      undefined;\n\n    let strInput: string | undefined;\n    if (input) {\n      const operation = bnodeTree.search([ input ], superTypeProvider, functionArgumentsCache);\n      if (!operation) {\n        throw new Err.InvalidArgumentTypes(args, C.SpecialOperator.BNODE);\n      }\n      strInput = operation(context)([ input ]).str();\n    }\n\n    if (context.bnode) {\n      const bnode = await context.bnode(strInput);\n      return new E.BlankNode(bnode);\n    }\n\n    return BNODE_(strInput);\n  },\n  applySynchronously(context: EvalContextSync): Term {\n    const { args, mapping, evaluate, superTypeProvider, functionArgumentsCache } = context;\n    const input = args.length === 1 ?\n      evaluate(args[0], mapping) :\n      undefined;\n\n    let strInput: string | undefined;\n    if (input) {\n      const operation = bnodeTree.search([ input ], superTypeProvider, functionArgumentsCache);\n      if (!operation) {\n        throw new Err.InvalidArgumentTypes(args, C.SpecialOperator.BNODE);\n      }\n      strInput = operation(context)([ input ]).str();\n    }\n\n    if (context.bnode) {\n      const bnode = context.bnode(strInput);\n      return new E.BlankNode(bnode);\n    }\n\n    return BNODE_(strInput);\n  },\n};\n\nfunction BNODE_(input?: string): E.BlankNode {\n  return new E.BlankNode(input ?? uuid.v4());\n}\n\n// ----------------------------------------------------------------------------\n// Wrap these declarations into functions\n// ----------------------------------------------------------------------------\n\nexport interface ISpecialDefinition {\n  arity: number;\n  applyAsync: E.SpecialApplicationAsync;\n  applySynchronously: E.SpecialApplicationSync;\n  checkArity?: (args: E.Expression[]) => boolean;\n}\n\nexport const specialDefinitions: Record<C.SpecialOperator, ISpecialDefinition> = {\n  // --------------------------------------------------------------------------\n  // Functional Forms\n  // https://www.w3.org/TR/sparql11-query/#func-forms\n  // --------------------------------------------------------------------------\n  bound,\n  if: ifSPARQL,\n  coalesce,\n  '&&': logicalAnd,\n  '||': logicalOr,\n  sameterm: sameTerm,\n  in: inSPARQL,\n  notin: notInSPARQL,\n\n  // Annoying functions\n  concat,\n\n  // Context dependent functions\n  bnode: BNODE,\n};\n","// https://www.w3.org/TR/xpath-functions/#func-matches\n// https://www.w3.org/TR/xpath-functions/#flags\nexport function matches(text: string, pattern: string, flags?: string): boolean {\n  // TODO: Only flags 'i' and 'm' match between XPath and JS.\n  // 's', 'x', 'q', would need proper implementation.\n  const reg = new RegExp(pattern, flags);\n  return reg.test(text);\n}\n\n// TODO: Fix flags\n// https://www.w3.org/TR/xpath-functions/#func-replace\nexport function replace(arg: string, pattern: string, replacement: string, flags?: string): string {\n  let reg = new RegExp(pattern, flags);\n  if (!reg.global) {\n    const flags_ = flags ?? '';\n    reg = new RegExp(pattern, `${flags_}g`);\n  }\n  return arg.replace(reg, replacement);\n}\n\n// TODO: Not an XPath function\n// TODO: Publish as package\n// https://www.ietf.org/rfc/rfc4647.txt\n// https://www.w3.org/TR/sparql11-query/#func-langMatches\nexport function langMatches(tag: string, range: string): boolean {\n  const langTags = tag.split('-');\n  const rangeTags = range.split('-');\n\n  if (!_matchLangTag(rangeTags[0], langTags[0]) &&\n    !_isWildCard(langTags[0])) {\n    return false;\n  }\n\n  let lI = 1;\n  let rI = 1;\n  while (rI < rangeTags.length) {\n    if (_isWildCard(rangeTags[rI])) {\n      rI++;\n      continue;\n    }\n    if (lI === langTags.length) {\n      return false;\n    }\n    if (_matchLangTag(rangeTags[rI], langTags[lI])) {\n      lI++;\n      rI++;\n      continue;\n    }\n    if (langTags[lI].length === 1) {\n      return false;\n    }\n    lI++;\n  }\n  return true;\n}\n\nfunction _isWildCard(tag: string): boolean {\n  return tag === '*';\n}\n\nfunction _matchLangTag(left: string, right: string): boolean {\n  const matchInitial = new RegExp(`/${left}/`, 'iu');\n  return matchInitial.test(`/${right}/`);\n}\n","import { Algebra as Alg } from 'sparqlalgebrajs';\nimport type { AsyncExtensionFunction, AsyncExtensionFunctionCreator } from '../evaluators/AsyncEvaluator';\nimport type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';\nimport type { SyncExtensionFunction, SyncExtensionFunctionCreator } from '../evaluators/SyncEvaluator';\nimport * as E from '../expressions';\nimport type { AsyncExtensionApplication, SimpleApplication } from '../expressions';\nimport { namedFunctions, regularFunctions, specialFunctions } from '../functions';\nimport * as C from '../util/Consts';\nimport * as Err from '../util/Errors';\nimport { ExtensionFunctionError } from '../util/Errors';\nimport type { ITermTransformer } from './TermTransformer';\nimport { TermTransformer } from './TermTransformer';\n\ntype FunctionCreatorConfig = { type: 'sync'; creator: SyncExtensionFunctionCreator } |\n{ type: 'async'; creator: AsyncExtensionFunctionCreator };\n\ntype AlgebraTransformConfig = ICompleteSharedContext & FunctionCreatorConfig;\n\nexport interface IAlgebraTransformer extends ITermTransformer {\n  transformAlgebra: (expr: Alg.Expression) => E.Expression;\n}\n\nexport class AlgebraTransformer extends TermTransformer implements IAlgebraTransformer {\n  private readonly creatorConfig: FunctionCreatorConfig;\n  public constructor(protected readonly algebraConfig: AlgebraTransformConfig) {\n    super(algebraConfig.superTypeProvider);\n    this.creatorConfig = <FunctionCreatorConfig> { type: algebraConfig.type, creator: algebraConfig.creator };\n  }\n\n  public transformAlgebra(expr: Alg.Expression): E.Expression {\n    const types = Alg.expressionTypes;\n\n    switch (expr.expressionType) {\n      case types.TERM:\n        return this.transformTerm(expr);\n      case types.OPERATOR:\n        return this.transformOperator(expr);\n      case types.NAMED:\n        return this.transformNamed(expr);\n      case types.EXISTENCE:\n        return AlgebraTransformer.transformExistence(expr);\n      case types.AGGREGATE:\n        return AlgebraTransformer.transformAggregate(expr);\n      case types.WILDCARD:\n        return AlgebraTransformer.transformWildcard(expr);\n    }\n  }\n\n  private static transformWildcard(term: Alg.WildcardExpression): E.Expression {\n    return new E.NamedNode(term.wildcard.value);\n  }\n\n  private transformOperator(expr: Alg.OperatorExpression): E.OperatorExpression | E.SpecialOperatorExpression {\n    const operator = expr.operator.toLowerCase();\n    if (C.SpecialOperators.has(operator)) {\n      const specialOp = <C.SpecialOperator>operator;\n      const specialArgs = expr.args.map(arg => this.transformAlgebra(arg));\n      const specialFunc = specialFunctions[specialOp];\n      if (!specialFunc.checkArity(specialArgs)) {\n        throw new Err.InvalidArity(specialArgs, specialOp);\n      }\n      return new E.SpecialOperator(specialArgs, specialFunc.applyAsync, specialFunc.applySynchronously);\n    }\n    if (!C.Operators.has(operator)) {\n      throw new Err.UnknownOperator(expr.operator);\n    }\n    const regularOp = <C.RegularOperator>operator;\n    const regularArgs = expr.args.map(arg => this.transformAlgebra(arg));\n    const regularFunc = regularFunctions[regularOp];\n    if (!AlgebraTransformer.hasCorrectArity(regularArgs, regularFunc.arity)) {\n      throw new Err.InvalidArity(regularArgs, regularOp);\n    }\n    return new E.Operator(regularArgs, args => regularFunc.apply(args, this.algebraConfig));\n  }\n\n  private wrapSyncFunction(func: SyncExtensionFunction, name: string): SimpleApplication {\n    return (args) => {\n      try {\n        const res = func(args.map(arg => arg.toRDF()));\n        return this.transformRDFTermUnsafe(res);\n      } catch (error: unknown) {\n        throw new ExtensionFunctionError(name, error);\n      }\n    };\n  }\n\n  private wrapAsyncFunction(func: AsyncExtensionFunction, name: string): AsyncExtensionApplication {\n    return async(args) => {\n      try {\n        const res = await func(args.map(arg => arg.toRDF()));\n        return this.transformRDFTermUnsafe(res);\n      } catch (error: unknown) {\n        throw new ExtensionFunctionError(name, error);\n      }\n    };\n  }\n\n  // TODO: Support passing functions to override default behaviour;\n  private transformNamed(expr: Alg.NamedExpression):\n  E.NamedExpression | E.AsyncExtensionExpression | E.SyncExtensionExpression {\n    const funcName = expr.name.value;\n    const namedArgs = expr.args.map(arg => this.transformAlgebra(arg));\n    if (C.NamedOperators.has(<C.NamedOperator>funcName)) {\n      // Return a basic named expression\n      const op = <C.NamedOperator>expr.name.value;\n      const namedFunc = namedFunctions[op];\n      return new E.Named(expr.name, namedArgs, args => namedFunc.apply(args, this.algebraConfig));\n    }\n    if (this.creatorConfig.type === 'sync') {\n      // Expression might be extension function, check this for the sync\n      const syncExtensionFunc = this.creatorConfig.creator(expr.name);\n      if (syncExtensionFunc) {\n        const simpleAppl = this.wrapSyncFunction(syncExtensionFunc, expr.name.value);\n        return new E.SyncExtension(expr.name, namedArgs, simpleAppl);\n      }\n    } else {\n      // The expression might be an extension function, check this for the async case\n      const asyncExtensionFunc = this.creatorConfig.creator(expr.name);\n      if (asyncExtensionFunc) {\n        const asyncAppl = this.wrapAsyncFunction(asyncExtensionFunc, expr.name.value);\n        return new E.AsyncExtension(expr.name, namedArgs, asyncAppl);\n      }\n    }\n    throw new Err.UnknownNamedOperator(expr.name.value);\n  }\n\n  private static hasCorrectArity(args: E.Expression[], arity: number | number[]): boolean {\n    // If the function has overloaded arity, the actual arity needs to be present.\n    if (Array.isArray(arity)) {\n      return arity.includes(args.length);\n    }\n\n    return args.length === arity;\n  }\n\n  public static transformAggregate(expr: Alg.AggregateExpression): E.Aggregate {\n    const name = expr.aggregator;\n    return new E.Aggregate(name, expr);\n  }\n\n  public static transformExistence(expr: Alg.ExistenceExpression): E.Existence {\n    return new E.Existence(expr);\n  }\n}\n","import type * as RDF from '@rdfjs/types';\nimport * as RDFString from 'rdf-string';\nimport type { Algebra as Alg } from 'sparqlalgebrajs';\nimport { Algebra } from 'sparqlalgebrajs';\nimport * as E from '../expressions';\nimport { TypeURL } from '../util/Consts';\nimport * as Err from '../util/Errors';\nimport { isExpressionError } from '../util/Errors';\nimport {\n  parseDate,\n  parseDateTime,\n  parseDayTimeDuration,\n  parseDuration,\n  parseTime,\n  parseYearMonthDuration,\n} from '../util/Parsing';\nimport * as P from '../util/Parsing';\nimport { getSuperTypeDict } from '../util/TypeHandling';\nimport type { ISuperTypeProvider, GeneralSuperTypeDict } from '../util/TypeHandling';\n\nexport interface ITermTransformer {\n  transformRDFTermUnsafe: (term: RDF.Term) => E.Term;\n  transformLiteral: (lit: RDF.Literal) => E.Literal<any>;\n}\n\nexport class TermTransformer implements ITermTransformer {\n  public constructor(protected readonly superTypeProvider: ISuperTypeProvider) {}\n\n  /**\n   * Transforms an RDF term to the internal representation of a term,\n   * assuming it is not a variable, which would be an expression (internally).\n   *\n   * @param term RDF term to transform into internal representation of a term\n   */\n  public transformRDFTermUnsafe(term: RDF.Term): E.Term {\n    return <E.Term> this.transformTerm({\n      term,\n      type: Algebra.types.EXPRESSION,\n      expressionType: Algebra.expressionTypes.TERM,\n    });\n  }\n\n  protected transformTerm(term: Alg.TermExpression): E.Expression {\n    if (!term.term) {\n      throw new Err.InvalidExpression(term);\n    }\n\n    switch (term.term.termType) {\n      case 'Variable':\n        return new E.Variable(RDFString.termToString(term.term));\n      case 'Literal':\n        return this.transformLiteral(term.term);\n      case 'NamedNode':\n        return new E.NamedNode(term.term.value);\n      case 'BlankNode':\n        return new E.BlankNode(term.term.value);\n      case 'Quad':\n        return new E.Quad(term.term, this.superTypeProvider);\n      default:\n        throw new Err.InvalidTermType(term);\n    }\n  }\n\n  /**\n   * @param lit the rdf literal we want to transform to an internal Literal expression.\n   */\n  public transformLiteral(lit: RDF.Literal): E.Literal<any> {\n    // Both here and within the switch we transform to LangStringLiteral or StringLiteral.\n    // We do this when we detect a simple literal being used.\n    // Original issue regarding this behaviour: https://github.com/w3c/sparql-12/issues/112\n    if (!lit.datatype || [ null, undefined, '' ].includes(lit.datatype.value)) {\n      return lit.language ?\n        new E.LangStringLiteral(lit.value, lit.language) :\n        new E.StringLiteral(lit.value);\n    }\n\n    const dataType = lit.datatype.value;\n    const superTypeDict: GeneralSuperTypeDict = getSuperTypeDict(dataType, this.superTypeProvider);\n\n    // The order of checking matters! Check most specific types first!\n    try {\n      if (TypeURL.XSD_STRING in superTypeDict) {\n        return new E.StringLiteral(lit.value, dataType);\n      }\n      if (TypeURL.RDF_LANG_STRING in superTypeDict) {\n        return new E.LangStringLiteral(lit.value, lit.language);\n      }\n      if (TypeURL.XSD_YEAR_MONTH_DURATION in superTypeDict) {\n        return new E.YearMonthDurationLiteral(parseYearMonthDuration(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_DAY_TIME_DURATION in superTypeDict) {\n        return new E.DayTimeDurationLiteral(parseDayTimeDuration(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_DURATION in superTypeDict) {\n        return new E.DurationLiteral(parseDuration(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_DATE_TIME in superTypeDict) {\n        const dateVal: Date = new Date(lit.value);\n        if (Number.isNaN(dateVal.getTime())) {\n          return new E.NonLexicalLiteral(undefined, dataType, this.superTypeProvider, lit.value);\n        }\n        return new E.DateTimeLiteral(parseDateTime(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_DATE in superTypeDict) {\n        return new E.DateLiteral(parseDate(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_TIME in superTypeDict) {\n        return new E.TimeLiteral(parseTime(lit.value), lit.value, dataType);\n      }\n      if (TypeURL.XSD_BOOLEAN in superTypeDict) {\n        if (lit.value !== 'true' && lit.value !== 'false' && lit.value !== '1' && lit.value !== '0') {\n          return new E.NonLexicalLiteral(undefined, dataType, this.superTypeProvider, lit.value);\n        }\n        return new E.BooleanLiteral(lit.value === 'true' || lit.value === '1', lit.value);\n      }\n      if (TypeURL.XSD_DECIMAL in superTypeDict) {\n        const intVal: number | undefined = P.parseXSDDecimal(lit.value);\n        if (intVal === undefined) {\n          return new E.NonLexicalLiteral(undefined, dataType, this.superTypeProvider, lit.value);\n        }\n        if (TypeURL.XSD_INTEGER in superTypeDict) {\n          return new E.IntegerLiteral(intVal, dataType, lit.value);\n        }\n        // If type is not an integer it's just a decimal.\n        return new E.DecimalLiteral(intVal, dataType, lit.value);\n      }\n      const isFloat = TypeURL.XSD_FLOAT in superTypeDict;\n      const isDouble = TypeURL.XSD_DOUBLE in superTypeDict;\n      if (isFloat || isDouble) {\n        const doubleVal: number | undefined = P.parseXSDFloat(lit.value);\n        if (doubleVal === undefined) {\n          return new E.NonLexicalLiteral(undefined, dataType, this.superTypeProvider, lit.value);\n        }\n        if (isFloat) {\n          return new E.FloatLiteral(doubleVal, dataType, lit.value);\n        }\n        return new E.DoubleLiteral(doubleVal, dataType, lit.value);\n      }\n      return new E.Literal<string>(lit.value, dataType, lit.value);\n    } catch (error: unknown) {\n      if (error instanceof Error && isExpressionError(error)) {\n        return new E.NonLexicalLiteral(undefined, dataType, this.superTypeProvider, lit.value);\n      }\n      throw error;\n    }\n  }\n}\n","export type KnownLiteralTypes = TypeAlias | TypeURL;\n\nexport enum TypeAlias {\n  // Numeric is everything defined in https://www.w3.org/TR/sparql11-query/#operandDataTypes\n  SPARQL_NUMERIC = 'SPARQL_NUMERIC',\n  /**\n   * Stringly is everything defined in https://www.w3.org/TR/sparql11-query/#func-strings\n   * In other words it is a simple literal, a plain literal with language tag, or a literal with datatype xsd:string\n   * In other words, since expression-evaluator transforms a simple literal to xsd_string.\n   * It is RDF_LANG_STRING or XSD_STRING.\n   * Reasons for this are mentioned here: w3c/sparql-12#112\n   */\n  SPARQL_STRINGLY = 'SPARQL_STRINGLY',\n}\n\nexport enum TypeURL {\n  XSD_ANY_URI = 'http://www.w3.org/2001/XMLSchema#anyURI',\n  XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string',\n  RDF_LANG_STRING = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString',\n\n  XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean',\n\n  XSD_DATE_TIME = 'http://www.w3.org/2001/XMLSchema#dateTime',\n  XSD_DATE_TIME_STAMP = 'http://www.w3.org/2001/XMLSchema#dateTimeStamp',\n  XSD_DATE = 'http://www.w3.org/2001/XMLSchema#date',\n\n  XSD_G_MONTH = 'http://www.w3.org/2001/XMLSchema#gMonth',\n  XSD_G_MONTHDAY = 'http://www.w3.org/2001/XMLSchema#gMonthDay',\n  XSD_G_YEAR = 'http://www.w3.org/2001/XMLSchema#gYear',\n  XSD_G_YEAR_MONTH = 'http://www.w3.org/2001/XMLSchema#gYearMonth',\n  XSD_TIME = 'http://www.w3.org/2001/XMLSchema#time',\n  XSD_G_DAY = 'http://www.w3.org/2001/XMLSchema#gDay',\n\n  // Numeric types\n  XSD_DECIMAL = 'http://www.w3.org/2001/XMLSchema#decimal',\n  XSD_FLOAT = 'http://www.w3.org/2001/XMLSchema#float',\n  XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double',\n\n  // Derived numeric types\n  XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer',\n\n  XSD_NON_POSITIVE_INTEGER = 'http://www.w3.org/2001/XMLSchema#nonPositiveInteger',\n  XSD_NEGATIVE_INTEGER = 'http://www.w3.org/2001/XMLSchema#negativeInteger',\n\n  XSD_LONG = 'http://www.w3.org/2001/XMLSchema#long',\n  XSD_INT = 'http://www.w3.org/2001/XMLSchema#int',\n  XSD_SHORT = 'http://www.w3.org/2001/XMLSchema#short',\n  XSD_BYTE = 'http://www.w3.org/2001/XMLSchema#byte',\n\n  XSD_NON_NEGATIVE_INTEGER = 'http://www.w3.org/2001/XMLSchema#nonNegativeInteger',\n  XSD_POSITIVE_INTEGER = 'http://www.w3.org/2001/XMLSchema#positiveInteger',\n  XSD_UNSIGNED_LONG = 'http://www.w3.org/2001/XMLSchema#unsignedLong',\n  XSD_UNSIGNED_INT = 'http://www.w3.org/2001/XMLSchema#unsignedInt',\n  XSD_UNSIGNED_SHORT = 'http://www.w3.org/2001/XMLSchema#unsignedShort',\n  XSD_UNSIGNED_BYTE = 'http://www.w3.org/2001/XMLSchema#unsignedByte',\n\n  // Derived String Type\n  XSD_NORMALIZED_STRING = 'http://www.w3.org/2001/XMLSchema#normalizedString',\n  XSD_TOKEN = 'http://www.w3.org/2001/XMLSchema#token',\n  XSD_LANGUAGE = 'http://www.w3.org/2001/XMLSchema#language',\n  XSD_NM_TOKEN = 'http://www.w3.org/2001/XMLSchema#NMTOKEN',\n\n  XSD_NAME = 'http://www.w3.org/2001/XMLSchema#name',\n  XSD_NC_NAME = 'http://www.w3.org/2001/XMLSchema#NCName',\n  XSD_ENTITY = 'http://www.w3.org/2001/XMLSchema#ENTITY',\n  XSD_ID = 'http://www.w3.org/2001/XMLSchema#ID',\n  XSD_ID_REF = 'http://www.w3.org/2001/XMLSchema#IDREF',\n\n  // Other types\n  XSD_DURATION = 'http://www.w3.org/2001/XMLSchema#duration',\n  XSD_YEAR_MONTH_DURATION = 'http://www.w3.org/2001/XMLSchema#yearMonthDuration',\n  XSD_DAY_TIME_DURATION = 'http://www.w3.org/2001/XMLSchema#dayTimeDuration',\n}\n\n// ----------------------------------------------------------------------------\n// Operators\n// ----------------------------------------------------------------------------\n\nexport type Operator = RegularOperator | SpecialOperator;\n\n// TODO: Remove unneeded double typing\nexport enum RegularOperator {\n  // Operator mapping\n  // https://www.w3.org/TR/sparql11-query/#OperatorMapping\n  NOT = '!',\n  UMINUS = 'uminus',\n  UPLUS = 'uplus',\n  // LOGICAL_AND // See SpecialOperators\n  // LOGICAL_OR  // See SpecialOperators\n\n  EQUAL = '=',\n  NOT_EQUAL = '!=',\n  LT = '<',\n  GT = '>',\n  LTE = '<=',\n  GTE = '>=',\n\n  MULTIPLICATION = '*',\n  DIVISION = '/',\n  ADDITION = '+',\n  SUBTRACTION = '-',\n\n  // Functional Forms\n  // https://www.w3.org/TR/sparql11-query/#func-forms\n  // See SpecialOperators\n\n  // Functions on RDF Terms\n  // https://www.w3.org/TR/sparql11-query/#func-rdfTerms\n  IS_IRI = 'isiri',\n  IS_URI = 'isuri',\n  IS_BLANK = 'isblank',\n  IS_LITERAL = 'isliteral',\n  IS_NUMERIC = 'isnumeric',\n  STR = 'str',\n  LANG = 'lang',\n  DATATYPE = 'datatype',\n  IRI = 'iri',\n  URI = 'uri',\n  // BNODE = 'BNODE', (see special operators)\n  STRDT = 'strdt',\n  STRLANG = 'strlang',\n  UUID = 'uuid',\n  STRUUID = 'struuid',\n\n  // Functions on strings\n  // https://www.w3.org/TR/sparql11-query/#func-strings\n  STRLEN = 'strlen',\n  SUBSTR = 'substr',\n  UCASE = 'ucase',\n  LCASE = 'lcase',\n  STRSTARTS = 'strstarts',\n  STRENDS = 'strends',\n  CONTAINS = 'contains',\n  STRBEFORE = 'strbefore',\n  STRAFTER = 'strafter',\n  ENCODE_FOR_URI = 'encode_for_uri',\n  // CONCAT = 'concat' (see special operators)\n  LANG_MATCHES = 'langmatches',\n  REGEX = 'regex',\n  REPLACE = 'replace',\n\n  // Functions on numerics\n  // https://www.w3.org/TR/sparql11-query/#func-numerics\n  ABS = 'abs',\n  ROUND = 'round',\n  CEIL = 'ceil',\n  FLOOR = 'floor',\n  RAND = 'rand',\n\n  // Functions on Dates and Times\n  // https://www.w3.org/TR/sparql11-query/#func-date-time\n  NOW = 'now',\n  YEAR = 'year',\n  MONTH = 'month',\n  DAY = 'day',\n  HOURS = 'hours',\n  MINUTES = 'minutes',\n  SECONDS = 'seconds',\n  TIMEZONE = 'timezone',\n  TZ = 'tz',\n  // Hash functions\n  // https://www.w3.org/TR/sparql11-query/#func-hash\n  MD5 = 'md5',\n  SHA1 = 'sha1',\n  SHA256 = 'sha256',\n  SHA384 = 'sha384',\n  SHA512 = 'sha512',\n\n  // XPath Constructor functions\n  // https://www.w3.org/TR/sparql11-query/#FunctionMapping\n  // See Named Operators\n\n  // Functions for quoted triples\n  // https://w3c.github.io/rdf-star/cg-spec/editors_draft.html#triple-function\n  TRIPLE = 'triple',\n  SUBJECT = 'subject',\n  PREDICATE = 'predicate',\n  OBJECT = 'object',\n  IS_TRIPLE = 'istriple',\n}\n\nexport enum SpecialOperator {\n  // Functional Forms\n  // https://www.w3.org/TR/sparql11-query/#func-forms\n  BOUND = 'bound',\n  IF = 'if',\n  COALESCE = 'coalesce',\n  // EXISTENCE = 'existence',\n  LOGICAL_OR = '||',\n  LOGICAL_AND = '&&',\n  // EQUAL = '=', // See RegularOperators\n  SAME_TERM = 'sameterm',\n  IN = 'in',\n  NOT_IN = 'notin',\n\n  // Annoying functions - Has variable arity\n  CONCAT = 'concat',\n\n  // Context dependant functions\n  BNODE = 'bnode',\n}\n\nexport const RegularOperators: Set<string> = new Set(Object.values(RegularOperator));\nexport const SpecialOperators: Set<string> = new Set(Object.values(SpecialOperator));\nexport const Operators = new Set([ ...RegularOperators, ...SpecialOperators ]);\n\nexport enum SetFunction {\n  COUNT = 'count',\n  SUM = 'sum',\n  MIN = 'min',\n  MAX = 'max',\n  AVG = 'avg',\n  GROUP_CONCAT = 'group_concat',\n  SAMPLE = 'sample',\n}\nexport const SetFunctions = new Set(Object.values(SetFunction));\n\nexport type NamedOperator =\n  // XPath Constructor functions\n  // https://www.w3.org/TR/sparql11-query/#FunctionMapping\n  TypeURL.XSD_STRING\n  | TypeURL.XSD_FLOAT\n  | TypeURL.XSD_DOUBLE\n  | TypeURL.XSD_DECIMAL\n  | TypeURL.XSD_INTEGER\n  | TypeURL.XSD_DATE_TIME\n  | TypeURL.XSD_DATE\n  | TypeURL.XSD_BOOLEAN\n  | TypeURL.XSD_TIME\n  | TypeURL.XSD_DURATION\n  | TypeURL.XSD_DAY_TIME_DURATION\n  | TypeURL.XSD_YEAR_MONTH_DURATION;\n\nexport const NamedOperators = new Set([\n  TypeURL.XSD_STRING,\n  TypeURL.XSD_FLOAT,\n  TypeURL.XSD_DOUBLE,\n  TypeURL.XSD_DECIMAL,\n  TypeURL.XSD_INTEGER,\n  TypeURL.XSD_DATE_TIME,\n  TypeURL.XSD_DATE,\n  TypeURL.XSD_BOOLEAN,\n  TypeURL.XSD_TIME,\n  TypeURL.XSD_DURATION,\n  TypeURL.XSD_DAY_TIME_DURATION,\n  TypeURL.XSD_YEAR_MONTH_DURATION,\n]);\n","export interface ITimeZoneRepresentation {\n  // https://www.w3.org/TR/xpath-functions/#func-implicit-timezone\n  // Type is a dayTimeDuration.\n  // We use a separate dataType since it makes TS type modifications and JS object copying easier.\n  zoneHours: number;\n  zoneMinutes: number;\n}\n\nexport interface IDateRepresentation extends Partial<ITimeZoneRepresentation> {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport interface ITimeRepresentation extends Partial<ITimeZoneRepresentation> {\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\nexport interface IDayTimeDurationRepresentation {\n  hours: number;\n  minutes: number;\n  seconds: number;\n  day: number;\n}\n\nexport interface IYearMonthDurationRepresentation {\n  year: number;\n  month: number;\n}\n\nexport type IDurationRepresentation = IYearMonthDurationRepresentation & IDayTimeDurationRepresentation;\nexport type IDateTimeRepresentation = IDateRepresentation & ITimeRepresentation;\n\n// Important is to notice JS and XSD datatypes have different defaulted values\n// | Field | Default in JS | Default in XSD_DayTime | Default in XSD_Duration |\n// | Month | 0             | 1                      | 0                       |\n// | Day   | 1             | 1                      | 0                       |\n\nexport function defaultedDayTimeDurationRepresentation(rep: Partial<IDayTimeDurationRepresentation>):\nIDayTimeDurationRepresentation {\n  return {\n    day: rep.day ?? 0,\n    hours: rep.hours ?? 0,\n    minutes: rep.minutes ?? 0,\n    seconds: rep.seconds ?? 0,\n  };\n}\n\nexport function defaultedYearMonthDurationRepresentation(rep: Partial<IYearMonthDurationRepresentation>):\nIYearMonthDurationRepresentation {\n  return {\n    year: rep.year ?? 0,\n    month: rep.month ?? 0,\n  };\n}\n\nexport function defaultedDurationRepresentation(\n  rep: Partial<IDurationRepresentation>,\n): IDurationRepresentation {\n  return {\n    ...defaultedDayTimeDurationRepresentation(rep),\n    ...defaultedYearMonthDurationRepresentation(rep),\n  };\n}\n\nexport function simplifyDurationRepresentation(rep: Partial<IDurationRepresentation>):\nPartial<IDurationRepresentation> {\n  const temp = defaultedDurationRepresentation(rep);\n  const res: Partial<IDurationRepresentation> = {};\n\n  // Simplify year part\n  const years = temp.year + Math.trunc(temp.month / 12);\n  if (years) {\n    res.year = years;\n    temp.month %= 12;\n  }\n  if (temp.month) {\n    res.month = temp.month;\n  }\n\n  // Simplify day part\n  const days = temp.day + Math.trunc(temp.hours / 24) +\n    Math.trunc(temp.minutes / (24 * 60)) + Math.trunc(temp.seconds / (24 * 60 * 60));\n  if (days) {\n    res.day = days;\n    temp.hours %= 24;\n    temp.minutes %= 24 * 60;\n    temp.seconds %= 24 * 60 * 60;\n  }\n  const hours = temp.hours + Math.trunc(temp.minutes / 60) +\n    Math.trunc(temp.seconds / (60 * 60));\n  if (hours) {\n    res.hours = hours;\n    temp.minutes %= 60;\n    temp.seconds %= 60 * 60;\n  }\n  const minutes = temp.minutes + Math.trunc(temp.seconds / 60);\n  if (minutes) {\n    res.minutes = minutes;\n    temp.seconds %= 60;\n  }\n  if (temp.seconds) {\n    res.seconds = temp.seconds;\n  }\n  return res;\n}\n\nexport function defaultedDateTimeRepresentation(rep: Partial<IDateTimeRepresentation>): IDateTimeRepresentation {\n  return {\n    ...rep,\n    day: rep.day ?? 1,\n    hours: rep.hours ?? 0,\n    month: rep.month ?? 1,\n    year: rep.year ?? 0,\n    seconds: rep.seconds ?? 0,\n    minutes: rep.minutes ?? 0,\n  };\n}\n\nexport function toDateTimeRepresentation({ date, timeZone }:\n{ date: Date; timeZone: ITimeZoneRepresentation }): IDateTimeRepresentation {\n  return {\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds(),\n    zoneHours: timeZone.zoneHours,\n    zoneMinutes: timeZone.zoneMinutes,\n  };\n}\n\nexport function negateDuration(dur: Partial<IDurationRepresentation>): Partial<IDurationRepresentation> {\n  return {\n    year: dur.year === undefined ? undefined : -1 * dur.year,\n    month: dur.month === undefined ? undefined : -1 * dur.month,\n    day: dur.day === undefined ? undefined : -1 * dur.day,\n    hours: dur.hours === undefined ? undefined : -1 * dur.hours,\n    minutes: dur.minutes === undefined ? undefined : -1 * dur.minutes,\n    seconds: dur.seconds === undefined ? undefined : -1 * dur.seconds,\n  };\n}\n\nexport function toJSDate(date: IDateTimeRepresentation): Date {\n  // The given hours will be assumed to be local time.\n  const res = new Date(\n    date.year,\n    date.month - 1,\n    date.day,\n    date.hours,\n    date.minutes,\n    Math.trunc(date.seconds),\n    (date.seconds % 1) * 1_000,\n  );\n  if (date.year >= 0 && date.year < 100) {\n    // Special rule of date has gone int action:\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#individual_date_and_time_component_values\n\n    const jumpDeltaOfDate = 1_900;\n    res.setFullYear(res.getFullYear() - jumpDeltaOfDate);\n  }\n  return res;\n}\n\nexport function toUTCDate(date: Partial<IDateTimeRepresentation>, defaultTimezone: ITimeZoneRepresentation): Date {\n  const localTime = toJSDate(defaultedDateTimeRepresentation(date));\n  // This date has been constructed in machine local time, now we alter it to become UTC and convert to correct timezone\n\n  // Correction needed from local machine timezone to UTC\n  const minutesCorrectionLocal = localTime.getTimezoneOffset();\n  // Correction needed from UTC to provided timeZone\n  const hourCorrectionUTC = date.zoneHours ?? defaultTimezone.zoneHours;\n  const minutesCorrectionUTC = date.zoneMinutes ?? defaultTimezone.zoneMinutes;\n  return new Date(\n    localTime.getTime() - (minutesCorrectionLocal + hourCorrectionUTC * 60 + minutesCorrectionUTC) * 60 * 1_000,\n  );\n}\n\nexport function trimToYearMonthDuration(dur: Partial<IDurationRepresentation>):\nPartial<IYearMonthDurationRepresentation> {\n  return {\n    year: dur.year,\n    month: dur.month,\n  };\n}\n\nexport function trimToDayTimeDuration(dur: Partial<IDurationRepresentation>): Partial<IDayTimeDurationRepresentation> {\n  return {\n    day: dur.day,\n    hours: dur.hours,\n    minutes: dur.minutes,\n    seconds: dur.seconds,\n  };\n}\n\nexport function yearMonthDurationsToMonths(dur: IYearMonthDurationRepresentation): number {\n  return dur.year * 12 + dur.month;\n}\n\nexport function dayTimeDurationsToSeconds(dur: IDayTimeDurationRepresentation): number {\n  return (((dur.day * 24) + dur.hours) * 60 + dur.minutes) * 60 + dur.seconds;\n}\n\nexport function extractRawTimeZone(zoneContained: string): string {\n  const extraction = /(Z|([+-]\\d\\d:\\d\\d))?$/u.exec(zoneContained);\n  // It is safe to cast here because the empty string can always match.\n  return extraction![0];\n}\n\nexport function extractTimeZone(date: Date): ITimeZoneRepresentation {\n  return {\n    zoneHours: date.getTimezoneOffset() / 60,\n    zoneMinutes: date.getTimezoneOffset() % 60,\n  };\n}\n","import type * as RDF from '@rdfjs/types';\nimport type { Algebra } from 'sparqlalgebrajs';\nimport type * as E from '../expressions';\nimport type * as C from './Consts';\n\n/**\n * This class of error will be thrown when an expression errors.\n * Various reasons this could happen are:\n *   - invalid types for the given operator\n *   - unbound variables\n *   - invalid lexical forms\n *   - ...\n *\n * The distinction is made so that one can catch this specific type\n * and handle it accordingly to the SPARQL spec (relevant for e.g. FILTER, EXTEND),\n * while others (programming errors) can be re-thrown.\n *\n * @see isExpressionError\n */\nexport class ExpressionError extends Error {}\n\n/**\n * Checks whether a given error is an {@link ExpressionError}.\n * Also useful for mocking in tests for covering all branches.\n *\n * @see ExpressionError\n */\nexport function isExpressionError(error: Error): boolean {\n  return error instanceof ExpressionError;\n}\n\n/**\n * A literal has an invalid lexical form for the datatype it is accompanied by.\n * This error is only thrown when the term is as function argument that requires\n * a valid lexical form.\n */\nexport class InvalidLexicalForm extends ExpressionError {\n  public constructor(public arg: RDF.Term) {\n    super(`Invalid lexical form '${pp(arg)}'`);\n  }\n}\n\n/**\n * A variable in the expression was not bound.\n */\nexport class UnboundVariableError extends ExpressionError {\n  public constructor(public variable: string, public bindings: RDF.Bindings) {\n    super(`Unbound variable '${pp(variable)}'`);\n  }\n}\n\n/**\n * An invalid term was being coerced to an Effective Boolean Value.\n *\n * See the {@link https://www.w3.org/TR/sparql11-query/#ebv | SPARQL docs}\n * on EBVs.\n */\nexport class EBVCoercionError extends ExpressionError {\n  public constructor(public arg: E.Term) {\n    super(`Cannot coerce term to EBV '${pp(arg)}'`);\n  }\n}\n\n/**\n * An equality test was done on literals with unsupported datatypes.\n *\n * See {@link https://www.w3.org/TR/sparql11-query/#func-RDFterm-equal | term equality spec}.\n */\nexport class RDFEqualTypeError extends ExpressionError {\n  public constructor(public args: E.Expression[]) {\n    super('Equality test for literals with unsupported datatypes');\n  }\n}\n\n/**\n * All the expressions in a COALESCE call threw errors.\n */\nexport class CoalesceError extends ExpressionError {\n  public constructor(public errors: Error[]) {\n    super('All COALESCE arguments threw errors');\n  }\n}\n\n/**\n * No arguments to an IN call where equal, and at least one threw an error.\n */\nexport class InError extends ExpressionError {\n  public constructor(public errors: (Error | false)[]) {\n    super(\n      `Some argument to IN errorred and none where equal. ${\n\n        errors.map(err => `(${err.toString()}) `).join('and ')}`,\n    );\n  }\n}\n\n/**\n * Literals were passed to an operator that doesn't support their datatypes.\n */\nexport class InvalidArgumentTypes extends ExpressionError {\n  public constructor(public args: E.Expression[], public op: C.Operator | C.NamedOperator) {\n    super(`Argument types not valid for operator: '${pp(op)}' with '${pp(args)}`);\n  }\n}\n\n/**\n * Terms were being compared that are not supported.\n */\nexport class InvalidCompareArgumentTypes extends ExpressionError {\n  public constructor(public arg0: RDF.Term, public arg1: RDF.Term) {\n    super(`Compared argument types are supported: '${arg0.termType}' and '${arg1.termType}'`);\n  }\n}\n\n/**\n * An invalid typecast happened.\n */\nexport class CastError<T> extends ExpressionError {\n  public constructor(public arg: T, cast: C.TypeURL) {\n    super(`Invalid cast: '${pp(arg)}' to '${pp(cast)}'`);\n  }\n}\n\nexport class InvalidTimezoneCall extends ExpressionError {\n  public constructor(public dateString: string) {\n    super(`TIMEZONE call on ${dateString} which has no timezone`);\n  }\n}\n\nexport class IncompatibleLanguageOperation extends ExpressionError {\n  public constructor(public arg1: E.LangStringLiteral, public arg2: E.LangStringLiteral) {\n    super(`Operation on incompatible language literals '${pp(arg1)}' and '${pp(arg2)}'`);\n  }\n}\n\nexport class EmptyAggregateError extends ExpressionError {\n  public constructor() {\n    super('Empty aggregate expression');\n  }\n}\n\nexport class ParseError extends ExpressionError {\n  public constructor(str: string, type: string) {\n    super(`Failed to parse ${str} as ${type}.`);\n  }\n}\n\n// Non Expression Errors ------------------------------------------------------\n\n/**\n * An error that arises when we detect a 'should-be-impossible' state.\n * Given that this error is thrown, it clearly wasn't impossible, and some\n * mistake has been made.\n */\nexport class UnexpectedError<T> extends Error {\n  public constructor(message: string, public payload?: T) {\n    super(`Programmer Error '${message}'`);\n  }\n}\n\nexport class InvalidArity extends Error {\n  public constructor(public args: E.Expression[], public op: C.Operator) {\n    super(`The number of args does not match the arity of the operator '${pp(op)}'.`);\n  }\n}\n\nexport class InvalidExpression<T> extends Error {\n  public constructor(expr: T) {\n    super(`Invalid SPARQL Expression '${pp(expr)}'`);\n  }\n}\n\nexport class InvalidExpressionType<T> extends Error {\n  public constructor(public expr: T) {\n    super(`Invalid expression type for SPARQL Expression '${pp(expr)}'`);\n  }\n}\n\nexport class InvalidTermType extends Error {\n  public constructor(public term: Algebra.TermExpression) {\n    super(`Invalid term type for term '${pp(term)}'`);\n  }\n}\n\nexport class UnknownOperator extends Error {\n  public constructor(name: string) {\n    super(`Unknown operator: '${pp(name)}`);\n  }\n}\n\nexport class UnknownNamedOperator extends Error {\n  public constructor(name: string) {\n    super(`Unknown named operator: '${pp(name)}'`);\n  }\n}\n\nexport class ExtensionFunctionError extends Error {\n  public constructor(name: string, functionError: unknown) {\n    if (functionError instanceof Error) {\n      super(`Error thrown in ${name}: ${functionError.message}${functionError.stack ? `\\n${functionError.stack}` : ''}`);\n    } else {\n      super(`Error thrown in ${name}`);\n    }\n  }\n}\n\nexport class NoAggregator extends Error {\n  public constructor(name?: string) {\n    super(`Aggregate expression ${pp(name)} found, but no aggregate hook provided.`);\n  }\n}\n\nexport class NoExistenceHook extends Error {\n  public constructor() {\n    super('EXISTS found, but no existence hook provided.');\n  }\n}\n\nfunction pp<T>(object: T): string {\n  return JSON.stringify(object);\n}\n","import type * as RDF from '@rdfjs/types';\nimport { LRUCache } from 'lru-cache';\nimport type * as E from '../expressions';\nimport { regularFunctions } from '../functions';\nimport { TermTransformer } from '../transformers/TermTransformer';\nimport * as C from './Consts';\nimport * as Err from './Errors';\nimport type { SuperTypeCallback, TypeCache } from './TypeHandling';\n\n// Determine the relative numerical order of the two given terms.\n// In accordance with https://www.w3.org/TR/sparql11-query/#modOrderBy\nexport function orderTypes(\n  termA: RDF.Term | undefined,\n  termB: RDF.Term | undefined,\n  strict = false,\n  typeDiscoveryCallback?: SuperTypeCallback,\n  typeCache?: TypeCache,\n): -1 | 0 | 1 {\n  // Check if terms are the same by reference\n  if (termA === termB) {\n    return 0;\n  }\n\n  // We handle undefined that is lower than everything else.\n  if (termA === undefined) {\n    return -1;\n  }\n  if (termB === undefined) {\n    return 1;\n  }\n\n  //\n  if (termA.termType !== termB.termType) {\n    return _TERM_ORDERING_PRIORITY[termA.termType] < _TERM_ORDERING_PRIORITY[termB.termType] ? -1 : 1;\n  }\n\n  // Check exact term equality\n  if (termA.equals(termB)) {\n    return 0;\n  }\n\n  // Handle quoted triples\n  if (termA.termType === 'Quad' && termB.termType === 'Quad') {\n    const orderSubject = orderTypes(\n      termA.subject,\n      termB.subject,\n      strict,\n      typeDiscoveryCallback,\n      typeCache,\n    );\n    if (orderSubject !== 0) {\n      return orderSubject;\n    }\n    const orderPredicate = orderTypes(\n      termA.predicate,\n      termB.predicate,\n      strict,\n      typeDiscoveryCallback,\n      typeCache,\n    );\n    if (orderPredicate !== 0) {\n      return orderPredicate;\n    }\n    const orderObject = orderTypes(\n      termA.object,\n      termB.object,\n      strict,\n      typeDiscoveryCallback,\n      typeCache,\n    );\n    if (orderObject !== 0) {\n      return orderObject;\n    }\n    return orderTypes(\n      termA.graph,\n      termB.graph,\n      strict,\n      typeDiscoveryCallback,\n      typeCache,\n    );\n  }\n\n  // Handle literals\n  if (termA.termType === 'Literal') {\n    return orderLiteralTypes(termA, <RDF.Literal>termB, typeDiscoveryCallback, typeCache);\n  }\n\n  // Handle all other types\n  if (strict) {\n    throw new Err.InvalidCompareArgumentTypes(termA, termB);\n  }\n  return comparePrimitives(termA.value, termB.value);\n}\n\nfunction orderLiteralTypes(\n  litA: RDF.Literal,\n  litB: RDF.Literal,\n  typeDiscoveryCallback?: SuperTypeCallback,\n  typeCache?: TypeCache,\n): -1 | 0 | 1 {\n  const isGreater = regularFunctions[C.RegularOperator.GT];\n  const isEqual = regularFunctions[C.RegularOperator.EQUAL];\n  const context = {\n    now: new Date(),\n    functionArgumentsCache: {},\n    superTypeProvider: {\n      discoverer: typeDiscoveryCallback ?? (() => 'term'),\n      cache: typeCache ?? new LRUCache({ max: 1_000 }),\n    },\n    defaultTimeZone: { zoneHours: 0, zoneMinutes: 0 },\n  };\n\n  const termTransformer = new TermTransformer(context.superTypeProvider);\n  const myLitA = termTransformer.transformLiteral(litA);\n  const myLitB = termTransformer.transformLiteral(litB);\n\n  try {\n    if ((<E.BooleanLiteral> isEqual.apply([ myLitA, myLitB ], context)).typedValue) {\n      return 0;\n    }\n    if ((<E.BooleanLiteral> isGreater.apply([ myLitA, myLitB ], context)).typedValue) {\n      return 1;\n    }\n    return -1;\n  } catch {\n    // Fallback to string-based comparison\n    const compareType = comparePrimitives(myLitA.dataType, myLitB.dataType);\n    if (compareType !== 0) {\n      return compareType;\n    }\n    return comparePrimitives(myLitA.str(), myLitB.str());\n  }\n}\n\nfunction comparePrimitives(valueA: any, valueB: any): -1 | 0 | 1 {\n  return valueA === valueB ? 0 : (valueA < valueB ? -1 : 1);\n}\n\n// SPARQL specifies that blankNode < namedNode < literal.\nconst _TERM_ORDERING_PRIORITY = {\n  Variable: 0,\n  BlankNode: 1,\n  NamedNode: 2,\n  Literal: 3,\n  Quad: 4,\n  DefaultGraph: 5,\n};\n","// TODO: Find a library for this, because this is basically an xsd datatypes parser\n\nimport type {\n  IDateRepresentation,\n  IDateTimeRepresentation,\n  IDayTimeDurationRepresentation,\n  IDurationRepresentation,\n  ITimeRepresentation,\n  ITimeZoneRepresentation,\n  IYearMonthDurationRepresentation,\n} from './DateTimeHelpers';\n\nimport { simplifyDurationRepresentation } from './DateTimeHelpers';\nimport { ParseError } from './Errors';\nimport { maximumDayInMonthFor } from './SpecAlgos';\n\n/**\n * TODO: Fix decently\n * Parses float datatypes (double, float).\n *\n * All invalid lexical values return undefined.\n *\n * @param value the string to interpret as a number\n */\nexport function parseXSDFloat(value: string): number | undefined {\n  const numb = Number(value);\n  if (Number.isNaN(numb)) {\n    if (value === 'NaN') {\n      return Number.NaN;\n    }\n    if (value === 'INF' || value === '+INF') {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (value === '-INF') {\n      return Number.NEGATIVE_INFINITY;\n    }\n    return undefined;\n  }\n  return numb;\n}\n\n/**\n * Parses decimal datatypes (decimal, int, byte, nonPositiveInteger, etc...).\n *\n * All other values, including NaN, INF, and floating point numbers all\n * return undefined;\n *\n * @param value the string to interpret as a number\n */\nexport function parseXSDDecimal(value: string): number | undefined {\n  const numb = Number(value);\n  return Number.isNaN(numb) ? undefined : numb;\n}\n\n/**\n * Parses integer datatypes (decimal, int, byte, nonPositiveInteger, etc...).\n *\n * All other values, including NaN, INF, and floating point numbers all\n * return undefined;\n *\n * @param value the string to interpret as a number\n */\nexport function parseXSDInteger(value: string): number | undefined {\n  const numb: number = Number.parseInt(value, 10);\n  return Number.isNaN(numb) ? undefined : numb;\n}\n\nexport function parseDateTime(dateTimeStr: string): IDateTimeRepresentation {\n  // https://www.w3.org/TR/xmlschema-2/#dateTime\n  const [ date, time ] = dateTimeStr.split('T');\n  return { ...parseDate(date), ...__parseTime(time) };\n}\n\nfunction parseTimeZone(timeZoneStr: string): Partial<ITimeZoneRepresentation> {\n  // https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\n  if (timeZoneStr === '') {\n    return { zoneHours: undefined, zoneMinutes: undefined };\n  }\n  if (timeZoneStr === 'Z') {\n    return { zoneHours: 0, zoneMinutes: 0 };\n  }\n  const timeZoneStrings = timeZoneStr.replaceAll(/^([+|-])(\\d\\d):(\\d\\d)$/gu, '$11!$2!$3').split('!');\n  const timeZone = timeZoneStrings.map(Number);\n  return {\n    zoneHours: timeZone[0] * timeZone[1],\n    zoneMinutes: timeZone[0] * timeZone[2],\n  };\n}\n\nexport function parseDate(dateStr: string): IDateRepresentation {\n  // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\n  const formatted = dateStr.replaceAll(\n    /^(-)?([123456789]*\\d{4})-(\\d\\d)-(\\d\\d)(Z|([+-]\\d\\d:\\d\\d))?$/gu,\n    '$11!$2!$3!$4!$5',\n  );\n  if (formatted === dateStr) {\n    throw new ParseError(dateStr, 'date');\n  }\n  const dateStrings = formatted.split('!');\n  const date = dateStrings.slice(0, -1).map(Number);\n\n  const res = {\n    year: date[0] * date[1],\n    month: date[2],\n    day: date[3],\n    ...parseTimeZone(dateStrings[4]),\n  };\n  if (!(res.month >= 1 && res.month <= 12) || !(res.day >= 1 && res.day <= maximumDayInMonthFor(res.year, res.month))) {\n    throw new ParseError(dateStr, 'date');\n  }\n  return res;\n}\n\nfunction __parseTime(timeStr: string): ITimeRepresentation {\n  // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n  const formatted = timeStr.replaceAll(/^(\\d\\d):(\\d\\d):(\\d\\d(\\.\\d+)?)(Z|([+-]\\d\\d:\\d\\d))?$/gu, '$1!$2!$3!$5');\n  if (formatted === timeStr) {\n    throw new ParseError(timeStr, 'time');\n  }\n  const timeStrings = formatted.split('!');\n  const time = timeStrings.slice(0, -1).map(Number);\n\n  const res = {\n    hours: time[0],\n    minutes: time[1],\n    seconds: time[2],\n    ...parseTimeZone(timeStrings[3]),\n  };\n\n  if (res.seconds >= 60 || res.minutes >= 60 || res.hours > 24 ||\n    (res.hours === 24 && (res.minutes !== 0 || res.seconds !== 0))) {\n    throw new ParseError(timeStr, 'time');\n  }\n  return res;\n}\n\n// We make a separation in internal and external since dateTime will have hour-date rollover,\n// but time just does modulo the time.\nexport function parseTime(timeStr: string): ITimeRepresentation {\n  // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n  const res = __parseTime(timeStr);\n  res.hours %= 24;\n  return res;\n}\n\nexport function parseDuration(durationStr: string): Partial<IDurationRepresentation> {\n  // https://www.w3.org/TR/xmlschema-2/#duration-lexical-repr\n  const [ dayNotation, timeNotation ] = durationStr.split('T');\n\n  // Handle date part\n  const formattedDayDur = dayNotation.replaceAll(/^(-)?P(\\d+Y)?(\\d+M)?(\\d+D)?$/gu, '$11S!$2!$3!$4');\n  if (formattedDayDur === dayNotation) {\n    throw new ParseError(durationStr, 'duration');\n  }\n\n  const durationStrings = formattedDayDur.split('!');\n  if (timeNotation !== undefined) {\n    const formattedTimeDur = timeNotation.replaceAll(/^(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?$/gu, '$1!$2!$3');\n\n    if (timeNotation === '' || timeNotation === formattedTimeDur) {\n      throw new ParseError(durationStr, 'duration');\n    }\n    durationStrings.push(...formattedTimeDur.split('!'));\n  }\n  const duration = durationStrings.map(str => str.slice(0, -1));\n  if (!duration.slice(1).some(Boolean)) {\n    throw new ParseError(durationStr, 'duration');\n  }\n\n  const sign = <-1 | 1> Number(duration[0]);\n  return simplifyDurationRepresentation({\n    year: duration[1] ? sign * Number(duration[1]) : undefined,\n    month: duration[2] ? sign * Number(duration[2]) : undefined,\n    day: duration[3] ? sign * Number(duration[3]) : undefined,\n    hours: duration[4] ? sign * Number(duration[4]) : undefined,\n    minutes: duration[5] ? sign * Number(duration[5]) : undefined,\n    seconds: duration[6] ? sign * Number(duration[6]) : undefined,\n  });\n}\n\nexport function parseYearMonthDuration(durationStr: string): Partial<IYearMonthDurationRepresentation> {\n  const res = parseDuration(durationStr);\n  if ([ 'hours', 'minutes', 'seconds', 'day' ].some(key => Boolean((<any> res)[key]))) {\n    throw new ParseError(durationStr, 'yearMonthDuration');\n  }\n  return res;\n}\n\nexport function parseDayTimeDuration(durationStr: string): Partial<IDayTimeDurationRepresentation> {\n  const res = parseDuration(durationStr);\n  if ([ 'year', 'month' ].some(key => Boolean((<any> res)[key]))) {\n    throw new ParseError(durationStr, 'dayTimeDuration');\n  }\n  return res;\n}\n","import type {\n  IDateRepresentation,\n  IDateTimeRepresentation,\n  IDurationRepresentation,\n  ITimeRepresentation,\n  ITimeZoneRepresentation,\n} from './DateTimeHelpers';\n\nfunction numSerializer(num: number, min = 2): string {\n  return num.toLocaleString(undefined, { minimumIntegerDigits: min, useGrouping: false });\n}\n\nexport function serializeDateTime(date: IDateTimeRepresentation): string {\n  // https://www.w3.org/TR/xmlschema-2/#dateTime\n  // Extraction is needed because the date serializer can not add timezone y\n  return `${serializeDate({ year: date.year, month: date.month, day: date.day })}T${serializeTime(date)}`;\n}\n\nfunction serializeTimeZone(tz: Partial<ITimeZoneRepresentation>): string {\n  // https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\n  if (tz.zoneHours === undefined || tz.zoneMinutes === undefined) {\n    return '';\n  }\n  if (tz.zoneHours === 0 && tz.zoneMinutes === 0) {\n    return 'Z';\n  }\n  // SerializeTimeZone({ zoneHours: 5, zoneMinutes: 4 }) returns +05:04\n  return `${tz.zoneHours >= 0 ? `+${numSerializer(tz.zoneHours)}` : numSerializer(tz.zoneHours)}:${numSerializer(Math.abs(tz.zoneMinutes))}`;\n}\n\nexport function serializeDate(date: IDateRepresentation): string {\n  // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\n  return `${numSerializer(date.year, 4)}-${numSerializer(date.month)}-${numSerializer(date.day)}${serializeTimeZone(date)}`;\n}\n\nexport function serializeTime(time: ITimeRepresentation): string {\n  // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\n  return `${numSerializer(time.hours)}:${numSerializer(time.minutes)}:${numSerializer(time.seconds)}${serializeTimeZone(time)}`;\n}\n\nexport function serializeDuration(dur: Partial<IDurationRepresentation>, zeroString: 'PT0S' | 'P0M' = 'PT0S'): string {\n  // https://www.w3.org/TR/xmlschema-2/#duration-lexical-repr\n  if (!Object.values(dur).some(val => (val || 0) !== 0)) {\n    return zeroString;\n  }\n\n  const sign = Object.values(dur).some(val => (val || 0) < 0) ? '-' : '';\n  const year = dur.year ? `${Math.abs(dur.year)}Y` : '';\n  const month = dur.month ? `${Math.abs(dur.month)}M` : '';\n  const day = dur.day ? `${Math.abs(dur.day)}D` : '';\n\n  const dayNotation = `${sign}P${year}${month}${day}`;\n  // eslint-disable-next-line ts/prefer-nullish-coalescing\n  if (!(dur.hours || dur.minutes || dur.seconds)) {\n    return dayNotation;\n  }\n\n  const hour = dur.hours ? `${Math.abs(dur.hours)}H` : '';\n  const minute = dur.minutes ? `${Math.abs(dur.minutes)}M` : '';\n  const second = dur.seconds ? `${Math.abs(dur.seconds)}S` : '';\n\n  return `${dayNotation}T${hour}${minute}${second}`;\n}\n","import type {\n  IDurationRepresentation,\n  IDateTimeRepresentation,\n  ITimeZoneRepresentation,\n} from './DateTimeHelpers';\nimport { toUTCDate } from './DateTimeHelpers';\n\nfunction fDiv(arg: number, high: number, low = 0): { intDiv: number; remainder: number } {\n  // Adds the 4 spec functions into one since they are highly related,\n  // and fQuotient and modulo are almost always called in pairs.\n  const first = arg - low;\n  const second = high - low;\n  const intDiv = Math.floor(first / second);\n  return { intDiv, remainder: arg - intDiv * second };\n}\n\nexport function maximumDayInMonthFor(yearValue: number, monthValue: number): number {\n  const { intDiv: additionalYears, remainder: month } = fDiv(monthValue, 13, 1);\n  const year = yearValue + additionalYears;\n\n  if ([ 1, 3, 5, 7, 8, 10, 12 ].includes(month)) {\n    return 31;\n  }\n  if ([ 4, 6, 9, 11 ].includes(month)) {\n    return 30;\n  }\n  if (month === 2 && (\n    fDiv(year, 400).remainder === 0 ||\n    (fDiv(year, 100).remainder !== 0 && fDiv(year, 4).remainder === 0))) {\n    return 29;\n  }\n  return 28;\n}\n\n// https://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes\nexport function addDurationToDateTime(date: IDateTimeRepresentation, duration: IDurationRepresentation):\nIDateTimeRepresentation {\n  // Used to cary over optional fields like timezone\n  const newDate: IDateTimeRepresentation = { ...date };\n\n  // Month\n  let tempDiv = fDiv(date.month + duration.month, 13, 1);\n  newDate.month = tempDiv.remainder;\n  // Year\n  newDate.year = date.year + duration.year + tempDiv.intDiv;\n  // Seconds\n  tempDiv = fDiv(date.seconds + duration.seconds, 60);\n  newDate.seconds = tempDiv.remainder;\n  // Minutes\n  tempDiv = fDiv(date.minutes + duration.minutes + tempDiv.intDiv, 60);\n  newDate.minutes = tempDiv.remainder;\n  // Hours\n  tempDiv = fDiv(date.hours + duration.hours + tempDiv.intDiv, 24);\n  newDate.hours = tempDiv.remainder;\n\n  // We skip a part of the spec code since: Defined spec code can not happen since it would be an invalid literal\n\n  newDate.day = date.day + duration.day + tempDiv.intDiv;\n\n  while (true) {\n    let carry;\n    if (newDate.day < 1) {\n      newDate.day += maximumDayInMonthFor(newDate.year, newDate.month - 1);\n      carry = -1;\n    } else if (newDate.day > maximumDayInMonthFor(newDate.year, newDate.month)) {\n      newDate.day -= maximumDayInMonthFor(newDate.year, newDate.month);\n      carry = 1;\n    } else {\n      break;\n    }\n    tempDiv = fDiv(newDate.month + carry, 13, 1);\n    newDate.month = tempDiv.remainder;\n    newDate.year += tempDiv.intDiv;\n  }\n  return newDate;\n}\n\nexport function elapsedDuration(\n  first: IDateTimeRepresentation,\n  second: IDateTimeRepresentation,\n  defaultTimeZone: ITimeZoneRepresentation,\n): Partial<IDurationRepresentation> {\n  const d1 = toUTCDate(first, defaultTimeZone);\n  const d2 = toUTCDate(second, defaultTimeZone);\n  const diff = d1.getTime() - d2.getTime();\n  return {\n    day: Math.floor(diff / (1_000 * 60 * 60 * 24)),\n    hours: Math.floor((diff % (1_000 * 60 * 60 * 24)) / (1_000 * 60 * 60)),\n    minutes: Math.floor(diff % (1_000 * 60 * 60) / (1_000 * 60)),\n    seconds: diff % (1_000 * 60),\n  };\n}\n","import type { LRUCache } from 'lru-cache';\nimport type * as E from '../expressions';\nimport { asTermType } from '../expressions';\nimport type { ArgumentType } from '../functions';\nimport { double, float, string } from '../functions/Helpers';\nimport type { KnownLiteralTypes } from './Consts';\nimport { TypeAlias, TypeURL } from './Consts';\n\nexport type OverrideType = KnownLiteralTypes | 'term';\n\n/**\n * Types that are not mentioned just map to 'term'.\n * When editing this, make sure type promotion and substitution don't start interfering.\n * e.g. when saying something like string -> stringly -> anyUri -> term.\n * This would make substitution on types that promote to each other possible. We and the specs don't want that!\n * A DAG will be created based on this. Make sure it doesn't have any cycles!\n */\nexport const extensionTableInput: Record<KnownLiteralTypes, OverrideType> = {\n  // Datetime types\n  [TypeURL.XSD_DATE_TIME_STAMP]: TypeURL.XSD_DATE_TIME,\n\n  // Duration types\n  [TypeURL.XSD_DAY_TIME_DURATION]: TypeURL.XSD_DURATION,\n  [TypeURL.XSD_YEAR_MONTH_DURATION]: TypeURL.XSD_DURATION,\n\n  // Stringly types\n  [TypeURL.RDF_LANG_STRING]: TypeAlias.SPARQL_STRINGLY,\n  [TypeURL.XSD_STRING]: TypeAlias.SPARQL_STRINGLY,\n\n  // String types\n  [TypeURL.XSD_NORMALIZED_STRING]: TypeURL.XSD_STRING,\n  [TypeURL.XSD_TOKEN]: TypeURL.XSD_NORMALIZED_STRING,\n  [TypeURL.XSD_LANGUAGE]: TypeURL.XSD_TOKEN,\n  [TypeURL.XSD_NM_TOKEN]: TypeURL.XSD_TOKEN,\n  [TypeURL.XSD_NAME]: TypeURL.XSD_TOKEN,\n  [TypeURL.XSD_NC_NAME]: TypeURL.XSD_NAME,\n  [TypeURL.XSD_ENTITY]: TypeURL.XSD_NC_NAME,\n  [TypeURL.XSD_ID]: TypeURL.XSD_NC_NAME,\n  [TypeURL.XSD_ID_REF]: TypeURL.XSD_NC_NAME,\n\n  // Numeric types\n  // https://www.w3.org/TR/sparql11-query/#operandDataTypes\n  // > numeric denotes typed literals with datatypes xsd:integer, xsd:decimal, xsd:float, and xsd:double\n  [TypeURL.XSD_DOUBLE]: TypeAlias.SPARQL_NUMERIC,\n  [TypeURL.XSD_FLOAT]: TypeAlias.SPARQL_NUMERIC,\n  [TypeURL.XSD_DECIMAL]: TypeAlias.SPARQL_NUMERIC,\n\n  // Decimal types\n  [TypeURL.XSD_INTEGER]: TypeURL.XSD_DECIMAL,\n\n  [TypeURL.XSD_NON_POSITIVE_INTEGER]: TypeURL.XSD_INTEGER,\n  [TypeURL.XSD_NEGATIVE_INTEGER]: TypeURL.XSD_NON_POSITIVE_INTEGER,\n\n  [TypeURL.XSD_LONG]: TypeURL.XSD_INTEGER,\n  [TypeURL.XSD_INT]: TypeURL.XSD_LONG,\n  [TypeURL.XSD_SHORT]: TypeURL.XSD_INT,\n  [TypeURL.XSD_BYTE]: TypeURL.XSD_SHORT,\n\n  [TypeURL.XSD_NON_NEGATIVE_INTEGER]: TypeURL.XSD_INTEGER,\n  [TypeURL.XSD_POSITIVE_INTEGER]: TypeURL.XSD_NON_NEGATIVE_INTEGER,\n  [TypeURL.XSD_UNSIGNED_LONG]: TypeURL.XSD_NON_NEGATIVE_INTEGER,\n  [TypeURL.XSD_UNSIGNED_INT]: TypeURL.XSD_UNSIGNED_LONG,\n  [TypeURL.XSD_UNSIGNED_SHORT]: TypeURL.XSD_UNSIGNED_INT,\n  [TypeURL.XSD_UNSIGNED_BYTE]: TypeURL.XSD_UNSIGNED_SHORT,\n\n  [TypeURL.XSD_DATE_TIME]: 'term',\n  [TypeURL.XSD_BOOLEAN]: 'term',\n  [TypeURL.XSD_DATE]: 'term',\n  [TypeURL.XSD_G_MONTH]: 'term',\n  [TypeURL.XSD_G_MONTHDAY]: 'term',\n  [TypeURL.XSD_G_YEAR]: 'term',\n  [TypeURL.XSD_G_YEAR_MONTH]: 'term',\n  [TypeURL.XSD_TIME]: 'term',\n  [TypeURL.XSD_G_DAY]: 'term',\n  [TypeURL.XSD_DURATION]: 'term',\n  [TypeAlias.SPARQL_NUMERIC]: 'term',\n  [TypeAlias.SPARQL_STRINGLY]: 'term',\n  [TypeURL.XSD_ANY_URI]: 'term',\n};\ntype SuperTypeDict = Record<KnownLiteralTypes, number> & { __depth: number };\ntype SuperTypeDictTable = Record<KnownLiteralTypes, SuperTypeDict>;\n// The key 'term' is not included in these keys. Something that is just a term will map to number 0.\nexport type GeneralSuperTypeDict = Record<string, number> & { __depth: number };\nexport const superTypeDictTable: SuperTypeDictTable = Object.create(null);\n\n/**\n * This will return the super types of a type and cache them.\n * @param type IRI we will decide the super types of.\n * @param openWorldType the enabler that provides a way to find super types.\n */\nexport function getSuperTypes(type: string, openWorldType: ISuperTypeProvider): GeneralSuperTypeDict {\n  const cached = openWorldType.cache.get(type);\n  if (cached) {\n    return cached;\n  }\n  const value = openWorldType.discoverer(type);\n  if (value === 'term') {\n    const res: GeneralSuperTypeDict = Object.create(null);\n    res.__depth = 0;\n    res[type] = 0;\n    openWorldType.cache.set(type, res);\n    return res;\n  }\n  let subExtension: GeneralSuperTypeDict;\n  const knownValue = asKnownLiteralType(value);\n  if (knownValue) {\n    subExtension = { ...superTypeDictTable[knownValue] };\n  } else {\n    subExtension = { ...getSuperTypes(value, openWorldType) };\n  }\n  subExtension.__depth++;\n  subExtension[type] = subExtension.__depth;\n  openWorldType.cache.set(type, subExtension);\n  return subExtension;\n}\n\n// No circular structure allowed! & No other keys allowed!\nexport function extensionTableInit(): void {\n  for (const [ _key, value ] of Object.entries(extensionTableInput)) {\n    const key = <KnownLiteralTypes>_key;\n    if (superTypeDictTable[key]) {\n      continue;\n    }\n    extensionTableBuilderInitKey(key, value, superTypeDictTable);\n  }\n}\nextensionTableInit();\n\nfunction extensionTableBuilderInitKey(key: KnownLiteralTypes, value: OverrideType, res: SuperTypeDictTable): void {\n  if (value === 'term' || value === undefined) {\n    const baseRes: SuperTypeDict = Object.create(null);\n    baseRes.__depth = 0;\n    baseRes[key] = 0;\n    res[key] = baseRes;\n    return;\n  }\n  if (!res[value]) {\n    extensionTableBuilderInitKey(value, extensionTableInput[value], res);\n  }\n  res[key] = { ...res[value], [key]: res[value].__depth + 1, __depth: res[value].__depth + 1 };\n}\n\nexport const typeAliasCheck: Record<TypeAlias, boolean> = Object.create(null);\nfunction initTypeAliasCheck(): void {\n  for (const val of Object.values(TypeAlias)) {\n    typeAliasCheck[val] = true;\n  }\n}\ninitTypeAliasCheck();\n\nexport function asTypeAlias(type: string): TypeAlias | undefined {\n  if (type in typeAliasCheck) {\n    return <TypeAlias> type;\n  }\n  return undefined;\n}\n\nexport function asKnownLiteralType(type: string): KnownLiteralTypes | undefined {\n  if (type in superTypeDictTable) {\n    return <KnownLiteralTypes> type;\n  }\n  return undefined;\n}\n\nexport function asOverrideType(type: string): OverrideType | undefined {\n  if (asKnownLiteralType(type) ?? type === 'term') {\n    return <OverrideType> type;\n  }\n  return undefined;\n}\n\nexport function asGeneralType(type: string): 'term' | E.TermType | undefined {\n  if (type === 'term' || asTermType(type)) {\n    return <'term' | E.TermType> type;\n  }\n  return undefined;\n}\n\nexport type TypeCache = LRUCache<string, GeneralSuperTypeDict>;\nexport type SuperTypeCallback = (unknownType: string) => string;\nexport interface ISuperTypeProvider {\n  cache: TypeCache;\n  discoverer: SuperTypeCallback;\n}\n\n/**\n * Internal type of @see isSubTypeOf This only takes knownTypes but doesn't need an enabler\n */\nexport function isInternalSubType(baseType: OverrideType, argumentType: KnownLiteralTypes): boolean {\n  return baseType !== 'term' &&\n    (superTypeDictTable[baseType] && superTypeDictTable[baseType][argumentType] !== undefined);\n}\n\n/**\n * This function can be used to check the base type is a restriction on a type in the dict.\n * If we want to check if type x is a restriction on string we do this by calling:\n * 'http://www.w3.org/2001/XMLSchema#string' in getSuperTypeDict(X, superTypeProvider)\n * @param baseType\n * @param superTypeProvider\n */\nexport function getSuperTypeDict(baseType: string, superTypeProvider: ISuperTypeProvider): GeneralSuperTypeDict {\n  const concreteType: KnownLiteralTypes | undefined = asKnownLiteralType(baseType);\n  if (concreteType) {\n    // Concrete dataType is known by expression-evaluator.\n    return superTypeDictTable[concreteType];\n  }\n  // Datatype is a custom datatype\n  return getSuperTypes(baseType, superTypeProvider);\n}\n\n/**\n * This function needs to be O(1)! The execution time of this function is vital!\n * We define typeA isSubtypeOf typeA as true.\n * If you find yourself using this function a lot (e.g. in a case) please use getSuperTypeDict instead.\n * @param baseType type you want to provide.\n * @param argumentType type you want to provide @param baseType to.\n * @param superTypeProvider the enabler to discover super types of unknown types.\n */\nexport function isSubTypeOf(\n  baseType: string,\n  argumentType: KnownLiteralTypes,\n  superTypeProvider: ISuperTypeProvider,\n): boolean {\n  if (baseType === 'term') {\n    return false;\n  }\n  return getSuperTypeDict(baseType, superTypeProvider)[argumentType] !== undefined;\n}\n\n// Defined by https://www.w3.org/TR/xpath-31/#promotion .\n// e.g. When a function takes a string, it can also accept a XSD_ANY_URI if it's cast first.\nexport const typePromotion: Partial<Record<ArgumentType, {\n  typeToPromote: KnownLiteralTypes;\n  conversionFunction: (arg: E.TermExpression) => E.TermExpression;\n}[]>> = {\n  [TypeURL.XSD_STRING]: [\n    { typeToPromote: TypeURL.XSD_ANY_URI, conversionFunction: arg => string(arg.str()) },\n  ],\n  [TypeURL.XSD_DOUBLE]: [\n    { typeToPromote: TypeURL.XSD_FLOAT, conversionFunction: arg => double((<E.NumericLiteral>arg).typedValue) },\n    // TODO: in case of decimal a round needs to happen.\n    { typeToPromote: TypeURL.XSD_DECIMAL, conversionFunction: arg => double((<E.NumericLiteral>arg).typedValue) },\n  ],\n  [TypeURL.XSD_FLOAT]: [\n    // TODO: in case of decimal a round needs to happen.\n    { typeToPromote: TypeURL.XSD_DECIMAL, conversionFunction: arg => float((<E.NumericLiteral>arg).typedValue) },\n  ],\n};\n","import { Logger } from '@comunica/types';\n\n/**\n * A logger that voids everything.\n */\nexport class LoggerVoid extends Logger {\n  public debug(): void {\n    // Void\n  }\n\n  public error(): void {\n    // Void\n  }\n\n  public fatal(): void {\n    // Void\n  }\n\n  public info(): void {\n    // Void\n  }\n\n  public trace(): void {\n    // Void\n  }\n\n  public warn(): void {\n    // Void\n  }\n}\n","import type { Actor, IAction, IActorOutput, IActorReply, IActorTest, IMediatorArgs } from '@comunica/core';\nimport { Mediator } from '@comunica/core';\n\n/**\n * A comunica mediator that runs all actors that resolve their test.\n * This mediator will always resolve to the first actor's output.\n */\nexport class MediatorAll<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>\n  extends Mediator<A, I, T, O> {\n  public constructor(args: IMediatorArgs<A, I, T, O>) {\n    super(args);\n  }\n\n  public override async mediate(action: I): Promise<O> {\n    // Collect all actors that resolve their test\n    const validActors: A[] = [];\n    let testResults: IActorReply<A, I, T, O>[];\n    try {\n      testResults = this.publish(action);\n    } catch {\n      testResults = [];\n    }\n    for (const testResult of testResults) {\n      try {\n        await testResult.reply;\n        validActors.push(testResult.actor);\n      } catch {\n        // Ignore errors\n      }\n    }\n\n    // Send action to all valid actors\n    const outputs = await Promise.all(validActors.map(actor => actor.runObservable(action)));\n\n    return outputs[0];\n  }\n\n  protected async mediateWith(): Promise<A> {\n    throw new Error('Unsupported operation: MediatorAll#mediateWith');\n  }\n}\n","import type { Actor, IAction, IActorOutput, IActorReply, IActorTest, IMediatorArgs } from '@comunica/core';\nimport { Mediator } from '@comunica/core';\nimport type { IActionContext } from '@comunica/types';\n\n/**\n * A comunica mediator that goes over all actors in sequence and forwards I/O.\n * This required the action input and the actor output to be of the same type.\n */\nexport class MediatorCombinePipeline<\n  A extends Actor<H, T, H>,\nH extends IAction | (IActorOutput & { context: IActionContext }),\nT extends IActorTest,\n>\n  extends Mediator<A, H, T, H> {\n  public readonly filterErrors: boolean | undefined;\n  public readonly order: 'increasing' | 'decreasing' | undefined;\n  public readonly field: string | undefined;\n\n  public constructor(args: IMediatorCombinePipelineArgs<A, H, T, H>) {\n    super(args);\n  }\n\n  public override async mediate(action: H): Promise<H> {\n    let testResults: IActorReply<A, H, T, H>[] | { actor: A; reply: T }[];\n    try {\n      testResults = this.publish(action);\n    } catch {\n      // If no actors are available, just return the input as output\n      return action;\n    }\n\n    if (this.filterErrors) {\n      const _testResults: IActorReply<A, H, T, H>[] = [];\n      for (const result of testResults) {\n        try {\n          await result.reply;\n          _testResults.push(result);\n        } catch {\n          // Ignore errors\n        }\n      }\n      testResults = _testResults;\n    }\n\n    // Delegate test errors.\n    testResults = await Promise.all(testResults.map(async({ actor, reply }) => ({ actor, reply: await reply })));\n\n    // Order the test results if ordering is enabled\n    if (this.order) {\n      // A function used to extract an ordering value from a test result\n      const getOrder = (elem: T): number => {\n        // If there is a field key use it, otherwise use the input\n        // element for ordering\n        const value = this.field ? (<any> elem)[this.field] : elem;\n\n        // Check the ordering value is a number\n        if (typeof value !== 'number') {\n          throw new TypeError('Cannot order elements that are not numbers.');\n        }\n        return value;\n      };\n\n      testResults = testResults.sort((actor1, actor2) =>\n        (this.order === 'increasing' ? 1 : -1) *\n        (getOrder(actor1.reply) - getOrder(actor2.reply)));\n    }\n\n    // Pass action to first actor,\n    // and each actor output as input to the following actor.\n    let handle: H = action;\n    for (const { actor } of testResults) {\n      handle = { ...handle, ...await actor.runObservable(handle) };\n    }\n\n    // Return the final actor output\n    return handle;\n  }\n\n  protected mediateWith(): Promise<A> {\n    throw new Error('Method not supported.');\n  }\n}\n\nexport interface IMediatorCombinePipelineArgs<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n>\n  extends IMediatorArgs<A, I, T, O> {\n  /**\n   * If actors that throw test errors should be ignored\n   */\n  filterErrors?: boolean;\n  /**\n   * The field to use for ordering (if the ordering strategy is chosen).\n   * Leave undefined if the test output is a number rather than an object.\n   */\n  field?: string;\n  /**\n   * The strategy of ordering the pipeline (increasing or decreasing).\n   * For choosing to leave the order of the pipeline unchanged, leave this undefined.\n   * For choosing to order by increasing values: 'increasing'.\n   * For choosing to order by decreasing values: 'decreasing'.\n   */\n  order?: 'increasing' | 'decreasing' | undefined;\n}\n","import type { Actor, IAction, IActorOutput, IActorReply, IActorTest, IMediatorArgs } from '@comunica/core';\nimport { Mediator } from '@comunica/core';\n\n/**\n * A comunica mediator that takes the union of all actor results.\n *\n * The actors that are registered first will have priority on setting overlapping fields.\n */\nexport class MediatorCombineUnion<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n>\n  extends Mediator<A, I, T, O>\n  implements IMediatorCombineUnionArgs<A, I, T, O> {\n  public readonly filterErrors: boolean | undefined;\n  public readonly field: string;\n  public readonly combiner: (results: O[]) => O;\n\n  public constructor(args: IMediatorCombineUnionArgs<A, I, T, O>) {\n    super(args);\n    this.combiner = this.createCombiner();\n  }\n\n  public override async mediate(action: I): Promise<O> {\n    let testResults: IActorReply<A, I, T, O>[];\n    try {\n      testResults = this.publish(action);\n    } catch {\n      testResults = [];\n    }\n\n    if (this.filterErrors) {\n      const _testResults: IActorReply<A, I, T, O>[] = [];\n      for (const result of testResults) {\n        try {\n          await result.reply;\n          _testResults.push(result);\n        } catch {\n          // Ignore errors\n        }\n      }\n      testResults = _testResults;\n    }\n\n    // Delegate test errors.\n    await Promise.all(testResults.map(({ reply }) => reply));\n\n    // Run action on all actors.\n    const results: O[] = await Promise.all(testResults.map(result => result.actor.runObservable(action)));\n\n    // Return the combined results.\n    return this.combiner(results);\n  }\n\n  protected mediateWith(): Promise<A> {\n    throw new Error('Method not supported.');\n  }\n\n  protected createCombiner(): (results: O[]) => O {\n    return (results: O[]) => {\n      const data: any = {};\n      data[this.field] = {};\n      // eslint-disable-next-line unicorn/prefer-spread\n      [{}].concat(results.map((result: any) => result[this.field]))\n        // eslint-disable-next-line unicorn/no-array-for-each\n        .forEach((value) => {\n          data[this.field] = { ...value, ...data[this.field] };\n        });\n      return data;\n    };\n  }\n}\n\nexport interface IMediatorCombineUnionArgs<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n>\n  extends IMediatorArgs<A, I, T, O> {\n  /**\n   * If actors that throw test errors should be ignored\n   */\n  filterErrors?: boolean;\n  /**\n   * The field name of the test result field over which must be mediated.\n   */\n  field: string;\n}\n","import type { ActorRdfJoin, IActionRdfJoin } from '@comunica/bus-rdf-join';\nimport { KeysQueryOperation } from '@comunica/context-entries';\nimport type { IActorReply, IMediatorArgs } from '@comunica/core';\nimport { Actor, Mediator } from '@comunica/core';\nimport type { IMediatorTypeJoinCoefficients } from '@comunica/mediatortype-join-coefficients';\nimport type { IQueryOperationResult } from '@comunica/types';\n\n/**\n * A mediator that mediates over actors implementing the Join Coefficients mediator type and assigns fixed weights\n * to calculate an overall score and pick the actor with the lowest score.\n */\nexport class MediatorJoinCoefficientsFixed\n  extends Mediator<ActorRdfJoin, IActionRdfJoin, IMediatorTypeJoinCoefficients, IQueryOperationResult> {\n  public readonly cpuWeight: number;\n  public readonly memoryWeight: number;\n  public readonly timeWeight: number;\n  public readonly ioWeight: number;\n\n  public constructor(args: IMediatorJoinCoefficientsFixedArgs) {\n    super(args);\n  }\n\n  protected async mediateWith(\n    action: IActionRdfJoin,\n    testResults: IActorReply<ActorRdfJoin, IActionRdfJoin, IMediatorTypeJoinCoefficients, IQueryOperationResult>[],\n  ): Promise<ActorRdfJoin> {\n    // Obtain test results\n    const errors: Error[] = [];\n    const promises = testResults\n      .map(({ reply }) => reply)\n      .map(promise => promise.catch((error) => {\n        errors.push(error);\n      }));\n    const coefficients = await Promise.all(promises);\n\n    // Calculate costs\n    let costs: (number | undefined)[] = coefficients\n      // eslint-disable-next-line array-callback-return\n      .map((coeff) => {\n        if (coeff) {\n          return coeff.iterations * this.cpuWeight +\n            coeff.persistedItems * this.memoryWeight +\n            coeff.blockingItems * this.timeWeight +\n            coeff.requestTime * this.ioWeight;\n        }\n      });\n    const maxCost = Math.max(...(<number[]> costs.filter(cost => cost !== undefined)));\n\n    // If we have a limit indicator in the context,\n    // increase cost of entries that have a number of iterations that is higher than the limit AND block items.\n    // In these cases, join operators that produce results early on will be preferred.\n    const limitIndicator: number | undefined = action.context.get(KeysQueryOperation.limitIndicator);\n    if (limitIndicator) {\n      costs = costs.map((cost, i) => {\n        if (cost !== undefined && (<any> coefficients[i]).blockingItems > 0 &&\n\n          (<any> coefficients[i]).iterations > limitIndicator) {\n          return cost + maxCost;\n        }\n        return cost;\n      });\n    }\n\n    // Determine index with lowest cost\n    let minIndex = -1;\n    let minValue = Number.POSITIVE_INFINITY;\n    for (const [ i, cost ] of costs.entries()) {\n      if (cost !== undefined && (minIndex === -1 || cost < minValue)) {\n        minIndex = i;\n        minValue = cost;\n      }\n    }\n\n    // Reject if all actors rejected\n    if (minIndex < 0) {\n      throw new Error(`All actors rejected their test in ${this.name}\\n${\n        errors.map(error => error.message).join('\\n')}`);\n    }\n\n    // Return actor with lowest cost\n    const bestActor = testResults[minIndex].actor;\n\n    // Emit calculations in logger\n    if (bestActor.includeInLogs) {\n      Actor.getContextLogger(action.context)?.debug(`Determined physical join operator '${bestActor.logicalType}-${bestActor.physicalName}'`, {\n        entries: action.entries.length,\n        variables: await Promise.all(action.entries\n          .map(async entry => (await entry.output.metadata()).variables.map(variable => variable.value))),\n        costs: Object.fromEntries(costs.map((coeff, i) => [\n          `${testResults[i].actor.logicalType}-${testResults[i].actor.physicalName}`,\n          coeff,\n        ]).filter(entry => entry[1] !== undefined)),\n        coefficients: Object.fromEntries(coefficients.map((coeff, i) => [\n          `${testResults[i].actor.logicalType}-${testResults[i].actor.physicalName}`,\n          coeff,\n        ]).filter(entry => entry[1] !== undefined)),\n      });\n    }\n\n    return bestActor;\n  }\n}\n\nexport interface IMediatorJoinCoefficientsFixedArgs\n  extends IMediatorArgs<ActorRdfJoin, IActionRdfJoin, IMediatorTypeJoinCoefficients, IQueryOperationResult> {\n  /**\n   * Weight for the CPU cost\n   */\n  cpuWeight: number;\n  /**\n   * Weight for the memory cost\n   */\n  memoryWeight: number;\n  /**\n   * Weight for the execution time cost\n   */\n  timeWeight: number;\n  /**\n   * Weight for the I/O cost\n   */\n  ioWeight: number;\n}\n","import type { Actor, IAction, IActorOutput, IActorReply, IActorTest, IMediatorArgs } from '@comunica/core';\nimport { Mediator } from '@comunica/core';\n\n/**\n * A mediator that can mediate over a single number field.\n *\n * It takes the required 'field' and 'type' parameters.\n * The 'field' parameter represents the field name of the test result field over which must be mediated.\n * The 'type' parameter\n */\nexport class MediatorNumber<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>\n  extends Mediator<A, I, T, O> implements IMediatorNumberArgs<A, I, T, O> {\n  public readonly field: string;\n  public readonly type: 'min' | 'max';\n  public readonly ignoreErrors: boolean;\n  public readonly indexPicker: (tests: T[]) => number;\n\n  public constructor(args: IMediatorNumberArgs<A, I, T, O>) {\n    super(args);\n    this.indexPicker = this.createIndexPicker();\n  }\n\n  /**\n   * @return {(tests: T[]) => number} A function that returns the index of the test result\n   *                                  that has been chosen by this mediator.\n   */\n  protected createIndexPicker(): (tests: (T | undefined)[]) => number {\n    switch (this.type) {\n      case 'min':\n        return (tests: (T | undefined)[]): number => tests.reduce((prev, curr, i) => {\n          const val: number = this.getOrDefault((<any> curr)[this.field], Number.POSITIVE_INFINITY);\n          return val !== null && (Number.isNaN(prev[0]) || prev[0] > val) ? [ val, i ] : prev;\n        }, [ Number.NaN, -1 ])[1];\n      case 'max':\n        return (tests: (T | undefined)[]): number => tests.reduce((prev, curr, i) => {\n          const val: number = this.getOrDefault((<any> curr)[this.field], Number.NEGATIVE_INFINITY);\n          return val !== null && (Number.isNaN(prev[0]) || prev[0] < val) ? [ val, i ] : prev;\n        }, [ Number.NaN, -1 ])[1];\n      default:\n        // eslint-disable-next-line ts/restrict-template-expressions\n        throw new Error(`No valid \"type\" value was given, must be either 'min' or 'max', but got: ${this.type}`);\n    }\n  }\n\n  protected getOrDefault(value: number | undefined, defaultValue: number): number {\n    // eslint-disable-next-line ts/prefer-nullish-coalescing\n    return value === undefined ? defaultValue : value;\n  }\n\n  protected async mediateWith(action: I, testResults: IActorReply<A, I, T, O>[]): Promise<A> {\n    let promises = testResults.map(({ reply }) => reply);\n    const errors: Error[] = [];\n    if (this.ignoreErrors) {\n      const dummy: any = {};\n      dummy[this.field] = null;\n      // eslint-disable-next-line ts/no-floating-promises\n      promises = promises.map(promise => promise.catch((error) => {\n        errors.push(error);\n        return dummy;\n      }));\n    }\n    const results = await Promise.all(promises);\n    const index = this.indexPicker(results);\n    if (index < 0) {\n      throw new Error(`All actors rejected their test in ${this.name}\\n${\n        errors.map(error => error.message).join('\\n')}`);\n    }\n    return testResults[index].actor;\n  }\n}\n\nexport interface IMediatorNumberArgs<\n  A extends Actor<I, T, O>,\nI extends IAction,\nT extends IActorTest,\nO extends IActorOutput,\n>\n  extends IMediatorArgs<A, I, T, O> {\n  /**\n   * The field name of the test result field over which must be mediated.\n   */\n  field: string;\n  /**\n   * The way how the index should be selected.\n   * For choosing the minimum value: 'min'.\n   * For choosing the maximum value: 'max'.\n   */\n  type: 'min' | 'max';\n\n  /**\n   * If actors that throw test errors should be ignored\n   */\n  ignoreErrors?: boolean;\n}\n","import type { Actor, IAction, IActorOutput, IActorReply, IActorTest, IMediatorArgs } from '@comunica/core';\nimport { Mediator } from '@comunica/core';\n\n/**\n * A mediator that picks the first actor that resolves its test.\n */\nexport class MediatorRace<A extends Actor<I, T, O>, I extends IAction, T extends IActorTest, O extends IActorOutput>\n  extends Mediator<A, I, T, O> {\n  public constructor(args: IMediatorArgs<A, I, T, O>) {\n    super(args);\n  }\n\n  protected mediateWith(action: I, testResults: IActorReply<A, I, T, O>[]): Promise<A> {\n    return new Promise((resolve, reject) => {\n      const errors: Error[] = [];\n      for (const testResult of testResults) {\n        testResult.reply.then(() => {\n          resolve(testResult.actor);\n        }).catch((error) => {\n          // Reject if all replies were rejected\n          errors.push(error);\n          if (errors.length === testResults.length) {\n            reject(new Error(`${this.name} mediated over all rejecting actors:\\n${\n              errors.map(subError => subError.message).join('\\n')}`));\n          }\n        });\n      }\n    });\n  }\n}\n","import type { IMetadataValidationState } from '@comunica/types';\n\n/**\n * Reusable implementation for metadata validation states.\n */\nexport class MetadataValidationState implements IMetadataValidationState {\n  private readonly invalidateListeners: (() => void)[] = [];\n  public valid = true;\n\n  public addInvalidateListener(listener: () => void): void {\n    this.invalidateListeners.push(listener);\n  }\n\n  public invalidate(): void {\n    if (this.valid) {\n      this.valid = false;\n      for (const invalidateListener of this.invalidateListeners) {\n        invalidateListener();\n      }\n    }\n  }\n}\n","/**\n * A logger accepts messages from different levels\n * and emits them in a certain way.\n */\nexport abstract class Logger {\n  /**\n   * All available logging levels.\n   * @type {{trace: number; debug: number; info: number; warn: number; error: number; fatal: number}}\n   */\n\n  public static readonly LEVELS: Record<string, number> = {\n    trace: 0,\n    debug: 1,\n    info: 2,\n    warn: 3,\n    error: 4,\n    fatal: 5,\n  };\n\n  /**\n   * Convert a string-based logging level to a numerical logging level.\n   * @param level A string-based logging level\n   * @return The numerical logging level, or undefined.\n   */\n  public static getLevelOrdinal(level: string): number {\n    return Logger.LEVELS[level];\n  }\n\n  public abstract trace(message: string, data?: any): void;\n  public abstract debug(message: string, data?: any): void;\n  public abstract info(message: string, data?: any): void;\n  public abstract warn(message: string, data?: any): void;\n  public abstract error(message: string, data?: any): void;\n  public abstract fatal(message: string, data?: any): void;\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (typeof object === 'number' && isNaN(object)) {\n    throw new Error('NaN is not allowed');\n  }\n\n  if (typeof object === 'number' && !isFinite(object)) {\n    throw new Error('Infinity is not allowed');\n  }\n\n  if (object === null || typeof object !== 'object') {\n    return JSON.stringify(object);\n  }\n\n  if (object.toJSON instanceof Function) {\n    return serialize(object.toJSON());\n  }\n\n  if (Array.isArray(object)) {\n    const values = object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return `${t}${comma}${serialize(value)}`;\n    }, '');\n    return `[${values}]`;\n  }\n\n  const values = Object.keys(object).sort().reduce((t, cv) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return `${t}${comma}${serialize(cv)}:${serialize(object[cv])}`;\n  }, '');\n  return `{${values}}`;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.promisifyEventEmitter = void 0;\nfunction promisifyEventEmitter(event, result) {\n    return new Promise((resolve, reject) => {\n        event.on('end', () => resolve(result));\n        event.on('error', reject);\n    });\n}\nexports.promisifyEventEmitter = promisifyEventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","/**\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return { value: false };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (\n    ((begin === 0 && !isNeg(begin)) ||\n      (size !== undefined && begin <= -size)) &&\n    (end === undefined || (size !== undefined && end >= size))\n  );\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined\n    ? defaultIndex\n    : isNeg(index)\n    ? size === Infinity\n      ? size\n      : Math.max(0, size + index) | 0\n    : size === undefined || size === index\n    ? index\n    : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || (value === 0 && 1 / value === -Infinity);\n}\n\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection = /*@__PURE__*/(function (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if ( Collection ) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create( Collection && Collection.prototype );\n  KeyedCollection.prototype.constructor = KeyedCollection;\n\n  return KeyedCollection;\n}(Collection));\n\nvar IndexedCollection = /*@__PURE__*/(function (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if ( Collection ) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create( Collection && Collection.prototype );\n  IndexedCollection.prototype.constructor = IndexedCollection;\n\n  return IndexedCollection;\n}(Collection));\n\nvar SetCollection = /*@__PURE__*/(function (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if ( Collection ) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create( Collection && Collection.prototype );\n  SetCollection.prototype.constructor = SetCollection;\n\n  return SetCollection;\n}(Collection));\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\n\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\n\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString () {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult\n    ? (iteratorResult.value = value)\n    : (iteratorResult = {\n        value: value,\n        done: false,\n      });\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return { value: undefined, done: true };\n}\n\nfunction hasIterator(maybeIterable) {\n  if (Array.isArray(maybeIterable)) {\n    // IE11 trick as it does not support `Symbol.iterator`\n    return true;\n  }\n\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn =\n    iterable &&\n    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nfunction isEntriesIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.entries;\n}\n\nfunction isKeysIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.keys;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return (\n    value &&\n    typeof value === 'object' &&\n    Number.isInteger(value.length) &&\n    value.length >= 0 &&\n    (value.length === 0\n      ? // Only {length: 0} is considered Array-like.\n        Object.keys(value).length === 1\n      : // An object is only Array-like if it has a property where the last value\n        // in the array-like may be found (which could be undefined).\n        value.hasOwnProperty(value.length - 1))\n  );\n}\n\nvar Seq = /*@__PURE__*/(function (Collection) {\n  function Seq(value) {\n    return value === undefined || value === null\n      ? emptySequence()\n      : isImmutable(value)\n      ? value.toSeq()\n      : seqFromValue(value);\n  }\n\n  if ( Collection ) Seq.__proto__ = Collection;\n  Seq.prototype = Object.create( Collection && Collection.prototype );\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq () {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function __iterate (fn, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n      return i;\n    }\n    return this.__iterateUncached(fn, reverse);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function __iterator (type, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection));\n\nvar KeyedSeq = /*@__PURE__*/(function (Seq) {\n  function KeyedSeq(value) {\n    return value === undefined || value === null\n      ? emptySequence().toKeyedSeq()\n      : isCollection(value)\n      ? isKeyed(value)\n        ? value.toSeq()\n        : value.fromEntrySeq()\n      : isRecord(value)\n      ? value.toSeq()\n      : keyedSeqFromValue(value);\n  }\n\n  if ( Seq ) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create( Seq && Seq.prototype );\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq));\n\nvar IndexedSeq = /*@__PURE__*/(function (Seq) {\n  function IndexedSeq(value) {\n    return value === undefined || value === null\n      ? emptySequence()\n      : isCollection(value)\n      ? isKeyed(value)\n        ? value.entrySeq()\n        : value.toIndexedSeq()\n      : isRecord(value)\n      ? value.toSeq().entrySeq()\n      : indexedSeqFromValue(value);\n  }\n\n  if ( Seq ) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create( Seq && Seq.prototype );\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of (/*...values*/) {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString () {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq));\n\nvar SetSeq = /*@__PURE__*/(function (Seq) {\n  function SetSeq(value) {\n    return (\n      isCollection(value) && !isAssociative(value) ? value : IndexedSeq(value)\n    ).toSetSeq();\n  }\n\n  if ( Seq ) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create( Seq && Seq.prototype );\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of (/*...values*/) {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq () {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq));\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\n\nSeq.prototype[IS_SEQ_SYMBOL] = true;\n\n// #pragma Root Sequences\n\nvar ArraySeq = /*@__PURE__*/(function (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator (type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq));\n\nvar ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object).concat(\n      Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : []\n    );\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has (key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq));\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq));\n\n// # pragma Helper functions\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of [k, v] entries, or keyed object: ' +\n      value\n  );\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values: ' + value\n  );\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return isEntriesIterable(value)\n      ? seq.fromEntrySeq()\n      : isKeysIterable(value)\n      ? seq.toSetSeq()\n      : seq;\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values, or keyed object: ' + value\n  );\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n    ? new CollectionSeq(value)\n    : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(\n    maybeValue &&\n      typeof maybeValue.equals === 'function' &&\n      typeof maybeValue.hashCode === 'function'\n  );\n}\n\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\nfunction is(valueA, valueB) {\n  if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n    return true;\n  }\n  if (!valueA || !valueB) {\n    return false;\n  }\n  if (\n    typeof valueA.valueOf === 'function' &&\n    typeof valueB.valueOf === 'function'\n  ) {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n  return !!(\n    isValueObject(valueA) &&\n    isValueObject(valueB) &&\n    valueA.equals(valueB)\n  );\n}\n\nvar imul =\n  typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2\n    ? Math.imul\n    : function imul(a, b) {\n        a |= 0; // int\n        b |= 0; // int\n        var c = a & 0xffff;\n        var d = b & 0xffff;\n        // Shift by 0 fixes the sign on the high part.\n        return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int\n      };\n\n// v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\nfunction smi(i32) {\n  return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  if (o == null) {\n    return hashNullish(o);\n  }\n\n  if (typeof o.hashCode === 'function') {\n    // Drop any high bits from accidentally long hash codes.\n    return smi(o.hashCode(o));\n  }\n\n  var v = valueOf(o);\n\n  if (v == null) {\n    return hashNullish(v);\n  }\n\n  switch (typeof v) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return v ? 0x42108421 : 0x42108420;\n    case 'number':\n      return hashNumber(v);\n    case 'string':\n      return v.length > STRING_HASH_CACHE_MIN_STRLEN\n        ? cachedHashString(v)\n        : hashString(v);\n    case 'object':\n    case 'function':\n      return hashJSObj(v);\n    case 'symbol':\n      return hashSymbol(v);\n    default:\n      if (typeof v.toString === 'function') {\n        return hashString(v.toString());\n      }\n      throw new Error('Value type ' + typeof v + ' cannot be hashed.');\n  }\n}\n\nfunction hashNullish(nullish) {\n  return nullish === null ? 0x42108422 : /* undefined */ 0x42108423;\n}\n\n// Compress arbitrarily large numbers into smi hashes.\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  var hash = n | 0;\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n  if (hashed === undefined) {\n    hashed = hashString(string);\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n  return hashed;\n}\n\n// http://jsperf.com/hashing-strings\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = (31 * hashed + string.charCodeAt(ii)) | 0;\n  }\n  return smi(hashed);\n}\n\nfunction hashSymbol(sym) {\n  var hashed = symbolMap[sym];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  hashed = nextHash();\n\n  symbolMap[sym] = hashed;\n\n  return hashed;\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = nextHash();\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed,\n    });\n  } else if (\n    obj.propertyIsEnumerable !== undefined &&\n    obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable\n  ) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function () {\n      return this.constructor.prototype.propertyIsEnumerable.apply(\n        this,\n        arguments\n      );\n    };\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n}\n\n// Get references to ES5 object methods.\nvar isExtensible = Object.isExtensible;\n\n// True if Object.defineProperty works as expected. IE8 fails this test.\nvar canDefineProperty = (function () {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1: // Element\n        return node.uniqueID;\n      case 9: // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n}\n\nfunction valueOf(obj) {\n  return obj.valueOf !== defaultValueOf && typeof obj.valueOf === 'function'\n    ? obj.valueOf(obj)\n    : obj;\n}\n\nfunction nextHash() {\n  var nextHash = ++_objHashUID;\n  if (_objHashUID & 0x40000000) {\n    _objHashUID = 0;\n  }\n  return nextHash;\n}\n\n// If possible, use a WeakMap.\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar symbolMap = Object.create(null);\n\nvar _objHashUID = 0;\n\nvar UID_HASH_KEY = '__immutablehash__';\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if ( KeyedSeq ) ToKeyedSequence.__proto__ = KeyedSeq;\n  ToKeyedSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse () {\n    var this$1$1 = this;\n\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () { return this$1$1._iter.toSeq().reverse(); };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () { return this$1$1._iter.toSeq().map(mapper, context); };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1$1); }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq));\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( IndexedSeq ) ToIndexedSequence.__proto__ = IndexedSeq;\n  ToIndexedSequence.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(\n      function (v) { return fn(v, reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      reverse\n    );\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(\n            type,\n            reverse ? this$1$1.size - ++i : i++,\n            step.value,\n            step\n          );\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq));\n\nvar ToSetSequence = /*@__PURE__*/(function (SetSeq) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( SetSeq ) ToSetSequence.__proto__ = SetSeq;\n  ToSetSequence.prototype = Object.create( SetSeq && SetSeq.prototype );\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v) { return fn(v, v, this$1$1); }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq));\n\nvar FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if ( KeyedSeq ) FromEntriesSequence.__proto__ = KeyedSeq;\n  FromEntriesSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(\n          indexedCollection ? entry.get(1) : entry[1],\n          indexedCollection ? entry.get(0) : entry[0],\n          this$1$1\n        );\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(\n            type,\n            indexedCollection ? entry.get(0) : entry[0],\n            indexedCollection ? entry.get(1) : entry[1],\n            step\n          );\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq));\n\nToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () { return collection; };\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () { return collection.reverse(); };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) { return collection.includes(key); };\n  flipSequence.includes = function (key) { return collection.has(key); };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(function (v, k) { return fn(k, v, this$1$1) !== false; }, reverse);\n  };\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(\n      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n      reverse\n    );\n  };\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) { return collection.has(key); };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET\n      ? notSetValue\n      : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(\n      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1$1) !== false; },\n      reverse\n    );\n  };\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(\n        type,\n        key,\n        mapper.call(context, entry[1], key, collection),\n        step\n      );\n    });\n  };\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1$1 = this;\n\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () { return collection; };\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () { return collection.flip(); };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };\n  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };\n  reversedSequence.includes = function (value) { return collection.includes(value); };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(\n      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      !reverse\n    );\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(\n        type,\n        useKeys ? entry[0] : reverse ? this$1$1.size - ++i : i++,\n        entry[1],\n        step\n      );\n    });\n  };\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection)\n        ? v\n        : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });\n  });\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(\n      grouper.call(context, v, k, collection),\n      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();\n}\n\nfunction partitionFactory(collection, predicate, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = [[], []];\n  collection.__iterate(function (v, k) {\n    groups[predicate.call(context, v, k, collection) ? 1 : 0].push(\n      isKeyedIter ? [k, v] : v\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); });\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size =\n    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize\n        ? collection.get(index + resolvedBegin, notSetValue)\n        : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return (\n          fn(v, useKeys ? k : iterations - 1, this$1$1) !== false &&\n          iterations !== sliceSize\n        );\n      }\n    });\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(\n      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1$1); }\n    );\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection]\n    .concat(values)\n    .map(function (v) {\n      if (!isCollection(v)) {\n        v = isKeyedCollection\n          ? keyedSeqFromValue(v)\n          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedCollection) {\n        v = KeyedCollection(v);\n      }\n      return v;\n    })\n    .filter(function (v) { return v.size !== 0; });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (\n      singleton === collection ||\n      (isKeyedCollection && isKeyed(singleton)) ||\n      (isIndexed(collection) && isIndexed(singleton))\n    ) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection\n    .toSeq()\n    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })\n    .flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(\n      function (v) { return (!iterations || fn(separator, iterations++, this$1$1) !== false) &&\n        fn(v, iterations++, this$1$1) !== false; },\n      reverse\n    );\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2\n        ? iteratorValue(type, iterations++, separator)\n        : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection\n    .toSeq()\n    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })\n    .valueSeq()\n    .toArray();\n  entries\n    .sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; })\n    .forEach(\n      isKeyedCollection\n        ? function (v, i) {\n            entries[i].length = 2;\n          }\n        : function (v, i) {\n            entries[i] = v[1];\n          }\n    );\n  return isKeyedCollection\n    ? KeyedSeq(entries)\n    : isIndexed(collection)\n    ? IndexedSeq(entries)\n    : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection\n      .toSeq()\n      .map(function (v, k) { return [v, mapper(v, k, collection)]; })\n      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return (\n    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||\n    comp > 0\n  );\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(\n      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }\n    );\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) { return i.next(); });\n        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(\n        type,\n        iterations++,\n        zipper.apply(\n          null,\n          steps.map(function (s) { return s.value; })\n        )\n      );\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection)\n    ? KeyedCollection\n    : isIndexed(collection)\n    ? IndexedCollection\n    : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create(\n    (isKeyed(collection)\n      ? KeyedSeq\n      : isIndexed(collection)\n      ? IndexedSeq\n      : SetSeq\n    ).prototype\n  );\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) { throw new Error(error); }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(\n    size !== Infinity,\n    'Cannot perform this action with an infinite size.'\n  );\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n  throw new TypeError(\n    'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath\n  );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isPlainObject(value) {\n  // The base prototype's toString deals with Argument objects and native namespaces like Math\n  if (\n    !value ||\n    typeof value !== 'object' ||\n    toString.call(value) !== '[object Object]'\n  ) {\n    return false;\n  }\n\n  var proto = Object.getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n\n  // Iteratively going up the prototype chain is needed for cross-realm environments (differing contexts, iframes, etc)\n  var parentProto = proto;\n  var nextProto = Object.getPrototypeOf(proto);\n  while (nextProto !== null) {\n    parentProto = nextProto;\n    nextProto = Object.getPrototypeOf(parentProto);\n  }\n  return parentProto === proto;\n}\n\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\nfunction isDataStructure(value) {\n  return (\n    typeof value === 'object' &&\n    (isImmutable(value) || Array.isArray(value) || isPlainObject(value))\n  );\n}\n\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection)\n    ? collection.has(key)\n    : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection)\n    ? collection.get(key, notSetValue)\n    : !has(collection, key)\n    ? notSetValue\n    : typeof collection.get === 'function'\n    ? collection.get(key)\n    : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n  var to = {};\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError(\n        'Cannot update immutable value without .remove() method: ' + collection\n      );\n    }\n    return collection.remove(key);\n  }\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError(\n        'Cannot update immutable value without .set() method: ' + collection\n      );\n    }\n    return collection.set(key, value);\n  }\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn$1(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(\n    isImmutable(collection),\n    collection,\n    coerceKeyPath(keyPath),\n    0,\n    notSetValue,\n    updater\n  );\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(\n  inImmutable,\n  existing,\n  keyPath,\n  i,\n  notSetValue,\n  updater\n) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError(\n      'Cannot update within non-data-structure value in path [' +\n        keyPath.slice(0, i).map(quoteString) +\n        ']: ' +\n        existing\n    );\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(\n    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),\n    nextExisting,\n    keyPath,\n    i + 1,\n    notSetValue,\n    updater\n  );\n  return nextUpdated === nextExisting\n    ? existing\n    : nextUpdated === NOT_SET\n    ? remove(existing, key)\n    : set(\n        wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,\n        key,\n        nextUpdated\n      );\n}\n\nfunction setIn$1(collection, keyPath, value) {\n  return updateIn$1(collection, keyPath, NOT_SET, function () { return value; });\n}\n\nfunction setIn(keyPath, v) {\n  return setIn$1(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn$1(collection, keyPath, function () { return NOT_SET; });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update$1(collection, key, notSetValue, updater) {\n  return updateIn$1(collection, [key], notSetValue, updater);\n}\n\nfunction update(key, notSetValue, updater) {\n  return arguments.length === 1\n    ? key(this)\n    : update$1(this, key, notSetValue, updater);\n}\n\nfunction updateIn(keyPath, notSetValue, updater) {\n  return updateIn$1(this, keyPath, notSetValue, updater);\n}\n\nfunction merge$1() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith$1(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (\n    collection.toSeq().size === 0 &&\n    !collection.__ownerID &&\n    iters.length === 1\n  ) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger\n      ? function (value, key) {\n          update$1(collection, key, NOT_SET, function (oldVal) { return oldVal === NOT_SET ? value : merger(oldVal, value, key); }\n          );\n        }\n      : function (value, key) {\n          collection.set(key, value);\n        };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep$1(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith$1(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot merge into non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith\n      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))\n      : collection.merge\n      ? collection.merge.apply(collection, sources)\n      : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray\n    ? function (value) {\n        // Copy on write\n        if (merged === collection) {\n          merged = shallowCopy(merged);\n        }\n        merged.push(value);\n      }\n    : function (value, key) {\n        var hasVal = hasOwnProperty.call(merged, key);\n        var nextVal =\n          hasVal && merger ? merger(merged[key], value, key) : value;\n        if (!hasVal || nextVal !== merged[key]) {\n          // Copy on write\n          if (merged === collection) {\n            merged = shallowCopy(merged);\n          }\n          merged[key] = nextVal;\n        }\n      };\n  for (var i = 0; i < sources.length; i++) {\n    Collection(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) &&\n      isDataStructure(newValue) &&\n      areMergeable(oldValue, newValue)\n      ? mergeWithSources(oldValue, [newValue], deepMerger)\n      : merger\n      ? merger(oldValue, newValue, key)\n      : newValue;\n  }\n  return deepMerger;\n}\n\n/**\n * It's unclear what the desired behavior is for merging two collections that\n * fall into separate categories between keyed, indexed, or set-like, so we only\n * consider them mergeable if they fall into the same category.\n */\nfunction areMergeable(oldDataStructure, newDataStructure) {\n  var oldSeq = Seq(oldDataStructure);\n  var newSeq = Seq(newDataStructure);\n  // This logic assumes that a sequence can only fall into one of the three\n  // categories mentioned above (since there's no `isSetLike()` method).\n  return (\n    isIndexed(oldSeq) === isIndexed(newSeq) &&\n    isKeyed(oldSeq) === isKeyed(newSeq)\n  );\n}\n\nfunction mergeDeep() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn$1(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn$1(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }\n  );\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map = /*@__PURE__*/(function (KeyedCollection) {\n  function Map(value) {\n    return value === undefined || value === null\n      ? emptyMap()\n      : isMap(value) && !isOrdered(value)\n      ? value\n      : emptyMap().withMutations(function (map) {\n          var iter = KeyedCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v, k) { return map.set(k, v); });\n        });\n  }\n\n  if ( KeyedCollection ) Map.__proto__ = KeyedCollection;\n  Map.prototype = Object.create( KeyedCollection && KeyedCollection.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.of = function of () {\n    var keyValues = [], len = arguments.length;\n    while ( len-- ) keyValues[ len ] = arguments[ len ];\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function get (k, notSetValue) {\n    return this._root\n      ? this._root.get(0, undefined, k, notSetValue)\n      : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function set (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll (keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) { return map.remove(key); });\n    });\n  };\n\n  Map.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, this$1$1));\n      });\n    });\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.__iterator = function __iterator (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    this._root &&\n      this._root.iterate(function (entry) {\n        iterations++;\n        return fn(entry[1], entry[0], this$1$1);\n      }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection));\n\nMap.isMap = isMap;\n\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update;\nMapPrototype.updateIn = updateIn;\nMapPrototype.merge = MapPrototype.concat = merge$1;\nMapPrototype.mergeWith = mergeWith$1;\nMapPrototype.mergeDeep = mergeDeep;\nMapPrototype.mergeDeepWith = mergeDeepWith;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\nMapPrototype['@@transducer/step'] = function (result, arr) {\n  return result.set(arr[0], arr[1]);\n};\nMapPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\n// #pragma Trie Nodes\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0\n    ? notSetValue\n    : this.nodes[popCount(bitmap & (bit - 1))].get(\n        shift + SHIFT,\n        keyHash,\n        key,\n        notSetValue\n      );\n};\n\nBitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & (bit - 1));\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (\n    exists &&\n    !newNode &&\n    nodes.length === 2 &&\n    isLeafNode(nodes[idx ^ 1])\n  ) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;\n  var newNodes = exists\n    ? newNode\n      ? setAt(nodes, idx, newNode, isEditable)\n      : spliceOut(nodes, idx, isEditable)\n    : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node\n    ? node.get(shift + SHIFT, keyHash, key, notSetValue)\n    : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n};\n\n// #pragma Iterators\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate =\n  function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate =\n  function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n// eslint-disable-next-line no-unused-vars\nValueNode.prototype.iterate = function (fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator = /*@__PURE__*/(function (Iterator) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if ( Iterator ) MapIterator.__proto__ = Iterator;\n  MapIterator.prototype = Object.create( Iterator && Iterator.prototype );\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = (void 0);\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(\n            type,\n            node.entries[this._reverse ? maxIndex - index : index]\n          );\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator));\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev,\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(\n      map._root,\n      map.__ownerID,\n      0,\n      undefined,\n      k,\n      v,\n      didChangeSize,\n      didAlter\n    );\n    if (!didAlter.value) {\n      return map;\n    }\n    newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);\n  }\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(\n  node,\n  ownerID,\n  shift,\n  keyHash,\n  key,\n  value,\n  didChangeSize,\n  didAlter\n) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n  return node.update(\n    ownerID,\n    shift,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n}\n\nfunction isLeafNode(node) {\n  return (\n    node.constructor === ValueNode || node.constructor === HashCollisionNode\n  );\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n  var newNode;\n  var nodes =\n    idx1 === idx2\n      ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]\n      : ((newNode = new ValueNode(ownerID, keyHash, entry)),\n        idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= (x >> 1) & 0x55555555;\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n  x = (x + (x >> 4)) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n    newArray[ii] = array[ii + after];\n  }\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List = /*@__PURE__*/(function (IndexedCollection) {\n  function List(value) {\n    var empty = emptyList();\n    if (value === undefined || value === null) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedCollection(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) { return list.set(i, v); });\n    });\n  }\n\n  if ( IndexedCollection ) List.__proto__ = IndexedCollection;\n  List.prototype = Object.create( IndexedCollection && IndexedCollection.prototype );\n  List.prototype.constructor = List;\n\n  List.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function get (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function set (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove (index) {\n    return !this.has(index)\n      ? this\n      : index === 0\n      ? this.shift()\n      : index === this.size - 1\n      ? this.pop()\n      : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function push (/*...values*/) {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift (/*...values*/) {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.concat = function concat (/*...collections*/) {\n    var arguments$1 = arguments;\n\n    var seqs = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection(\n        typeof argument !== 'string' && hasIterator(argument)\n          ? argument\n          : [argument]\n      );\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n    if (seqs.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });\n    });\n  };\n\n  List.prototype.setSize = function setSize (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, this$1$1));\n      }\n    });\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(\n      this,\n      resolveBegin(begin, size),\n      resolveEnd(end, size)\n    );\n  };\n\n  List.prototype.__iterator = function __iterator (type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate (fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeList(\n      this._origin,\n      this._capacity,\n      this._level,\n      this._root,\n      this._tail,\n      ownerID,\n      this.__hash\n    );\n  };\n\n  return List;\n}(IndexedCollection));\n\nList.isList = isList;\n\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update;\nListPrototype.updateIn = updateIn;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\nListPrototype['@@transducer/step'] = function (result, arr) {\n  return result.push(arr);\n};\nListPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n};\n\n// TODO: seems like these methods are very similar\n\nVNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n  var originIndex = (index >>> level) & MASK;\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n  var removingFirst = originIndex === 0;\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild =\n      oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n  if (removingFirst && !newChild) {\n    return this;\n  }\n  var editable = editableVNode(this, ownerID);\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n  var sizeIndex = ((index - 1) >>> level) & MASK;\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild =\n      oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0\n      ? iterateLeaf(node, offset)\n      : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : (left - offset) >> level;\n    var to = ((right - offset) >> level) + 1;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n          if (value !== DONE) {\n            return value;\n          }\n          values = null;\n        }\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(\n          array && array[idx],\n          level - SHIFT,\n          offset + (idx << level)\n        );\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0\n        ? setListBounds(list, index).set(0, value)\n        : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(\n      newRoot,\n      list.__ownerID,\n      list._level,\n      index,\n      value,\n      didAlter\n    );\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = (index >>> level) & MASK;\n  var nodeHas = node && idx < node.array.length;\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(\n      lowerNode,\n      ownerID,\n      level - SHIFT,\n      index,\n      value,\n      didAlter\n    );\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n  if (rawIndex < 1 << (list._level + SHIFT)) {\n    var node = list._root;\n    var level = list._level;\n    while (node && level > 0) {\n      node = node.array[(rawIndex >>> level) & MASK];\n      level -= SHIFT;\n    }\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n  if (end !== undefined) {\n    end |= 0;\n  }\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity =\n    end === undefined\n      ? oldCapacity\n      : end < 0\n      ? oldCapacity + end\n      : oldOrigin + end;\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  }\n\n  // If it's going to end after it starts, it's empty.\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root;\n\n  // New origin might need creating a higher root.\n  var offsetShift = 0;\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [undefined, newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity);\n\n  // New size might need creating a higher root.\n  while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n  }\n\n  // Locate or create the new tail.\n  var oldTail = list._tail;\n  var newTail =\n    newTailOffset < oldTailOffset\n      ? listNodeFor(list, newCapacity - 1)\n      : newTailOffset > oldTailOffset\n      ? new VNode([], owner)\n      : oldTail;\n\n  // Merge Tail into tree.\n  if (\n    oldTail &&\n    newTailOffset > oldTailOffset &&\n    newOrigin < oldCapacity &&\n    oldTail.array.length\n  ) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = (oldTailOffset >>> level) & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n  }\n\n  // If the size has been reduced, there's a chance the tail needs to be trimmed.\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  }\n\n  // If the new origin is within the tail, then we do not need a root.\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0;\n\n    // Identify the new top root node of the subtree of the old root.\n    while (newRoot) {\n      var beginIndex = (newOrigin >>> newLevel) & MASK;\n      if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {\n        break;\n      }\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    }\n\n    // Trim the new sides of the new root.\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(\n        owner,\n        newLevel,\n        newTailOffset - offsetShift\n      );\n    }\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;\n}\n\nvar OrderedMap = /*@__PURE__*/(function (Map) {\n  function OrderedMap(value) {\n    return value === undefined || value === null\n      ? emptyOrderedMap()\n      : isOrderedMap(value)\n      ? value\n      : emptyOrderedMap().withMutations(function (map) {\n          var iter = KeyedCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v, k) { return map.set(k, v); });\n        });\n  }\n\n  if ( Map ) OrderedMap.__proto__ = Map;\n  OrderedMap.prototype = Object.create( Map && Map.prototype );\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function get (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      this.__altered = true;\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._list.__iterate(\n      function (entry) { return entry && fn(entry[1], entry[0], this$1$1); },\n      reverse\n    );\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map));\n\nOrderedMap.isOrderedMap = isOrderedMap;\n\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  omap.__altered = false;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\nfunction emptyOrderedMap() {\n  return (\n    EMPTY_ORDERED_MAP ||\n    (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))\n  );\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });\n      newMap = newList\n        .toKeyedSeq()\n        .map(function (entry) { return entry[0]; })\n        .flip()\n        .toMap();\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    omap.__altered = true;\n    return omap;\n  }\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack = /*@__PURE__*/(function (IndexedCollection) {\n  function Stack(value) {\n    return value === undefined || value === null\n      ? emptyStack()\n      : isStack(value)\n      ? value\n      : emptyStack().pushAll(value);\n  }\n\n  if ( IndexedCollection ) Stack.__proto__ = IndexedCollection;\n  Stack.prototype = Object.create( IndexedCollection && IndexedCollection.prototype );\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push (/*...values*/) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head,\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll (iter) {\n    iter = IndexedCollection(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head,\n      };\n    }, /* reverse */ true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(\n        function (v, k) { return fn(v, k, this$1$1); },\n        reverse\n      );\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator (type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection));\n\nStack.isStack = isStack;\n\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (\n    !isCollection(b) ||\n    (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||\n    (a.__hash !== undefined &&\n      b.__hash !== undefined &&\n      a.__hash !== b.__hash) ||\n    isKeyed(a) !== isKeyed(b) ||\n    isIndexed(a) !== isIndexed(b) ||\n    isOrdered(a) !== isOrdered(b)\n  ) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return (\n      b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done\n    );\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n  var bSize = b.__iterate(function (v, k) {\n    if (\n      notAssociative\n        ? !a.has(v)\n        : flipped\n        ? !is(v, a.get(k, NOT_SET))\n        : !is(a.get(k, NOT_SET), v)\n    ) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n\nfunction mixin(ctor, methods) {\n  var keyCopier = function (key) {\n    ctor.prototype[key] = methods[key];\n  };\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols &&\n    Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n    value = Seq(value);\n  }\n  if (isKeyed(value)) {\n    var result$1 = {};\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n    return result$1;\n  }\n  var result = [];\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n  return result;\n}\n\nvar Set = /*@__PURE__*/(function (SetCollection) {\n  function Set(value) {\n    return value === undefined || value === null\n      ? emptySet()\n      : isSet(value) && !isOrdered(value)\n      ? value\n      : emptySet().withMutations(function (set) {\n          var iter = SetCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v) { return set.add(v); });\n        });\n  }\n\n  if ( SetCollection ) Set.__proto__ = SetCollection;\n  Set.prototype = Object.create( SetCollection && SetCollection.prototype );\n  Set.prototype.constructor = Set;\n\n  Set.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.intersect.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.union = function union (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.union.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.prototype.toString = function toString () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function has (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function add (value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    // keep track if the set is altered by the map function\n    var didChanges = false;\n\n    var newMap = updateSet(\n      this,\n      this._map.mapEntries(function (ref) {\n        var v = ref[1];\n\n        var mapped = mapper.call(context, v, v, this$1$1);\n\n        if (mapped !== v) {\n          didChanges = true;\n        }\n\n        return [mapped, mapped];\n      }, context)\n    );\n\n    return didChanges ? newMap : this;\n  };\n\n  Set.prototype.union = function union () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    iters = iters.filter(function (x) { return x.size !== 0; });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        if (typeof iters[ii] === 'string') {\n          set.add(iters[ii]);\n        } else {\n          SetCollection(iters[ii]).forEach(function (value) { return set.add(value); });\n        }\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._map.__iterate(function (k) { return fn(k, k, this$1$1); }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator (type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection));\n\nSet.isSet = isSet;\n\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\nSetPrototype['@@transducer/step'] = function (result, arr) {\n  return result.add(arr);\n};\nSetPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n  return newMap === set._map\n    ? set\n    : newMap.size === 0\n    ? set.__empty()\n    : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/(function (IndexedSeq) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if ( IndexedSeq ) Range.__proto__ = IndexedSeq;\n  Range.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return (\n      'Range [ ' +\n      this._start +\n      '...' +\n      this._end +\n      (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]'\n    );\n  };\n\n  Range.prototype.get = function get (index, notSetValue) {\n    return this.has(index)\n      ? this._start + wrapIndex(this, index) * this._step\n      : notSetValue;\n  };\n\n  Range.prototype.includes = function includes (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return (\n      possibleIndex >= 0 &&\n      possibleIndex < this.size &&\n      possibleIndex === Math.floor(possibleIndex)\n    );\n  };\n\n  Range.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(\n      this.get(begin, this._end),\n      this.get(end, this._end),\n      this._step\n    );\n  };\n\n  Range.prototype.indexOf = function indexOf (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator (type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals (other) {\n    return other instanceof Range\n      ? this._start === other._start &&\n          this._end === other._end &&\n          this._step === other._step\n      : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq));\n\nvar EMPTY_RANGE;\n\nfunction getIn$1(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n  return collection;\n}\n\nfunction getIn(searchKeyPath, notSetValue) {\n  return getIn$1(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn$1(collection, keyPath) {\n  return getIn$1(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn(searchKeyPath) {\n  return hasIn$1(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n  return object;\n}\n\n// Note: all of these methods are deprecated.\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\n\nCollection.Iterator = Iterator;\n\nmixin(Collection, {\n  // ### Conversion to other types\n\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n    return array;\n  },\n\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n\n  toObject: toObject,\n\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n\n  toSeq: function toSeq() {\n    return isIndexed(this)\n      ? this.toIndexedSeq()\n      : isKeyed(this)\n      ? this.toKeyedSeq()\n      : this.toSetSeq();\n  },\n\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  // ### Common JavaScript methods and properties\n\n  toString: function toString() {\n    return '[Collection]';\n  },\n\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n    return (\n      head +\n      ' ' +\n      this.toSeq().map(this.__toStringMapper).join(', ') +\n      ' ' +\n      tail\n    );\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  concat: function concat() {\n    var values = [], len = arguments.length;\n    while ( len-- ) values[ len ] = arguments[ len ];\n\n    return reify(this, concatFactory(this, values));\n  },\n\n  includes: function includes(searchValue) {\n    return this.some(function (value) { return is(value, searchValue); });\n  },\n\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n    return returnValue;\n  },\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n\n  partition: function partition(predicate, context) {\n    return partitionFactory(this, predicate, context);\n  },\n\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n    this.__iterate(function (v) {\n      isFirst ? (isFirst = false) : (joined += separator);\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n    return joined;\n  },\n\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      false\n    );\n  },\n\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      true\n    );\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n\n  some: function some(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = false;\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        returnValue = true;\n        return false;\n      }\n    });\n    return returnValue;\n  },\n\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n\n  // ### More sequential methods\n\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });\n  },\n\n  count: function count(predicate, context) {\n    return ensureSize(\n      predicate ? this.toSeq().filter(predicate, context) : this\n    );\n  },\n\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n\n  entrySeq: function entrySeq() {\n    var collection = this;\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n    var entriesSequence = collection.toSeq().map(entryMapper).toIndexedSeq();\n    entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };\n    return entriesSequence;\n  },\n\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n    return found;\n  },\n\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n  },\n\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findEntry(predicate, context, notSetValue);\n  },\n\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq().reverse().findKey(predicate, context);\n  },\n\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);\n  },\n\n  getIn: getIn,\n\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n\n  hasIn: hasIn,\n\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) { return iter.includes(value); });\n  },\n\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) { return is(value, searchValue); });\n  },\n\n  keySeq: function keySeq() {\n    return this.toSeq().map(keyMapper).toIndexedSeq();\n  },\n\n  last: function last(notSetValue) {\n    return this.toSeq().reverse().first(notSetValue);\n  },\n\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq().reverse().keyOf(searchValue);\n  },\n\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n\n  min: function min(comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator\n    );\n  },\n\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator,\n      mapper\n    );\n  },\n\n  rest: function rest() {\n    return this.slice(1);\n  },\n\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n\n  update: function update(fn) {\n    return fn(this);\n  },\n\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n\n  // ### Hashable Object\n\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  },\n\n  // ### Internal\n\n  // abstract __iterate(fn, reverse)\n\n  // abstract __iterator(type, reverse)\n});\n\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\nCollectionPrototype.inspect = CollectionPrototype.toSource = function () {\n  return this.toString();\n};\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\n\nmixin(KeyedCollection, {\n  // ### More sequential methods\n\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    return reify(\n      this,\n      this.toSeq()\n        .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1$1); })\n        .fromEntrySeq()\n    );\n  },\n\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1$1 = this;\n\n    return reify(\n      this,\n      this.toSeq()\n        .flip()\n        .map(function (k, v) { return mapper.call(context, k, v, this$1$1); })\n        .flip()\n    );\n  },\n});\n\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\nKeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n\n  splice: function splice(index, removeNum /*, ...values*/) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n      return this;\n    }\n    // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(\n      this,\n      numArgs === 1\n        ? spliced\n        : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n    );\n  },\n\n  // ### More collection methods\n\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 ||\n      this.size === Infinity ||\n      (this.size !== undefined && index > this.size)\n      ? notSetValue\n      : this.find(function (_, key) { return key === index; }, undefined, notSetValue);\n  },\n\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return (\n      index >= 0 &&\n      (this.size !== undefined\n        ? this.size === Infinity || index < this.size\n        : this.indexOf(index) !== -1)\n    );\n  },\n\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n\n  interleave: function interleave(/*...collections*/) {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n    return reify(this, interleaved);\n  },\n\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n\n  zip: function zip(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n\n  zipAll: function zipAll(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n\n  zipWith: function zipWith(zipper /*, ...collections */) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  },\n});\n\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\n\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n\n  includes: function includes(value) {\n    return this.has(value);\n  },\n\n  // ### More sequential methods\n\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  },\n});\n\nvar SetCollectionPrototype = SetCollection.prototype;\nSetCollectionPrototype.has = CollectionPrototype.includes;\nSetCollectionPrototype.contains = SetCollectionPrototype.includes;\nSetCollectionPrototype.keys = SetCollectionPrototype.values;\n\n// Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollectionPrototype);\nmixin(IndexedSeq, IndexedCollectionPrototype);\nmixin(SetSeq, SetCollectionPrototype);\n\n// #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function () {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function () {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n  var size = collection.__iterate(\n    keyed\n      ? ordered\n        ? function (v, k) {\n            h = (31 * h + hashMerge(hash(v), hash(k))) | 0;\n          }\n        : function (v, k) {\n            h = (h + hashMerge(hash(v), hash(k))) | 0;\n          }\n      : ordered\n      ? function (v) {\n          h = (31 * h + hash(v)) | 0;\n        }\n      : function (v) {\n          h = (h + hash(v)) | 0;\n        }\n  );\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul((h << 15) | (h >>> -15), 0x1b873593);\n  h = imul((h << 13) | (h >>> -13), 5);\n  h = ((h + 0xe6546b64) | 0) ^ size;\n  h = imul(h ^ (h >>> 16), 0x85ebca6b);\n  h = imul(h ^ (h >>> 13), 0xc2b2ae35);\n  h = smi(h ^ (h >>> 16));\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int\n}\n\nvar OrderedSet = /*@__PURE__*/(function (Set) {\n  function OrderedSet(value) {\n    return value === undefined || value === null\n      ? emptyOrderedSet()\n      : isOrderedSet(value)\n      ? value\n      : emptyOrderedSet().withMutations(function (set) {\n          var iter = SetCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v) { return set.add(v); });\n        });\n  }\n\n  if ( Set ) OrderedSet.__proto__ = Set;\n  OrderedSet.prototype = Object.create( Set && Set.prototype );\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set));\n\nOrderedSet.isOrderedSet = isOrderedSet;\n\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\nOrderedSetPrototype.zipAll = IndexedCollectionPrototype.zipAll;\n\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\nfunction emptyOrderedSet() {\n  return (\n    EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))\n  );\n}\n\nvar PairSorting = {\n  LeftThenRight: -1,\n  RightThenLeft: +1,\n};\n\nfunction throwOnInvalidDefaultValues(defaultValues) {\n  if (isRecord(defaultValues)) {\n    throw new Error(\n      'Can not call `Record` with an immutable Record as default values. Use a plain javascript object instead.'\n    );\n  }\n\n  if (isImmutable(defaultValues)) {\n    throw new Error(\n      'Can not call `Record` with an immutable Collection as default values. Use a plain javascript object instead.'\n    );\n  }\n\n  if (defaultValues === null || typeof defaultValues !== 'object') {\n    throw new Error(\n      'Can not call `Record` with a non-object as default values. Use a plain javascript object instead.'\n    );\n  }\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  throwOnInvalidDefaultValues(defaultValues);\n\n  var RecordType = function Record(values) {\n    var this$1$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = (RecordTypePrototype._indices = {});\n      // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          typeof console === 'object' &&\n            console.warn &&\n            console.warn(\n              'Cannot define ' +\n                recordName(this) +\n                ' with property \"' +\n                propName +\n                '\" since that property name is part of the Record API.'\n            );\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1$1._indices[k], v === this$1$1._defaultValues[k] ? undefined : v);\n      });\n    });\n    return this;\n  };\n\n  var RecordTypePrototype = (RecordType.prototype =\n    Object.create(RecordPrototype));\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString () {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals (other) {\n  return (\n    this === other ||\n    (isRecord(other) && recordSeq(this).equals(recordSeq(other)))\n  );\n};\n\nRecord.prototype.hashCode = function hashCode () {\n  return recordSeq(this).hashCode();\n};\n\n// @pragma Access\n\nRecord.prototype.has = function has (k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get (k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n  var index = this._indices[k];\n  var value = this._values.get(index);\n  return value === undefined ? this._defaultValues[k] : value;\n};\n\n// @pragma Modification\n\nRecord.prototype.set = function set (k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(\n      this._indices[k],\n      v === this._defaultValues[k] ? undefined : v\n    );\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n  return this;\n};\n\nRecord.prototype.remove = function remove (k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear () {\n  var newValues = this._values.clear().setSize(this._keys.length);\n\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered () {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq () {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1 () {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries () {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator (type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate (fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n  var newValues = this._values.__ensureOwner(ownerID);\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge$1;\nRecordPrototype.mergeWith = mergeWith$1;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep;\nRecordPrototype.mergeDeepWith = mergeDeepWith;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn;\nRecordPrototype.update = update;\nRecordPrototype.updateIn = updateIn;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject =\n  CollectionPrototype.toObject;\nRecordPrototype.inspect = RecordPrototype.toSource = function () {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function () {\n        return this.get(name);\n      },\n      set: function (value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      },\n    });\n  } catch (error) {\n    // Object.defineProperty failed. Probably IE8.\n  }\n}\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/(function (IndexedSeq) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if ( IndexedSeq ) Repeat.__proto__ = IndexedSeq;\n  Repeat.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size)\n      ? this\n      : new Repeat(\n          this._value,\n          resolveEnd(end, size) - resolveBegin(begin, size)\n        );\n  };\n\n  Repeat.prototype.reverse = function reverse () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () { return i === size\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? size - ++i : i++, this$1$1._value); }\n    );\n  };\n\n  Repeat.prototype.equals = function equals (other) {\n    return other instanceof Repeat\n      ? is(this._value, other._value)\n      : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq));\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith(\n    [],\n    converter || defaultConverter,\n    value,\n    '',\n    converter && converter.length > 2 ? [] : undefined,\n    { '': value }\n  );\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  if (\n    typeof value !== 'string' &&\n    !isImmutable(value) &&\n    (isArrayLike(value) || hasIterator(value) || isPlainObject(value))\n  ) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(\n      parentValue,\n      key,\n      Seq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }\n      ),\n      keyPath && keyPath.slice()\n    );\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  // Effectively the opposite of \"Collection.toSeq()\"\n  return isIndexed(v) ? v.toList() : isKeyed(v) ? v.toMap() : v.toSet();\n}\n\nvar version = \"4.3.5\";\n\nvar Immutable = {\n  version: version,\n\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n  PairSorting: PairSorting,\n\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isPlainObject: isPlainObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n\n  get: get,\n  getIn: getIn$1,\n  has: has,\n  hasIn: hasIn$1,\n  merge: merge,\n  mergeDeep: mergeDeep$1,\n  mergeWith: mergeWith,\n  mergeDeepWith: mergeDeepWith$1,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn$1,\n  update: update$1,\n  updateIn: updateIn$1,\n};\n\n// Note: Iterable is deprecated\nvar Iterable = Collection;\n\nexport default Immutable;\nexport { Collection, Iterable, List, Map, OrderedMap, OrderedSet, PairSorting, Range, Record, Repeat, Seq, Set, Stack, fromJS, get, getIn$1 as getIn, has, hasIn$1 as hasIn, hash, is, isAssociative, isCollection, isImmutable, isIndexed, isKeyed, isList, isMap, isOrdered, isOrderedMap, isOrderedSet, isPlainObject, isRecord, isSeq, isSet, isStack, isValueObject, merge, mergeDeep$1 as mergeDeep, mergeDeepWith$1 as mergeDeepWith, mergeWith, remove, removeIn, set, setIn$1 as setIn, update$1 as update, updateIn$1 as updateIn, version };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/BlankNode\"), exports);\n__exportStar(require(\"./lib/DataFactory\"), exports);\n__exportStar(require(\"./lib/DefaultGraph\"), exports);\n__exportStar(require(\"./lib/Literal\"), exports);\n__exportStar(require(\"./lib/NamedNode\"), exports);\n__exportStar(require(\"./lib/Quad\"), exports);\n__exportStar(require(\"./lib/Variable\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlankNode = void 0;\n/**\n * A term that represents an RDF blank node with a label.\n */\nclass BlankNode {\n    constructor(value) {\n        this.termType = 'BlankNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n    }\n}\nexports.BlankNode = BlankNode;\n//# sourceMappingURL=BlankNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataFactory = void 0;\nconst BlankNode_1 = require(\"./BlankNode\");\nconst DefaultGraph_1 = require(\"./DefaultGraph\");\nconst Literal_1 = require(\"./Literal\");\nconst NamedNode_1 = require(\"./NamedNode\");\nconst Quad_1 = require(\"./Quad\");\nconst Variable_1 = require(\"./Variable\");\nlet dataFactoryCounter = 0;\n/**\n * A factory for instantiating RDF terms and quads.\n */\nclass DataFactory {\n    constructor(options) {\n        this.blankNodeCounter = 0;\n        options = options || {};\n        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n    }\n    /**\n     * @param value The IRI for the named node.\n     * @return A new instance of NamedNode.\n     * @see NamedNode\n     */\n    namedNode(value) {\n        return new NamedNode_1.NamedNode(value);\n    }\n    /**\n     * @param value The optional blank node identifier.\n     * @return A new instance of BlankNode.\n     *         If the `value` parameter is undefined a new identifier\n     *         for the blank node is generated for each call.\n     * @see BlankNode\n     */\n    blankNode(value) {\n        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n    }\n    /**\n     * @param value              The literal value.\n     * @param languageOrDatatype The optional language or datatype.\n     *                           If `languageOrDatatype` is a NamedNode,\n     *                           then it is used for the value of `NamedNode.datatype`.\n     *                           Otherwise `languageOrDatatype` is used for the value\n     *                           of `NamedNode.language`.\n     * @return A new instance of Literal.\n     * @see Literal\n     */\n    literal(value, languageOrDatatype) {\n        return new Literal_1.Literal(value, languageOrDatatype);\n    }\n    /**\n     * This method is optional.\n     * @param value The variable name\n     * @return A new instance of Variable.\n     * @see Variable\n     */\n    variable(value) {\n        return new Variable_1.Variable(value);\n    }\n    /**\n     * @return An instance of DefaultGraph.\n     */\n    defaultGraph() {\n        return DefaultGraph_1.DefaultGraph.INSTANCE;\n    }\n    /**\n     * @param subject   The quad subject term.\n     * @param predicate The quad predicate term.\n     * @param object    The quad object term.\n     * @param graph     The quad graph term.\n     * @return A new instance of Quad.\n     * @see Quad\n     */\n    quad(subject, predicate, object, graph) {\n        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n    }\n    /**\n     * Create a deep copy of the given term using this data factory.\n     * @param original An RDF term.\n     * @return A deep copy of the given term.\n     */\n    fromTerm(original) {\n        // TODO: remove nasty any casts when this TS bug has been fixed:\n        //  https://github.com/microsoft/TypeScript/issues/26933\n        switch (original.termType) {\n            case 'NamedNode':\n                return this.namedNode(original.value);\n            case 'BlankNode':\n                return this.blankNode(original.value);\n            case 'Literal':\n                if (original.language) {\n                    return this.literal(original.value, original.language);\n                }\n                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n                    return this.literal(original.value, this.fromTerm(original.datatype));\n                }\n                return this.literal(original.value);\n            case 'Variable':\n                return this.variable(original.value);\n            case 'DefaultGraph':\n                return this.defaultGraph();\n            case 'Quad':\n                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n        }\n    }\n    /**\n     * Create a deep copy of the given quad using this data factory.\n     * @param original An RDF quad.\n     * @return A deep copy of the given quad.\n     */\n    fromQuad(original) {\n        return this.fromTerm(original);\n    }\n    /**\n     * Reset the internal blank node counter.\n     */\n    resetBlankNodeCounter() {\n        this.blankNodeCounter = 0;\n    }\n}\nexports.DataFactory = DataFactory;\n//# sourceMappingURL=DataFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass DefaultGraph {\n    constructor() {\n        this.termType = 'DefaultGraph';\n        this.value = '';\n        // Private constructor\n    }\n    equals(other) {\n        return !!other && other.termType === 'DefaultGraph';\n    }\n}\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();\n//# sourceMappingURL=DefaultGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && this.datatype.equals(other.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n//# sourceMappingURL=Literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NamedNode = void 0;\n/**\n * A term that contains an IRI.\n */\nclass NamedNode {\n    constructor(value) {\n        this.termType = 'NamedNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n    }\n}\nexports.NamedNode = NamedNode;\n//# sourceMappingURL=NamedNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n//# sourceMappingURL=Quad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\n/**\n * A term that represents a variable.\n */\nclass Variable {\n    constructor(value) {\n        this.termType = 'Variable';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'Variable' && other.value === this.value;\n    }\n}\nexports.Variable = Variable;\n//# sourceMappingURL=Variable.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/RdfIsomorphic\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTermGrounded = exports.termToSignature = exports.quadToSignature = exports.sha1hex = exports.hashTerm = exports.hashTerms = exports.getGraphBlankNodes = exports.uniqGraph = exports.deindexGraph = exports.indexGraph = exports.getQuadsWithoutBlankNodes = exports.getQuadsWithBlankNodes = exports.hasValue = exports.hashValues = exports.getBijectionInner = exports.getBijection = exports.isomorphic = void 0;\nconst hash_js_1 = require(\"hash.js\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst rdf_terms_1 = require(\"rdf-terms\");\n/**\n * Determines if the two given graphs are isomorphic.\n *\n * @param {Quad[]} graphA An array of quads, order is not important.\n * @param {Quad[]} graphB An array of quads, order is not important.\n * @return {boolean} If the two given graphs are isomorphic.\n */\nfunction isomorphic(graphA, graphB) {\n    return !!getBijection(graphA, graphB);\n}\nexports.isomorphic = isomorphic;\n/**\n * Calculate a hash of graphA blank nodes to graphB blank nodes.\n * This represents a bijection from graphA's blank nodes to graphB's blank nodes.\n *\n * @param {Quad[]} graphA An array of quads, order is not important.\n * @param {Quad[]} graphB An array of quads, order is not important.\n * @return {IBijection} A hash representing a bijection, or null if none could be found.\n */\nfunction getBijection(graphA, graphB) {\n    // Check if all (non-blanknode-containing) quads in the two graphs are equal.\n    // We do this by creating a hash-based index for both graphs.\n    const nonBlankIndexA = indexGraph(getQuadsWithoutBlankNodes(graphA));\n    const nonBlankIndexB = indexGraph(getQuadsWithoutBlankNodes(graphB));\n    if (Object.keys(nonBlankIndexA).length !== Object.keys(nonBlankIndexB).length) {\n        return null;\n    }\n    for (const key in nonBlankIndexA) {\n        if (nonBlankIndexA[key] !== nonBlankIndexB[key]) {\n            return null;\n        }\n    }\n    // Pre-process data that needs to be present in each iteration of getBijectionInner.\n    const blankQuadsA = uniqGraph(getQuadsWithBlankNodes(graphA));\n    const blankQuadsB = uniqGraph(getQuadsWithBlankNodes(graphB));\n    const blankNodesA = getGraphBlankNodes(graphA);\n    const blankNodesB = getGraphBlankNodes(graphB);\n    return getBijectionInner(blankQuadsA, blankQuadsB, blankNodesA, blankNodesB);\n}\nexports.getBijection = getBijection;\nfunction getBijectionInner(blankQuadsA, blankQuadsB, blankNodesA, blankNodesB, groundedHashesA, groundedHashesB) {\n    if (!groundedHashesA) {\n        groundedHashesA = {};\n    }\n    if (!groundedHashesB) {\n        groundedHashesB = {};\n    }\n    // Hash every term based on the signature of the quads if appears in.\n    const [hashesA, ungroundedHashesA] = hashTerms(blankQuadsA, blankNodesA, groundedHashesA);\n    const [hashesB, ungroundedHashesB] = hashTerms(blankQuadsB, blankNodesB, groundedHashesB);\n    // Break quickly if a graph contains a grounded node that is not contained in the other graph.\n    if (Object.keys(hashesA).length !== Object.keys(hashesB).length) {\n        return null;\n    }\n    for (const hashKeyA in hashesA) {\n        if (!hasValue(hashesB, hashesA[hashKeyA])) {\n            return null;\n        }\n    }\n    // Map the blank nodes from graph A to the blank nodes of graph B using the created hashes.\n    // Grounded hashes will also be equal, but not needed here, we will need them in the next recursion\n    // (as we only recurse on grounded nodes).\n    let bijection = {};\n    for (const blankNodeA of blankNodesA) {\n        const blankNodeAString = rdf_string_1.termToString(blankNodeA);\n        const blankNodeAHash = ungroundedHashesA[blankNodeAString];\n        for (const blankNodeBString in ungroundedHashesB) {\n            if (ungroundedHashesB[blankNodeBString] === blankNodeAHash) {\n                bijection[blankNodeAString] = blankNodeBString;\n                delete ungroundedHashesB[blankNodeBString];\n                break;\n            }\n        }\n    }\n    // Check if all nodes from graph A and B are present in the bijection,\n    // if not, speculatively mark pairs with matching ungrounded hashes as bijected, and recurse.\n    if (!arraysEqual(Object.keys(bijection).sort(), blankNodesA.map(rdf_string_1.termToString).sort())\n        || !arraysEqual(hashValues(bijection).sort(), blankNodesB.map(rdf_string_1.termToString).sort())) {\n        // I have not yet been able to find any pathological cases where this code is reached.\n        // This may be removable, but let's wait until someone proves that.\n        bijection = null;\n        for (const blankNodeA of blankNodesA) {\n            // Only replace ungrounded node hashes\n            const blankNodeAString = rdf_string_1.termToString(blankNodeA);\n            if (!hashesA[blankNodeAString]) {\n                for (const blankNodeB of blankNodesB) {\n                    // Only replace ungrounded node hashes\n                    const blankNodeBString = rdf_string_1.termToString(blankNodeB);\n                    if (!hashesB[blankNodeBString]) {\n                        if (ungroundedHashesA[blankNodeAString] === ungroundedHashesB[blankNodeBString]) {\n                            const hash = sha1hex(blankNodeAString);\n                            bijection = getBijectionInner(blankQuadsA, blankQuadsB, blankNodesA, blankNodesB, Object.assign(Object.assign({}, hashesA), { [blankNodeAString]: hash }), Object.assign(Object.assign({}, hashesB), { [blankNodeBString]: hash }));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return bijection;\n}\nexports.getBijectionInner = getBijectionInner;\nfunction arraysEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    for (let i = array1.length; i--;) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Get all values from the given hash\n * @param hash A hash.\n * @return {any[]} The array of values.\n */\nfunction hashValues(hash) {\n    const arr = [];\n    for (const e in hash) {\n        arr.push(hash[e]);\n    }\n    return arr;\n}\nexports.hashValues = hashValues;\n/**\n * Check if the given hash contains the given value.\n * @param hash A hash.\n * @param {string} value A value.\n * @return {boolean} If it contains the value.\n */\nfunction hasValue(hash, value) {\n    for (const hashValue in hash) {\n        if (hash[hashValue] === value) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasValue = hasValue;\n/**\n * Get all quads with blank nodes.\n * @param {Quad[]} graph An array of quads.\n * @return {Quad[]} An array of quads with blank nodes\n */\nfunction getQuadsWithBlankNodes(graph) {\n    return graph.filter((quad) => rdf_terms_1.someTerms(quad, (value) => {\n        return value.termType === 'BlankNode'\n            || (value.termType === 'Quad' && rdf_terms_1.getTermsNested(value).some(term => term.termType === 'BlankNode'));\n    }));\n}\nexports.getQuadsWithBlankNodes = getQuadsWithBlankNodes;\n/**\n * Get all quads without blank nodes.\n * @param {Quad[]} graph An array of quads.\n * @return {Quad[]} An array of quads without blank nodes\n */\nfunction getQuadsWithoutBlankNodes(graph) {\n    return graph.filter((quad) => rdf_terms_1.everyTerms(quad, (value) => {\n        return value.termType !== 'BlankNode'\n            && !(value.termType === 'Quad' && rdf_terms_1.getTermsNested(value).some(term => term.termType === 'BlankNode'));\n    }));\n}\nexports.getQuadsWithoutBlankNodes = getQuadsWithoutBlankNodes;\n/**\n * Create a hash-based index of the given graph.\n * @param {Quad[]} graph An array of quads, the order does not matter.\n * @return {{[p: string]: boolean}} A hash-based datastructure representing the graph.\n */\nfunction indexGraph(graph) {\n    const index = {};\n    for (const quad of graph) {\n        index[JSON.stringify(rdf_string_1.quadToStringQuad(quad))] = true;\n    }\n    return index;\n}\nexports.indexGraph = indexGraph;\n/**\n * Create a graph from the given hash-based index.\n * @param {{[p: string]: boolean}} indexedGraph A hash-based datastructure representing the graph.\n * @return {Quad[]} An array of quads, the order does not matter.\n */\nfunction deindexGraph(indexedGraph) {\n    return Object.keys(indexedGraph).map((str) => rdf_string_1.stringQuadToQuad(JSON.parse(str)));\n}\nexports.deindexGraph = deindexGraph;\n/**\n * Unique-ify the given RDF graph based on strict equality.\n * The output graph will consist of new quad and term instances.\n * @param {Quad[]} graph An input graph.\n * @return {Quad[]} The input graph without duplicates.\n */\nfunction uniqGraph(graph) {\n    return deindexGraph(indexGraph(graph));\n}\nexports.uniqGraph = uniqGraph;\n/**\n * Find all blank nodes in the given graph.\n * @param {Quad[]} graph An array of quads.\n * @return {BlankNode[]} A list of (unique) blank nodes.\n */\nfunction getGraphBlankNodes(graph) {\n    return rdf_terms_1.uniqTerms(graph.map((quad) => rdf_terms_1.getBlankNodes(rdf_terms_1.getTermsNested(quad)))\n        .reduce((acc, val) => acc.concat(val), []));\n}\nexports.getGraphBlankNodes = getGraphBlankNodes;\n/**\n * Create term hashes for the given set of quads and blank node terms.\n *\n * @param {Quad[]} quads A set of quads.\n * @param {Term[]} terms Blank node terms.\n * @param {ITermHash} groundedHashes Grounded term hashes that are used to create more specific signatures\n *                                   of other terms, because they are based on non-blank nodes and grounded blank nodes.\n * @return {[ITermHash]} A tuple of grounded and ungrounded hashes.\n */\nfunction hashTerms(quads, terms, groundedHashes) {\n    const hashes = Object.assign({}, groundedHashes);\n    const ungroundedHashes = {};\n    let hashNeeded = true;\n    // Iteratively mark nodes as grounded.\n    // If a node is marked as grounded, then the next iteration can lead to new grounded states\n    while (hashNeeded) {\n        const initialGroundedNodesCount = Object.keys(hashes).length;\n        for (const term of terms) {\n            const termString = rdf_string_1.termToString(term);\n            if (!hashes[termString]) {\n                const [grounded, hash] = hashTerm(term, quads, hashes);\n                if (grounded) {\n                    hashes[termString] = hash;\n                }\n                ungroundedHashes[termString] = hash;\n            }\n        }\n        // All terms that have a unique hash at this point can be marked as grounded\n        const uniques = {};\n        for (const termKey in ungroundedHashes) {\n            const hash = ungroundedHashes[termKey];\n            if (uniques[hash] === undefined) {\n                uniques[hash] = termKey;\n            }\n            else {\n                uniques[hash] = false;\n            }\n        }\n        for (const hash in uniques) {\n            const value = uniques[hash];\n            if (value) {\n                hashes[value] = hash;\n            }\n        }\n        // Check if the loop needs to terminate\n        hashNeeded = initialGroundedNodesCount !== Object.keys(hashes).length;\n    }\n    return [hashes, ungroundedHashes];\n}\nexports.hashTerms = hashTerms;\n/**\n * Generate a hash for the given term based on the signature of the quads it appears in.\n *\n * Signatures are made up of grounded terms in quads that are associated with a term,\n * i.e., everything except for ungrounded blank nodes.\n * The hash is created by hashing a sorted list of each quad's signature,\n * where each quad signature is a concatenation of the signature of all grounded terms.\n *\n * Terms are considered grounded if they are a member in the given hash AND if they are not the given term.\n *\n * @param {Term} term The term to get the hash around.\n * @param {Quad[]} quads The quads to include in the hashing.\n * @param {ITermHash} hashes A grounded term hash object.\n * @return {[boolean , string]} A tuple indicating if the given term is grounded in all the given quads, and the hash.\n */\nfunction hashTerm(term, quads, hashes) {\n    const quadSignatures = [];\n    let grounded = true;\n    for (const quad of quads) {\n        const terms = rdf_terms_1.getTermsNested(quad);\n        if (terms.some((quadTerm) => quadTerm.equals(term))) {\n            quadSignatures.push(quadToSignature(quad, hashes, term));\n            for (const quadTerm of terms) {\n                if (!isTermGrounded(quadTerm, hashes) && !quadTerm.equals(term)) {\n                    grounded = false;\n                }\n            }\n        }\n    }\n    const hash = sha1hex(quadSignatures.sort().join(''));\n    return [grounded, hash];\n}\nexports.hashTerm = hashTerm;\n/**\n * Create a hash using sha1 as a hex digest.\n * @param {string | Buffer | NodeJS.TypedArray | DataView} data Something to hash.\n * @return {string} A hash string.\n */\nfunction sha1hex(data) {\n    return hash_js_1.sha1().update(data).digest('hex');\n}\nexports.sha1hex = sha1hex;\n/**\n * Convert the given quad to a string signature so that it can be used in the hash structure.\n * @param {Quad} quad A quad.\n * @param {ITermHash} hashes A grounded term hash object.\n * @param {Term} term A target term to compare with.\n * @return {string} A string signature.\n */\nfunction quadToSignature(quad, hashes, term) {\n    return rdf_terms_1.getTerms(quad).map((quadTerm) => termToSignature(quadTerm, hashes, term)).join('|');\n}\nexports.quadToSignature = quadToSignature;\n/**\n * Convert the given term to a string signature so that it can be used in the hash structure.\n * @param {Term} term A term.\n * @param {ITermHash} hashes A grounded term hash object.\n * @param {Term} target A target term to compare with.\n * @return {string} A string signature.\n */\nfunction termToSignature(term, hashes, target) {\n    if (term.equals(target)) {\n        return '@self';\n    }\n    else if (term.termType === 'BlankNode') {\n        return hashes[rdf_string_1.termToString(term)] || '@blank';\n    }\n    else if (term.termType === 'Quad') {\n        return `<${quadToSignature(term, hashes, target)}>`;\n    }\n    else {\n        return rdf_string_1.termToString(term);\n    }\n}\nexports.termToSignature = termToSignature;\n/**\n * Check if a term is grounded.\n *\n * A term is grounded if it is not a blank node\n * or if it included in the given hash of grounded nodes.\n *\n * @param {Term} term A term.\n * @param {ITermHash} hashes A grounded term hash object.\n * @return {boolean} If the given term is grounded.\n */\nfunction isTermGrounded(term, hashes) {\n    return (term.termType !== 'BlankNode'\n        && !(term.termType === 'Quad' && rdf_terms_1.getTermsNested(term).some(subTerm => !isTermGrounded(subTerm, hashes)))) || !!hashes[rdf_string_1.termToString(term)];\n}\nexports.isTermGrounded = isTermGrounded;\n//# sourceMappingURL=RdfIsomorphic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.termToString = exports.stringToTerm = exports.stringQuadToQuad = exports.quadToStringQuad = exports.getLiteralValue = exports.getLiteralType = exports.getLiteralLanguage = void 0;\nconst TermUtil_1 = require(\"./lib/TermUtil\");\nObject.defineProperty(exports, \"getLiteralLanguage\", { enumerable: true, get: function () { return TermUtil_1.getLiteralLanguage; } });\nObject.defineProperty(exports, \"getLiteralType\", { enumerable: true, get: function () { return TermUtil_1.getLiteralType; } });\nObject.defineProperty(exports, \"getLiteralValue\", { enumerable: true, get: function () { return TermUtil_1.getLiteralValue; } });\nObject.defineProperty(exports, \"quadToStringQuad\", { enumerable: true, get: function () { return TermUtil_1.quadToStringQuad; } });\nObject.defineProperty(exports, \"stringQuadToQuad\", { enumerable: true, get: function () { return TermUtil_1.stringQuadToQuad; } });\nObject.defineProperty(exports, \"stringToTerm\", { enumerable: true, get: function () { return TermUtil_1.stringToTerm; } });\nObject.defineProperty(exports, \"termToString\", { enumerable: true, get: function () { return TermUtil_1.termToString; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringQuadToQuad = exports.quadToStringQuad = exports.stringToTerm = exports.getLiteralLanguage = exports.getLiteralType = exports.getLiteralValue = exports.termToString = void 0;\nconst rdf_data_factory_1 = require(\"rdf-data-factory\");\nconst FACTORY = new rdf_data_factory_1.DataFactory();\n/**\n * Utility methods for converting between string-based RDF representations and RDFJS objects.\n *\n * RDF Terms are represented as follows:\n * * Blank nodes: '_:myBlankNode'\n * * Variables:   '?myVariable'\n * * Literals:    '\"myString\"', '\"myLanguageString\"@en-us', '\"3\"^^xsd:number'\n * * URIs:        'http://example.org'\n *\n * Quads/triples are represented as hashes with 'subject', 'predicate', 'object' and 'graph' (optional)\n * as keys, and string-based RDF terms as values.\n */\n/**\n * Convert an RDFJS term to a string-based representation.\n * @param {RDF.Term} term An RDFJS term.\n * @return {string} A string-based term representation.\n */\nfunction termToString(term) {\n    // TODO: remove nasty any casts when this TS bug has been fixed: https://github.com/microsoft/TypeScript/issues/26933\n    if (!term) {\n        return undefined;\n    }\n    switch (term.termType) {\n        case 'NamedNode': return term.value;\n        case 'BlankNode': return ('_:' + term.value);\n        case 'Literal':\n            const literalValue = term;\n            return ('\"' + literalValue.value + '\"' +\n                (literalValue.datatype &&\n                    literalValue.datatype.value !== 'http://www.w3.org/2001/XMLSchema#string' &&\n                    literalValue.datatype.value !== 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString' ?\n                    '^^' + literalValue.datatype.value : '') +\n                (literalValue.language ? '@' + literalValue.language : ''));\n        case 'Quad': return `<<${termToString(term.subject)} ${termToString(term.predicate)} ${termToString(term.object)}${term.graph.termType === 'DefaultGraph' ? '' : ' ' + termToString(term.graph)}>>`;\n        case 'Variable': return ('?' + term.value);\n        case 'DefaultGraph': return term.value;\n    }\n}\nexports.termToString = termToString;\n/**\n * Get the string value of a literal.\n * @param {string} literalValue An RDF literal enclosed by '\"'.\n * @return {string} The literal value inside the '\"'.\n */\nfunction getLiteralValue(literalValue) {\n    const match = /^\"([^]*)\"/.exec(literalValue);\n    if (!match) {\n        throw new Error(literalValue + ' is not a literal');\n    }\n    return match[1];\n}\nexports.getLiteralValue = getLiteralValue;\n/**\n * Get the datatype of the given literal.\n * @param {string} literalValue An RDF literal.\n * @return {string} The datatype of the literal.\n */\nfunction getLiteralType(literalValue) {\n    const match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literalValue);\n    if (!match) {\n        throw new Error(literalValue + ' is not a literal');\n    }\n    return match[1] || (match[2]\n        ? 'http://www.w3.org/1999/02/22-rdf-syntax-ns#langString' : 'http://www.w3.org/2001/XMLSchema#string');\n}\nexports.getLiteralType = getLiteralType;\n/**\n * Get the language of the given literal.\n * @param {string} literalValue An RDF literal.\n * @return {string} The language of the literal.\n */\nfunction getLiteralLanguage(literalValue) {\n    const match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literalValue);\n    if (!match) {\n        throw new Error(literalValue + ' is not a literal');\n    }\n    return match[1] ? match[1].toLowerCase() : '';\n}\nexports.getLiteralLanguage = getLiteralLanguage;\n/**\n * Transform a string-based RDF term to an RDFJS term.\n * @param {string} value A string-based RDF-term.\n * @param {RDF.DataFactory} dataFactory An optional datafactory to create terms with.\n * @return {RDF.Term} An RDF-JS term.\n */\nfunction stringToTerm(value, dataFactory) {\n    dataFactory = dataFactory || FACTORY;\n    if (!value || !value.length) {\n        return dataFactory.defaultGraph();\n    }\n    switch (value[0]) {\n        case '_': return dataFactory.blankNode(value.substr(2));\n        case '?':\n            if (!dataFactory.variable) {\n                throw new Error(`Missing 'variable()' method on the given DataFactory`);\n            }\n            return dataFactory.variable(value.substr(1));\n        case '\"':\n            const language = getLiteralLanguage(value);\n            const type = dataFactory.namedNode(getLiteralType(value));\n            return dataFactory.literal(getLiteralValue(value), language || type);\n        case '<':\n        default:\n            if (value[0] === '<' && value.length > 4 && value[1] === '<' && value[value.length - 1] === '>' && value[value.length - 2] === '>') {\n                // Iterate character-by-character to detect spaces that are *not* wrapped in <<>>\n                const terms = value.slice(2, -2).trim();\n                let stringTerms = [];\n                let ignoreTags = 0;\n                let lastIndex = 0;\n                let inQuote = false;\n                for (let i = 0; i < terms.length; i++) {\n                    const char = terms[i];\n                    if (char === '<')\n                        ignoreTags++;\n                    if (char === '>') {\n                        if (ignoreTags === 0) {\n                            throw new Error('Found closing tag without opening tag in ' + value);\n                        }\n                        else {\n                            ignoreTags--;\n                        }\n                    }\n                    if (char === '\"') {\n                        let escaped = false;\n                        let j = i;\n                        while (j-- > 0 && terms[j] === '\\\\') {\n                            escaped = !escaped;\n                        }\n                        if (!escaped) {\n                            // We have reached an unescaped quote\n                            inQuote = !inQuote;\n                        }\n                    }\n                    if (char === ' ' && !inQuote && ignoreTags === 0) {\n                        stringTerms.push(terms.slice(lastIndex, i));\n                        while (terms[i + 1] === ' ') {\n                            i += 1;\n                        }\n                        lastIndex = i + 1;\n                    }\n                }\n                if (ignoreTags !== 0) {\n                    throw new Error('Found opening tag without closing tag in ' + value);\n                }\n                stringTerms.push(terms.slice(lastIndex, terms.length));\n                // We require 3 or 4 components\n                if (stringTerms.length !== 3 && stringTerms.length !== 4) {\n                    throw new Error('Nested quad syntax error ' + value);\n                }\n                stringTerms = stringTerms.map(term => term.startsWith('<') && !term.includes(' ') ? term.slice(1, -1) : term);\n                return dataFactory.quad(stringToTerm(stringTerms[0]), stringToTerm(stringTerms[1]), stringToTerm(stringTerms[2]), stringTerms[3] ? stringToTerm(stringTerms[3]) : undefined);\n            }\n            return dataFactory.namedNode(value);\n    }\n}\nexports.stringToTerm = stringToTerm;\n/**\n * Convert an RDFJS quad to a string-based quad representation.\n * @param {Quad} q An RDFJS quad.\n * @return {IStringQuad} A hash with string-based quad terms.\n * @template Q The type of quad, defaults to RDF.Quad.\n */\nfunction quadToStringQuad(q) {\n    // tslint:disable:object-literal-sort-keys\n    return {\n        subject: termToString(q.subject),\n        predicate: termToString(q.predicate),\n        object: termToString(q.object),\n        graph: termToString(q.graph),\n    };\n    // tslint:enable:object-literal-sort-keys\n}\nexports.quadToStringQuad = quadToStringQuad;\n/**\n * Convert a string-based quad representation to an RDFJS quad.\n * @param {IStringQuad} stringQuad A hash with string-based quad terms.\n * @param {RDF.DataFactory} dataFactory An optional datafactory to create terms with.\n * @return {Q} An RDFJS quad.\n * @template Q The type of quad, defaults to RDF.Quad.\n */\nfunction stringQuadToQuad(stringQuad, dataFactory) {\n    dataFactory = dataFactory || FACTORY;\n    return dataFactory.quad(stringToTerm(stringQuad.subject, dataFactory), stringToTerm(stringQuad.predicate, dataFactory), stringToTerm(stringQuad.object, dataFactory), stringToTerm(stringQuad.graph, dataFactory));\n}\nexports.stringQuadToQuad = stringQuadToQuad;\n//# sourceMappingURL=TermUtil.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/QuadTermUtil\"), exports);\n__exportStar(require(\"./lib/TermUtil\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchPatternMappings = exports.matchPatternComplete = exports.matchPattern = exports.matchTerm = exports.getValueNestedPath = exports.someTermsNested = exports.someTerms = exports.everyTermsNested = exports.everyTerms = exports.reduceTermsNested = exports.reduceTerms = exports.mapTermsNested = exports.mapTerms = exports.filterQuadTermNamesNested = exports.filterQuadTermNames = exports.filterTermsNested = exports.filterTerms = exports.forEachTermsNested = exports.forEachTerms = exports.collectNamedTerms = exports.getNamedTerms = exports.getTermsNested = exports.getTerms = exports.TRIPLE_TERM_NAMES = exports.QUAD_TERM_NAMES = void 0;\nconst rdf_data_factory_1 = require(\"rdf-data-factory\");\nconst DF = new rdf_data_factory_1.DataFactory();\n/**\n * All available quad term names.\n * @type {[string , string , string , string]}\n */\nexports.QUAD_TERM_NAMES = ['subject', 'predicate', 'object', 'graph'];\n/**\n * All available triple term names.\n * @type {[string , string , string]}\n */\nexports.TRIPLE_TERM_NAMES = ['subject', 'predicate', 'object'];\n/**\n * Get all terms in the given quad.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {boolean} ignoreDefaultGraph If true and the quad has the default graph as graph,\n *                                     this term will not be returned in the array.\n *                                     (default: false)\n * @return {Term[]} The available terms in the quad.\n */\nfunction getTerms(quad, ignoreDefaultGraph) {\n    if (ignoreDefaultGraph && quad.graph.termType === 'DefaultGraph') {\n        return [quad.subject, quad.predicate, quad.object];\n    }\n    return [quad.subject, quad.predicate, quad.object, quad.graph];\n}\nexports.getTerms = getTerms;\n/**\n * Get all terms in the given quad, including nested quads.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {boolean} ignoreDefaultGraph If true and the quad has the default graph as graph,\n *                                     this term will not be returned in the array.\n *                                     (default: false)\n * @return {Term[]} The available terms in the nested quad, excluding quad terms.\n */\nfunction getTermsNested(quad, ignoreDefaultGraph) {\n    const terms = [];\n    for (const term of getTerms(quad, ignoreDefaultGraph)) {\n        if (term.termType === 'Quad') {\n            getTermsNested(term, ignoreDefaultGraph).forEach(subTerm => terms.push(subTerm));\n        }\n        else {\n            terms.push(term);\n        }\n    }\n    return terms;\n}\nexports.getTermsNested = getTermsNested;\n/**\n * Convert the given quad to an array of named terms.\n * This is the reverse operation of {@link collectNamedTerms}.\n * @param {BaseQuad} quad An RDFJS quad.\n * @return {INamedTerm[]} An array of named terms.\n */\nfunction getNamedTerms(quad) {\n    return [\n        { key: 'subject', value: quad.subject },\n        { key: 'predicate', value: quad.predicate },\n        { key: 'object', value: quad.object },\n        { key: 'graph', value: quad.graph },\n    ];\n}\nexports.getNamedTerms = getNamedTerms;\n/**\n * Convert an array of named terms to an RDFJS quad.\n * This is the reverse operation of {@link getNamedTerms}.\n * @param {INamedTerm[]} namedTerms An array of named terms.\n * @param {(termName: QuadTermName) => Term} defaultCb An optional callback for when\n *                                                     certain terms are not available in the array.\n * @param {RDF.DataFactory} dataFactory A custom data factory to create quads.\n * @return {Q} The resulting RDFJS quad.\n * @template Q The type of quad to output, defaults to RDF.Quad.\n */\nfunction collectNamedTerms(namedTerms, defaultCb, dataFactory) {\n    const elements = {};\n    namedTerms.forEach((namedTerm) => elements[namedTerm.key] = namedTerm.value);\n    if (defaultCb) {\n        elements.subject = elements.subject || defaultCb('subject');\n        elements.predicate = elements.predicate || defaultCb('predicate');\n        elements.object = elements.object || defaultCb('object');\n        elements.graph = elements.graph || defaultCb('graph');\n    }\n    return (dataFactory || DF).quad(elements.subject, elements.predicate, elements.object, elements.graph);\n}\nexports.collectNamedTerms = collectNamedTerms;\n/**\n * Iterates over each term.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} cb A callback function.\n */\nfunction forEachTerms(quad, cb) {\n    cb(quad.subject, 'subject');\n    cb(quad.predicate, 'predicate');\n    cb(quad.object, 'object');\n    cb(quad.graph, 'graph');\n}\nexports.forEachTerms = forEachTerms;\n/**\n * Iterates over each leaf term, while recursing into quoted triples.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} cb A callback function.\n * @param QuadTermName[] keys The current key path.\n */\nfunction forEachTermsNested(quad, cb, keys = []) {\n    if (quad.subject.termType === 'Quad') {\n        forEachTermsNested(quad.subject, cb, [...keys, 'subject']);\n    }\n    else {\n        cb(quad.subject, [...keys, 'subject']);\n    }\n    if (quad.predicate.termType === 'Quad') {\n        forEachTermsNested(quad.predicate, cb, [...keys, 'predicate']);\n    }\n    else {\n        cb(quad.predicate, [...keys, 'predicate']);\n    }\n    if (quad.object.termType === 'Quad') {\n        forEachTermsNested(quad.object, cb, [...keys, 'object']);\n    }\n    else {\n        cb(quad.object, [...keys, 'object']);\n    }\n    if (quad.graph.termType === 'Quad') {\n        forEachTermsNested(quad.graph, cb, [...keys, 'graph']);\n    }\n    else {\n        cb(quad.graph, [...keys, 'graph']);\n    }\n}\nexports.forEachTermsNested = forEachTermsNested;\n/**\n * Get all terms in the given quad that return true on the given filter function.\n * @param {BaseQuad} quad A quad.\n * @param {(value: Term, key: QuadTermName) => boolean} filter A filter callback.\n * @return {Term[]} The list of matching terms.\n */\nfunction filterTerms(quad, filter) {\n    const terms = [];\n    if (filter(quad.subject, 'subject')) {\n        terms.push(quad.subject);\n    }\n    if (filter(quad.predicate, 'predicate')) {\n        terms.push(quad.predicate);\n    }\n    if (filter(quad.object, 'object')) {\n        terms.push(quad.object);\n    }\n    if (filter(quad.graph, 'graph')) {\n        terms.push(quad.graph);\n    }\n    return terms;\n}\nexports.filterTerms = filterTerms;\n/**\n * Get all terms in the given quad that return true on the given filter function, while recursing into quoted triples.\n * @param {BaseQuad} quad A quad.\n * @param {(value: Term, key: QuadTermName) => boolean} filter A filter callback.\n * @param QuadTermName[] keys The current key path.\n * @return {Term[]} The list of matching terms.\n */\nfunction filterTermsNested(quad, filter, keys = []) {\n    let terms = [];\n    if (quad.subject.termType === 'Quad') {\n        terms = [...terms, ...filterTermsNested(quad.subject, filter, [...keys, 'subject'])];\n    }\n    else {\n        if (filter(quad.subject, [...keys, 'subject'])) {\n            terms.push(quad.subject);\n        }\n    }\n    if (quad.predicate.termType === 'Quad') {\n        terms = [...terms, ...filterTermsNested(quad.predicate, filter, [...keys, 'predicate'])];\n    }\n    else {\n        if (filter(quad.predicate, [...keys, 'predicate'])) {\n            terms.push(quad.predicate);\n        }\n    }\n    if (quad.object.termType === 'Quad') {\n        terms = [...terms, ...filterTermsNested(quad.object, filter, [...keys, 'object'])];\n    }\n    else {\n        if (filter(quad.object, [...keys, 'object'])) {\n            terms.push(quad.object);\n        }\n    }\n    if (quad.graph.termType === 'Quad') {\n        terms = [...terms, ...filterTermsNested(quad.graph, filter, [...keys, 'graph'])];\n    }\n    else {\n        if (filter(quad.graph, [...keys, 'graph'])) {\n            terms.push(quad.graph);\n        }\n    }\n    return terms;\n}\nexports.filterTermsNested = filterTermsNested;\n/**\n * Get all quad term names in the given quad that return true on the given filter function.\n * @param {BaseQuad} quad A quad.\n * @param {(value: Term, key: QuadTermName, all: INamedTerm[]) => boolean} filter A filter callback.\n * @return {QuadTermName[]} The list of matching quad term names.\n */\nfunction filterQuadTermNames(quad, filter) {\n    const names = [];\n    if (filter(quad.subject, 'subject')) {\n        names.push('subject');\n    }\n    if (filter(quad.predicate, 'predicate')) {\n        names.push('predicate');\n    }\n    if (filter(quad.object, 'object')) {\n        names.push('object');\n    }\n    if (filter(quad.graph, 'graph')) {\n        names.push('graph');\n    }\n    return names;\n}\nexports.filterQuadTermNames = filterQuadTermNames;\n/**\n * Get all quad term names in the given quad that return true on the given filter function, while recursing into quoted triples.\n * @param {BaseQuad} quad A quad.\n * @param {(value: Term, key: QuadTermName, all: INamedTerm[]) => boolean} filter A filter callback.\n * @param QuadTermName[] keys The current key path.\n * @return {QuadTermName[]} The list of matching quad term names.\n */\nfunction filterQuadTermNamesNested(quad, filter, keys = []) {\n    let names = [];\n    const keysS = [...keys, 'subject'];\n    if (quad.subject.termType === 'Quad') {\n        names = [...names, ...filterQuadTermNamesNested(quad.subject, filter, keysS)];\n    }\n    else {\n        if (filter(quad.subject, keysS)) {\n            names.push(keysS);\n        }\n    }\n    const keysP = [...keys, 'predicate'];\n    if (quad.predicate.termType === 'Quad') {\n        names = [...names, ...filterQuadTermNamesNested(quad.predicate, filter, keysP)];\n    }\n    else {\n        if (filter(quad.predicate, keysP)) {\n            names.push(keysP);\n        }\n    }\n    const keysO = [...keys, 'object'];\n    if (quad.object.termType === 'Quad') {\n        names = [...names, ...filterQuadTermNamesNested(quad.object, filter, keysO)];\n    }\n    else {\n        if (filter(quad.object, keysO)) {\n            names.push(keysO);\n        }\n    }\n    const keysG = [...keys, 'graph'];\n    if (quad.graph.termType === 'Quad') {\n        names = [...names, ...filterQuadTermNamesNested(quad.graph, filter, keysG)];\n    }\n    else {\n        if (filter(quad.graph, keysG)) {\n            names.push(keysG);\n        }\n    }\n    return names;\n}\nexports.filterQuadTermNamesNested = filterQuadTermNamesNested;\n/**\n * Map all terms of a quad.\n * @param {Quad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName) => Term} mapper A mapper function.\n * @param {RDF.DataFactory} dataFactory A custom data factory to create quads.\n * @return {Quad} A new RDFJS quad.\n * @template Q The type of quad, defaults to RDF.Quad.\n */\nfunction mapTerms(quad, mapper, dataFactory) {\n    return (dataFactory || DF).quad(mapper(quad.subject, 'subject'), mapper(quad.predicate, 'predicate'), mapper(quad.object, 'object'), mapper(quad.graph, 'graph'));\n}\nexports.mapTerms = mapTerms;\n/**\n * Map all terms of a quad, while recursing into quoted triples.\n * @param {Quad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName) => Term} mapper A mapper function.\n * @param {RDF.DataFactory} dataFactory A custom data factory to create quads.\n * @param QuadTermName[] keys The current key path.\n * @return {Quad} A new RDFJS quad.\n * @template Q The type of quad, defaults to RDF.Quad.\n */\nfunction mapTermsNested(quad, mapper, dataFactory, keys = []) {\n    return (dataFactory || DF).quad(quad.subject.termType === 'Quad' ?\n        mapTermsNested(quad.subject, mapper, dataFactory, [...keys, 'subject']) :\n        mapper(quad.subject, [...keys, 'subject']), quad.predicate.termType === 'Quad' ?\n        mapTermsNested(quad.predicate, mapper, dataFactory, [...keys, 'predicate']) :\n        mapper(quad.predicate, [...keys, 'predicate']), quad.object.termType === 'Quad' ?\n        mapTermsNested(quad.object, mapper, dataFactory, [...keys, 'object']) :\n        mapper(quad.object, [...keys, 'object']), quad.graph.termType === 'Quad' ?\n        mapTermsNested(quad.graph, mapper, dataFactory, [...keys, 'graph']) :\n        mapper(quad.graph, [...keys, 'graph']));\n}\nexports.mapTermsNested = mapTermsNested;\n/**\n * Reduce all terms of a quad.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(previousValue: U, currentValue: Term, key: QuadTermName) => U} reducer A reduce function.\n * @param {U} initialValue The initial value.\n * @return {U} The final value.\n */\nfunction reduceTerms(quad, reducer, initialValue) {\n    let value = initialValue;\n    value = reducer(value, quad.subject, 'subject');\n    value = reducer(value, quad.predicate, 'predicate');\n    value = reducer(value, quad.object, 'object');\n    return reducer(value, quad.graph, 'graph');\n}\nexports.reduceTerms = reduceTerms;\n/**\n * Reduce all terms of a quad, while recursing into quoted triples.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(previousValue: U, currentValue: Term, key: QuadTermName) => U} reducer A reduce function.\n * @param {U} initialValue The initial value.\n * @param QuadTermName[] keys The current key path.\n * @return {U} The final value.\n */\nfunction reduceTermsNested(quad, reducer, initialValue, keys = []) {\n    let value = initialValue;\n    if (quad.subject.termType === 'Quad') {\n        value = reduceTermsNested(quad.subject, reducer, value, [...keys, 'subject']);\n    }\n    else {\n        value = reducer(value, quad.subject, [...keys, 'subject']);\n    }\n    if (quad.predicate.termType === 'Quad') {\n        value = reduceTermsNested(quad.predicate, reducer, value, [...keys, 'predicate']);\n    }\n    else {\n        value = reducer(value, quad.predicate, [...keys, 'predicate']);\n    }\n    if (quad.object.termType === 'Quad') {\n        value = reduceTermsNested(quad.object, reducer, value, [...keys, 'object']);\n    }\n    else {\n        value = reducer(value, quad.object, [...keys, 'object']);\n    }\n    if (quad.graph.termType === 'Quad') {\n        value = reduceTermsNested(quad.graph, reducer, value, [...keys, 'graph']);\n    }\n    else {\n        value = reducer(value, quad.graph, [...keys, 'graph']);\n    }\n    return value;\n}\nexports.reduceTermsNested = reduceTermsNested;\n/**\n * Determines whether all terms satisfy the specified test.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} checker A checker function.\n * @return {boolean} If all terms satisfy the specified test.\n */\nfunction everyTerms(quad, checker) {\n    return checker(quad.subject, 'subject')\n        && checker(quad.predicate, 'predicate')\n        && checker(quad.object, 'object')\n        && checker(quad.graph, 'graph');\n}\nexports.everyTerms = everyTerms;\n/**\n * Determines whether all terms satisfy the specified test, while recursing into quoted triples.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} checker A checker function.\n * @param QuadTermName[] keys The current key path.\n * @return {boolean} If all terms satisfy the specified test.\n */\nfunction everyTermsNested(quad, checker, keys = []) {\n    return (quad.subject.termType === 'Quad' ?\n        everyTermsNested(quad.subject, checker, [...keys, 'subject']) :\n        checker(quad.subject, [...keys, 'subject']))\n        && (quad.predicate.termType === 'Quad' ?\n            everyTermsNested(quad.predicate, checker, [...keys, 'predicate']) :\n            checker(quad.predicate, [...keys, 'predicate']))\n        && (quad.object.termType === 'Quad' ?\n            everyTermsNested(quad.object, checker, [...keys, 'object']) :\n            checker(quad.object, [...keys, 'object']))\n        && (quad.graph.termType === 'Quad' ?\n            everyTermsNested(quad.graph, checker, [...keys, 'graph']) :\n            checker(quad.graph, [...keys, 'graph']));\n}\nexports.everyTermsNested = everyTermsNested;\n/**\n * Determines whether at least one term satisfies the specified test.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} checker A checker function.\n * @return {boolean} If at least one term satisfies the specified test.\n */\nfunction someTerms(quad, checker) {\n    return checker(quad.subject, 'subject')\n        || checker(quad.predicate, 'predicate')\n        || checker(quad.object, 'object')\n        || checker(quad.graph, 'graph');\n}\nexports.someTerms = someTerms;\n/**\n * Determines whether at least one term satisfies the specified test, while recursing into quoted triples.\n * @param {BaseQuad} quad An RDFJS quad.\n * @param {(value: Term, key: QuadTermName} checker A checker function.\n * @param QuadTermName[] keys The current key path.\n * @return {boolean} If at least one term satisfies the specified test.\n */\nfunction someTermsNested(quad, checker, keys = []) {\n    return (quad.subject.termType === 'Quad' ?\n        someTermsNested(quad.subject, checker, [...keys, 'subject']) :\n        checker(quad.subject, [...keys, 'subject']))\n        || (quad.predicate.termType === 'Quad' ?\n            someTermsNested(quad.predicate, checker, [...keys, 'predicate']) :\n            checker(quad.predicate, [...keys, 'predicate']))\n        || (quad.object.termType === 'Quad' ?\n            someTermsNested(quad.object, checker, [...keys, 'object']) :\n            checker(quad.object, [...keys, 'object']))\n        || (quad.graph.termType === 'Quad' ?\n            someTermsNested(quad.graph, checker, [...keys, 'graph']) :\n            checker(quad.graph, [...keys, 'graph']));\n}\nexports.someTermsNested = someTermsNested;\n/**\n * Get the nested value inside a quoted triple by the given path of quad keys.\n * @param term A term, that can be a quoted triple.\n * @param keys A path of quad term names.\n */\nfunction getValueNestedPath(term, keys) {\n    if (keys.length === 0) {\n        return term;\n    }\n    if (term.termType === 'Quad') {\n        return getValueNestedPath(term[keys[0]], keys.slice(1));\n    }\n    throw new Error(`Tried to get ${keys[0]} from term of type ${term.termType}`);\n}\nexports.getValueNestedPath = getValueNestedPath;\n/**\n * Check if the given terms match.\n *\n * At least one of the following must be true:\n * * Term B is undefined.\n * * Term B is a variable.\n * * Term A and B are quads, and return true for `matchPatternComplete`.\n * * Quad term and term are equal (`termB.equals(termA)` return true)\n *\n * @param termA A term.\n * @param termB An optional term.\n */\nfunction matchTerm(termA, termB) {\n    return !termB\n        || termB.termType === 'Variable'\n        || (termB.termType === 'Quad' && termA.termType === 'Quad' && matchPatternComplete(termA, termB))\n        || termB.equals(termA);\n}\nexports.matchTerm = matchTerm;\n/**\n * Check if the given quad matches with the given quad terms.\n *\n * Each term must match at least one of the following:\n * * Term is undefined.\n * * Term is a variable.\n * * Quad term and term are both quads, and return true for `matchPatternComplete`.\n * * Quad term and term are equal (`quadTerm.equals(term)` return true)\n *\n * @param {BaseQuad} quad A quad to match with (can not contain variables).\n * @param {Term} subject An optional subject.\n * @param {Term} predicate An optional predicate.\n * @param {Term} object An optional object.\n * @param {Term} graph An optional graph.\n * @return {boolean} If the quad matches with the quad terms.\n */\nfunction matchPattern(quad, subject, predicate, object, graph) {\n    return matchTerm(quad.subject, subject)\n        && matchTerm(quad.predicate, predicate)\n        && matchTerm(quad.object, object)\n        && matchTerm(quad.graph, graph);\n}\nexports.matchPattern = matchPattern;\n/**\n * Check if the first quad matches with all terms from the second quad.\n *\n * Each term must match at least one of the following:\n * * Quad2 term is a variable.\n * * Quad1 term and Quad2 term are equal (`term1.equals(term2)` return true)\n *\n * @param {BaseQuad} quad A quad (can not contain variables).\n * @param {BaseQuad} pattern A quad pattern (can contain variables).\n * @return {boolean} If the quad terms match.\n */\nfunction matchPatternComplete(quad, pattern) {\n    return matchPattern(quad, pattern.subject, pattern.predicate, pattern.object, pattern.graph);\n}\nexports.matchPatternComplete = matchPatternComplete;\nfunction matchPatternMappings(quad, pattern, opt = {}) {\n    const map = {};\n    function match(_pattern, _quad) {\n        return everyTerms(_pattern, (t1, key) => {\n            var _a, _b;\n            const t2 = _quad[key];\n            switch (t1.termType) {\n                case 'Variable':\n                    return (opt.skipVarMapping && t2.termType === 'Variable')\n                        || ((_b = (_a = map[t1.value]) === null || _a === void 0 ? void 0 : _a.equals(t2)) !== null && _b !== void 0 ? _b : (map[t1.value] = t2, true));\n                case 'Quad':\n                    return t2.termType === 'Quad' && match(t1, t2);\n                default:\n                    return t1.equals(t2);\n            }\n        });\n    }\n    return match(pattern, quad) && (opt.returnMappings ? map : true);\n}\nexports.matchPatternMappings = matchPatternMappings;\n//# sourceMappingURL=QuadTermUtil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getQuads = exports.getDefaultGraphs = exports.getVariables = exports.getLiterals = exports.getBlankNodes = exports.getNamedNodes = exports.getTermsOfType = exports.uniqTerms = exports.TERM_TYPES = void 0;\nconst rdf_string_1 = require(\"rdf-string\");\n/**\n * All known term types.\n * @see RDF.Term\n * @type {[string , string , string , string , string, string]}\n */\nexports.TERM_TYPES = ['NamedNode', 'BlankNode', 'Literal', 'Variable', 'DefaultGraph', 'Quad'];\n/*\n * Utility methods for handling RDFJS terms.\n */\n/**\n * Create an array of unique terms from the given array.\n * @param {T[]} terms An array of RDFJS terms.\n * @return {T[]} A new array of unique RDFJS terms.\n */\nfunction uniqTerms(terms) {\n    const hash = {};\n    return terms.filter(term => {\n        const termString = (0, rdf_string_1.termToString)(term);\n        return !(termString in hash) && (hash[termString] = true);\n    });\n}\nexports.uniqTerms = uniqTerms;\n/**\n * Find all terms of the given type in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @param {\"NamedNode\" | \"BlankNode\" | \"Literal\" | \"Variable\" | \"DefaultGraph\" | \"Quad\"} termType A term type.\n * @return {Term[]} A new array with elements from the given array only containing elements of the given type.\n */\nfunction getTermsOfType(terms, termType) {\n    return terms.filter((term) => term.termType === termType);\n}\nexports.getTermsOfType = getTermsOfType;\n/**\n * Find all named nodes in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {NamedNode[]} A new array with elements from the given array only containing named nodes.\n */\nfunction getNamedNodes(terms) {\n    return getTermsOfType(terms, 'NamedNode');\n}\nexports.getNamedNodes = getNamedNodes;\n/**\n * Find all blank nodes in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {BlankNode[]} A new array with elements from the given array only containing blank nodes.\n */\nfunction getBlankNodes(terms) {\n    return getTermsOfType(terms, 'BlankNode');\n}\nexports.getBlankNodes = getBlankNodes;\n/**\n * Find all literals in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {Literal[]} A new array with elements from the given array only containing literals.\n */\nfunction getLiterals(terms) {\n    return getTermsOfType(terms, 'Literal');\n}\nexports.getLiterals = getLiterals;\n/**\n * Find all variables in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {Variable[]} A new array with elements from the given array only containing variables.\n */\nfunction getVariables(terms) {\n    return getTermsOfType(terms, 'Variable');\n}\nexports.getVariables = getVariables;\n/**\n * Find all default graphs in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {DefaultGraph[]} A new array with elements from the given array only containing default graphs.\n */\nfunction getDefaultGraphs(terms) {\n    return getTermsOfType(terms, 'DefaultGraph');\n}\nexports.getDefaultGraphs = getDefaultGraphs;\n/**\n * Find all quads in the given array.\n * @param {Term[]} terms An array of RDFJS terms.\n * @return {BaseQuad[]} A new array with elements from the given array only containing quads.\n */\nfunction getQuads(terms) {\n    return getTermsOfType(terms, 'Quad');\n}\nexports.getQuads = getQuads;\n//# sourceMappingURL=TermUtil.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/Resolve\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeDotSegmentsOfPath = exports.removeDotSegments = exports.resolve = void 0;\n/**\n * Convert the given relative IRI to an absolute IRI\n * by taking into account the given optional baseIRI.\n *\n * @param {string} relativeIRI The relative IRI to convert to an absolute IRI.\n * @param {string} baseIRI The optional base IRI.\n * @return {string} an absolute IRI.\n */\nfunction resolve(relativeIRI, baseIRI) {\n    baseIRI = baseIRI || '';\n    const baseFragmentPos = baseIRI.indexOf('#');\n    // Ignore any fragments in the base IRI\n    if (baseFragmentPos > 0) {\n        baseIRI = baseIRI.substr(0, baseFragmentPos);\n    }\n    // Convert empty value directly to base IRI\n    if (!relativeIRI.length) {\n        // At this point, the baseIRI MUST be absolute, otherwise we error\n        if (baseIRI.indexOf(':') < 0) {\n            throw new Error(`Found invalid baseIRI '${baseIRI}' for value '${relativeIRI}'`);\n        }\n        return baseIRI;\n    }\n    // If the value starts with a query character, concat directly (but strip the existing query)\n    if (relativeIRI.startsWith('?')) {\n        const baseQueryPos = baseIRI.indexOf('?');\n        if (baseQueryPos > 0) {\n            baseIRI = baseIRI.substr(0, baseQueryPos);\n        }\n        return baseIRI + relativeIRI;\n    }\n    // If the value starts with a fragment character, concat directly\n    if (relativeIRI.startsWith('#')) {\n        return baseIRI + relativeIRI;\n    }\n    // Ignore baseIRI if it is empty\n    if (!baseIRI.length) {\n        const relativeColonPos = relativeIRI.indexOf(':');\n        if (relativeColonPos < 0) {\n            throw new Error(`Found invalid relative IRI '${relativeIRI}' for a missing baseIRI`);\n        }\n        return removeDotSegmentsOfPath(relativeIRI, relativeColonPos);\n    }\n    // Ignore baseIRI if the value is absolute\n    const valueColonPos = relativeIRI.indexOf(':');\n    if (valueColonPos >= 0) {\n        return removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n    }\n    // At this point, the baseIRI MUST be absolute, otherwise we error\n    const baseColonPos = baseIRI.indexOf(':');\n    if (baseColonPos < 0) {\n        throw new Error(`Found invalid baseIRI '${baseIRI}' for value '${relativeIRI}'`);\n    }\n    const baseIRIScheme = baseIRI.substr(0, baseColonPos + 1);\n    // Inherit the baseIRI scheme if the value starts with '//'\n    if (relativeIRI.indexOf('//') === 0) {\n        return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n    }\n    // Check cases where '://' occurs in the baseIRI, and where there is no '/' after a ':' anymore.\n    let baseSlashAfterColonPos;\n    if (baseIRI.indexOf('//', baseColonPos) === baseColonPos + 1) {\n        // If there is no additional '/' after the '//'.\n        baseSlashAfterColonPos = baseIRI.indexOf('/', baseColonPos + 3);\n        if (baseSlashAfterColonPos < 0) {\n            // If something other than a '/' follows the '://', append the value after a '/',\n            // otherwise, prefix the value with only the baseIRI scheme.\n            if (baseIRI.length > baseColonPos + 3) {\n                return baseIRI + '/' + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n            }\n            else {\n                return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n            }\n        }\n    }\n    else {\n        // If there is not even a single '/' after the ':'\n        baseSlashAfterColonPos = baseIRI.indexOf('/', baseColonPos + 1);\n        if (baseSlashAfterColonPos < 0) {\n            // If we don't have a '/' after the ':',\n            // prefix the value with only the baseIRI scheme.\n            return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n        }\n    }\n    // If the value starts with a '/', then prefix it with everything before the first effective slash of the base IRI.\n    if (relativeIRI.indexOf('/') === 0) {\n        return baseIRI.substr(0, baseSlashAfterColonPos) + removeDotSegments(relativeIRI);\n    }\n    let baseIRIPath = baseIRI.substr(baseSlashAfterColonPos);\n    const baseIRILastSlashPos = baseIRIPath.lastIndexOf('/');\n    // Ignore everything after the last '/' in the baseIRI path\n    if (baseIRILastSlashPos >= 0 && baseIRILastSlashPos < baseIRIPath.length - 1) {\n        baseIRIPath = baseIRIPath.substr(0, baseIRILastSlashPos + 1);\n        // Also remove the first character of the relative path if it starts with '.' (and not '..' or './')\n        // This change is only allowed if there is something else following the path\n        if (relativeIRI[0] === '.' && relativeIRI[1] !== '.' && relativeIRI[1] !== '/' && relativeIRI[2]) {\n            relativeIRI = relativeIRI.substr(1);\n        }\n    }\n    // Prefix the value with the baseIRI path where\n    relativeIRI = baseIRIPath + relativeIRI;\n    // Remove dot segment from the IRI\n    relativeIRI = removeDotSegments(relativeIRI);\n    // Prefix our transformed value with the part of the baseIRI until the first '/' after the first ':'.\n    return baseIRI.substr(0, baseSlashAfterColonPos) + relativeIRI;\n}\nexports.resolve = resolve;\n/**\n * Remove dot segments from the given path,\n * as described in https://www.ietf.org/rfc/rfc3986.txt (page 32).\n * @param {string} path An IRI path.\n * @return {string} A path, will always start with a '/'.\n */\nfunction removeDotSegments(path) {\n    // Prepare a buffer with segments between each '/.\n    // Each segment represents an array of characters.\n    const segmentBuffers = [];\n    let i = 0;\n    while (i < path.length) {\n        // Remove '/.' or '/..'\n        switch (path[i]) {\n            case '/':\n                if (path[i + 1] === '.') {\n                    if (path[i + 2] === '.') {\n                        // Start a new segment if we find an invalid character after the '.'\n                        if (!isCharacterAllowedAfterRelativePathSegment(path[i + 3])) {\n                            segmentBuffers.push([]);\n                            i++;\n                            break;\n                        }\n                        // Go to parent directory,\n                        // so we remove a parent segment\n                        segmentBuffers.pop();\n                        // Ensure that we end with a slash if there is a trailing '/..'\n                        if (!path[i + 3]) {\n                            segmentBuffers.push([]);\n                        }\n                        i += 3;\n                    }\n                    else {\n                        // Start a new segment if we find an invalid character after the '.'\n                        if (!isCharacterAllowedAfterRelativePathSegment(path[i + 2])) {\n                            segmentBuffers.push([]);\n                            i++;\n                            break;\n                        }\n                        // Ensure that we end with a slash if there is a trailing '/.'\n                        if (!path[i + 2]) {\n                            segmentBuffers.push([]);\n                        }\n                        // Go to the current directory,\n                        // so we do nothing\n                        i += 2;\n                    }\n                }\n                else {\n                    // Start a new segment\n                    segmentBuffers.push([]);\n                    i++;\n                }\n                break;\n            case '#':\n            case '?':\n                // Query and fragment string should be appended unchanged\n                if (!segmentBuffers.length) {\n                    segmentBuffers.push([]);\n                }\n                segmentBuffers[segmentBuffers.length - 1].push(path.substr(i));\n                // Break the while loop\n                i = path.length;\n                break;\n            default:\n                // Not a special character, just append it to our buffer\n                if (!segmentBuffers.length) {\n                    segmentBuffers.push([]);\n                }\n                segmentBuffers[segmentBuffers.length - 1].push(path[i]);\n                i++;\n                break;\n        }\n    }\n    return '/' + segmentBuffers.map((buffer) => buffer.join('')).join('/');\n}\nexports.removeDotSegments = removeDotSegments;\n/**\n * Removes dot segments of the given IRI.\n * @param {string} iri An IRI (or part of IRI).\n * @param {number} colonPosition The position of the first ':' in the IRI.\n * @return {string} The IRI where dot segments were removed.\n */\nfunction removeDotSegmentsOfPath(iri, colonPosition) {\n    // Determine where we should start looking for the first '/' that indicates the start of the path\n    let searchOffset = colonPosition + 1;\n    if (colonPosition >= 0) {\n        if (iri[colonPosition + 1] === '/' && iri[colonPosition + 2] === '/') {\n            searchOffset = colonPosition + 3;\n        }\n    }\n    else {\n        if (iri[0] === '/' && iri[1] === '/') {\n            searchOffset = 2;\n        }\n    }\n    // Determine the path\n    const pathSeparator = iri.indexOf('/', searchOffset);\n    if (pathSeparator < 0) {\n        return iri;\n    }\n    const base = iri.substr(0, pathSeparator);\n    const path = iri.substr(pathSeparator);\n    // Remove dot segments from the path\n    return base + removeDotSegments(path);\n}\nexports.removeDotSegmentsOfPath = removeDotSegmentsOfPath;\nfunction isCharacterAllowedAfterRelativePathSegment(character) {\n    return !character || character === '#' || character === '?' || character === '/';\n}\n//# sourceMappingURL=Resolve.js.map","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.toSparqlJs = exports.toSparql = exports.Factory = exports.Algebra = exports.translate = void 0;\nconst sparqlAlgebra_1 = __importDefault(require(\"./lib/sparqlAlgebra\"));\nexports.translate = sparqlAlgebra_1.default;\nconst Algebra = __importStar(require(\"./lib/algebra\"));\nexports.Algebra = Algebra;\nconst factory_1 = __importDefault(require(\"./lib/factory\"));\nexports.Factory = factory_1.default;\nconst sparql_1 = require(\"./lib/sparql\");\nObject.defineProperty(exports, \"toSparql\", { enumerable: true, get: function () { return sparql_1.toSparql; } });\nObject.defineProperty(exports, \"toSparqlJs\", { enumerable: true, get: function () { return sparql_1.toSparqlJs; } });\nconst util_1 = __importDefault(require(\"./lib/util\"));\nexports.Util = util_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expressionTypes = exports.types = void 0;\nvar types;\n(function (types) {\n    types[\"ALT\"] = \"alt\";\n    types[\"ASK\"] = \"ask\";\n    types[\"BGP\"] = \"bgp\";\n    types[\"CONSTRUCT\"] = \"construct\";\n    types[\"DESCRIBE\"] = \"describe\";\n    types[\"DISTINCT\"] = \"distinct\";\n    types[\"EXPRESSION\"] = \"expression\";\n    types[\"EXTEND\"] = \"extend\";\n    types[\"FILTER\"] = \"filter\";\n    types[\"FROM\"] = \"from\";\n    types[\"GRAPH\"] = \"graph\";\n    types[\"GROUP\"] = \"group\";\n    types[\"INV\"] = \"inv\";\n    types[\"JOIN\"] = \"join\";\n    types[\"LEFT_JOIN\"] = \"leftjoin\";\n    types[\"LINK\"] = \"link\";\n    types[\"MINUS\"] = \"minus\";\n    types[\"NOP\"] = \"nop\";\n    types[\"NPS\"] = \"nps\";\n    types[\"ONE_OR_MORE_PATH\"] = \"OneOrMorePath\";\n    types[\"ORDER_BY\"] = \"orderby\";\n    types[\"PATH\"] = \"path\";\n    types[\"PATTERN\"] = \"pattern\";\n    types[\"PROJECT\"] = \"project\";\n    types[\"REDUCED\"] = \"reduced\";\n    types[\"SEQ\"] = \"seq\";\n    types[\"SERVICE\"] = \"service\";\n    types[\"SLICE\"] = \"slice\";\n    types[\"UNION\"] = \"union\";\n    types[\"VALUES\"] = \"values\";\n    types[\"ZERO_OR_MORE_PATH\"] = \"ZeroOrMorePath\";\n    types[\"ZERO_OR_ONE_PATH\"] = \"ZeroOrOnePath\";\n    types[\"COMPOSITE_UPDATE\"] = \"compositeupdate\";\n    types[\"DELETE_INSERT\"] = \"deleteinsert\";\n    types[\"LOAD\"] = \"load\";\n    types[\"CLEAR\"] = \"clear\";\n    types[\"CREATE\"] = \"create\";\n    types[\"DROP\"] = \"drop\";\n    types[\"ADD\"] = \"add\";\n    types[\"MOVE\"] = \"move\";\n    types[\"COPY\"] = \"copy\";\n})(types = exports.types || (exports.types = {}));\nvar expressionTypes;\n(function (expressionTypes) {\n    expressionTypes[\"AGGREGATE\"] = \"aggregate\";\n    expressionTypes[\"EXISTENCE\"] = \"existence\";\n    expressionTypes[\"NAMED\"] = \"named\";\n    expressionTypes[\"OPERATOR\"] = \"operator\";\n    expressionTypes[\"TERM\"] = \"term\";\n    expressionTypes[\"WILDCARD\"] = \"wildcard\";\n})(expressionTypes = exports.expressionTypes || (exports.expressionTypes = {}));\n//# sourceMappingURL=algebra.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst A = __importStar(require(\"./algebra\"));\nconst rdf_data_factory_1 = require(\"rdf-data-factory\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst sparqljs_1 = require(\"sparqljs\");\nclass Factory {\n    constructor(dataFactory) {\n        this.dataFactory = dataFactory || new rdf_data_factory_1.DataFactory();\n        this.stringType = this.createTerm('http://www.w3.org/2001/XMLSchema#string');\n    }\n    createAlt(input, flatten = true) { return this.flattenMulti({ type: A.types.ALT, input }, flatten); }\n    createAsk(input) { return { type: A.types.ASK, input }; }\n    createBoundAggregate(variable, aggregate, expression, distinct, separator) {\n        const result = this.createAggregateExpression(aggregate, expression, distinct, separator);\n        result.variable = variable;\n        return result;\n    }\n    createBgp(patterns) { return { type: A.types.BGP, patterns }; }\n    createConstruct(input, template) { return { type: A.types.CONSTRUCT, input, template }; }\n    createDescribe(input, terms) { return { type: A.types.DESCRIBE, input, terms }; }\n    createDistinct(input) { return { type: A.types.DISTINCT, input }; }\n    createExtend(input, variable, expression) { return { type: A.types.EXTEND, input, variable, expression }; }\n    createFrom(input, def, named) { return { type: A.types.FROM, input, default: def, named }; }\n    createFilter(input, expression) { return { type: A.types.FILTER, input, expression }; }\n    createGraph(input, name) { return { type: A.types.GRAPH, input, name }; }\n    createGroup(input, variables, aggregates) { return { type: A.types.GROUP, input, variables, aggregates }; }\n    createInv(path) { return { type: A.types.INV, path }; }\n    createJoin(input, flatten = true) { return this.flattenMulti({ type: A.types.JOIN, input }, flatten); }\n    createLeftJoin(left, right, expression) {\n        if (expression)\n            return { type: A.types.LEFT_JOIN, input: [left, right], expression };\n        return { type: A.types.LEFT_JOIN, input: [left, right] };\n    }\n    createLink(iri) { return { type: A.types.LINK, iri }; }\n    createMinus(left, right) { return { type: A.types.MINUS, input: [left, right] }; }\n    createNop() { return { type: A.types.NOP }; }\n    createNps(iris) { return { type: A.types.NPS, iris }; }\n    createOneOrMorePath(path) { return { type: A.types.ONE_OR_MORE_PATH, path }; }\n    createOrderBy(input, expressions) { return { type: A.types.ORDER_BY, input, expressions }; }\n    createPath(subject, predicate, object, graph) {\n        if (graph)\n            return { type: A.types.PATH, subject, predicate, object, graph };\n        return { type: A.types.PATH, subject, predicate, object, graph: this.dataFactory.defaultGraph() };\n    }\n    createPattern(subject, predicate, object, graph) {\n        const pattern = this.dataFactory.quad(subject, predicate, object, graph);\n        pattern.type = A.types.PATTERN;\n        return pattern;\n    }\n    createProject(input, variables) { return { type: A.types.PROJECT, input, variables }; }\n    createReduced(input) { return { type: A.types.REDUCED, input }; }\n    createSeq(input, flatten = true) { return this.flattenMulti({ type: A.types.SEQ, input }, flatten); }\n    createService(input, name, silent) { return { type: A.types.SERVICE, input, name, silent: Boolean(silent) }; }\n    createSlice(input, start, length) {\n        start = start || 0;\n        if (length !== undefined)\n            return { type: A.types.SLICE, input, start, length };\n        return { type: A.types.SLICE, input, start };\n    }\n    createUnion(input, flatten = true) { return this.flattenMulti({ type: A.types.UNION, input }, flatten); }\n    createValues(variables, bindings) { return { type: A.types.VALUES, variables, bindings }; }\n    createZeroOrMorePath(path) { return { type: A.types.ZERO_OR_MORE_PATH, path }; }\n    createZeroOrOnePath(path) { return { type: A.types.ZERO_OR_ONE_PATH, path }; }\n    createAggregateExpression(aggregator, expression, distinct, separator) {\n        if (separator)\n            return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.AGGREGATE, aggregator: aggregator, expression, separator, distinct };\n        return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.AGGREGATE, aggregator: aggregator, expression, distinct };\n    }\n    createExistenceExpression(not, input) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.EXISTENCE, not, input }; }\n    createNamedExpression(name, args) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.NAMED, name, args }; }\n    createOperatorExpression(operator, args) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.OPERATOR, operator, args }; }\n    createTermExpression(term) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.TERM, term }; }\n    createWildcardExpression() { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.WILDCARD, wildcard: new sparqljs_1.Wildcard() }; }\n    createTerm(str) {\n        if (str[0] === '$') {\n            str = str.replace('$', '?');\n        }\n        return (0, rdf_string_1.stringToTerm)(str, this.dataFactory);\n    }\n    // Update functions\n    createCompositeUpdate(updates) { return { type: A.types.COMPOSITE_UPDATE, updates }; }\n    createDeleteInsert(deleteQuads, insertQuads, where) {\n        const result = { type: A.types.DELETE_INSERT };\n        if (deleteQuads)\n            result.delete = deleteQuads;\n        if (insertQuads)\n            result.insert = insertQuads;\n        if (where)\n            result.where = where;\n        return result;\n    }\n    createLoad(source, destination, silent) {\n        const result = { type: A.types.LOAD, source };\n        if (destination)\n            result.destination = destination;\n        return this.addSilent(result, Boolean(silent));\n    }\n    createClear(source, silent) {\n        return this.addSilent({ type: A.types.CLEAR, source }, Boolean(silent));\n    }\n    createCreate(source, silent) {\n        return this.addSilent({ type: A.types.CREATE, source }, Boolean(silent));\n    }\n    createDrop(source, silent) {\n        return this.addSilent({ type: A.types.DROP, source }, Boolean(silent));\n    }\n    createAdd(source, destination, silent) {\n        return this.addSilent({ type: A.types.ADD, source, destination }, Boolean(silent));\n    }\n    createMove(source, destination, silent) {\n        return this.addSilent({ type: A.types.MOVE, source, destination }, Boolean(silent));\n    }\n    createCopy(source, destination, silent) {\n        return this.addSilent({ type: A.types.COPY, source, destination }, Boolean(silent));\n    }\n    addSilent(input, silent) {\n        if (silent)\n            input.silent = silent;\n        return input;\n    }\n    flattenMulti(input, flatten) {\n        if (!flatten) {\n            return input;\n        }\n        const type = input.type;\n        const children = input.input;\n        let newChildren = [];\n        for (const child of children) {\n            if (child.type === type) {\n                newChildren.push(...child.input);\n            }\n            else {\n                newChildren.push(child);\n            }\n        }\n        input.input = newChildren;\n        return input;\n    }\n}\nexports.default = Factory;\n//# sourceMappingURL=factory.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSparqlJs = exports.toSparql = void 0;\nconst rdf_isomorphic_1 = require(\"rdf-isomorphic\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst sparqljs_1 = require(\"sparqljs\");\nconst Algebra = __importStar(require(\"./algebra\"));\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst util_1 = __importDefault(require(\"./util\"));\nconst types = Algebra.types;\nconst eTypes = Algebra.expressionTypes;\nlet context;\nconst factory = new factory_1.default();\nfunction toSparql(op, options = {}) {\n    let generator = new sparqljs_1.Generator(options);\n    return generator.stringify(toSparqlJs(op));\n}\nexports.toSparql = toSparql;\nfunction toSparqlJs(op) {\n    resetContext();\n    op = removeQuads(op);\n    let result = translateOperation(op);\n    if (result.type === 'group')\n        return result.patterns[0];\n    return result;\n}\nexports.toSparqlJs = toSparqlJs;\nfunction resetContext() {\n    context = { project: false, extend: [], group: [], aggregates: [], order: [] };\n}\nfunction translateOperation(op) {\n    // this allows us to differentiate between BIND and SELECT when translating EXTEND\n    // GRAPH was added because the way graphs get added back here is not the same as how they get added in the future\n    // ^ seems fine but might have to be changed if problems get detected in the future\n    if (op.type !== types.EXTEND && op.type !== types.ORDER_BY && op.type !== types.GRAPH)\n        context.project = false;\n    switch (op.type) {\n        case types.EXPRESSION: return translateExpression(op);\n        case types.ASK: return translateProject(op, types.ASK);\n        case types.BGP: return translateBgp(op);\n        case types.CONSTRUCT: return translateConstruct(op);\n        case types.DESCRIBE: return translateProject(op, types.DESCRIBE);\n        case types.DISTINCT: return translateDistinct(op);\n        case types.EXTEND: return translateExtend(op);\n        case types.FROM: return translateFrom(op);\n        case types.FILTER: return translateFilter(op);\n        case types.GRAPH: return translateGraph(op);\n        case types.GROUP: return translateGroup(op);\n        case types.JOIN: return translateJoin(op);\n        case types.LEFT_JOIN: return translateLeftJoin(op);\n        case types.MINUS: return translateMinus(op);\n        case types.NOP: return {};\n        case types.ORDER_BY: return translateOrderBy(op);\n        case types.PATH: return translatePath(op);\n        case types.PATTERN: return translatePattern(op);\n        case types.PROJECT: return translateProject(op, types.PROJECT);\n        case types.REDUCED: return translateReduced(op);\n        case types.SERVICE: return translateService(op);\n        case types.SLICE: return translateSlice(op);\n        case types.UNION: return translateUnion(op);\n        case types.VALUES: return translateValues(op);\n        // UPDATE operations\n        case types.COMPOSITE_UPDATE: return translateCompositeUpdate(op);\n        case types.DELETE_INSERT: return translateDeleteInsert(op);\n        case types.LOAD: return translateLoad(op);\n        case types.CLEAR: return translateClear(op);\n        case types.CREATE: return translateCreate(op);\n        case types.DROP: return translateDrop(op);\n        case types.ADD: return translateAdd(op);\n        case types.MOVE: return translateMove(op);\n        case types.COPY: return translateCopy(op);\n    }\n    throw new Error(`Unknown Operation type ${op.type}`);\n}\nfunction translateExpression(expr) {\n    switch (expr.expressionType) {\n        case eTypes.AGGREGATE: return translateAggregateExpression(expr);\n        case eTypes.EXISTENCE: return translateExistenceExpression(expr);\n        case eTypes.NAMED: return translateNamedExpression(expr);\n        case eTypes.OPERATOR: return translateOperatorExpression(expr);\n        case eTypes.TERM: return translateTermExpression(expr);\n        case eTypes.WILDCARD: return translateWildcardExpression(expr);\n    }\n    throw new Error(`Unknown Expression Operation type ${expr.expressionType}`);\n}\nfunction translatePathComponent(path) {\n    switch (path.type) {\n        case types.ALT: return translateAlt(path);\n        case types.INV: return translateInv(path);\n        case types.LINK: return translateLink(path);\n        case types.NPS: return translateNps(path);\n        case types.ONE_OR_MORE_PATH: return translateOneOrMorePath(path);\n        case types.SEQ: return translateSeq(path);\n        case types.ZERO_OR_MORE_PATH: return translateZeroOrMorePath(path);\n        case types.ZERO_OR_ONE_PATH: return translateZeroOrOnePath(path);\n    }\n    throw new Error(`Unknown Path type ${path.type}`);\n}\nfunction translateTerm(term) {\n    return (0, rdf_string_1.termToString)(term);\n}\n// ------------------------- EXPRESSIONS -------------------------\nfunction translateAggregateExpression(expr) {\n    const result = {\n        expression: translateExpression(expr.expression),\n        type: 'aggregate',\n        aggregation: expr.aggregator,\n        distinct: expr.distinct\n    };\n    if (expr.separator)\n        result.separator = expr.separator;\n    return result;\n}\nfunction translateExistenceExpression(expr) {\n    return {\n        type: 'operation',\n        operator: expr.not ? 'notexists' : 'exists',\n        args: [{\n                type: 'group',\n                patterns: util_1.default.flatten([translateOperation(expr.input)])\n            }]\n    };\n}\nfunction translateNamedExpression(expr) {\n    return {\n        type: 'functionCall',\n        // Wrong typings\n        function: expr.name,\n        args: expr.args.map(translateExpression)\n    };\n}\nfunction translateOperatorExpression(expr) {\n    if (expr.operator === 'desc') {\n        const result = { expression: translateExpression(expr.args[0]) };\n        result.descending = true;\n        return result;\n    }\n    const result = {\n        type: 'operation',\n        operator: expr.operator,\n        args: expr.args.map(translateExpression)\n    };\n    if (result.operator === 'in' || result.operator === 'notin')\n        result.args = [result.args[0]].concat([result.args.slice(1)]);\n    return result;\n}\nfunction translateTermExpression(expr) {\n    return expr.term;\n}\nfunction translateWildcardExpression(expr) {\n    return expr.wildcard;\n}\nfunction arrayToPattern(input) {\n    if (!Array.isArray(input))\n        return input;\n    if (input.length === 1)\n        return input[0];\n    return {\n        type: 'group',\n        patterns: input,\n    };\n}\n// ------------------------- OPERATIONS -------------------------\n// these get translated in the project function\nfunction translateBoundAggregate(op) {\n    return op;\n}\nfunction translateBgp(op) {\n    let patterns = op.patterns.map(translatePattern);\n    if (patterns.length === 0)\n        return null;\n    return {\n        type: 'bgp',\n        triples: patterns\n    };\n}\nfunction translateConstruct(op) {\n    return {\n        type: 'query',\n        prefixes: {},\n        queryType: 'CONSTRUCT',\n        template: op.template.map(translatePattern),\n        where: util_1.default.flatten([\n            translateOperation(op.input)\n        ])\n    };\n}\nfunction translateDistinct(op) {\n    let result = translateOperation(op.input);\n    // project is nested in group object\n    result.patterns[0].distinct = true;\n    return result;\n}\nfunction translateExtend(op) {\n    if (context.project) {\n        context.extend.push(op);\n        return translateOperation(op.input);\n    }\n    return util_1.default.flatten([\n        translateOperation(op.input),\n        {\n            type: 'bind',\n            variable: op.variable,\n            expression: translateExpression(op.expression)\n        }\n    ]);\n}\nfunction translateFrom(op) {\n    const result = translateOperation(op.input);\n    // Can't type as CONSTRUCT queries do not have `from` field in their type\n    let obj = result;\n    // project is nested in group object\n    if (result.type === 'group') {\n        obj = result.patterns[0];\n    }\n    obj.from = {\n        default: op.default,\n        named: op.named\n    };\n    return result;\n}\nfunction translateFilter(op) {\n    return {\n        type: 'group',\n        patterns: util_1.default.flatten([\n            translateOperation(op.input),\n            { type: 'filter', expression: translateExpression(op.expression) }\n        ])\n    };\n}\nfunction translateGraph(op) {\n    return {\n        type: 'graph',\n        patterns: util_1.default.flatten([translateOperation(op.input)]),\n        name: op.name\n    };\n}\nfunction translateGroup(op) {\n    const input = translateOperation(op.input);\n    const aggs = op.aggregates.map(translateBoundAggregate);\n    context.aggregates.push(...aggs);\n    // TODO: apply possible extends\n    context.group.push(...op.variables);\n    return input;\n}\nfunction translateJoin(op) {\n    const arr = util_1.default.flatten(op.input.map(translateOperation));\n    // Merge bgps\n    // This is possible if one side was a path and the other a bgp for example\n    return arr.reduce((result, val) => {\n        if (val.type !== 'bgp' || result.length == 0 || result[result.length - 1].type !== 'bgp') {\n            result.push(val);\n        }\n        else {\n            result[result.length - 1].triples.push(...val.triples);\n        }\n        return result;\n    }, []);\n}\nfunction translateLeftJoin(op) {\n    const leftjoin = {\n        type: 'optional',\n        patterns: [\n            translateOperation(op.input[1])\n        ]\n    };\n    if (op.expression) {\n        leftjoin.patterns.push({\n            type: 'filter',\n            expression: translateExpression(op.expression)\n        });\n    }\n    leftjoin.patterns = util_1.default.flatten(leftjoin.patterns);\n    return util_1.default.flatten([\n        translateOperation(op.input[0]),\n        leftjoin\n    ]);\n}\nfunction translateMinus(op) {\n    let patterns = translateOperation(op.input[1]);\n    if (patterns.type === 'group')\n        patterns = patterns.patterns;\n    if (!Array.isArray(patterns))\n        patterns = [patterns];\n    return util_1.default.flatten([\n        translateOperation(op.input[0]),\n        {\n            type: 'minus',\n            patterns: patterns\n        }\n    ]);\n}\nfunction translateOrderBy(op) {\n    context.order.push(...op.expressions);\n    return translateOperation(op.input);\n}\nfunction translatePath(op) {\n    return {\n        type: 'bgp',\n        triples: [{\n                subject: op.subject,\n                predicate: translatePathComponent(op.predicate),\n                object: op.object\n            }]\n    };\n}\nfunction translatePattern(op) {\n    return {\n        subject: op.subject,\n        predicate: op.predicate,\n        object: op.object\n    };\n}\nfunction replaceAggregatorVariables(s, map) {\n    let st = util_1.default.isSimpleTerm(s) ? translateTerm(s) : s;\n    if (typeof st === 'string') {\n        if (map[st])\n            return map[st];\n    }\n    else if (Array.isArray(s)) {\n        s = s.map(e => replaceAggregatorVariables(e, map));\n    }\n    else {\n        for (let key of Object.keys(s))\n            s[key] = replaceAggregatorVariables(s[key], map);\n    }\n    return s;\n}\nfunction translateProject(op, type) {\n    const result = {\n        type: 'query',\n        prefixes: {}\n    };\n    // Makes typing easier in some places\n    const select = result;\n    let variables;\n    if (type === types.PROJECT) {\n        result.queryType = 'SELECT';\n        variables = op.variables;\n    }\n    else if (type === types.ASK) {\n        result.queryType = 'ASK';\n    }\n    else if (type === types.DESCRIBE) {\n        result.queryType = 'DESCRIBE';\n        variables = op.terms;\n    }\n    // backup values in case of nested queries\n    // everything in extend, group, etc. is irrelevant for this project call\n    const extend = context.extend;\n    const group = context.group;\n    const aggregates = context.aggregates;\n    const order = context.order;\n    resetContext();\n    context.project = true;\n    let input = util_1.default.flatten([translateOperation(op.input)]);\n    if (input.length === 1 && input[0].type === 'group')\n        input = input[0].patterns;\n    result.where = input;\n    let aggregators = {};\n    // these can not reference each other\n    for (let agg of context.aggregates)\n        aggregators[translateTerm(agg.variable)] = translateExpression(agg);\n    // do these in reverse order since variables in one extend might apply to an expression in an other extend\n    let extensions = {};\n    for (let i = context.extend.length - 1; i >= 0; --i) {\n        let e = context.extend[i];\n        extensions[translateTerm(e.variable)] = replaceAggregatorVariables(translateExpression(e.expression), aggregators);\n    }\n    if (context.group.length > 0)\n        select.group = context.group.map(variable => {\n            let v = translateTerm(variable);\n            if (extensions[v]) {\n                let result = extensions[v];\n                delete extensions[v]; // make sure there is only 1 'AS' statement\n                return {\n                    variable,\n                    expression: result\n                };\n            }\n            return { expression: variable };\n        });\n    // descending expressions will already be in the correct format due to the structure of those\n    if (context.order.length > 0)\n        select.order = context.order.map(translateOperation).map(o => o.descending ? o : ({ expression: o }));\n    // this needs to happen after the group because it might depend on variables generated there\n    if (variables) {\n        select.variables = variables.map((term) => {\n            let v = translateTerm(term);\n            if (extensions[v])\n                return {\n                    variable: term,\n                    expression: extensions[v]\n                };\n            return term;\n        });\n        // if the * didn't match any variables this would be empty\n        if (select.variables.length === 0)\n            select.variables = [new sparqljs_1.Wildcard()];\n    }\n    // convert filter to 'having' if it contains an aggregator variable\n    // could always convert, but is nicer to use filter when possible\n    if (result.where.length > 0 && result.where[result.where.length - 1].type === 'filter') {\n        const filter = result.where[result.where.length - 1];\n        if (objectContainsValues(filter, Object.keys(aggregators))) {\n            select.having = util_1.default.flatten([replaceAggregatorVariables(filter.expression, aggregators)]);\n            result.where.splice(-1);\n        }\n    }\n    context.extend = extend;\n    context.group = group;\n    context.aggregates = aggregates;\n    context.order = order;\n    // subqueries need to be in a group, this will be removed again later for the root query\n    return { type: 'group', patterns: [select] };\n}\nfunction objectContainsValues(o, vals) {\n    if (util_1.default.isSimpleTerm(o))\n        return vals.indexOf(translateTerm(o)) >= 0;\n    if (Array.isArray(o))\n        return o.some(e => objectContainsValues(e, vals));\n    if (o === Object(o))\n        return Object.keys(o).some(key => objectContainsValues(o[key], vals));\n    return vals.indexOf(o) >= 0;\n}\nfunction translateReduced(op) {\n    let result = translateOperation(op.input);\n    // project is nested in group object\n    result.patterns[0].reduced = true;\n    return result;\n}\nfunction translateService(op) {\n    let patterns = translateOperation(op.input);\n    if (patterns.type === 'group')\n        patterns = patterns.patterns;\n    if (!Array.isArray(patterns))\n        patterns = [patterns];\n    return {\n        type: 'service',\n        // Typings are wrong, name can also be a variable\n        name: op.name,\n        silent: op.silent,\n        patterns\n    };\n}\nfunction translateSlice(op) {\n    let result = translateOperation(op.input);\n    // results can be nested in a group object\n    let obj = result;\n    if (result.type && result.type === 'group')\n        obj = result.patterns[0];\n    if (op.start !== 0)\n        obj.offset = op.start;\n    if (op.length !== undefined)\n        obj.limit = op.length;\n    return result;\n}\nfunction translateUnion(op) {\n    return {\n        type: 'union',\n        patterns: op.input.map(translateOperation).map(arrayToPattern),\n    };\n}\nfunction translateValues(op) {\n    // TODO: check if handled correctly when outside of select block\n    return {\n        type: 'values',\n        values: op.bindings.map(binding => {\n            let result = {};\n            for (let v of op.variables) {\n                let s = `?${v.value}`;\n                if (binding[s])\n                    result[s] = binding[s];\n                else\n                    result[s] = undefined;\n            }\n            return result;\n        })\n    };\n}\n// PATH COMPONENTS\nfunction translateAlt(path) {\n    const mapped = path.input.map(translatePathComponent);\n    if (mapped.every(entry => 'pathType' in entry && entry.pathType === '!')) {\n        return {\n            type: 'path',\n            pathType: '!',\n            items: [{\n                    type: 'path',\n                    pathType: '|',\n                    items: util_1.default.flatten(mapped.map(entry => entry.items))\n                }]\n        };\n    }\n    return {\n        type: 'path',\n        pathType: '|',\n        items: mapped\n    };\n}\nfunction translateInv(path) {\n    if (path.path.type === types.NPS) {\n        const inv = path.path.iris.map((iri) => {\n            return {\n                type: 'path',\n                pathType: '^',\n                items: [iri]\n            };\n        });\n        if (inv.length <= 1)\n            return {\n                type: 'path',\n                pathType: '!',\n                items: inv\n            };\n        return {\n            type: 'path',\n            pathType: '!',\n            items: [{\n                    type: 'path',\n                    pathType: '|',\n                    items: inv\n                }]\n        };\n    }\n    return {\n        type: 'path',\n        pathType: '^',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateLink(path) {\n    return path.iri;\n}\nfunction translateNps(path) {\n    if (path.iris.length <= 1)\n        return {\n            type: 'path',\n            pathType: '!',\n            items: path.iris\n        };\n    return {\n        type: 'path',\n        pathType: '!',\n        items: [{\n                type: 'path',\n                pathType: '|',\n                items: path.iris\n            }]\n    };\n}\nfunction translateOneOrMorePath(path) {\n    return {\n        type: 'path',\n        pathType: '+',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateSeq(path) {\n    return {\n        type: 'path',\n        pathType: '/',\n        items: path.input.map(translatePathComponent)\n    };\n}\nfunction translateZeroOrMorePath(path) {\n    return {\n        type: 'path',\n        pathType: '*',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateZeroOrOnePath(path) {\n    // Typings are missing '?' operator\n    return {\n        type: 'path',\n        // Typings are missing this path\n        pathType: '?',\n        items: [translatePathComponent(path.path)]\n    };\n}\n// UPDATE OPERATIONS\nfunction translateCompositeUpdate(op) {\n    const updates = op.updates.map(update => {\n        const result = translateOperation(update);\n        return result.updates[0];\n    });\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateDeleteInsert(op) {\n    var _a;\n    let where = op.where;\n    let use = undefined;\n    if (where && where.type === types.FROM) {\n        let from = where;\n        where = from.input;\n        use = { default: from.default, named: from.named };\n    }\n    const updates = [{\n            updateType: 'insertdelete',\n            delete: convertUpdatePatterns(op.delete || []),\n            insert: convertUpdatePatterns(op.insert || []),\n        }];\n    // Typings don't support 'using' yet\n    if (use)\n        updates[0].using = use;\n    // corresponds to empty array in SPARQL.js\n    if (!where || (where.type === types.BGP && where.patterns.length === 0))\n        updates[0].where = [];\n    else {\n        const graphs = [];\n        let result = translateOperation(removeQuadsRecursive(where, graphs));\n        if (result.type === 'group')\n            updates[0].where = result.patterns;\n        else\n            updates[0].where = [result];\n        // graph might not be applied yet since there was no project\n        // this can only happen if there was a single graph\n        if (graphs.length > 0) {\n            if (graphs.length !== 1)\n                throw new Error('This is unexpected and might indicate an error in graph handling for updates.');\n            // ignore if default graph\n            if (((_a = graphs[0]) === null || _a === void 0 ? void 0 : _a.value) !== '')\n                updates[0].where = [{ type: 'graph', patterns: updates[0].where, name: graphs[0] }];\n        }\n    }\n    // not really necessary but can give cleaner looking queries\n    if (!op.delete && !op.where) {\n        updates[0].updateType = 'insert';\n        delete updates[0].delete;\n        delete updates[0].where;\n    }\n    else if (!op.insert && !op.where) {\n        delete updates[0].insert;\n        delete updates[0].where;\n        if (op.delete.some(pattern => pattern.subject.termType === 'Variable' ||\n            pattern.predicate.termType === 'Variable' ||\n            pattern.object.termType === 'Variable'))\n            updates[0].updateType = 'deletewhere';\n        else\n            updates[0].updateType = 'delete';\n    }\n    else if (!op.insert && op.where && op.where.type === 'bgp') {\n        if ((0, rdf_isomorphic_1.isomorphic)(op.delete, op.where.patterns)) {\n            delete updates[0].where;\n            updates[0].updateType = 'deletewhere';\n        }\n    }\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateLoad(op) {\n    // Typings are wrong, destiniation is optional\n    const updates = [{ type: 'load', silent: Boolean(op.silent), source: op.source }];\n    if (op.destination)\n        updates[0].destination = op.destination;\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateClear(op) {\n    return translateClearCreateDrop(op, 'clear');\n}\nfunction translateCreate(op) {\n    return translateClearCreateDrop(op, 'create');\n}\nfunction translateDrop(op) {\n    return translateClearCreateDrop(op, 'drop');\n}\nfunction translateClearCreateDrop(op, type) {\n    const updates = [{ type, silent: Boolean(op.silent) }];\n    // Typings are wrong, type is not required, see for example \"clear-drop\" test\n    if (op.source === 'DEFAULT')\n        updates[0].graph = { default: true };\n    else if (op.source === 'NAMED')\n        updates[0].graph = { named: true };\n    else if (op.source === 'ALL')\n        updates[0].graph = { all: true };\n    else\n        updates[0].graph = { type: 'graph', name: op.source };\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateAdd(op) {\n    return translateUpdateGraphShortcut(op, 'add');\n}\nfunction translateMove(op) {\n    return translateUpdateGraphShortcut(op, 'move');\n}\nfunction translateCopy(op) {\n    return translateUpdateGraphShortcut(op, 'copy');\n}\nfunction translateUpdateGraphShortcut(op, type) {\n    const updates = [{ type, silent: Boolean(op.silent) }];\n    updates[0].source = op.source === 'DEFAULT' ? { type: 'graph', default: true } : { type: 'graph', name: op.source };\n    updates[0].destination = op.destination === 'DEFAULT' ? { type: 'graph', default: true } : { type: 'graph', name: op.destination };\n    return { prefixes: {}, type: 'update', updates };\n}\n// similar to removeQuads but more simplified for UPDATEs\nfunction convertUpdatePatterns(patterns) {\n    if (!patterns)\n        return [];\n    const graphs = {};\n    patterns.forEach(pattern => {\n        const graph = pattern.graph.value;\n        if (!graphs[graph])\n            graphs[graph] = [];\n        graphs[graph].push(pattern);\n    });\n    return Object.keys(graphs).map(graph => {\n        if (graph === '')\n            return { type: 'bgp', triples: graphs[graph].map(translatePattern) };\n        return { type: 'graph', triples: graphs[graph].map(translatePattern), name: graphs[graph][0].graph };\n    });\n}\nfunction removeQuads(op) {\n    return removeQuadsRecursive(op, []);\n}\n// remove quads\nfunction removeQuadsRecursive(op, graphs) {\n    if (Array.isArray(op))\n        return op.map(sub => removeQuadsRecursive(sub, graphs));\n    if (!op.type)\n        return op;\n    // UPDATE operations with Patterns handle graphs a bit differently\n    if (op.type === types.DELETE_INSERT)\n        return op;\n    if ((op.type === types.PATTERN || op.type === types.PATH) && op.graph) {\n        graphs.push(op.graph);\n        // Remove non-default graphs\n        if (op.graph.name !== '')\n            return op.type === types.PATTERN ?\n                factory.createPattern(op.subject, op.predicate, op.object) :\n                factory.createPath(op.subject, op.predicate, op.object);\n        return op;\n    }\n    const result = {};\n    const keyGraphs = {}; // unique graph per key\n    const globalNames = {}; // track all the unique graph names for the entire Operation\n    for (let key of Object.keys(op)) {\n        const newGraphs = [];\n        result[key] = removeQuadsRecursive(op[key], newGraphs);\n        if (newGraphs.length > 0) {\n            keyGraphs[key] = newGraphs;\n            for (const graph of newGraphs) {\n                globalNames[graph.value] = graph;\n            }\n        }\n    }\n    const graphNameSet = Object.keys(globalNames);\n    if (graphNameSet.length > 0) {\n        // We also need to create graph statement if we are at the edge of certain operations\n        if (graphNameSet.length === 1 && ![types.PROJECT, types.SERVICE].includes(op.type))\n            graphs.push(globalNames[graphNameSet[0]]);\n        else if (op.type === types.BGP) {\n            // This is the specific case that got changed because of using quads.\n            return splitBgpToGraphs(op, keyGraphs.patterns);\n        }\n        else {\n            // multiple graphs (or project), need to create graph objects for them\n            for (let key of Object.keys(keyGraphs)) {\n                const value = result[key];\n                if (Array.isArray(value))\n                    result[key] = value.map((child, idx) => keyGraphs[key][0].value === '' ? child : factory.createGraph(child, keyGraphs[key][idx]));\n                else if (keyGraphs[key][0].value !== '')\n                    result[key] = factory.createGraph(value, keyGraphs[key][0]);\n            }\n        }\n    }\n    return result;\n}\n// `graphs` should be an array of length identical to `op.patterns`, containing the corresponding graph for each triple.\nfunction splitBgpToGraphs(op, graphs) {\n    var _a;\n    // Split patterns per graph\n    const graphPatterns = {};\n    for (let i = 0; i < op.patterns.length; ++i) {\n        const pattern = op.patterns[i];\n        const graphName = graphs[i].value;\n        graphPatterns[graphName] = (_a = graphPatterns[graphName]) !== null && _a !== void 0 ? _a : { patterns: [], graph: graphs[i] };\n        graphPatterns[graphName].patterns.push(pattern);\n    }\n    // Create graph objects for every cluster\n    let children = [];\n    for (const [graphName, { patterns, graph }] of Object.entries(graphPatterns)) {\n        const bgp = factory.createBgp(patterns);\n        children.push(graphName === '' ? bgp : factory.createGraph(bgp, graph));\n    }\n    // Join the graph objects\n    let join = children[0];\n    for (let i = 1; i < children.length; ++i)\n        join = factory.createJoin([join, children[i]]);\n    return join;\n}\n//# sourceMappingURL=sparql.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equal = require(\"fast-deep-equal/es6\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst Algebra = __importStar(require(\"./algebra\"));\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst util_1 = __importDefault(require(\"./util\"));\nconst Parser = require('sparqljs').Parser;\nconst types = Algebra.types;\nlet variables = new Set();\nlet varCount = 0;\nlet useQuads = false;\nlet factory;\n/**\n * Translates the given SPARQL query to SPARQL Algebra.\n * @param sparql - Either a SPARQL string or an object generated by sparql.js\n * @param options - Optional options object. Current options:\n *                    * dataFactory: The Datafactory used to generate terms. Default @rdfjs/data-model.\n *                    * quads: Boolean indicating whether triples should be converted to Quads (consumes GRAPH statements). Default false.\n *                    * prefixes: Pre-defined prefixes for the given query. Default empty.\n *                    * baseIRI: Base IRI that should be used for the query. Default undefined (throws error if required).\n * @returns {Operation}\n */\nfunction translate(sparql, options) {\n    options = options || {};\n    factory = new factory_1.default(options.dataFactory);\n    let query;\n    if (isString(sparql)) {\n        let parser = new Parser(options);\n        // resets the identifier counter used for blank nodes\n        // provides nicer and more consistent output if there are multiple calls\n        parser._resetBlanks();\n        query = parser.parse(sparql);\n    }\n    else {\n        query = sparql;\n    }\n    return translateQuery(query, options.quads, options.blankToVariable);\n}\nexports.default = translate;\nfunction translateQuery(sparql, quads, blankToVariable) {\n    // this set is filled in during the inScopeVariables call\n    variables = new Set();\n    varCount = 0;\n    useQuads = Boolean(quads);\n    // Assume this is an empty query\n    if (!sparql.type)\n        return factory.createNop();\n    if (sparql.type !== 'query' && sparql.type !== 'update')\n        throw new Error('Translate only works on complete query or update objects.');\n    let res;\n    // find ALL variables here to fill `variables` array\n    findAllVariables(sparql);\n    if (sparql.type === 'query') {\n        // group and where are identical, having only 1 makes parsing easier, can be undefined in DESCRIBE\n        const group = { type: 'group', patterns: sparql.where || [] };\n        res = translateGraphPattern(group);\n        res = translateAggregates(sparql, res);\n    }\n    else if (sparql.type === 'update') {\n        res = translateUpdate(sparql);\n    }\n    if (blankToVariable) {\n        res = translateBlankNodesToVariables(res);\n    }\n    return res;\n}\nfunction isString(str) {\n    return typeof str === 'string';\n}\nfunction isTerm(term) {\n    return Boolean(term === null || term === void 0 ? void 0 : term.termType);\n}\n// This is not completely correct but this way we also catch SPARQL.js triples\nfunction isTriple(triple) {\n    return triple.subject && triple.predicate && triple.object;\n}\nfunction isVariable(term) {\n    return (term === null || term === void 0 ? void 0 : term.termType) === 'Variable';\n}\n// Will be used to make sure new variables don't overlap\nfunction findAllVariables(thingy) {\n    if (isTerm(thingy)) {\n        if (isVariable(thingy)) {\n            // Variables don't store the `?`\n            variables.add(`?${thingy.value}`);\n        }\n    }\n    else if (Array.isArray(thingy)) {\n        for (const entry of thingy)\n            findAllVariables(entry);\n    }\n    else if (thingy && typeof thingy === 'object') {\n        for (let key of Object.keys(thingy)) {\n            // Some variables are hidden in keys (specifically for VALUES)\n            if (key.startsWith('?')) {\n                variables.add(key);\n            }\n            else if (key.startsWith('$')) {\n                variables.add(`?${key.slice(1)}`);\n            }\n            findAllVariables(thingy[key]);\n        }\n    }\n}\n// 18.2.1\nfunction inScopeVariables(thingy) {\n    let inScope = {};\n    if (isTriple(thingy)) {\n        // Note that this could both be an actual Quad or a SPARQL.js triple (without graph)\n        const result = [\n            inScopeVariables(thingy.subject),\n            inScopeVariables(thingy.predicate),\n            inScopeVariables(thingy.object),\n            thingy.graph ? inScopeVariables(thingy.graph) : {}\n        ];\n        Object.assign(inScope, ...result);\n    }\n    else if (isTerm(thingy)) {\n        if (isVariable(thingy))\n            inScope[thingy.value] = thingy;\n    }\n    else if (thingy.type === 'bgp') {\n        // Slightly cheating but this is a subset of what we support so is fine\n        const quads = thingy.triples;\n        Object.assign(inScope, ...quads.map(inScopeVariables));\n    }\n    else if (thingy.type === 'path') {\n        // A path predicate should not have variables but just iterating so we could theoretically support this\n        Object.assign(inScope, ...thingy.items.map(inScopeVariables));\n    }\n    else if (thingy.type === 'group' || thingy.type === 'union' || thingy.type === 'optional') {\n        Object.assign(inScope, ...thingy.patterns.map(inScopeVariables));\n    }\n    else if (thingy.type === 'service' || thingy.type === 'graph') {\n        Object.assign(inScope, inScopeVariables(thingy.name));\n        Object.assign(inScope, ...thingy.patterns.map(inScopeVariables));\n    }\n    else if (thingy.type === 'bind') {\n        Object.assign(inScope, inScopeVariables(thingy.variable));\n    }\n    else if (thingy.type === 'values') {\n        if (thingy.values.length > 0) {\n            const vars = Object.keys(thingy.values[0]).map(v => factory.createTerm(v));\n            Object.assign(inScope, ...vars.map(inScopeVariables));\n        }\n    }\n    else if (thingy.type === 'query') {\n        if (thingy.queryType === 'SELECT' || thingy.queryType === 'DESCRIBE') {\n            if (thingy.where && thingy.variables.some(util_1.default.isWildcard))\n                Object.assign(inScope, ...thingy.where.map(inScopeVariables));\n            for (const v of thingy.variables) {\n                if (isVariable(v))\n                    Object.assign(inScope, inScopeVariables(v));\n                else if (v.variable)\n                    Object.assign(inScope, inScopeVariables(v.variable));\n            }\n            if (thingy.queryType === 'SELECT') {\n                if (thingy.group) {\n                    // Grouping can be a VariableExpression, typings are wrong\n                    for (const g of thingy.group) {\n                        if (g.variable)\n                            Object.assign(inScope, inScopeVariables(g.variable));\n                    }\n                }\n                if (thingy.values) {\n                    const values = { type: 'values', values: thingy.values };\n                    Object.assign(inScope, inScopeVariables(values));\n                }\n            }\n        }\n    }\n    return inScope;\n}\nfunction translateGraphPattern(thingy) {\n    // 18.2.2.1\n    // already done by sparql parser\n    // 18.2.2.3\n    // 18.2.2.4\n    // 18.2.2.5\n    // In Sparql.js, a group with a single BGP in it is a single object.\n    if (thingy.type === 'bgp') {\n        return translateBgp(thingy);\n    }\n    // 18.2.2.6 - GroupOrUnionGraphPattern\n    if (thingy.type === 'union')\n        return factory.createUnion(thingy.patterns.map((p) => {\n            // sparqljs doesn't always indicate the children are groups\n            if (p.type !== 'group')\n                p = { type: 'group', patterns: [p] };\n            return translateGraphPattern(p);\n        }));\n    // 18.2.2.6 - GraphGraphPattern\n    if (thingy.type === 'graph') {\n        // Sparql.js combines the group graph pattern and the graph itself in the same object.\n        // We split here so the group graph pattern can be interpreted correctly.\n        const group = { type: 'group', patterns: thingy.patterns };\n        let result = translateGraphPattern(group);\n        // Output depends on if we use quads or not\n        if (useQuads)\n            result = recurseGraph(result, thingy.name);\n        else\n            result = factory.createGraph(result, thingy.name);\n        return result;\n    }\n    // 18.2.2.6 - InlineData\n    if (thingy.type === 'values')\n        return translateInlineData(thingy);\n    // 18.2.2.6 - SubSelect\n    if (thingy.type === 'query')\n        return translateQuery(thingy, useQuads, false);\n    if (thingy.type === 'group') {\n        // 18.2.2.2\n        let filters = [];\n        let nonfilters = [];\n        for (let pattern of thingy.patterns)\n            (pattern.type === 'filter' ? filters : nonfilters).push(pattern);\n        // 18.2.2.6 - GroupGraphPattern\n        let result = nonfilters.reduce(accumulateGroupGraphPattern, factory.createBgp([]));\n        // 18.2.2.7\n        let expressions = filters.map(filter => translateExpression(filter.expression));\n        if (expressions.length > 0)\n            result = factory.createFilter(result, expressions.reduce((acc, exp) => factory.createOperatorExpression('&&', [acc, exp])));\n        return result;\n    }\n    throw new Error(`Unexpected type: ${thingy.type}`);\n}\nfunction translateExpression(exp) {\n    if (util_1.default.isSimpleTerm(exp))\n        return factory.createTermExpression(exp);\n    if (util_1.default.isQuad(exp)) {\n        if (util_1.default.hasQuadVariables(exp))\n            return factory.createOperatorExpression('triple', [\n                translateExpression(exp.subject),\n                translateExpression(exp.predicate),\n                translateExpression(exp.object),\n            ]);\n        else\n            return factory.createTermExpression(exp);\n    }\n    if (util_1.default.isWildcard(exp))\n        return factory.createWildcardExpression();\n    if ('aggregation' in exp)\n        return factory.createAggregateExpression(exp.aggregation, translateExpression(exp.expression), Boolean(exp.distinct), exp.separator);\n    if ('function' in exp)\n        // Outdated typings\n        return factory.createNamedExpression(exp.function, exp.args.map(translateExpression));\n    if ('operator' in exp) {\n        if (exp.operator === 'exists' || exp.operator === 'notexists')\n            return factory.createExistenceExpression(exp.operator === 'notexists', translateGraphPattern(exp.args[0]));\n        if (exp.operator === 'in' || exp.operator === 'notin')\n            exp.args = [exp.args[0]].concat(exp.args[1]); // sparql.js uses 2 arguments with the second one being a list\n        return factory.createOperatorExpression(exp.operator, exp.args.map(translateExpression));\n    }\n    throw new Error(`Unknown expression: ${JSON.stringify(exp)}`);\n}\nfunction translateBgp(thingy) {\n    let patterns = [];\n    let joins = [];\n    for (let t of thingy.triples) {\n        if ('pathType' in t.predicate) {\n            // translatePath returns a mix of Quads and Paths\n            let path = translatePath(t);\n            for (let p of path) {\n                if (p.type === types.PATH) {\n                    if (patterns.length > 0)\n                        joins.push(factory.createBgp(patterns));\n                    patterns = [];\n                    joins.push(p);\n                }\n                else\n                    patterns.push(p);\n            }\n        }\n        else\n            patterns.push(translateQuad(t));\n    }\n    if (patterns.length > 0)\n        joins.push(factory.createBgp(patterns));\n    if (joins.length === 1)\n        return joins[0];\n    return factory.createJoin(joins);\n}\nfunction translatePath(triple) {\n    let sub = triple.subject;\n    let pred = translatePathPredicate(triple.predicate);\n    let obj = triple.object;\n    return simplifyPath(sub, pred, obj);\n}\nfunction translatePathPredicate(predicate) {\n    if (util_1.default.isSimpleTerm(predicate)) {\n        if (predicate.termType === 'NamedNode')\n            return factory.createLink(predicate);\n        else\n            throw new Error(`Path predicate should be a NamedNode, got ${JSON.stringify(predicate)}`);\n    }\n    if (predicate.pathType === '^')\n        return factory.createInv(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '!') {\n        // negation is either over a single predicate or a list of disjuncted properties\n        let normals = [];\n        let inverted = [];\n        let items;\n        if ('pathType' in predicate.items[0] && predicate.items[0].pathType === '|')\n            items = predicate.items[0].items; // the | element\n        else\n            items = predicate.items;\n        for (let item of items) {\n            if (util_1.default.isSimpleTerm(item))\n                normals.push(item);\n            else if (item.pathType === '^')\n                inverted.push(item.items[0]);\n            else\n                throw new Error(`Unexpected item: ${JSON.stringify(item)}`);\n        }\n        // NPS elements do not have the LINK function\n        let normalElement = factory.createNps(normals);\n        let invertedElement = factory.createInv(factory.createNps(inverted));\n        if (inverted.length === 0)\n            return normalElement;\n        if (normals.length === 0)\n            return invertedElement;\n        return factory.createAlt([normalElement, invertedElement,]);\n    }\n    if (predicate.pathType === '/')\n        return factory.createSeq(predicate.items.map(translatePathPredicate));\n    if (predicate.pathType === '|')\n        return factory.createAlt(predicate.items.map(translatePathPredicate));\n    if (predicate.pathType === '*')\n        return factory.createZeroOrMorePath(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '+')\n        return factory.createOneOrMorePath(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '?')\n        return factory.createZeroOrOnePath(translatePathPredicate(predicate.items[0]));\n    throw new Error(`Unable to translate path expression ${JSON.stringify(predicate)}`);\n}\nfunction simplifyPath(subject, predicate, object) {\n    if (predicate.type === types.LINK)\n        return [factory.createPattern(subject, predicate.iri, object)];\n    if (predicate.type === types.INV)\n        return simplifyPath(object, predicate.path, subject);\n    if (predicate.type === types.SEQ) {\n        let joiner = subject;\n        return util_1.default.flatten(predicate.input.map((subOp, i) => {\n            const nextJoiner = i === predicate.input.length - 1 ? object : generateFreshVar();\n            const simplifiedPath = simplifyPath(joiner, subOp, nextJoiner);\n            if (nextJoiner.termType === 'Variable') {\n                joiner = nextJoiner;\n            }\n            return simplifiedPath;\n        }));\n    }\n    return [factory.createPath(subject, predicate, object)];\n}\nfunction generateFreshVar() {\n    let v = `?var${varCount++}`;\n    if (variables.has(v))\n        return generateFreshVar();\n    variables.add(v);\n    return factory.createTerm(v);\n}\nfunction translateQuad(quad) {\n    if ('pathType' in quad.predicate) {\n        throw new Error('Trying to translate property path to quad.');\n    }\n    // Graphs are needed here\n    // TODO: investigate if typings are wrong or if we internally add graphs to these\n    return factory.createPattern(quad.subject, quad.predicate, quad.object, quad.graph);\n}\nlet typeVals = Object.values(types);\nfunction recurseGraph(thingy, graph, replacement) {\n    if (thingy.type === types.GRAPH) {\n        if (replacement) {\n            // At this point we would lose track of the replacement which would result in incorrect results\n            // This would indicate the library is not being used as intended though\n            throw new Error('Recursing through nested GRAPH statements with a replacement is impossible.');\n        }\n        // In case there were nested GRAPH statements that were not recursed yet for some reason\n        thingy = recurseGraph(thingy.input, thingy.name);\n    }\n    else if (thingy.type === types.SERVICE) {\n        // Service blocks are not affected by enclosing GRAPH statements, so nothing is modified in this block.\n        // See https://github.com/joachimvh/SPARQLAlgebra.js/pull/104#issuecomment-1838016303\n    }\n    else if (thingy.type === types.BGP)\n        thingy.patterns = thingy.patterns.map(quad => {\n            if (replacement) {\n                if (quad.subject.equals(graph))\n                    quad.subject = replacement;\n                if (quad.predicate.equals(graph))\n                    quad.predicate = replacement;\n                if (quad.object.equals(graph))\n                    quad.object = replacement;\n            }\n            if (quad.graph.termType === 'DefaultGraph')\n                quad.graph = graph;\n            return quad;\n        });\n    else if (thingy.type === types.PATH) {\n        if (replacement) {\n            if (thingy.subject.equals(graph))\n                thingy.subject = replacement;\n            if (thingy.object.equals(graph))\n                thingy.object = replacement;\n        }\n        if (thingy.graph.termType === 'DefaultGraph')\n            thingy.graph = graph;\n    }\n    // need to replace variables in subqueries should the graph also be a variable of the same name\n    // unless the subquery projects that variable\n    else if (thingy.type === types.PROJECT && !replacement) {\n        if (!thingy.variables.some(v => v.equals(graph)))\n            replacement = generateFreshVar();\n        thingy.input = recurseGraph(thingy.input, graph, replacement);\n    }\n    // this can happen if the query extends an expression to the name of the graph\n    // since the extend happens here there should be no further occurrences of this name\n    // if there are it's the same situation as above\n    else if (thingy.type === types.EXTEND && !replacement) {\n        if (thingy.variable.equals(graph))\n            replacement = generateFreshVar();\n        thingy.input = recurseGraph(thingy.input, graph, replacement);\n    }\n    else {\n        for (let key of Object.keys(thingy)) {\n            if (Array.isArray(thingy[key]))\n                thingy[key] = thingy[key].map((x) => recurseGraph(x, graph, replacement));\n            else if (typeVals.indexOf(thingy[key].type) >= 0) // can't do instanceof on an interface\n                thingy[key] = recurseGraph(thingy[key], graph, replacement);\n            else if (replacement && isVariable(thingy[key]) && thingy[key].equals(graph))\n                thingy[key] = replacement;\n        }\n    }\n    return thingy;\n}\nfunction accumulateGroupGraphPattern(G, E) {\n    if (E.type === 'optional') {\n        // optional input needs to be interpreted as a group\n        const A = translateGraphPattern({ type: 'group', patterns: E.patterns });\n        if (A.type === types.FILTER) {\n            G = factory.createLeftJoin(G, A.input, A.expression);\n        }\n        else\n            G = factory.createLeftJoin(G, A);\n    }\n    else if (E.type === 'minus') {\n        // minus input needs to be interpreted as a group\n        const A = translateGraphPattern({ type: 'group', patterns: E.patterns });\n        G = factory.createMinus(G, A);\n    }\n    else if (E.type === 'bind')\n        G = factory.createExtend(G, E.variable, translateExpression(E.expression));\n    else if (E.type === 'service') {\n        // transform to group so childnodes get parsed correctly\n        const group = { type: 'group', patterns: E.patterns };\n        const A = factory.createService(translateGraphPattern(group), E.name, E.silent);\n        G = simplifiedJoin(G, A);\n    }\n    else {\n        const A = translateGraphPattern(E);\n        G = simplifiedJoin(G, A);\n    }\n    return G;\n}\nfunction simplifiedJoin(G, A) {\n    // Note: this is more simplification than requested in 18.2.2.8, but no reason not to do it.\n    if (G.type === types.BGP && A.type === types.BGP)\n        G = factory.createBgp([...G.patterns, ...A.patterns]);\n    // 18.2.2.8 (simplification)\n    else if (G.type === types.BGP && G.patterns.length === 0)\n        G = A;\n    else if (A.type === types.BGP && A.patterns.length === 0) { } // do nothing\n    else\n        G = factory.createJoin([G, A]);\n    return G;\n}\nfunction translateInlineData(values) {\n    let variables = (values.values.length === 0 ? [] : Object.keys(values.values[0])).map(factory.createTerm.bind(factory));\n    let bindings = values.values.map((binding) => {\n        let keys = Object.keys(binding);\n        keys = keys.filter(k => binding[k] !== undefined);\n        let map = {};\n        for (let key of keys)\n            map[key] = binding[key];\n        return map;\n    });\n    return factory.createValues(variables, bindings);\n}\n// --------------------------------------- AGGREGATES\nfunction translateAggregates(query, res) {\n    // Typings for ConstructQuery are wrong and missing several fields so we will cast quite often to SelectQuery to have partial typings\n    const select = query;\n    // 18.2.4.1\n    const E = [];\n    const A = {};\n    select.variables = select.variables && select.variables.map(val => mapAggregate(val, A));\n    select.having = select.having && select.having.map(val => mapAggregate(val, A));\n    select.order = select.order && select.order.map(val => mapAggregate(val, A));\n    // if there are any aggregates or if we have a groupBy (both result in a GROUP)\n    if (select.group || Object.keys(A).length > 0) {\n        const aggregates = Object.keys(A).map(v => translateBoundAggregate(A[v], factory.createTerm(v)));\n        const vars = [];\n        if (select.group) {\n            for (const e of select.group) {\n                if (util_1.default.isSimpleTerm(e.expression)) {\n                    vars.push(e.expression); // this will always be a var, otherwise sparql would be invalid\n                }\n                else {\n                    // Incorrect typings, e can have a variable, see for example group-variable test in sparql.js\n                    const v = 'variable' in e ? e.variable : generateFreshVar();\n                    res = factory.createExtend(res, v, translateExpression(e.expression));\n                    vars.push(v);\n                }\n            }\n        }\n        res = factory.createGroup(res, vars, aggregates);\n    }\n    // 18.2.4.2\n    if (select.having)\n        for (let filter of select.having)\n            res = factory.createFilter(res, translateExpression(filter));\n    // 18.2.4.3\n    if (query.values)\n        res = factory.createJoin([res, translateInlineData(query)]);\n    // 18.2.4.4\n    let PV = [];\n    if (query.queryType === 'SELECT' || query.queryType === 'DESCRIBE') {\n        // Sort variables for consistent output\n        if (query.variables.some((e) => e && util_1.default.isWildcard(e)))\n            PV = Object.values(inScopeVariables(query))\n                .sort((left, right) => left.value.localeCompare(right.value));\n        else {\n            // Wildcard has been filtered out above\n            for (let v of query.variables) {\n                // can have non-variables with DESCRIBE\n                if (isVariable(v) || !('variable' in v))\n                    PV.push(v);\n                else if (v.variable) // ... AS ?x\n                 {\n                    PV.push(v.variable);\n                    E.push(v);\n                }\n            }\n        }\n    }\n    // TODO: Jena simplifies by having a list of extends\n    for (let v of E)\n        res = factory.createExtend(res, v.variable, translateExpression(v.expression));\n    // 18.2.5\n    // not using toList and toMultiset\n    // 18.2.5.1\n    if (select.order)\n        res = factory.createOrderBy(res, select.order.map((exp) => {\n            let result = translateExpression(exp.expression);\n            if (exp.descending)\n                result = factory.createOperatorExpression('desc', [result]);\n            return result;\n        }));\n    // 18.2.5.2\n    // construct does not need a project (select, ask and describe do)\n    if (query.queryType === 'SELECT')\n        // Named nodes are only possible in a DESCRIBE so this cast is safe\n        res = factory.createProject(res, PV);\n    // 18.2.5.3\n    if (select.distinct)\n        res = factory.createDistinct(res);\n    // 18.2.5.4\n    if (select.reduced)\n        res = factory.createReduced(res);\n    // NEW: support for ask/construct/describe queries\n    if (query.queryType === 'CONSTRUCT')\n        res = factory.createConstruct(res, (query.template || []).map(translateQuad));\n    else if (query.queryType === 'ASK')\n        res = factory.createAsk(res);\n    else if (query.queryType === 'DESCRIBE')\n        res = factory.createDescribe(res, PV);\n    // Slicing needs to happen after construct/describe\n    // 18.2.5.5\n    if (select.offset || select.limit)\n        res = factory.createSlice(res, select.offset || 0, select.limit);\n    if (select.from)\n        res = factory.createFrom(res, select.from.default, select.from.named);\n    return res;\n}\n// rewrites some of the input sparql object to make use of aggregate variables\nfunction mapAggregate(thingy, aggregates) {\n    if ('type' in thingy && thingy.type === 'aggregate') {\n        let found = false;\n        let v;\n        for (let key of Object.keys(aggregates)) {\n            if (equal(aggregates[key], thingy)) {\n                v = factory.createTerm(key);\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            v = generateFreshVar();\n            aggregates[(0, rdf_string_1.termToString)(v)] = thingy;\n        }\n        return v;\n    }\n    // non-aggregate expression\n    if ('expression' in thingy && thingy.expression)\n        return { ...thingy, expression: mapAggregate(thingy.expression, aggregates) };\n    if ('args' in thingy && thingy.args)\n        return { ...thingy, args: thingy.args.map(subthingy => mapAggregate(subthingy, aggregates)) };\n    // Normal variable/wildcard\n    return thingy;\n}\nfunction translateBoundAggregate(thingy, v) {\n    if (thingy.type !== 'aggregate' || !thingy.aggregation)\n        throw new Error(`Unexpected input: ${JSON.stringify(thingy)}`);\n    const A = translateExpression(thingy);\n    A.variable = v;\n    return A;\n}\nfunction translateUpdate(thingy) {\n    if (thingy.updates.length === 1)\n        return translateSingleUpdate(thingy.updates[0]);\n    return factory.createCompositeUpdate(thingy.updates.map(translateSingleUpdate));\n}\nfunction translateSingleUpdate(thingy) {\n    if ('type' in thingy) {\n        if (thingy.type === 'load')\n            return translateUpdateGraphLoad(thingy);\n        if (thingy.type === 'clear' || thingy.type === 'create' || thingy.type === 'drop')\n            return translateUpdateGraph(thingy);\n        if (thingy.type === 'add' || thingy.type === 'copy' || thingy.type === 'move')\n            return translateUpdateGraphShortcut(thingy);\n    }\n    else if (thingy.updateType === 'insertdelete' || thingy.updateType === 'deletewhere' || thingy.updateType === 'delete' || thingy.updateType === 'insert')\n        return translateInsertDelete(thingy);\n    throw new Error(`Unknown update type ${JSON.stringify(thingy)}`);\n}\nfunction translateInsertDelete(thingy) {\n    if (!useQuads)\n        throw new Error('INSERT/DELETE operations are only supported with quads option enabled');\n    let deleteTriples = [];\n    let insertTriples = [];\n    let where;\n    if (thingy.delete)\n        deleteTriples = util_1.default.flatten(thingy.delete.map(input => translateUpdateTriplesBlock(input, thingy.graph)));\n    if (thingy.insert)\n        insertTriples = util_1.default.flatten(thingy.insert.map(input => translateUpdateTriplesBlock(input, thingy.graph)));\n    if (thingy.where && thingy.where.length > 0) {\n        where = translateGraphPattern({ type: 'group', patterns: thingy.where });\n        // Wrong typings, see test \"using\" in Sparql.js\n        const use = thingy.using;\n        if (use)\n            where = factory.createFrom(where, use.default, use.named);\n        else if (thingy.graph)\n            // This is equivalent\n            where = recurseGraph(where, thingy.graph);\n    }\n    else if (thingy.updateType === 'deletewhere' && deleteTriples.length > 0) {\n        where = factory.createBgp(deleteTriples);\n    }\n    return factory.createDeleteInsert(deleteTriples.length > 0 ? deleteTriples : undefined, insertTriples.length > 0 ? insertTriples : undefined, where);\n}\n// UPDATE parsing will always return quads and have no GRAPH elements\nfunction translateUpdateTriplesBlock(thingy, graph) {\n    let currentGraph = graph;\n    if (thingy.type === 'graph')\n        currentGraph = thingy.name;\n    let currentTriples = thingy.triples;\n    if (currentGraph)\n        currentTriples = currentTriples.map(triple => Object.assign(triple, { graph: currentGraph }));\n    return currentTriples.map(translateQuad);\n}\nfunction translateUpdateGraph(thingy) {\n    let source;\n    if (util_1.default.isSimpleTerm(thingy.graph))\n        source = thingy.graph;\n    else if (thingy.graph.all)\n        source = 'ALL';\n    else if (thingy.graph.default)\n        source = 'DEFAULT';\n    else if (thingy.graph.named)\n        source = 'NAMED';\n    else\n        source = thingy.graph.name;\n    switch (thingy.type) {\n        case 'clear': return factory.createClear(source, thingy.silent);\n        case 'create': return factory.createCreate(source, thingy.silent);\n        case 'drop': return factory.createDrop(source, thingy.silent);\n    }\n}\nfunction translateUpdateGraphLoad(thingy) {\n    return factory.createLoad(thingy.source, thingy.destination, thingy.silent);\n}\nfunction translateUpdateGraphShortcut(thingy) {\n    const source = thingy.source.default ? 'DEFAULT' : thingy.source.name;\n    const destination = thingy.destination.default ? 'DEFAULT' : thingy.destination.name;\n    switch (thingy.type) {\n        case 'copy': return factory.createCopy(source, destination, thingy.silent);\n        case 'move': return factory.createMove(source, destination, thingy.silent);\n        case 'add': return factory.createAdd(source, destination, thingy.silent);\n    }\n}\nfunction translateBlankNodesToVariables(res) {\n    const blankToVariableMapping = {};\n    const variablesRaw = Array.from(variables).reduce((acc, variable) => {\n        acc[variable] = true;\n        return acc;\n    }, {});\n    return util_1.default.mapOperation(res, {\n        [Algebra.types.DELETE_INSERT]: (op) => {\n            // Make sure blank nodes remain in the INSERT block, but do update the WHERE block\n            return {\n                result: factory.createDeleteInsert(op.delete, op.insert, op.where && translateBlankNodesToVariables(op.where)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.PATH]: (op, factory) => {\n            return {\n                result: factory.createPath(blankToVariable(op.subject), op.predicate, blankToVariable(op.object), blankToVariable(op.graph)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.PATTERN]: (op, factory) => {\n            return {\n                result: factory.createPattern(blankToVariable(op.subject), blankToVariable(op.predicate), blankToVariable(op.object), blankToVariable(op.graph)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.CONSTRUCT]: (op) => {\n            // Blank nodes in CONSTRUCT templates must be maintained\n            return {\n                result: factory.createConstruct(translateBlankNodesToVariables(op.input), op.template),\n                recurse: false,\n            };\n        },\n    });\n    function blankToVariable(term) {\n        if (term.termType === 'BlankNode') {\n            let variable = blankToVariableMapping[term.value];\n            if (!variable) {\n                variable = util_1.default.createUniqueVariable(term.value, variablesRaw, factory.dataFactory);\n                variablesRaw[variable.value] = true;\n                blankToVariableMapping[term.value] = variable;\n            }\n            return variable;\n        }\n        return term;\n    }\n}\n//# sourceMappingURL=sparqlAlgebra.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst algebra_1 = require(\"./algebra\");\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst rdf_terms_1 = require(\"rdf-terms\");\nclass Util {\n    /**\n     * Flattens an array of arrays to an array.\n     * @param arr - Array of arrays\n     */\n    static flatten(arr) {\n        return Array.prototype.concat(...arr).filter(x => x);\n    }\n    /**\n     * Outputs a JSON object corresponding to the input algebra-like.\n     */\n    static objectify(algebra) {\n        if (algebra.termType) {\n            if (algebra.termType === 'Quad') {\n                return {\n                    type: 'pattern',\n                    termType: 'Quad',\n                    subject: Util.objectify(algebra.subject),\n                    predicate: Util.objectify(algebra.predicate),\n                    object: Util.objectify(algebra.object),\n                    graph: Util.objectify(algebra.graph),\n                };\n            }\n            else {\n                let result = { termType: algebra.termType, value: algebra.value };\n                if (algebra.language)\n                    result.language = algebra.language;\n                if (algebra.datatype)\n                    result.datatype = Util.objectify(algebra.datatype);\n                return result;\n            }\n        }\n        if (Array.isArray(algebra))\n            return algebra.map(e => Util.objectify(e));\n        if (algebra === Object(algebra)) {\n            let result = {};\n            for (let key of Object.keys(algebra))\n                result[key] = Util.objectify(algebra[key]);\n            return result;\n        }\n        return algebra;\n    }\n    /**\n     * Detects all in-scope variables.\n     * In practice this means iterating through the entire algebra tree, finding all variables,\n     * and stopping when a project function is found.\n     * @param {Operation} op - Input algebra tree.\n     * @returns {Variable[]} - List of unique in-scope variables.\n     */\n    static inScopeVariables(op) {\n        const variables = [];\n        function addVariable(v) {\n            if (!variables.find(v2 => v.value === v2.value))\n                variables.push(v);\n        }\n        function recurseTerm(quad) {\n            if (quad.subject.termType === 'Variable')\n                addVariable(quad.subject);\n            if (quad.predicate.termType === 'Variable')\n                addVariable(quad.predicate);\n            if (quad.object.termType === 'Variable')\n                addVariable(quad.object);\n            if (quad.graph.termType === 'Variable')\n                addVariable(quad.graph);\n            if (quad.subject.termType === 'Quad')\n                recurseTerm(quad.subject);\n            if (quad.predicate.termType === 'Quad')\n                recurseTerm(quad.predicate);\n            if (quad.object.termType === 'Quad')\n                recurseTerm(quad.object);\n            if (quad.graph.termType === 'Quad')\n                recurseTerm(quad.graph);\n        }\n        // https://www.w3.org/TR/sparql11-query/#variableScope\n        Util.recurseOperation(op, {\n            [algebra_1.types.EXPRESSION]: (op) => {\n                if (op.expressionType === algebra_1.expressionTypes.AGGREGATE && op.variable) {\n                    addVariable(op.variable);\n                }\n                return true;\n            },\n            [algebra_1.types.EXTEND]: (op) => {\n                addVariable(op.variable);\n                return true;\n            },\n            [algebra_1.types.GRAPH]: (op) => {\n                if (op.name.termType === 'Variable')\n                    addVariable(op.name);\n                return true;\n            },\n            [algebra_1.types.GROUP]: (op) => {\n                op.variables.forEach(addVariable);\n                return true;\n            },\n            [algebra_1.types.PATH]: (op) => {\n                if (op.subject.termType === 'Variable')\n                    addVariable(op.subject);\n                if (op.object.termType === 'Variable')\n                    addVariable(op.object);\n                if (op.graph.termType === 'Variable')\n                    addVariable(op.graph);\n                if (op.subject.termType === 'Quad')\n                    recurseTerm(op.subject);\n                if (op.object.termType === 'Quad')\n                    recurseTerm(op.object);\n                if (op.graph.termType === 'Quad')\n                    recurseTerm(op.graph);\n                return true;\n            },\n            [algebra_1.types.PATTERN]: (op) => {\n                recurseTerm(op);\n                return true;\n            },\n            [algebra_1.types.PROJECT]: (op) => {\n                op.variables.forEach(addVariable);\n                return false;\n            },\n            [algebra_1.types.SERVICE]: (op) => {\n                if (op.name.termType === 'Variable')\n                    addVariable(op.name);\n                return true;\n            },\n            [algebra_1.types.VALUES]: (op) => {\n                op.variables.forEach(addVariable);\n                return true;\n            },\n        });\n        return variables;\n    }\n    /**\n     * Recurses through the given algebra tree\n     * A map of callback functions can be provided for individual Operation types to gather data.\n     * The return value of those callbacks should indicate whether recursion should be applied or not.\n     * Making modifications will change the original input object.\n     * @param {Operation} op - The Operation to recurse on.\n     * @param { [type: string]: (op: Operation) => boolean } callbacks - A map of required callback Operations.\n     */\n    static recurseOperation(op, callbacks) {\n        let result = op;\n        let doRecursion = true;\n        const callback = callbacks[op.type];\n        if (callback)\n            // Not sure how to get typing correct for op here\n            doRecursion = callback(op);\n        if (!doRecursion)\n            return;\n        let recurseOp = (op) => Util.recurseOperation(op, callbacks);\n        switch (result.type) {\n            case algebra_1.types.ALT:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.ASK:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.BGP:\n                result.patterns.forEach(recurseOp);\n                break;\n            case algebra_1.types.CONSTRUCT:\n                recurseOp(result.input);\n                result.template.map(recurseOp);\n                break;\n            case algebra_1.types.DESCRIBE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.DISTINCT:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.EXPRESSION:\n                if (result.expressionType === algebra_1.expressionTypes.EXISTENCE) {\n                    recurseOp(result.input);\n                }\n                break;\n            case algebra_1.types.EXTEND:\n                recurseOp(result.input);\n                recurseOp(result.expression);\n                break;\n            case algebra_1.types.FILTER:\n                recurseOp(result.input);\n                recurseOp(result.expression);\n                break;\n            case algebra_1.types.FROM:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.GRAPH:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.GROUP:\n                recurseOp(result.input);\n                result.aggregates.forEach(recurseOp);\n                break;\n            case algebra_1.types.INV:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.JOIN:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.LEFT_JOIN:\n                result.input.map(recurseOp);\n                if (result.expression)\n                    recurseOp(result.expression);\n                break;\n            case algebra_1.types.LINK:\n                break;\n            case algebra_1.types.MINUS:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.NOP:\n                break;\n            case algebra_1.types.NPS:\n                break;\n            case algebra_1.types.ONE_OR_MORE_PATH:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.ORDER_BY:\n                recurseOp(result.input);\n                result.expressions.forEach(recurseOp);\n                break;\n            case algebra_1.types.PATH:\n                recurseOp(result.predicate);\n                break;\n            case algebra_1.types.PATTERN:\n                break;\n            case algebra_1.types.PROJECT:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.REDUCED:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.SEQ:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.SERVICE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.SLICE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.UNION:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.VALUES:\n                break;\n            case algebra_1.types.ZERO_OR_MORE_PATH:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.ZERO_OR_ONE_PATH:\n                recurseOp(result.path);\n                break;\n            // UPDATE operations\n            case algebra_1.types.COMPOSITE_UPDATE:\n                result.updates.forEach(update => recurseOp(update));\n                break;\n            case algebra_1.types.DELETE_INSERT:\n                if (result.delete)\n                    result.delete.forEach(pattern => recurseOp(pattern));\n                if (result.insert)\n                    result.insert.forEach(pattern => recurseOp(pattern));\n                if (result.where)\n                    recurseOp(result.where);\n                break;\n            // all of these only have graph IDs as values\n            case algebra_1.types.LOAD: break;\n            case algebra_1.types.CLEAR: break;\n            case algebra_1.types.CREATE: break;\n            case algebra_1.types.DROP: break;\n            case algebra_1.types.ADD: break;\n            case algebra_1.types.MOVE: break;\n            case algebra_1.types.COPY: break;\n            default: throw new Error(`Unknown Operation type ${result.type}`);\n        }\n    }\n    /**\n     * Creates a deep copy of the given Operation.\n     * Creates shallow copies of the non-Operation values.\n     * A map of callback functions can be provided for individual Operation types\n     * to specifically modify the given objects before triggering recursion.\n     * The return value of those callbacks should indicate whether recursion should be applied to this returned object or not.\n     * @param {Operation} op - The Operation to recurse on.\n     * @param callbacks - A map of required callback Operations.\n     * @param {Factory} factory - Factory used to create new Operations. Will use default factory if none is provided.\n     * @returns {Operation} - The copied result.\n     */\n    static mapOperation(op, callbacks, factory) {\n        let result = op;\n        let doRecursion = true;\n        let copyMetadata = true;\n        factory = factory || new factory_1.default();\n        const callback = callbacks[op.type];\n        if (callback) {\n            // Not sure how to get typing correct for op here\n            const recurseResult = callback(op, factory);\n            result = recurseResult.result;\n            doRecursion = recurseResult.recurse;\n            copyMetadata = recurseResult.copyMetadata !== false;\n        }\n        let toCopyMetadata;\n        if (copyMetadata && (result.metadata || op.metadata)) {\n            toCopyMetadata = { ...result.metadata, ...op.metadata };\n        }\n        if (!doRecursion) {\n            // Inherit metadata\n            if (toCopyMetadata) {\n                result.metadata = toCopyMetadata;\n            }\n            return result;\n        }\n        let mapOp = (op) => Util.mapOperation(op, callbacks, factory);\n        // Several casts here might be wrong though depending on the callbacks output\n        switch (result.type) {\n            case algebra_1.types.ALT:\n                result = factory.createAlt(result.input.map(mapOp));\n                break;\n            case algebra_1.types.ASK:\n                result = factory.createAsk(mapOp(result.input));\n                break;\n            case algebra_1.types.BGP:\n                result = factory.createBgp(result.patterns.map(mapOp));\n                break;\n            case algebra_1.types.CONSTRUCT:\n                result = factory.createConstruct(mapOp(result.input), result.template.map(mapOp));\n                break;\n            case algebra_1.types.DESCRIBE:\n                result = factory.createDescribe(mapOp(result.input), result.terms);\n                break;\n            case algebra_1.types.DISTINCT:\n                result = factory.createDistinct(mapOp(result.input));\n                break;\n            case algebra_1.types.EXPRESSION:\n                result = Util.mapExpression(result, callbacks, factory);\n                break;\n            case algebra_1.types.EXTEND:\n                result = factory.createExtend(mapOp(result.input), result.variable, mapOp(result.expression));\n                break;\n            case algebra_1.types.FILTER:\n                result = factory.createFilter(mapOp(result.input), mapOp(result.expression));\n                break;\n            case algebra_1.types.FROM:\n                result = factory.createFrom(mapOp(result.input), [...result.default], [...result.named]);\n                break;\n            case algebra_1.types.GRAPH:\n                result = factory.createGraph(mapOp(result.input), result.name);\n                break;\n            case algebra_1.types.GROUP:\n                result = factory.createGroup(mapOp(result.input), [].concat(result.variables), result.aggregates.map(mapOp));\n                break;\n            case algebra_1.types.INV:\n                result = factory.createInv(mapOp(result.path));\n                break;\n            case algebra_1.types.JOIN:\n                result = factory.createJoin(result.input.map(mapOp));\n                break;\n            case algebra_1.types.LEFT_JOIN:\n                result = factory.createLeftJoin(mapOp(result.input[0]), mapOp(result.input[1]), result.expression ? mapOp(result.expression) : undefined);\n                break;\n            case algebra_1.types.LINK:\n                result = factory.createLink(result.iri);\n                break;\n            case algebra_1.types.MINUS:\n                result = factory.createMinus(mapOp(result.input[0]), mapOp(result.input[1]));\n                break;\n            case algebra_1.types.NOP:\n                result = factory.createNop();\n                break;\n            case algebra_1.types.NPS:\n                result = factory.createNps([].concat(result.iris));\n                break;\n            case algebra_1.types.ONE_OR_MORE_PATH:\n                result = factory.createOneOrMorePath(mapOp(result.path));\n                break;\n            case algebra_1.types.ORDER_BY:\n                result = factory.createOrderBy(mapOp(result.input), result.expressions.map(mapOp));\n                break;\n            case algebra_1.types.PATH:\n                result = factory.createPath(result.subject, mapOp(result.predicate), result.object, result.graph);\n                break;\n            case algebra_1.types.PATTERN:\n                result = factory.createPattern(result.subject, result.predicate, result.object, result.graph);\n                break;\n            case algebra_1.types.PROJECT:\n                result = factory.createProject(mapOp(result.input), [...result.variables]);\n                break;\n            case algebra_1.types.REDUCED:\n                result = factory.createReduced(mapOp(result.input));\n                break;\n            case algebra_1.types.SEQ:\n                result = factory.createSeq(result.input.map(mapOp));\n                break;\n            case algebra_1.types.SERVICE:\n                result = factory.createService(mapOp(result.input), result.name, result.silent);\n                break;\n            case algebra_1.types.SLICE:\n                result = factory.createSlice(mapOp(result.input), result.start, result.length);\n                break;\n            case algebra_1.types.UNION:\n                result = factory.createUnion(result.input.map(mapOp));\n                break;\n            case algebra_1.types.VALUES:\n                result = factory.createValues([].concat(result.variables), result.bindings.map(b => Object.assign({}, b)));\n                break;\n            case algebra_1.types.ZERO_OR_MORE_PATH:\n                result = factory.createZeroOrMorePath(mapOp(result.path));\n                break;\n            case algebra_1.types.ZERO_OR_ONE_PATH:\n                result = factory.createZeroOrOnePath(mapOp(result.path));\n                break;\n            // UPDATE operations\n            case algebra_1.types.COMPOSITE_UPDATE:\n                result = factory.createCompositeUpdate(result.updates.map(mapOp));\n                break;\n            case algebra_1.types.DELETE_INSERT:\n                result = factory.createDeleteInsert(result.delete ? result.delete.map(mapOp) : undefined, result.insert ? result.insert.map(mapOp) : undefined, result.where ? mapOp(result.where) : undefined);\n                break;\n            case algebra_1.types.LOAD:\n                result = factory.createLoad(result.source, result.destination, result.silent);\n                break;\n            case algebra_1.types.CLEAR:\n                result = factory.createClear(result.source, result.silent);\n                break;\n            case algebra_1.types.CREATE:\n                result = factory.createCreate(result.source, result.silent);\n                break;\n            case algebra_1.types.DROP:\n                result = factory.createDrop(result.source, result.silent);\n                break;\n            case algebra_1.types.ADD:\n                result = factory.createAdd(result.source, result.destination);\n                break;\n            case algebra_1.types.MOVE:\n                result = factory.createMove(result.source, result.destination);\n                break;\n            case algebra_1.types.COPY:\n                result = factory.createCopy(result.source, result.destination);\n                break;\n            default: throw new Error(`Unknown Operation type ${result.type}`);\n        }\n        // Inherit metadata\n        if (toCopyMetadata) {\n            result.metadata = toCopyMetadata;\n        }\n        return result;\n    }\n    /**\n     * Similar to the {@link mapOperation} function but specifically for expressions.\n     * Both functions call each other while copying.\n     * Should not be called directly since it does not execute the callbacks, these happen in {@link mapOperation}.\n     * @param {Expression} expr - The Operation to recurse on.\n     * @param callbacks - A map of required callback Operations.\n     * @param {Factory} factory - Factory used to create new Operations. Will use default factory if none is provided.\n     * @returns {Operation} - The copied result.\n     */\n    static mapExpression(expr, callbacks, factory) {\n        let result = expr;\n        let doRecursion = true;\n        factory = factory || new factory_1.default();\n        const callback = callbacks[expr.expressionType];\n        if (callback)\n            ({ result, recurse: doRecursion } = callback(expr, factory));\n        if (!doRecursion)\n            return result;\n        let mapOp = (op) => Util.mapOperation(op, callbacks, factory);\n        switch (expr.expressionType) {\n            case algebra_1.expressionTypes.AGGREGATE:\n                if (expr.variable) {\n                    return factory.createBoundAggregate(expr.variable, expr.aggregator, mapOp(expr.expression), expr.distinct, expr.separator);\n                }\n                return factory.createAggregateExpression(expr.aggregator, mapOp(expr.expression), expr.distinct, expr.separator);\n            case algebra_1.expressionTypes.EXISTENCE:\n                return factory.createExistenceExpression(expr.not, mapOp(expr.input));\n            case algebra_1.expressionTypes.NAMED:\n                return factory.createNamedExpression(expr.name, expr.args.map(mapOp));\n            case algebra_1.expressionTypes.OPERATOR:\n                return factory.createOperatorExpression(expr.operator, expr.args.map(mapOp));\n            case algebra_1.expressionTypes.TERM:\n                return factory.createTermExpression(expr.term);\n            case algebra_1.expressionTypes.WILDCARD:\n                return factory.createWildcardExpression();\n            default: throw new Error(`Unknown Expression type ${expr.expressionType}`);\n        }\n    }\n    /**\n     * Creates a deep clone of the operation.\n     * This is syntactic sugar for calling {@link mapOperation} without callbacks.\n     * @param {Operation} op - The operation to copy.\n     * @returns {Operation} - The deep copy.\n     */\n    static cloneOperation(op) {\n        return Util.mapOperation(op, {});\n    }\n    /**\n     * Creates a deep clone of the expression.\n     * This is syntactic sugar for calling {@link mapExpression} without callbacks.\n     * @param {Expression} expr - The operation to copy.\n     * @returns {Expression} - The deep copy.\n     */\n    static cloneExpression(expr) {\n        return Util.mapExpression(expr, {});\n    }\n    static createUniqueVariable(label, variables, dataFactory) {\n        let counter = 0;\n        let labelLoop = label;\n        while (variables[labelLoop]) {\n            labelLoop = `${label}${counter++}`;\n        }\n        return dataFactory.variable(labelLoop);\n    }\n    // separate terms from wildcard since we handle them differently\n    static isSimpleTerm(term) {\n        return term.termType !== undefined && term.termType !== 'Quad' && term.termType !== 'Wildcard';\n    }\n    static isQuad(term) {\n        return term.termType === 'Quad';\n    }\n    static hasQuadVariables(quad) {\n        return (0, rdf_terms_1.someTermsNested)(quad, term => term.termType === 'Variable');\n    }\n    static isWildcard(term) {\n        return term.termType === 'Wildcard';\n    }\n}\nexports.default = Util;\n//# sourceMappingURL=util.js.map","var XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\nvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nfunction Generator(options) {\n  this._options = options = options || {};\n\n  var prefixes = options.prefixes || {};\n  this._prefixByIri = {};\n  var prefixIris = [];\n  for (var prefix in prefixes) {\n    var iri = prefixes[prefix];\n    if (isString(iri)) {\n      this._prefixByIri[iri] = prefix;\n      prefixIris.push(iri);\n    }\n  }\n  var iriList = prefixIris.join('|').replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n  this._prefixRegex = new RegExp('^(' + iriList + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n  this._usedPrefixes = {};\n  this._sparqlStar = options.sparqlStar;\n  this._indent =  isString(options.indent)  ? options.indent  : '  ';\n  this._newline = isString(options.newline) ? options.newline : '\\n';\n  this._explicitDatatype = Boolean(options.explicitDatatype);\n}\n\n// Converts the parsed query object into a SPARQL query\nGenerator.prototype.toQuery = function (q) {\n  var query = '';\n\n  if (q.queryType)\n    query += q.queryType.toUpperCase() + ' ';\n  if (q.reduced)\n    query += 'REDUCED ';\n  if (q.distinct)\n    query += 'DISTINCT ';\n\n  if (q.variables){\n    query += mapJoin(q.variables, undefined, function (variable) {\n      return isTerm(variable) ? this.toEntity(variable) :\n             '(' + this.toExpression(variable.expression) + ' AS ' + variableToString(variable.variable) + ')';\n    }, this) + ' ';\n  }\n  else if (q.template)\n    query += this.group(q.template, true) + this._newline;\n\n  if (q.from)\n    query += this.graphs('FROM ', q.from.default) + this.graphs('FROM NAMED ', q.from.named);\n  if (q.where)\n    query += 'WHERE ' + this.group(q.where, true) + this._newline;\n\n  if (q.updates)\n    query += mapJoin(q.updates, ';' + this._newline, this.toUpdate, this);\n\n  if (q.group)\n    query += 'GROUP BY ' + mapJoin(q.group, undefined, function (it) {\n      var result = isTerm(it.expression)\n        ? this.toEntity(it.expression)\n        : '(' + this.toExpression(it.expression) + ')';\n      return it.variable ? '(' + result + ' AS ' + variableToString(it.variable) + ')' : result;\n    }, this) + this._newline;\n  if (q.having)\n    query += 'HAVING (' + mapJoin(q.having, undefined, this.toExpression, this) + ')' + this._newline;\n  if (q.order)\n    query += 'ORDER BY ' + mapJoin(q.order, undefined, function (it) {\n      var expr = '(' + this.toExpression(it.expression) + ')';\n      return !it.descending ? expr : 'DESC ' + expr;\n    }, this) + this._newline;\n\n  if (q.offset)\n    query += 'OFFSET ' + q.offset + this._newline;\n  if (q.limit)\n    query += 'LIMIT ' + q.limit + this._newline;\n\n  if (q.values)\n    query += this.values(q);\n\n  // stringify prefixes at the end to mark used ones\n  query = this.baseAndPrefixes(q) + query;\n  return query.trim();\n};\n\nGenerator.prototype.baseAndPrefixes = function (q) {\n  var base = q.base ? ('BASE <' + q.base + '>' + this._newline) : '';\n  var prefixes = '';\n  for (var key in q.prefixes) {\n    if (this._options.allPrefixes || this._usedPrefixes[key])\n      prefixes += 'PREFIX ' + key + ': <' + q.prefixes[key] + '>' + this._newline;\n  }\n  return base + prefixes;\n};\n\n// Converts the parsed SPARQL pattern into a SPARQL pattern\nGenerator.prototype.toPattern = function (pattern) {\n  var type = pattern.type || (pattern instanceof Array) && 'array' ||\n             (pattern.subject && pattern.predicate && pattern.object ? 'triple' : '');\n  if (!(type in this))\n    throw new Error('Unknown entry type: ' + type);\n  return this[type](pattern);\n};\n\nGenerator.prototype.triple = function (t) {\n  return this.toEntity(t.subject) + ' ' + this.toEntity(t.predicate) + ' ' + this.toEntity(t.object) + '.';\n};\n\nGenerator.prototype.array = function (items) {\n  return mapJoin(items, this._newline, this.toPattern, this);\n};\n\nGenerator.prototype.bgp = function (bgp) {\n  return this.encodeTriples(bgp.triples);\n};\n\nGenerator.prototype.encodeTriples = function (triples) {\n  if (!triples.length)\n    return '';\n\n  var parts = [], subject = undefined, predicate = undefined;\n  for (var i = 0; i < triples.length; i++) {\n    var triple = triples[i];\n    // Triple with different subject\n    if (!equalTerms(triple.subject, subject)) {\n      // Terminate previous triple\n      if (subject)\n        parts.push('.' + this._newline);\n      subject = triple.subject;\n      predicate = triple.predicate;\n      parts.push(this.toEntity(subject), ' ', this.toEntity(predicate));\n    }\n    // Triple with same subject but different predicate\n    else if (!equalTerms(triple.predicate, predicate)) {\n      predicate = triple.predicate;\n      parts.push(';' + this._newline, this._indent, this.toEntity(predicate));\n    }\n    // Triple with same subject and predicate\n    else {\n      parts.push(',');\n    }\n    parts.push(' ', this.toEntity(triple.object));\n  }\n  parts.push('.');\n\n  return parts.join('');\n}\n\nGenerator.prototype.graph = function (graph) {\n  return 'GRAPH ' + this.toEntity(graph.name) + ' ' + this.group(graph);\n};\n\nGenerator.prototype.graphs = function (keyword, graphs) {\n  return !graphs || graphs.length === 0 ? '' :\n    mapJoin(graphs, '', function (g) { return keyword + this.toEntity(g) + this._newline; }, this)\n}\n\nGenerator.prototype.group = function (group, inline) {\n  group = inline !== true ? this.array(group.patterns || group.triples)\n                          : this.toPattern(group.type !== 'group' ? group : group.patterns);\n  return group.indexOf(this._newline) === -1 ? '{ ' + group + ' }' : '{' + this._newline + this.indent(group) + this._newline + '}';\n};\n\nGenerator.prototype.query = function (query) {\n  return this.toQuery(query);\n};\n\nGenerator.prototype.filter = function (filter) {\n  return 'FILTER(' + this.toExpression(filter.expression) + ')';\n};\n\nGenerator.prototype.bind = function (bind) {\n  return 'BIND(' + this.toExpression(bind.expression) + ' AS ' + variableToString(bind.variable) + ')';\n};\n\nGenerator.prototype.optional = function (optional) {\n  return 'OPTIONAL ' + this.group(optional);\n};\n\nGenerator.prototype.union = function (union) {\n  return mapJoin(union.patterns, this._newline + 'UNION' + this._newline, function (p) { return this.group(p, true); }, this);\n};\n\nGenerator.prototype.minus = function (minus) {\n  return 'MINUS ' + this.group(minus);\n};\n\nGenerator.prototype.values = function (valuesList) {\n  // Gather unique keys\n  var keys = Object.keys(valuesList.values.reduce(function (keyHash, values) {\n    for (var key in values) keyHash[key] = true;\n    return keyHash;\n  }, {}));\n  // Check whether simple syntax can be used\n  var lparen, rparen;\n  if (keys.length === 1) {\n    lparen = rparen = '';\n  } else {\n    lparen = '(';\n    rparen = ')';\n  }\n  // Create value rows\n  return 'VALUES ' + lparen + keys.join(' ') + rparen + ' {' + this._newline +\n    mapJoin(valuesList.values, this._newline, function (values) {\n      return '  ' + lparen + mapJoin(keys, undefined, function (key) {\n        return values[key] ? this.toEntity(values[key]) : 'UNDEF';\n      }, this) + rparen;\n    }, this) + this._newline + '}';\n};\n\nGenerator.prototype.service = function (service) {\n  return 'SERVICE ' + (service.silent ? 'SILENT ' : '') + this.toEntity(service.name) + ' ' +\n         this.group(service);\n};\n\n// Converts the parsed expression object into a SPARQL expression\nGenerator.prototype.toExpression = function (expr) {\n  if (isTerm(expr)) {\n    return this.toEntity(expr);\n  }\n  switch (expr.type.toLowerCase()) {\n    case 'aggregate':\n      return expr.aggregation.toUpperCase() +\n             '(' + (expr.distinct ? 'DISTINCT ' : '') + this.toExpression(expr.expression) +\n             (typeof expr.separator === 'string' ? '; SEPARATOR = ' + '\"' + expr.separator.replace(escape, escapeReplacer) + '\"' : '') + ')';\n    case 'functioncall':\n      return this.toEntity(expr.function) + '(' + mapJoin(expr.args, ', ', this.toExpression, this) + ')';\n    case 'operation':\n      var operator = expr.operator.toUpperCase(), args = expr.args || [];\n      switch (expr.operator.toLowerCase()) {\n      // Infix operators\n      case '<':\n      case '>':\n      case '>=':\n      case '<=':\n      case '&&':\n      case '||':\n      case '=':\n      case '!=':\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n          return (isTerm(args[0]) ? this.toEntity(args[0]) : '(' + this.toExpression(args[0]) + ')') +\n                 ' ' + operator + ' ' +\n                 (isTerm(args[1]) ? this.toEntity(args[1]) : '(' + this.toExpression(args[1]) + ')');\n      // Unary operators\n      case '!':\n        return '!(' + this.toExpression(args[0]) + ')';\n      case 'uplus':\n        return '+(' + this.toExpression(args[0]) + ')';\n      case 'uminus':\n        return '-(' + this.toExpression(args[0]) + ')';\n      // IN and NOT IN\n      case 'notin':\n        operator = 'NOT IN';\n      case 'in':\n        return this.toExpression(args[0]) + ' ' + operator +\n               '(' + (isString(args[1]) ? args[1] : mapJoin(args[1], ', ', this.toExpression, this)) + ')';\n      // EXISTS and NOT EXISTS\n      case 'notexists':\n        operator = 'NOT EXISTS';\n      case 'exists':\n        return operator + ' ' + this.group(args[0], true);\n      // Other expressions\n      default:\n        return operator + '(' + mapJoin(args, ', ', this.toExpression, this) + ')';\n      }\n    default:\n      throw new Error('Unknown expression type: ' + expr.type);\n  }\n};\n\n// Converts the parsed entity (or property path) into a SPARQL entity\nGenerator.prototype.toEntity = function (value) {\n  if (isTerm(value)) {\n    switch (value.termType) {\n    // variable, * selector, or blank node\n    case 'Wildcard':\n      return '*';\n    case 'Variable':\n      return variableToString(value);\n    case 'BlankNode':\n      return '_:' + value.value;\n    // literal\n    case 'Literal':\n      var lexical = value.value || '', language = value.language || '', datatype = value.datatype;\n      value = '\"' + lexical.replace(escape, escapeReplacer) + '\"';\n      if (language){\n        value += '@' + language;\n      } else if (datatype) {\n        // Abbreviate literals when possible\n        if (!this._explicitDatatype) {\n          switch (datatype.value) {\n          case XSD_STRING:\n            return value;\n          case XSD_INTEGER:\n            if (/^\\d+$/.test(lexical))\n              // Add space to avoid confusion with decimals in broken parsers\n              return lexical + ' ';\n          }\n        }\n        value += '^^' + this.encodeIRI(datatype.value);\n      }\n      return value;\n    case 'Quad':\n      if (!this._sparqlStar)\n          throw new Error('SPARQL* support is not enabled');\n\n      if (value.graph && value.graph.termType !== \"DefaultGraph\") {\n        return '<< GRAPH ' +\n          this.toEntity(value.graph) +\n          ' { ' +\n          this.toEntity(value.subject) + ' ' +\n          this.toEntity(value.predicate) + ' ' +\n          this.toEntity(value.object) +\n          ' } ' +\n          ' >>'\n      }\n      else {\n        return (\n          '<< ' +\n          this.toEntity(value.subject) + ' ' +\n          this.toEntity(value.predicate) + ' ' +\n          this.toEntity(value.object) +\n          ' >>'\n        );\n      }\n    // IRI\n    default:\n      return this.encodeIRI(value.value);\n    }\n  }\n  // property path\n  else {\n    var items = value.items.map(this.toEntity, this), path = value.pathType;\n    switch (path) {\n    // prefix operator\n    case '^':\n    case '!':\n      return path + items[0];\n    // postfix operator\n    case '*':\n    case '+':\n    case '?':\n      return '(' + items[0] + path + ')';\n    // infix operator\n    default:\n      return '(' + items.join(path) + ')';\n    }\n  }\n};\nvar escape = /[\"\\\\\\t\\n\\r\\b\\f]/g,\n    escapeReplacer = function (c) { return escapeReplacements[c]; },\n    escapeReplacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n                           '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\n// Represent the IRI, as a prefixed name when possible\nGenerator.prototype.encodeIRI = function (iri) {\n  var prefixMatch = this._prefixRegex.exec(iri);\n  if (prefixMatch) {\n    var prefix = this._prefixByIri[prefixMatch[1]];\n    this._usedPrefixes[prefix] = true;\n    return prefix + ':' + prefixMatch[2];\n  }\n  return '<' + iri + '>';\n};\n\n// Converts the parsed update object into a SPARQL update clause\nGenerator.prototype.toUpdate = function (update) {\n  switch (update.type || update.updateType) {\n  case 'load':\n    return 'LOAD' + (update.source ? ' ' + this.toEntity(update.source) : '') +\n           (update.destination ? ' INTO GRAPH ' + this.toEntity(update.destination) : '');\n  case 'insert':\n    return 'INSERT DATA '  + this.group(update.insert, true);\n  case 'delete':\n    return 'DELETE DATA '  + this.group(update.delete, true);\n  case 'deletewhere':\n    return 'DELETE WHERE ' + this.group(update.delete, true);\n  case 'insertdelete':\n    return (update.graph ? 'WITH ' + this.toEntity(update.graph) + this._newline : '') +\n           (update.delete.length ? 'DELETE ' + this.group(update.delete, true) + this._newline : '') +\n           (update.insert.length ? 'INSERT ' + this.group(update.insert, true) + this._newline : '') +\n           (update.using ? this.graphs('USING ', update.using.default) : '') +\n           (update.using ? this.graphs('USING NAMED ', update.using.named) : '') +\n           'WHERE ' + this.group(update.where, true);\n  case 'add':\n  case 'copy':\n  case 'move':\n    return update.type.toUpperCase()+ ' ' +  (update.silent ? 'SILENT ' : '') + (update.source.default ? 'DEFAULT' : this.toEntity(update.source.name)) +\n           ' TO ' + this.toEntity(update.destination.name);\n  case 'create':\n  case 'clear':\n  case 'drop':\n    return update.type.toUpperCase() + (update.silent ? ' SILENT ' : ' ') + (\n      update.graph.default ? 'DEFAULT' :\n      update.graph.named ? 'NAMED' :\n      update.graph.all ? 'ALL' :\n      ('GRAPH ' + this.toEntity(update.graph.name))\n    );\n  default:\n    throw new Error('Unknown update query type: ' + update.type);\n  }\n};\n\n// Indents each line of the string\nGenerator.prototype.indent = function(text) { return text.replace(/^/gm, this._indent); }\n\nfunction variableToString(variable){\n  return '?' + variable.value;\n}\n\n// Checks whether the object is a string\nfunction isString(object) { return typeof object === 'string'; }\n\n// Checks whether the object is a Term\nfunction isTerm(object) {\n  return typeof object.termType === 'string';\n}\n\n// Checks whether term1 and term2 are equivalent without `.equals()` prototype method\nfunction equalTerms(term1, term2) {\n  if (!term1 || !isTerm(term1)) { return false; }\n  if (!term2 || !isTerm(term2)) { return false; }\n  if (term1.termType !== term2.termType) { return false; }\n  switch (term1.termType) {\n    case 'Literal':\n      return term1.value === term2.value\n          && term1.language === term2.language\n          && equalTerms(term1.datatype, term2.datatype);\n    case 'Quad':\n      return equalTerms(term1.subject, term2.subject)\n          && equalTerms(term1.predicate, term2.predicate)\n          && equalTerms(term1.object, term2.object)\n          && equalTerms(term1.graph, term2.graph);\n    default:\n      return term1.value === term2.value;\n  }\n}\n\n// Maps the array with the given function, and joins the results using the separator\nfunction mapJoin(array, sep, func, self) {\n  return array.map(func, self).join(isString(sep) ? sep : ' ');\n}\n\n/**\n * @param options {\n *   allPrefixes: boolean,\n *   indentation: string,\n *   newline: string\n * }\n */\nmodule.exports = function SparqlGenerator(options = {}) {\n  return {\n    stringify: function (query) {\n      var currentOptions = Object.create(options);\n      currentOptions.prefixes = query.prefixes;\n      return new Generator(currentOptions).toQuery(query);\n    },\n    createGenerator: function() { return new Generator(options); }\n  };\n};\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar SparqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[6,12,13,15,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],$V1=[2,247],$V2=[100,110,113,115,116,123,126,131,329,330,331,332,333],$V3=[2,409],$V4=[1,18],$V5=[1,27],$V6=[13,16,45,197,224,229,308],$V7=[28,29,53],$V8=[28,53],$V9=[1,42],$Va=[1,45],$Vb=[1,41],$Vc=[1,44],$Vd=[123,126],$Ve=[1,67],$Vf=[39,45,87],$Vg=[13,16,45,197,224,308],$Vh=[1,87],$Vi=[2,281],$Vj=[1,86],$Vk=[13,16,45,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],$Vl=[6,28,29,53,63,70,73,81,83,85],$Vm=[6,13,16,28,29,53,63,70,73,81,83,85,87,308],$Vn=[6,13,16,28,29,45,53,63,70,73,81,82,83,85,87,89,197,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314],$Vo=[6,13,16,28,29,31,39,45,47,48,53,63,70,73,81,82,83,85,87,89,109,112,121,123,126,128,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,337,338,340,341,342,343,344,345,346],$Vp=[13,16,308],$Vq=[112,132,327,334],$Vr=[13,16,112,132,308],$Vs=[1,111],$Vt=[1,117],$Vu=[112,132,327,328,334],$Vv=[13,16,112,132,308,328],$Vw=[28,29,45,53,87],$Vx=[1,138],$Vy=[1,151],$Vz=[1,128],$VA=[1,127],$VB=[1,129],$VC=[1,140],$VD=[1,141],$VE=[1,142],$VF=[1,143],$VG=[1,144],$VH=[1,145],$VI=[1,147],$VJ=[1,148],$VK=[2,457],$VL=[1,158],$VM=[1,159],$VN=[1,160],$VO=[1,152],$VP=[1,153],$VQ=[1,156],$VR=[1,171],$VS=[1,172],$VT=[1,173],$VU=[1,174],$VV=[1,175],$VW=[1,176],$VX=[1,167],$VY=[1,168],$VZ=[1,169],$V_=[1,170],$V$=[1,157],$V01=[1,166],$V11=[1,161],$V21=[1,162],$V31=[1,163],$V41=[1,164],$V51=[1,165],$V61=[6,13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],$V71=[1,195],$V81=[6,31,73,81,83,85],$V91=[2,285],$Va1=[1,199],$Vb1=[1,201],$Vc1=[6,31,70,73,81,83,85],$Vd1=[2,283],$Ve1=[1,207],$Vf1=[1,218],$Vg1=[1,223],$Vh1=[1,219],$Vi1=[1,225],$Vj1=[1,226],$Vk1=[1,224],$Vl1=[6,63,70,73,81,83,85],$Vm1=[1,236],$Vn1=[2,334],$Vo1=[1,243],$Vp1=[1,241],$Vq1=[6,193],$Vr1=[2,349],$Vs1=[2,339],$Vt1=[28,128],$Vu1=[47,48,193,272],$Vv1=[47,48,193,242,272],$Vw1=[47,48,193,242,246,272],$Vx1=[47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,341,342,343,344,345,346],$Vy1=[39,47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,338,341,342,343,344,345,346],$Vz1=[1,271],$VA1=[1,270],$VB1=[6,13,16,29,31,39,45,47,48,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],$VC1=[1,281],$VD1=[1,280],$VE1=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],$VF1=[45,89],$VG1=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],$VH1=[13,16,31,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],$VI1=[31,89],$VJ1=[48,87],$VK1=[6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338],$VL1=[6,13,16,39,45,48,82,87,89,231,263,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338,340],$VM1=[1,313],$VN1=[6,85],$VO1=[6,31,81,83,85],$VP1=[2,361],$VQ1=[2,353],$VR1=[1,343],$VS1=[31,112,335],$VT1=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],$VU1=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335],$VV1=[6,109,193],$VW1=[31,112],$VX1=[13,16,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],$VY1=[1,390],$VZ1=[1,391],$V_1=[13,16,87,197,308,314],$V$1=[13,16,39,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],$V02=[1,417],$V12=[1,418],$V22=[13,16,48,197,229,308],$V32=[6,31,85],$V42=[6,13,16,31,45,73,81,83,85,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],$V52=[6,13,16,29,31,45,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,231,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,346,347,348,349,350,351],$V62=[29,31,85,112,159,160,161,163,164],$V72=[1,443],$V82=[1,444],$V92=[1,449],$Va2=[31,112,193,232,318,335],$Vb2=[13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],$Vc2=[13,16,31,45,48,82,87,89,112,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],$Vd2=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],$Ve2=[13,16,31,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],$Vf2=[31,45],$Vg2=[1,507],$Vh2=[1,508],$Vi2=[6,13,16,29,31,39,45,47,48,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,336,338,341,342,343,344,345,346,347,348,349,350,351],$Vj2=[29,31,85,112,159,160,161,163,164,335],$Vk2=[6,13,16,31,45,70,73,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],$Vl2=[13,16,31,45,48,82,87,89,112,193,197,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],$Vm2=[2,352],$Vn2=[13,16,197,308,314],$Vo2=[1,565],$Vp2=[6,13,16,31,45,76,78,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],$Vq2=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],$Vr2=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],$Vs2=[13,16,87,308],$Vt2=[2,364],$Vu2=[29,31,85,112,159,160,161,163,164,193,232,318,335],$Vv2=[31,112,193,232,272,318,335],$Vw2=[2,359],$Vx2=[13,16,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],$Vy2=[29,31,85,112,159,160,161,163,164,193,232,272,318,335],$Vz2=[13,16,31,45,82,87,89,112,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],$VA2=[2,347];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"QueryOrUpdate\":3,\"Prologue\":4,\"QueryOrUpdate_group0\":5,\"EOF\":6,\"Query\":7,\"Qry\":8,\"Query_option0\":9,\"Prologue_repetition0\":10,\"BaseDecl\":11,\"BASE\":12,\"IRIREF\":13,\"PrefixDecl\":14,\"PREFIX\":15,\"PNAME_NS\":16,\"SelectClauseWildcard\":17,\"Qry_repetition0\":18,\"WhereClause\":19,\"SolutionModifierNoGroup\":20,\"SelectClauseVars\":21,\"Qry_repetition1\":22,\"SolutionModifier\":23,\"CONSTRUCT\":24,\"ConstructTemplate\":25,\"Qry_repetition2\":26,\"Qry_repetition3\":27,\"WHERE\":28,\"{\":29,\"Qry_option0\":30,\"}\":31,\"DESCRIBE\":32,\"Qry_group0\":33,\"Qry_repetition4\":34,\"Qry_option1\":35,\"ASK\":36,\"Qry_repetition5\":37,\"SelectClauseBase\":38,\"*\":39,\"SelectClauseVars_repetition_plus0\":40,\"SELECT\":41,\"SelectClauseBase_option0\":42,\"SelectClauseItem\":43,\"Var\":44,\"(\":45,\"Expression\":46,\"AS\":47,\")\":48,\"SubSelect\":49,\"SubSelect_option0\":50,\"SubSelect_option1\":51,\"DatasetClause\":52,\"FROM\":53,\"DatasetClause_option0\":54,\"iri\":55,\"WhereClause_option0\":56,\"GroupGraphPattern\":57,\"SolutionModifier_option0\":58,\"SolutionModifierNoGroup_option0\":59,\"SolutionModifierNoGroup_option1\":60,\"SolutionModifierNoGroup_option2\":61,\"GroupClause\":62,\"GROUP\":63,\"BY\":64,\"GroupClause_repetition_plus0\":65,\"GroupCondition\":66,\"BuiltInCall\":67,\"FunctionCall\":68,\"HavingClause\":69,\"HAVING\":70,\"HavingClause_repetition_plus0\":71,\"OrderClause\":72,\"ORDER\":73,\"OrderClause_repetition_plus0\":74,\"OrderCondition\":75,\"ASC\":76,\"BrackettedExpression\":77,\"DESC\":78,\"Constraint\":79,\"LimitOffsetClauses\":80,\"LIMIT\":81,\"INTEGER\":82,\"OFFSET\":83,\"ValuesClause\":84,\"VALUES\":85,\"InlineData\":86,\"VAR\":87,\"InlineData_repetition0\":88,\"NIL\":89,\"InlineData_repetition1\":90,\"InlineData_repetition_plus2\":91,\"InlineData_repetition3\":92,\"DataBlock\":93,\"DataBlockValueList\":94,\"DataBlockValueList_repetition_plus0\":95,\"Update\":96,\"Update_repetition0\":97,\"Update1\":98,\"Update_option0\":99,\"LOAD\":100,\"Update1_option0\":101,\"Update1_option1\":102,\"Update1_group0\":103,\"Update1_option2\":104,\"GraphRefAll\":105,\"Update1_group1\":106,\"Update1_option3\":107,\"GraphOrDefault\":108,\"TO\":109,\"CREATE\":110,\"Update1_option4\":111,\"GRAPH\":112,\"INSERTDATA\":113,\"QuadPattern\":114,\"DELETEDATA\":115,\"DELETEWHERE\":116,\"Update1_option5\":117,\"InsertDeleteClause\":118,\"Update1_repetition0\":119,\"IntoGraphClause\":120,\"INTO\":121,\"GraphRef\":122,\"DELETE\":123,\"InsertDeleteClause_option0\":124,\"InsertClause\":125,\"INSERT\":126,\"UsingClause\":127,\"USING\":128,\"UsingClause_option0\":129,\"WithClause\":130,\"WITH\":131,\"DEFAULT\":132,\"GraphOrDefault_option0\":133,\"GraphRefAll_group0\":134,\"Quads\":135,\"Quads_option0\":136,\"Quads_repetition0\":137,\"QuadsNotTriples\":138,\"VarOrIri\":139,\"QuadsNotTriples_option0\":140,\"QuadsNotTriples_option1\":141,\"QuadsNotTriples_option2\":142,\"TriplesTemplate\":143,\"TriplesTemplate_repetition0\":144,\"TriplesSameSubject\":145,\"TriplesTemplate_option0\":146,\"GroupGraphPatternSub\":147,\"GroupGraphPatternSub_option0\":148,\"GroupGraphPatternSub_repetition0\":149,\"GroupGraphPatternSubTail\":150,\"GraphPatternNotTriples\":151,\"GroupGraphPatternSubTail_option0\":152,\"GroupGraphPatternSubTail_option1\":153,\"TriplesBlock\":154,\"TriplesBlock_repetition0\":155,\"TriplesSameSubjectPath\":156,\"TriplesBlock_option0\":157,\"GroupOrUnionGraphPattern\":158,\"OPTIONAL\":159,\"MINUS\":160,\"SERVICE\":161,\"GraphPatternNotTriples_option0\":162,\"FILTER\":163,\"BIND\":164,\"InlineDataOneVar\":165,\"InlineDataFull\":166,\"InlineDataOneVar_repetition0\":167,\"InlineDataFull_repetition0\":168,\"InlineDataFull_repetition_plus1\":169,\"InlineDataFull_repetition2\":170,\"DataBlockValue\":171,\"Literal\":172,\"QuotedTriple\":173,\"UNDEF\":174,\"GroupOrUnionGraphPattern_repetition0\":175,\"ArgList\":176,\"ArgList_option0\":177,\"ArgList_repetition0\":178,\"ExpressionList\":179,\"ExpressionList_repetition0\":180,\"ConstructTemplate_option0\":181,\"ConstructTriples\":182,\"ConstructTriples_repetition0\":183,\"ConstructTriples_option0\":184,\"VarOrTermOrQuotedTP\":185,\"PropertyListNotEmpty\":186,\"TriplesNode\":187,\"PropertyList\":188,\"PropertyList_option0\":189,\"VerbObjectList\":190,\"PropertyListNotEmpty_repetition0\":191,\"SemiOptionalVerbObjectList\":192,\";\":193,\"SemiOptionalVerbObjectList_option0\":194,\"Verb\":195,\"ObjectList\":196,\"a\":197,\"ObjectList_repetition0\":198,\"Object\":199,\"GraphNode\":200,\"Object_option0\":201,\"PropertyListPathNotEmpty\":202,\"TriplesNodePath\":203,\"TriplesSameSubjectPath_option0\":204,\"O\":205,\"PropertyListPathNotEmpty_repetition0\":206,\"PropertyListPathNotEmptyTail\":207,\"O_group0\":208,\"ObjectListPath\":209,\"ObjectListPath_repetition0\":210,\"ObjectPath\":211,\"GraphNodePath\":212,\"ObjectPath_option0\":213,\"Path\":214,\"Path_repetition0\":215,\"PathSequence\":216,\"PathSequence_repetition0\":217,\"PathEltOrInverse\":218,\"PathElt\":219,\"PathPrimary\":220,\"PathElt_option0\":221,\"PathEltOrInverse_option0\":222,\"IriOrA\":223,\"!\":224,\"PathNegatedPropertySet\":225,\"PathOneInPropertySet\":226,\"PathNegatedPropertySet_repetition0\":227,\"PathNegatedPropertySet_option0\":228,\"^\":229,\"TriplesNode_repetition_plus0\":230,\"[\":231,\"]\":232,\"TriplesNodePath_repetition_plus0\":233,\"VarOrTermOrQuotedTPExpr\":234,\"VarOrTerm\":235,\"GraphTerm\":236,\"BlankNode\":237,\"ConditionalOrExpression\":238,\"ConditionalAndExpression\":239,\"ConditionalOrExpression_repetition0\":240,\"ConditionalOrExpressionTail\":241,\"||\":242,\"RelationalExpression\":243,\"ConditionalAndExpression_repetition0\":244,\"ConditionalAndExpressionTail\":245,\"&&\":246,\"NumericExpression\":247,\"RelationalExpression_group0\":248,\"RelationalExpression_option0\":249,\"IN\":250,\"MultiplicativeExpression\":251,\"NumericExpression_repetition0\":252,\"AdditiveExpressionTail\":253,\"AdditiveExpressionTail_group0\":254,\"NumericLiteralPositive\":255,\"AdditiveExpressionTail_repetition0\":256,\"NumericLiteralNegative\":257,\"AdditiveExpressionTail_repetition1\":258,\"UnaryExpression\":259,\"MultiplicativeExpression_repetition0\":260,\"MultiplicativeExpressionTail\":261,\"MultiplicativeExpressionTail_group0\":262,\"+\":263,\"PrimaryExpression\":264,\"-\":265,\"ExprQuotedTP\":266,\"Aggregate\":267,\"FUNC_ARITY0\":268,\"FUNC_ARITY1\":269,\"FUNC_ARITY1_SPARQL_STAR\":270,\"FUNC_ARITY2\":271,\",\":272,\"FUNC_ARITY3\":273,\"FUNC_ARITY3_SPARQL_STAR\":274,\"BuiltInCall_group0\":275,\"BOUND\":276,\"BNODE\":277,\"BuiltInCall_option0\":278,\"EXISTS\":279,\"COUNT\":280,\"Aggregate_option0\":281,\"Aggregate_group0\":282,\"FUNC_AGGREGATE\":283,\"Aggregate_option1\":284,\"GROUP_CONCAT\":285,\"Aggregate_option2\":286,\"Aggregate_option3\":287,\"GroupConcatSeparator\":288,\"SEPARATOR\":289,\"=\":290,\"String\":291,\"LANGTAG\":292,\"^^\":293,\"DECIMAL\":294,\"DOUBLE\":295,\"BOOLEAN\":296,\"INTEGER_POSITIVE\":297,\"DECIMAL_POSITIVE\":298,\"DOUBLE_POSITIVE\":299,\"INTEGER_NEGATIVE\":300,\"DECIMAL_NEGATIVE\":301,\"DOUBLE_NEGATIVE\":302,\"STRING_LITERAL1\":303,\"STRING_LITERAL2\":304,\"STRING_LITERAL_LONG1\":305,\"STRING_LITERAL_LONG2\":306,\"PrefixedName\":307,\"PNAME_LN\":308,\"BLANK_NODE_LABEL\":309,\"ANON\":310,\"QuotedTP\":311,\"<<\":312,\"qtSubjectOrObject\":313,\">>\":314,\"DataValueTerm\":315,\"AnnotationPattern\":316,\"{|\":317,\"|}\":318,\"AnnotationPatternPath\":319,\"ExprVarOrTerm\":320,\"QueryOrUpdate_group0_option0\":321,\"Prologue_repetition0_group0\":322,\"Qry_group0_repetition_plus0\":323,\"SelectClauseBase_option0_group0\":324,\"DISTINCT\":325,\"REDUCED\":326,\"NAMED\":327,\"SILENT\":328,\"CLEAR\":329,\"DROP\":330,\"ADD\":331,\"MOVE\":332,\"COPY\":333,\"ALL\":334,\".\":335,\"UNION\":336,\"|\":337,\"/\":338,\"PathElt_option0_group0\":339,\"?\":340,\"!=\":341,\"<\":342,\">\":343,\"<=\":344,\">=\":345,\"NOT\":346,\"CONCAT\":347,\"COALESCE\":348,\"SUBSTR\":349,\"REGEX\":350,\"REPLACE\":351,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",12:\"BASE\",13:\"IRIREF\",15:\"PREFIX\",16:\"PNAME_NS\",24:\"CONSTRUCT\",28:\"WHERE\",29:\"{\",31:\"}\",32:\"DESCRIBE\",36:\"ASK\",39:\"*\",41:\"SELECT\",45:\"(\",47:\"AS\",48:\")\",53:\"FROM\",63:\"GROUP\",64:\"BY\",70:\"HAVING\",73:\"ORDER\",76:\"ASC\",78:\"DESC\",81:\"LIMIT\",82:\"INTEGER\",83:\"OFFSET\",85:\"VALUES\",87:\"VAR\",89:\"NIL\",100:\"LOAD\",109:\"TO\",110:\"CREATE\",112:\"GRAPH\",113:\"INSERTDATA\",115:\"DELETEDATA\",116:\"DELETEWHERE\",121:\"INTO\",123:\"DELETE\",126:\"INSERT\",128:\"USING\",131:\"WITH\",132:\"DEFAULT\",159:\"OPTIONAL\",160:\"MINUS\",161:\"SERVICE\",163:\"FILTER\",164:\"BIND\",174:\"UNDEF\",193:\";\",197:\"a\",224:\"!\",229:\"^\",231:\"[\",232:\"]\",242:\"||\",246:\"&&\",250:\"IN\",263:\"+\",265:\"-\",268:\"FUNC_ARITY0\",269:\"FUNC_ARITY1\",270:\"FUNC_ARITY1_SPARQL_STAR\",271:\"FUNC_ARITY2\",272:\",\",273:\"FUNC_ARITY3\",274:\"FUNC_ARITY3_SPARQL_STAR\",276:\"BOUND\",277:\"BNODE\",279:\"EXISTS\",280:\"COUNT\",283:\"FUNC_AGGREGATE\",285:\"GROUP_CONCAT\",289:\"SEPARATOR\",290:\"=\",292:\"LANGTAG\",293:\"^^\",294:\"DECIMAL\",295:\"DOUBLE\",296:\"BOOLEAN\",297:\"INTEGER_POSITIVE\",298:\"DECIMAL_POSITIVE\",299:\"DOUBLE_POSITIVE\",300:\"INTEGER_NEGATIVE\",301:\"DECIMAL_NEGATIVE\",302:\"DOUBLE_NEGATIVE\",303:\"STRING_LITERAL1\",304:\"STRING_LITERAL2\",305:\"STRING_LITERAL_LONG1\",306:\"STRING_LITERAL_LONG2\",308:\"PNAME_LN\",309:\"BLANK_NODE_LABEL\",310:\"ANON\",312:\"<<\",314:\">>\",317:\"{|\",318:\"|}\",325:\"DISTINCT\",326:\"REDUCED\",327:\"NAMED\",328:\"SILENT\",329:\"CLEAR\",330:\"DROP\",331:\"ADD\",332:\"MOVE\",333:\"COPY\",334:\"ALL\",335:\".\",336:\"UNION\",337:\"|\",338:\"/\",340:\"?\",341:\"!=\",342:\"<\",343:\">\",344:\"<=\",345:\">=\",346:\"NOT\",347:\"CONCAT\",348:\"COALESCE\",349:\"SUBSTR\",350:\"REGEX\",351:\"REPLACE\"},\nproductions_: [0,[3,3],[7,2],[4,1],[11,2],[14,3],[8,4],[8,4],[8,5],[8,7],[8,5],[8,4],[17,2],[21,2],[38,2],[43,1],[43,5],[49,4],[49,4],[52,3],[19,2],[23,2],[20,3],[62,3],[66,1],[66,1],[66,3],[66,5],[66,1],[69,2],[72,3],[75,2],[75,2],[75,1],[75,1],[80,2],[80,2],[80,4],[80,4],[84,2],[86,4],[86,4],[86,6],[86,2],[94,3],[96,3],[98,4],[98,3],[98,5],[98,4],[98,2],[98,2],[98,2],[98,5],[120,2],[118,3],[118,1],[125,2],[127,3],[130,2],[108,1],[108,2],[122,2],[105,1],[105,1],[114,3],[135,2],[138,7],[143,3],[57,3],[57,3],[147,2],[150,3],[154,3],[151,1],[151,2],[151,2],[151,3],[151,4],[151,2],[151,6],[151,1],[93,1],[93,1],[165,4],[166,4],[166,6],[171,1],[171,1],[171,1],[171,1],[158,2],[79,1],[79,1],[79,1],[68,2],[176,1],[176,5],[179,1],[179,4],[25,3],[182,3],[145,2],[145,2],[188,1],[186,2],[192,2],[190,2],[195,1],[195,1],[196,2],[199,2],[156,2],[156,2],[202,2],[207,1],[207,2],[205,2],[209,2],[211,2],[214,2],[216,2],[219,2],[218,2],[220,1],[220,2],[220,3],[225,1],[225,1],[225,4],[226,1],[226,2],[187,3],[187,3],[203,3],[203,3],[200,1],[200,1],[212,1],[212,1],[234,1],[235,1],[235,1],[139,1],[139,1],[44,1],[236,1],[236,1],[236,1],[236,1],[46,1],[238,2],[241,2],[239,2],[245,2],[243,1],[243,3],[243,4],[247,2],[253,2],[253,2],[253,2],[251,2],[261,2],[259,2],[259,2],[259,2],[259,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[77,3],[67,1],[67,2],[67,4],[67,4],[67,6],[67,8],[67,8],[67,2],[67,4],[67,2],[67,4],[67,3],[267,5],[267,5],[267,6],[288,4],[172,1],[172,2],[172,3],[172,1],[172,1],[172,1],[172,1],[172,1],[172,1],[255,1],[255,1],[255,1],[257,1],[257,1],[257,1],[291,1],[291,1],[291,1],[291,1],[55,1],[55,1],[307,1],[307,1],[237,1],[237,1],[311,5],[173,5],[313,1],[313,1],[313,1],[313,1],[313,1],[315,1],[315,1],[315,1],[185,1],[185,1],[185,1],[316,3],[319,3],[266,5],[320,1],[320,1],[320,1],[223,1],[223,1],[321,0],[321,1],[5,1],[5,1],[5,1],[9,0],[9,1],[322,1],[322,1],[10,0],[10,2],[18,0],[18,2],[22,0],[22,2],[26,0],[26,2],[27,0],[27,2],[30,0],[30,1],[323,1],[323,2],[33,1],[33,1],[34,0],[34,2],[35,0],[35,1],[37,0],[37,2],[40,1],[40,2],[324,1],[324,1],[42,0],[42,1],[50,0],[50,1],[51,0],[51,1],[54,0],[54,1],[56,0],[56,1],[58,0],[58,1],[59,0],[59,1],[60,0],[60,1],[61,0],[61,1],[65,1],[65,2],[71,1],[71,2],[74,1],[74,2],[88,0],[88,2],[90,0],[90,2],[91,1],[91,2],[92,0],[92,2],[95,1],[95,2],[97,0],[97,4],[99,0],[99,2],[101,0],[101,1],[102,0],[102,1],[103,1],[103,1],[104,0],[104,1],[106,1],[106,1],[106,1],[107,0],[107,1],[111,0],[111,1],[117,0],[117,1],[119,0],[119,2],[124,0],[124,1],[129,0],[129,1],[133,0],[133,1],[134,1],[134,1],[134,1],[136,0],[136,1],[137,0],[137,2],[140,0],[140,1],[141,0],[141,1],[142,0],[142,1],[144,0],[144,3],[146,0],[146,1],[148,0],[148,1],[149,0],[149,2],[152,0],[152,1],[153,0],[153,1],[155,0],[155,3],[157,0],[157,1],[162,0],[162,1],[167,0],[167,2],[168,0],[168,2],[169,1],[169,2],[170,0],[170,2],[175,0],[175,3],[177,0],[177,1],[178,0],[178,3],[180,0],[180,3],[181,0],[181,1],[183,0],[183,3],[184,0],[184,1],[189,0],[189,1],[191,0],[191,2],[194,0],[194,1],[198,0],[198,3],[201,0],[201,1],[204,0],[204,1],[206,0],[206,2],[208,1],[208,1],[210,0],[210,3],[213,0],[213,1],[215,0],[215,3],[217,0],[217,3],[339,1],[339,1],[339,1],[221,0],[221,1],[222,0],[222,1],[227,0],[227,3],[228,0],[228,1],[230,1],[230,2],[233,1],[233,2],[240,0],[240,2],[244,0],[244,2],[248,1],[248,1],[248,1],[248,1],[248,1],[248,1],[249,0],[249,1],[252,0],[252,2],[254,1],[254,1],[256,0],[256,2],[258,0],[258,2],[260,0],[260,2],[262,1],[262,1],[275,1],[275,1],[275,1],[275,1],[275,1],[278,0],[278,1],[281,0],[281,1],[282,1],[282,1],[284,0],[284,1],[286,0],[286,1],[287,0],[287,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      // Set parser options\n      $$[$0-1] = $$[$0-1] || {};\n      if (Parser.base)\n        $$[$0-1].base = Parser.base;\n      Parser.base = '';\n      $$[$0-1].prefixes = Parser.prefixes;\n      Parser.prefixes = null;\n\n      if (Parser.pathOnly) {\n        if ($$[$0-1].type === 'path' || 'termType' in $$[$0-1]) {\n          return $$[$0-1]\n        }\n        throw new Error('Received full SPARQL query in path only mode');\n      } else if ($$[$0-1].type === 'path' || 'termType' in $$[$0-1]) {\n        throw new Error('Received only path in full SPARQL mode');\n      }\n\n      // Ensure that blank nodes are not used across INSERT DATA clauses\n      if ($$[$0-1].type === 'update') {\n        const insertBnodesAll = {};\n        for (const update of $$[$0-1].updates) {\n          if (update.updateType === 'insert') {\n            // Collect bnodes for current insert clause\n            const insertBnodes = {};\n            for (const operation of update.insert) {\n              if (operation.type === 'bgp' || operation.type === 'graph') {\n                for (const triple of operation.triples) {\n                  if (triple.subject.termType === 'BlankNode')\n                    insertBnodes[triple.subject.value] = true;\n                  if (triple.predicate.termType === 'BlankNode')\n                    insertBnodes[triple.predicate.value] = true;\n                  if (triple.object.termType === 'BlankNode')\n                    insertBnodes[triple.object.value] = true;\n                }\n              }\n            }\n\n            // Check if the inserting bnodes don't clash with bnodes from a previous insert clause\n            for (const bnode of Object.keys(insertBnodes)) {\n              if (insertBnodesAll[bnode]) {\n                throw new Error('Detected reuse blank node across different INSERT DATA clauses');\n              }\n              insertBnodesAll[bnode] = true;\n            }\n          }\n        }\n      }\n      return $$[$0-1];\n    \nbreak;\ncase 2:\nthis.$ = { ...$$[$0-1], ...$$[$0], type: 'query' };\nbreak;\ncase 4:\n\n      Parser.base = resolveIRI($$[$0])\n    \nbreak;\ncase 5:\n\n      if (!Parser.prefixes) Parser.prefixes = {};\n      $$[$0-1] = $$[$0-1].substr(0, $$[$0-1].length - 1);\n      $$[$0] = resolveIRI($$[$0]);\n      Parser.prefixes[$$[$0-1]] = $$[$0];\n    \nbreak;\ncase 6:\nthis.$ = { ...$$[$0-3], ...groupDatasets($$[$0-2]), ...$$[$0-1], ...$$[$0] };\nbreak;\ncase 7:\n\n      // Check for projection of ungrouped variable\n      if (!Parser.skipValidation) {\n        const counts = flatten($$[$0-3].variables.map(vars => getAggregatesOfExpression(vars.expression)))\n          .some(agg => agg.aggregation === \"count\" && !(agg.expression instanceof Wildcard));\n        if (counts || $$[$0].group) {\n          for (const selectVar of $$[$0-3].variables) {\n            if (selectVar.termType === \"Variable\") {\n              if (!$$[$0].group || !$$[$0].group.map(groupVar => getExpressionId(groupVar)).includes(getExpressionId(selectVar))) {\n                throw Error(\"Projection of ungrouped variable (?\" + getExpressionId(selectVar) + \")\");\n              }\n            } else if (getAggregatesOfExpression(selectVar.expression).length === 0) {\n              const usedVars = getVariablesFromExpression(selectVar.expression);\n              for (const usedVar of usedVars) {\n                if (!$$[$0].group || !$$[$0].group.map || !$$[$0].group.map(groupVar => getExpressionId(groupVar)).includes(getExpressionId(usedVar))) {\n                  throw Error(\"Use of ungrouped variable in projection of operation (?\" + getExpressionId(usedVar) + \")\");\n                }\n              }\n            }\n          }\n        }\n      }\n      // Check if id of each AS-selected column is not yet bound by subquery\n      const subqueries = $$[$0-1].where.filter(w => w.type === \"query\");\n      if (subqueries.length > 0) {\n        const selectedVarIds = $$[$0-3].variables.filter(v => v.variable && v.variable.value).map(v => v.variable.value);\n        const subqueryIds = flatten(subqueries.map(sub => sub.variables)).map(v => v.value || v.variable.value);\n        for (const selectedVarId of selectedVarIds) {\n          if (subqueryIds.indexOf(selectedVarId) >= 0) {\n            throw Error(\"Target id of 'AS' (?\" + selectedVarId + \") already used in subquery\");\n          }\n        }\n      }\n      this.$ = extend($$[$0-3], groupDatasets($$[$0-2]), $$[$0-1], $$[$0])\n    \nbreak;\ncase 8:\nthis.$ = extend({ queryType: 'CONSTRUCT', template: $$[$0-3] }, groupDatasets($$[$0-2]), $$[$0-1], $$[$0]);\nbreak;\ncase 9:\nthis.$ = extend({ queryType: 'CONSTRUCT', template: $$[$0-2] = ($$[$0-2] ? $$[$0-2].triples : []) }, groupDatasets($$[$0-5]), { where: [ { type: 'bgp', triples: appendAllTo([], $$[$0-2]) } ] }, $$[$0]);\nbreak;\ncase 10:\nthis.$ = extend({ queryType: 'DESCRIBE', variables: $$[$0-3] === '*' ? [new Wildcard()] : $$[$0-3] }, groupDatasets($$[$0-2]), $$[$0-1], $$[$0]);\nbreak;\ncase 11:\nthis.$ = extend({ queryType: 'ASK' }, groupDatasets($$[$0-2]), $$[$0-1], $$[$0]);\nbreak;\ncase 12:\nthis.$ = extend($$[$0-1], {variables: [new Wildcard()]});\nbreak;\ncase 13:\n\n      // Check if id of each selected column is different\n      const selectedVarIds = $$[$0].map(v => v.value || v.variable.value);\n      const duplicates = getDuplicatesInArray(selectedVarIds);\n      if (duplicates.length > 0) {\n        throw Error(\"Two or more of the resulting columns have the same name (?\" + duplicates[0] + \")\");\n      }\n\n      this.$ = extend($$[$0-1], { variables: $$[$0] })\n    \nbreak;\ncase 14:\nthis.$ = extend({ queryType: 'SELECT'}, $$[$0] && ($$[$0-1] = lowercase($$[$0]), $$[$0] = {}, $$[$0][$$[$0-1]] = true, $$[$0]));\nbreak;\ncase 16: case 27:\nthis.$ = expression($$[$0-3], { variable: $$[$0-1] });\nbreak;\ncase 17: case 18:\nthis.$ = extend($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], { type: 'query' });\nbreak;\ncase 19: case 58:\nthis.$ = { iri: $$[$0], named: !!$$[$0-1] };\nbreak;\ncase 20:\nthis.$ = { where: $$[$0].patterns };\nbreak;\ncase 21:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 22:\nthis.$ = extend($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 23:\nthis.$ = { group: $$[$0] };\nbreak;\ncase 24: case 25: case 28: case 31: case 33: case 34:\nthis.$ = expression($$[$0]);\nbreak;\ncase 26:\nthis.$ = expression($$[$0-1]);\nbreak;\ncase 29:\nthis.$ = { having: $$[$0] };\nbreak;\ncase 30:\nthis.$ = { order: $$[$0] };\nbreak;\ncase 32:\nthis.$ = expression($$[$0], { descending: true });\nbreak;\ncase 35:\nthis.$ = { limit: toInt($$[$0]) };\nbreak;\ncase 36:\nthis.$ = { offset: toInt($$[$0]) };\nbreak;\ncase 37:\nthis.$ = { limit: toInt($$[$0-2]), offset: toInt($$[$0]) };\nbreak;\ncase 38:\nthis.$ = { limit: toInt($$[$0]), offset: toInt($$[$0-2]) };\nbreak;\ncase 39: case 43:\nthis.$ = { type: 'values', values: $$[$0] };\nbreak;\ncase 40: case 84:\nthis.$ = $$[$0-1].map(v => ({ [$$[$0-3]]: v }));\nbreak;\ncase 41: case 85:\nthis.$ = $$[$0-1].map(() => ({}));\nbreak;\ncase 42: case 86:\n\n      var length = $$[$0-4].length;\n      $$[$0-4] = $$[$0-4].map(toVar);\n      this.$ = $$[$0-1].map(function (values) {\n        if (values.length !== length)\n          throw Error('Inconsistent VALUES length');\n        var valuesObject = {};\n        for(var i = 0; i<length; i++)\n          valuesObject['?' + $$[$0-4][i].value] = values[i];\n        return valuesObject;\n      });\n    \nbreak;\ncase 44: case 65: case 100: case 126: case 175:\nthis.$ = $$[$0-1];\nbreak;\ncase 45:\nthis.$ = { type: 'update', updates: appendTo($$[$0-2], $$[$0-1]) };\nbreak;\ncase 46:\nthis.$ = extend({ type: 'load', silent: !!$$[$0-2], source: $$[$0-1] }, $$[$0] && { destination: $$[$0] });\nbreak;\ncase 47:\nthis.$ = { type: lowercase($$[$0-2]), silent: !!$$[$0-1], graph: $$[$0] };\nbreak;\ncase 48:\nthis.$ = { type: lowercase($$[$0-4]), silent: !!$$[$0-3], source: $$[$0-2], destination: $$[$0] };\nbreak;\ncase 49:\nthis.$ = { type: 'create', silent: !!$$[$0-2], graph: { type: 'graph', name: $$[$0] } };\nbreak;\ncase 50:\nthis.$ = { updateType: 'insert',      insert: ensureNoVariables($$[$0])                 };\nbreak;\ncase 51:\nthis.$ = { updateType: 'delete',      delete: ensureNoBnodes(ensureNoVariables($$[$0])) };\nbreak;\ncase 52:\nthis.$ = { updateType: 'deletewhere', delete: ensureNoBnodes($$[$0])                    };\nbreak;\ncase 53:\nthis.$ = { updateType: 'insertdelete', ...$$[$0-4], ...$$[$0-3], ...groupDatasets($$[$0-2], 'using'), where: $$[$0].patterns };\nbreak;\ncase 54: case 57: case 62: case 167: case 191: case 236:\nthis.$ = $$[$0];\nbreak;\ncase 55:\nthis.$ = { delete: ensureNoBnodes($$[$0-1]), insert: $$[$0] || [] };\nbreak;\ncase 56:\nthis.$ = { delete: [], insert: $$[$0] };\nbreak;\ncase 59:\nthis.$ = { graph: $$[$0] };\nbreak;\ncase 60:\nthis.$ = { type: 'graph', default: true };\nbreak;\ncase 61: case 63:\nthis.$ = { type: 'graph', name: $$[$0] };\nbreak;\ncase 64:\nthis.$ = { [lowercase($$[$0])]: true };\nbreak;\ncase 66:\nthis.$ = $$[$0-1] ? unionAll($$[$0], [$$[$0-1]]) : unionAll($$[$0]);\nbreak;\ncase 67:\n\n      var graph = extend($$[$0-3] || { triples: [] }, { type: 'graph', name: $$[$0-5] });\n      this.$ = $$[$0] ? [graph, $$[$0]] : [graph];\n    \nbreak;\ncase 68: case 73:\nthis.$ = { type: 'bgp', triples: unionAll($$[$0-2], [$$[$0-1]]) };\nbreak;\ncase 69:\nthis.$ = { type: 'group', patterns: [ $$[$0-1] ] };\nbreak;\ncase 70:\n\n      // For every binding\n      for (const binding of $$[$0-1].filter(el => el.type === \"bind\")) {\n        const index = $$[$0-1].indexOf(binding);\n        const boundVars = new Set();\n        //Collect all bounded variables before the binding\n        for (const el of $$[$0-1].slice(0, index)) {\n          if (el.type === \"group\" || el.type === \"bgp\") {\n            getBoundVarsFromGroupGraphPattern(el).forEach(boundVar => boundVars.add(boundVar));\n          }\n        }\n        // If binding with a non-free variable, throw error\n        if (boundVars.has(binding.variable.value)) {\n          throw Error(\"Variable used to bind is already bound (?\" + binding.variable.value + \")\");\n        }\n      }\n      this.$ = { type: 'group', patterns: $$[$0-1] }\n    \nbreak;\ncase 71:\nthis.$ = $$[$0-1] ? unionAll([$$[$0-1]], $$[$0]) : unionAll($$[$0]);\nbreak;\ncase 72:\nthis.$ = $$[$0] ? [$$[$0-2], $$[$0]] : $$[$0-2];\nbreak;\ncase 75:\nthis.$ = extend($$[$0], { type: 'optional' });\nbreak;\ncase 76:\nthis.$ = extend($$[$0], { type: 'minus' });\nbreak;\ncase 77:\nthis.$ = extend($$[$0], { type: 'graph', name: $$[$0-1] });\nbreak;\ncase 78:\nthis.$ = extend($$[$0], { type: 'service', name: $$[$0-1], silent: !!$$[$0-2] });\nbreak;\ncase 79:\nthis.$ = { type: 'filter', expression: $$[$0] };\nbreak;\ncase 80:\nthis.$ = { type: 'bind', variable: $$[$0-1], expression: $$[$0-3] };\nbreak;\ncase 89:\nthis.$ = ensureSparqlStar($$[$0]);\nbreak;\ncase 90:\nthis.$ = undefined;\nbreak;\ncase 91:\nthis.$ = $$[$0-1].length ? { type: 'union', patterns: unionAll($$[$0-1].map(degroupSingle), [degroupSingle($$[$0])]) } : $$[$0];\nbreak;\ncase 95:\nthis.$ = { ...$$[$0], function: $$[$0-1] };\nbreak;\ncase 96:\nthis.$ = { type: 'functionCall', args: [] };\nbreak;\ncase 97:\nthis.$ = { type: 'functionCall', args: appendTo($$[$0-2], $$[$0-1]), distinct: !!$$[$0-3] };\nbreak;\ncase 98: case 115: case 128: case 247: case 249: case 251: case 253: case 255: case 263: case 267: case 297: case 299: case 303: case 307: case 328: case 341: case 349: case 355: case 361: case 367: case 369: case 373: case 375: case 379: case 381: case 385: case 391: case 395: case 401: case 405: case 409: case 411: case 420: case 428: case 430: case 440: case 444: case 446: case 448:\nthis.$ = [];\nbreak;\ncase 99:\nthis.$ = appendTo($$[$0-2], $$[$0-1]);\nbreak;\ncase 101:\nthis.$ = unionAll($$[$0-2], [$$[$0-1]]);\nbreak;\ncase 102: case 112:\nthis.$ = applyAnnotations($$[$0].map(t => extend(triple($$[$0-1]), t)));\nbreak;\ncase 103:\nthis.$ = applyAnnotations(appendAllTo($$[$0].map(t => extend(triple($$[$0-1].entity), t)), $$[$0-1].triples)) /* the subject is a blank node, possibly with more triples */;\nbreak;\ncase 105:\nthis.$ = unionAll([$$[$0-1]], $$[$0]);\nbreak;\ncase 106:\nthis.$ = unionAll($$[$0]);\nbreak;\ncase 107:\nthis.$ = objectListToTriples($$[$0-1], $$[$0]);\nbreak;\ncase 109: case 237:\nthis.$ = Parser.factory.namedNode(RDF_TYPE);\nbreak;\ncase 110: case 118:\nthis.$ = appendTo($$[$0-1], $$[$0]);\nbreak;\ncase 111:\nthis.$ = $$[$0] ? { annotation: $$[$0], object: $$[$0-1] } : $$[$0-1];\nbreak;\ncase 113:\nthis.$ = !$$[$0] ? $$[$0-1].triples : applyAnnotations(appendAllTo($$[$0].map(t => extend(triple($$[$0-1].entity), t)), $$[$0-1].triples)) /* the subject is a blank node, possibly with more triples */;\nbreak;\ncase 114:\nthis.$ = objectListToTriples(...$$[$0-1], $$[$0]);\nbreak;\ncase 116:\nthis.$ = objectListToTriples(...$$[$0]);\nbreak;\ncase 117: case 159: case 163:\nthis.$ = [$$[$0-1], $$[$0]];\nbreak;\ncase 119:\nthis.$ = $$[$0] ? { object: $$[$0-1], annotation: $$[$0] } : $$[$0-1];;\nbreak;\ncase 120:\nthis.$ = $$[$0-1].length ? path('|',appendTo($$[$0-1], $$[$0])) : $$[$0];\nbreak;\ncase 121:\nthis.$ = $$[$0-1].length ? path('/', appendTo($$[$0-1], $$[$0])) : $$[$0];\nbreak;\ncase 122:\nthis.$ = $$[$0] ? path($$[$0], [$$[$0-1]]) : $$[$0-1];\nbreak;\ncase 123:\nthis.$ = $$[$0-1] ? path($$[$0-1], [$$[$0]]) : $$[$0];;\nbreak;\ncase 125: case 131:\nthis.$ = path($$[$0-1], [$$[$0]]);\nbreak;\ncase 129:\nthis.$ = path('|', appendTo($$[$0-2], $$[$0-1]));\nbreak;\ncase 132: case 134:\nthis.$ = createList($$[$0-1]);\nbreak;\ncase 133: case 135:\nthis.$ = createAnonymousObject($$[$0-1]);\nbreak;\ncase 140:\nthis.$ = { entity: $$[$0], triples: [] };\nbreak;\ncase 145:\nthis.$ = toVar($$[$0]);\nbreak;\ncase 149:\nthis.$ = Parser.factory.namedNode(RDF_NIL);\nbreak;\ncase 151: case 153: case 158: case 162:\nthis.$ = createOperationTree($$[$0-1], $$[$0]);\nbreak;\ncase 152:\nthis.$ = ['||', $$[$0]];\nbreak;\ncase 154:\nthis.$ = ['&&', $$[$0]];\nbreak;\ncase 156:\nthis.$ = operation($$[$0-1], [$$[$0-2], $$[$0]]);\nbreak;\ncase 157:\nthis.$ = operation($$[$0-2] ? 'notin' : 'in', [$$[$0-3], $$[$0]]);\nbreak;\ncase 160:\nthis.$ = ['+', createOperationTree($$[$0-1], $$[$0])];\nbreak;\ncase 161:\n\n      var negatedLiteral = createTypedLiteral($$[$0-1].value.replace('-', ''), $$[$0-1].datatype);\n      this.$ = ['-', createOperationTree(negatedLiteral, $$[$0])];\n    \nbreak;\ncase 164:\nthis.$ = operation('UPLUS', [$$[$0]]);\nbreak;\ncase 165:\nthis.$ = operation($$[$0-1], [$$[$0]]);\nbreak;\ncase 166:\nthis.$ = operation('UMINUS', [$$[$0]]);\nbreak;\ncase 177:\nthis.$ = operation(lowercase($$[$0-1]));\nbreak;\ncase 178:\nthis.$ = operation(lowercase($$[$0-3]), [$$[$0-1]]);\nbreak;\ncase 179:\nthis.$ = ensureSparqlStar(operation(lowercase($$[$0-3]), [$$[$0-1]]));\nbreak;\ncase 180:\nthis.$ = operation(lowercase($$[$0-5]), [$$[$0-3], $$[$0-1]]);\nbreak;\ncase 181:\nthis.$ = operation(lowercase($$[$0-7]), [$$[$0-5], $$[$0-3], $$[$0-1]]);\nbreak;\ncase 182:\nthis.$ = ensureSparqlStar(operation(lowercase($$[$0-7]), [$$[$0-5], $$[$0-3], $$[$0-1]]));\nbreak;\ncase 183:\nthis.$ = operation(lowercase($$[$0-1]), $$[$0]);\nbreak;\ncase 184:\nthis.$ = operation('bound', [toVar($$[$0-1])]);\nbreak;\ncase 185:\nthis.$ = operation($$[$0-1], []);\nbreak;\ncase 186:\nthis.$ = operation($$[$0-3], [$$[$0-1]]);\nbreak;\ncase 187:\nthis.$ = operation($$[$0-2] ? 'notexists' :'exists', [degroupSingle($$[$0])]);\nbreak;\ncase 188: case 189:\nthis.$ = expression($$[$0-1], { type: 'aggregate', aggregation: lowercase($$[$0-4]), distinct: !!$$[$0-2] });\nbreak;\ncase 190:\nthis.$ = expression($$[$0-2], { type: 'aggregate', aggregation: lowercase($$[$0-5]), distinct: !!$$[$0-3], separator: typeof $$[$0-1] === 'string' ? $$[$0-1] : ' ' });\nbreak;\ncase 192:\nthis.$ = createTypedLiteral($$[$0]);\nbreak;\ncase 193:\nthis.$ = createLangLiteral($$[$0-1], lowercase($$[$0].substr(1)));\nbreak;\ncase 194:\nthis.$ = createTypedLiteral($$[$0-2], $$[$0]);\nbreak;\ncase 195: case 204:\nthis.$ = createTypedLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 196: case 205:\nthis.$ = createTypedLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 197: case 206:\nthis.$ = createTypedLiteral(lowercase($$[$0]), XSD_DOUBLE);\nbreak;\ncase 200:\nthis.$ = createTypedLiteral($$[$0].toLowerCase(), XSD_BOOLEAN);\nbreak;\ncase 201:\nthis.$ = createTypedLiteral($$[$0].substr(1), XSD_INTEGER);\nbreak;\ncase 202:\nthis.$ = createTypedLiteral($$[$0].substr(1), XSD_DECIMAL);\nbreak;\ncase 203:\nthis.$ = createTypedLiteral($$[$0].substr(1).toLowerCase(), XSD_DOUBLE);\nbreak;\ncase 207: case 208:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 209: case 210:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 211:\nthis.$ = Parser.factory.namedNode(resolveIRI($$[$0]));\nbreak;\ncase 213:\n\n      var namePos = $$[$0].indexOf(':'),\n          prefix = $$[$0].substr(0, namePos),\n          expansion = Parser.prefixes[prefix];\n      if (!expansion) throw new Error('Unknown prefix: ' + prefix);\n      var uriString = resolveIRI(expansion + $$[$0].substr(namePos + 1));\n      this.$ = Parser.factory.namedNode(uriString);\n    \nbreak;\ncase 214:\n\n      $$[$0] = $$[$0].substr(0, $$[$0].length - 1);\n      if (!($$[$0] in Parser.prefixes)) throw new Error('Unknown prefix: ' + $$[$0]);\n      var uriString = resolveIRI(Parser.prefixes[$$[$0]]);\n      this.$ = Parser.factory.namedNode(uriString);\n    \nbreak;\ncase 215:\nthis.$ = blank($$[$0].replace(/^(_:)/,''));;\nbreak;\ncase 216:\nthis.$ = blank();\nbreak;\ncase 217: case 218: case 232:\nthis.$ = ensureSparqlStar(nestedTriple($$[$0-3], $$[$0-2], $$[$0-1]));\nbreak;\ncase 230: case 231:\nthis.$ = ensureSparqlStar($$[$0-1]);\nbreak;\ncase 248: case 250: case 252: case 254: case 256: case 260: case 264: case 268: case 270: case 292: case 294: case 296: case 298: case 300: case 302: case 304: case 306: case 329: case 342: case 356: case 368: case 370: case 372: case 374: case 392: case 402: case 425: case 427: case 429: case 431: case 441: case 445: case 447: case 449:\n$$[$0-1].push($$[$0]);\nbreak;\ncase 259: case 269: case 291: case 293: case 295: case 301: case 305: case 371: case 424: case 426:\nthis.$ = [$$[$0]];\nbreak;\ncase 308:\n$$[$0-3].push($$[$0-2]);\nbreak;\ncase 350: case 362: case 376: case 380: case 382: case 386: case 396: case 406: case 410: case 412: case 421:\n$$[$0-2].push($$[$0-1]);\nbreak;\n}\n},\ntable: [o($V0,$V1,{3:1,4:2,10:3}),{1:[3]},o($V2,[2,307],{5:4,7:5,321:6,214:7,8:8,96:9,215:10,17:11,21:12,97:16,38:17,6:[2,238],13:$V3,16:$V3,45:$V3,197:$V3,224:$V3,229:$V3,308:$V3,24:[1,13],32:[1,14],36:[1,15],41:$V4}),o([6,13,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],[2,3],{322:19,11:20,14:21,12:[1,22],15:[1,23]}),{6:[1,24]},{6:[2,240]},{6:[2,241]},{6:[2,242]},{6:[2,243],9:25,84:26,85:$V5},{6:[2,239]},o($V6,[2,411],{216:28,217:29}),o($V7,[2,249],{18:30}),o($V7,[2,251],{22:31}),o($V8,[2,255],{25:32,27:33,29:[1,34]}),{13:$V9,16:$Va,33:35,39:[1,37],44:39,55:40,87:$Vb,139:38,307:43,308:$Vc,323:36},o($V7,[2,267],{37:46}),o($Vd,[2,326],{98:47,103:49,106:50,117:55,130:61,100:[1,48],110:[1,51],113:[1,52],115:[1,53],116:[1,54],131:[1,62],329:[1,56],330:[1,57],331:[1,58],332:[1,59],333:[1,60]}),{39:[1,63],40:64,43:65,44:66,45:$Ve,87:$Vb},o($Vf,[2,273],{42:68,324:69,325:[1,70],326:[1,71]}),o($V0,[2,248]),o($V0,[2,245]),o($V0,[2,246]),{13:[1,72]},{16:[1,73]},{1:[2,1]},{6:[2,2]},{6:[2,244]},{45:[1,77],85:[1,78],86:74,87:[1,75],89:[1,76]},o([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],[2,120],{337:[1,79]}),o($Vg,[2,418],{218:80,222:81,229:[1,82]}),{19:83,28:$Vh,29:$Vi,52:84,53:$Vj,56:85},{19:88,28:$Vh,29:$Vi,52:89,53:$Vj,56:85},o($V7,[2,253],{26:90}),{28:[1,91],52:92,53:$Vj},o($Vk,[2,385],{181:93,182:94,183:95,31:[2,383]}),o($Vl,[2,263],{34:96}),o($Vl,[2,261],{44:39,55:40,307:43,139:97,13:$V9,16:$Va,87:$Vb,308:$Vc}),o($Vl,[2,262]),o($Vm,[2,259]),o($Vn,[2,143]),o($Vn,[2,144]),o([6,13,16,28,29,31,39,45,47,48,53,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,145]),o($Vo,[2,211]),o($Vo,[2,212]),o($Vo,[2,213]),o($Vo,[2,214]),{19:98,28:$Vh,29:$Vi,52:99,53:$Vj,56:85},{6:[2,309],99:100,193:[1,101]},o($Vp,[2,311],{101:102,328:[1,103]}),o($Vq,[2,317],{104:104,328:[1,105]}),o($Vr,[2,322],{107:106,328:[1,107]}),{111:108,112:[2,324],328:[1,109]},{29:$Vs,114:110},{29:$Vs,114:112},{29:$Vs,114:113},{118:114,123:[1,115],125:116,126:$Vt},o($Vu,[2,315]),o($Vu,[2,316]),o($Vv,[2,319]),o($Vv,[2,320]),o($Vv,[2,321]),o($Vd,[2,327]),{13:$V9,16:$Va,55:118,307:43,308:$Vc},o($V7,[2,12]),o($V7,[2,13],{44:66,43:119,45:$Ve,87:$Vb}),o($Vw,[2,269]),o($Vw,[2,15]),{13:$V9,16:$Va,44:136,45:$Vx,46:120,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vf,[2,14]),o($Vf,[2,274]),o($Vf,[2,271]),o($Vf,[2,272]),o($V0,[2,4]),{13:[1,177]},o($V61,[2,39]),{29:[1,178]},{29:[1,179]},{87:[1,181],91:180},{45:[1,187],87:[1,185],89:[1,186],93:182,165:183,166:184},o($V6,[2,410]),o([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337],[2,121],{338:[1,188]}),{13:$V9,16:$Va,45:[1,193],55:194,197:$V71,219:189,220:190,223:191,224:[1,192],307:43,308:$Vc},o($Vg,[2,419]),o($V81,$V91,{20:196,59:197,69:198,70:$Va1}),o($V7,[2,250]),{29:$Vb1,57:200},o($Vp,[2,279],{54:202,327:[1,203]}),{29:[2,282]},o($Vc1,$Vd1,{23:204,58:205,62:206,63:$Ve1}),o($V7,[2,252]),{19:208,28:$Vh,29:$Vi,52:209,53:$Vj,56:85},{29:[1,210]},o($V8,[2,256]),{31:[1,211]},{31:[2,384]},{13:$V9,16:$Va,44:215,45:$Vf1,55:220,82:$Vy,87:$Vb,89:$Vg1,145:212,172:221,185:213,187:214,231:$Vh1,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($Vl1,[2,265],{56:85,35:227,52:228,19:229,28:$Vh,29:$Vi,53:$Vj}),o($Vm,[2,260]),o($Vc1,$Vd1,{58:205,62:206,23:230,63:$Ve1}),o($V7,[2,268]),{6:[2,45]},o($V0,$V1,{10:3,4:231}),{13:$V9,16:$Va,55:232,307:43,308:$Vc},o($Vp,[2,312]),{105:233,112:$Vm1,122:234,132:[1,237],134:235,327:[1,238],334:[1,239]},o($Vq,[2,318]),o($Vp,$Vn1,{108:240,133:242,112:$Vo1,132:$Vp1}),o($Vr,[2,323]),{112:[1,244]},{112:[2,325]},o($Vq1,[2,50]),o($Vk,$Vr1,{135:245,136:246,143:247,144:248,31:$Vs1,112:$Vs1}),o($Vq1,[2,51]),o($Vq1,[2,52]),o($Vt1,[2,328],{119:249}),{29:$Vs,114:250},o($Vt1,[2,56]),{29:$Vs,114:251},o($Vd,[2,59]),o($Vw,[2,270]),{47:[1,252]},o($Vu1,[2,150]),o($Vv1,[2,428],{240:253}),o($Vw1,[2,430],{244:254}),o($Vw1,[2,155],{248:255,249:256,250:[2,438],290:[1,257],341:[1,258],342:[1,259],343:[1,260],344:[1,261],345:[1,262],346:[1,263]}),o($Vx1,[2,440],{252:264}),o($Vy1,[2,448],{260:265}),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,255:154,257:155,264:266,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,255:154,257:155,264:267,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,255:154,257:155,264:268,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vy1,[2,167]),o($Vy1,[2,168]),o($Vy1,[2,169]),o($Vy1,[2,170],{176:269,45:$Vz1,89:$VA1}),o($Vy1,[2,171]),o($Vy1,[2,172]),o($Vy1,[2,173]),o($Vy1,[2,174]),{13:$V9,16:$Va,44:136,45:$Vx,46:272,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VB1,[2,176]),{89:[1,273]},{45:[1,274]},{45:[1,275]},{45:[1,276]},{45:[1,277]},{45:[1,278]},{45:$VC1,89:$VD1,179:279},{45:[1,282]},{45:[1,284],89:[1,283]},{279:[1,285]},o($VE1,[2,192],{292:[1,286],293:[1,287]}),o($VE1,[2,195]),o($VE1,[2,196]),o($VE1,[2,197]),o($VE1,[2,198]),o($VE1,[2,199]),o($VE1,[2,200]),{13:$V9,16:$Va,44:39,55:40,82:$Vy,87:$Vb,139:289,172:291,255:154,257:155,266:290,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,320:288},{45:[1,292]},{45:[1,293]},{45:[1,294]},o($VF1,[2,452]),o($VF1,[2,453]),o($VF1,[2,454]),o($VF1,[2,455]),o($VF1,[2,456]),{279:[2,458]},o($VG1,[2,207]),o($VG1,[2,208]),o($VG1,[2,209]),o($VG1,[2,210]),o($VE1,[2,201]),o($VE1,[2,202]),o($VE1,[2,203]),o($VE1,[2,204]),o($VE1,[2,205]),o($VE1,[2,206]),o($V0,[2,5]),o($VH1,[2,297],{88:295}),o($VI1,[2,299],{90:296}),{48:[1,297],87:[1,298]},o($VJ1,[2,301]),o($V61,[2,43]),o($V61,[2,82]),o($V61,[2,83]),{29:[1,299]},{29:[1,300]},{87:[1,302],169:301},o($V6,[2,412]),o($VK1,[2,123]),o($VK1,[2,416],{221:303,339:304,39:[1,306],263:[1,307],340:[1,305]}),o($VL1,[2,124]),{13:$V9,16:$Va,45:[1,311],55:194,89:[1,310],197:$V71,223:312,225:308,226:309,229:$VM1,307:43,308:$Vc},o($V6,$V3,{215:10,214:314}),o($VL1,[2,236]),o($VL1,[2,237]),o($VN1,[2,6]),o($VO1,[2,287],{60:315,72:316,73:[1,317]}),o($V81,[2,286]),{13:$V9,16:$Va,45:$Vx,55:323,67:321,68:322,71:318,77:320,79:319,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,307:43,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o([6,31,63,70,73,81,83,85],[2,20]),o($Vk,$VP1,{38:17,49:324,147:325,17:326,21:327,148:328,154:329,155:330,29:$VQ1,31:$VQ1,85:$VQ1,112:$VQ1,159:$VQ1,160:$VQ1,161:$VQ1,163:$VQ1,164:$VQ1,41:$V4}),{13:$V9,16:$Va,55:331,307:43,308:$Vc},o($Vp,[2,280]),o($VN1,[2,7]),o($V81,$V91,{59:197,69:198,20:332,70:$Va1}),o($Vc1,[2,284]),{64:[1,333]},o($Vc1,$Vd1,{58:205,62:206,23:334,63:$Ve1}),o($V7,[2,254]),o($Vk,$Vr1,{144:248,30:335,143:336,31:[2,257]}),o($V7,[2,100]),{31:[2,387],184:337,335:[1,338]},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:342,186:339,190:340,195:341,197:$VR1,307:43,308:$Vc},o($VS1,[2,389],{44:39,55:40,307:43,190:340,195:341,139:342,188:344,189:345,186:346,13:$V9,16:$Va,87:$Vb,197:$VR1,308:$Vc}),o($VT1,[2,227]),o($VT1,[2,228]),o($VT1,[2,229]),{13:$V9,16:$Va,44:215,45:$Vf1,55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,187:350,200:348,230:347,231:$Vh1,234:349,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:342,186:352,190:340,195:341,197:$VR1,307:43,308:$Vc},o($VT1,[2,146]),o($VT1,[2,147]),o($VT1,[2,148]),o($VT1,[2,149]),{13:$V9,16:$Va,44:354,55:355,82:$Vy,87:$Vb,172:357,237:356,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:358,312:$Vk1,313:353},o($VU1,[2,215]),o($VU1,[2,216]),o($Vc1,$Vd1,{58:205,62:206,23:359,63:$Ve1}),o($Vl,[2,264]),o($Vl1,[2,266]),o($VN1,[2,11]),o($V2,[2,308],{6:[2,310]}),o($Vq1,[2,313],{102:360,120:361,121:[1,362]}),o($Vq1,[2,47]),o($Vq1,[2,63]),o($Vq1,[2,64]),{13:$V9,16:$Va,55:363,307:43,308:$Vc},o($Vq1,[2,336]),o($Vq1,[2,337]),o($Vq1,[2,338]),{109:[1,364]},o($VV1,[2,60]),{13:$V9,16:$Va,55:365,307:43,308:$Vc},o($Vp,[2,335]),{13:$V9,16:$Va,55:366,307:43,308:$Vc},{31:[1,367]},o($VW1,[2,341],{137:368}),o($VW1,[2,340]),{13:$V9,16:$Va,44:215,45:$Vf1,55:220,82:$Vy,87:$Vb,89:$Vg1,145:369,172:221,185:213,187:214,231:$Vh1,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},{28:[1,370],127:371,128:[1,372]},o($Vt1,[2,330],{124:373,125:374,126:$Vt}),o($Vt1,[2,57]),{44:375,87:$Vb},o($Vu1,[2,151],{241:376,242:[1,377]}),o($Vv1,[2,153],{245:378,246:[1,379]}),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,247:380,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{250:[1,381]},o($VX1,[2,432]),o($VX1,[2,433]),o($VX1,[2,434]),o($VX1,[2,435]),o($VX1,[2,436]),o($VX1,[2,437]),{250:[2,439]},o([47,48,193,242,246,250,272,290,341,342,343,344,345,346],[2,158],{253:382,254:383,255:384,257:385,263:[1,386],265:[1,387],297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW}),o($Vx1,[2,162],{261:388,262:389,39:$VY1,338:$VZ1}),o($Vy1,[2,164]),o($Vy1,[2,165]),o($Vy1,[2,166]),o($VB1,[2,95]),o($VB1,[2,96]),o($VX1,[2,377],{177:392,325:[1,393]}),{48:[1,394]},o($VB1,[2,177]),{13:$V9,16:$Va,44:136,45:$Vx,46:395,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:396,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:397,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:398,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:399,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VB1,[2,183]),o($VB1,[2,98]),o($VX1,[2,381],{180:400}),{87:[1,401]},o($VB1,[2,185]),{13:$V9,16:$Va,44:136,45:$Vx,46:402,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{29:$Vb1,57:403},o($VE1,[2,193]),{13:$V9,16:$Va,55:404,307:43,308:$Vc},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:342,195:405,197:$VR1,307:43,308:$Vc},o($V_1,[2,233]),o($V_1,[2,234]),o($V_1,[2,235]),o($V$1,[2,459],{281:406,325:[1,407]}),o($VX1,[2,463],{284:408,325:[1,409]}),o($VX1,[2,465],{286:410,325:[1,411]}),{13:$V9,16:$Va,31:[1,412],55:414,82:$Vy,171:413,172:415,173:416,174:$V02,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V12},{31:[1,419],89:[1,420]},{29:[1,421]},o($VJ1,[2,302]),o($VH1,[2,367],{167:422}),o($VI1,[2,369],{168:423}),{48:[1,424],87:[1,425]},o($VJ1,[2,371]),o($VK1,[2,122]),o($VK1,[2,417]),o($VK1,[2,413]),o($VK1,[2,414]),o($VK1,[2,415]),o($VL1,[2,125]),o($VL1,[2,127]),o($VL1,[2,128]),o($V22,[2,420],{227:426}),o($VL1,[2,130]),{13:$V9,16:$Va,55:194,197:$V71,223:427,307:43,308:$Vc},{48:[1,428]},o($V32,[2,289],{61:429,80:430,81:[1,431],83:[1,432]}),o($VO1,[2,288]),{64:[1,433]},o($V81,[2,29],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:434,13:$V9,16:$Va,45:$Vx,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,276:$VI,277:$VJ,279:$VK,280:$VL,283:$VM,285:$VN,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51}),o($V42,[2,293]),o($V52,[2,92]),o($V52,[2,93]),o($V52,[2,94]),{45:$Vz1,89:$VA1,176:269},{31:[1,435]},{31:[1,436]},{19:437,28:$Vh,29:$Vi,56:85},{19:438,28:$Vh,29:$Vi,56:85},o($V62,[2,355],{149:439}),o($V62,[2,354]),{13:$V9,16:$Va,44:215,45:$V72,55:220,82:$Vy,87:$Vb,89:$Vg1,156:440,172:221,185:441,203:442,231:$V82,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($Vl,[2,19]),o($V32,[2,21]),{13:$V9,16:$Va,44:450,45:$V92,55:323,65:445,66:446,67:447,68:448,87:$Vb,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,307:43,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VN1,[2,8]),{31:[1,451]},{31:[2,258]},{31:[2,101]},o($Vk,[2,386],{31:[2,388]}),o($VS1,[2,102]),o($Va2,[2,391],{191:452}),o($Vk,[2,395],{196:453,198:454}),o($Vk,[2,108]),o($Vk,[2,109]),o($VS1,[2,103]),o($VS1,[2,104]),o($VS1,[2,390]),{13:$V9,16:$Va,44:215,45:$Vf1,48:[1,455],55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,187:350,200:456,231:$Vh1,234:349,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($Vb2,[2,424]),o($Vc2,[2,136]),o($Vc2,[2,137]),o($Vd2,[2,140]),{232:[1,457]},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:342,195:458,197:$VR1,307:43,308:$Vc},o($V_1,[2,219]),o($V_1,[2,220]),o($V_1,[2,221]),o($V_1,[2,222]),o($V_1,[2,223]),o($VN1,[2,10]),o($Vq1,[2,46]),o($Vq1,[2,314]),{112:$Vm1,122:459},o($Vq1,[2,62]),o($Vp,$Vn1,{133:242,108:460,112:$Vo1,132:$Vp1}),o($VV1,[2,61]),o($Vq1,[2,49]),o([6,28,126,128,193],[2,65]),{31:[2,66],112:[1,462],138:461},o($VW1,[2,351],{146:463,335:[1,464]}),{29:$Vb1,57:465},o($Vt1,[2,329]),o($Vp,[2,332],{129:466,327:[1,467]}),o($Vt1,[2,55]),o($Vt1,[2,331]),{48:[1,468]},o($Vv1,[2,429]),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,239:469,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vw1,[2,431]),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,243:470,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vw1,[2,156]),{45:$VC1,89:$VD1,179:471},o($Vx1,[2,441]),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,251:472,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vy1,[2,444],{256:473}),o($Vy1,[2,446],{258:474}),o($VX1,[2,442]),o($VX1,[2,443]),o($Vy1,[2,449]),{13:$V9,16:$Va,44:136,45:$Vx,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,255:154,257:155,259:475,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VX1,[2,450]),o($VX1,[2,451]),o($VX1,[2,379],{178:476}),o($VX1,[2,378]),o([6,13,16,29,31,39,45,47,48,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,175]),{48:[1,477]},{48:[1,478]},{272:[1,479]},{272:[1,480]},{272:[1,481]},{13:$V9,16:$Va,44:136,45:$Vx,46:482,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{48:[1,483]},{48:[1,484]},o($VB1,[2,187]),o($VE1,[2,194]),{13:$V9,16:$Va,44:39,55:40,82:$Vy,87:$Vb,139:289,172:291,255:154,257:155,266:290,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,320:485},{13:$V9,16:$Va,39:[1,487],44:136,45:$Vx,46:488,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,282:486,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($V$1,[2,460]),{13:$V9,16:$Va,44:136,45:$Vx,46:489,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VX1,[2,464]),{13:$V9,16:$Va,44:136,45:$Vx,46:490,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VX1,[2,466]),o($V61,[2,40]),o($VH1,[2,298]),o($Ve2,[2,87]),o($Ve2,[2,88]),o($Ve2,[2,89]),o($Ve2,[2,90]),{13:$V9,16:$Va,55:492,82:$Vy,172:493,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,311:494,312:$Vk1,315:491},o($V61,[2,41]),o($VI1,[2,300]),o($Vf2,[2,303],{92:495}),{13:$V9,16:$Va,31:[1,496],55:414,82:$Vy,171:497,172:415,173:416,174:$V02,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V12},{31:[1,498],89:[1,499]},{29:[1,500]},o($VJ1,[2,372]),{13:$V9,16:$Va,48:[2,422],55:194,197:$V71,223:312,226:502,228:501,229:$VM1,307:43,308:$Vc},o($VL1,[2,131]),o($VL1,[2,126]),o($V32,[2,22]),o($V32,[2,290]),{82:[1,503]},{82:[1,504]},{13:$V9,16:$Va,44:510,45:$Vx,55:323,67:321,68:322,74:505,75:506,76:$Vg2,77:320,78:$Vh2,79:509,87:$Vb,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,307:43,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($V42,[2,294]),o($Vi2,[2,69]),o($Vi2,[2,70]),o($V81,$V91,{59:197,69:198,20:511,70:$Va1}),o($Vc1,$Vd1,{58:205,62:206,23:512,63:$Ve1}),{29:[2,375],31:[2,71],84:522,85:$V5,112:[1,518],150:513,151:514,158:515,159:[1,516],160:[1,517],161:[1,519],163:[1,520],164:[1,521],175:523},o($V62,[2,363],{157:524,335:[1,525]}),o($V6,$V3,{215:10,202:526,205:527,208:528,214:529,44:530,87:$Vb}),o($Vj2,[2,399],{215:10,205:527,208:528,214:529,44:530,204:531,202:532,13:$V3,16:$V3,45:$V3,197:$V3,224:$V3,229:$V3,308:$V3,87:$Vb}),{13:$V9,16:$Va,44:215,45:$V72,55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,203:536,212:534,231:$V82,233:533,234:535,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($V6,$V3,{215:10,205:527,208:528,214:529,44:530,202:537,87:$Vb}),o($Vc1,[2,23],{307:43,267:139,275:146,278:149,55:323,67:447,68:448,44:450,66:538,13:$V9,16:$Va,45:$V92,87:$Vb,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,276:$VI,277:$VJ,279:$VK,280:$VL,283:$VM,285:$VN,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51}),o($Vk2,[2,291]),o($Vk2,[2,24]),o($Vk2,[2,25]),{13:$V9,16:$Va,44:136,45:$Vx,46:539,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vk2,[2,28]),o($Vc1,$Vd1,{58:205,62:206,23:540,63:$Ve1}),o([31,112,232,318,335],[2,105],{192:541,193:[1,542]}),o($Va2,[2,107]),{13:$V9,16:$Va,44:215,45:$Vf1,55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,187:350,199:543,200:544,231:$Vh1,234:349,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($Vl2,[2,132]),o($Vb2,[2,425]),o($Vl2,[2,133]),{13:$V9,16:$Va,44:354,55:355,82:$Vy,87:$Vb,172:357,237:356,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:358,312:$Vk1,313:545},o($Vq1,[2,54]),o($Vq1,[2,48]),o($VW1,[2,342]),{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:546,307:43,308:$Vc},o($VW1,[2,68]),o($Vk,[2,350],{31:$Vm2,112:$Vm2}),o($Vq1,[2,53]),{13:$V9,16:$Va,55:547,307:43,308:$Vc},o($Vp,[2,333]),o($Vw,[2,16]),o($Vv1,[2,152]),o($Vw1,[2,154]),o($Vw1,[2,157]),o($Vx1,[2,159]),o($Vx1,[2,160],{262:389,261:548,39:$VY1,338:$VZ1}),o($Vx1,[2,161],{262:389,261:549,39:$VY1,338:$VZ1}),o($Vy1,[2,163]),{13:$V9,16:$Va,44:136,45:$Vx,46:550,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VB1,[2,178]),o($VB1,[2,179]),{13:$V9,16:$Va,44:136,45:$Vx,46:551,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:552,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:553,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{48:[1,554],272:[1,555]},o($VB1,[2,184]),o($VB1,[2,186]),{314:[1,556]},{48:[1,557]},{48:[2,461]},{48:[2,462]},{48:[1,558]},{48:[2,467],193:[1,561],287:559,288:560},{13:$V9,16:$Va,55:194,197:$V71,223:562,307:43,308:$Vc},o($Vn2,[2,224]),o($Vn2,[2,225]),o($Vn2,[2,226]),{31:[1,563],45:$Vo2,94:564},o($V61,[2,84]),o($VH1,[2,368]),o($V61,[2,85]),o($VI1,[2,370]),o($Vf2,[2,373],{170:566}),{48:[1,567]},{48:[2,423],337:[1,568]},o($V32,[2,35],{83:[1,569]}),o($V32,[2,36],{81:[1,570]}),o($VO1,[2,30],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:509,44:510,75:571,13:$V9,16:$Va,45:$Vx,76:$Vg2,78:$Vh2,87:$Vb,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,276:$VI,277:$VJ,279:$VK,280:$VL,283:$VM,285:$VN,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51}),o($Vp2,[2,295]),{45:$Vx,77:572},{45:$Vx,77:573},o($Vp2,[2,33]),o($Vp2,[2,34]),{31:[2,275],50:574,84:575,85:$V5},{31:[2,277],51:576,84:577,85:$V5},o($V62,[2,356]),o($Vq2,[2,357],{152:578,335:[1,579]}),o($Vr2,[2,74]),{29:$Vb1,57:580},{29:$Vb1,57:581},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:582,307:43,308:$Vc},o($Vs2,[2,365],{162:583,328:[1,584]}),{13:$V9,16:$Va,45:$Vx,55:323,67:321,68:322,77:320,79:585,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,307:43,308:$Vc,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{45:[1,586]},o($Vr2,[2,81]),{29:$Vb1,57:587},o($V62,[2,73]),o($Vk,[2,362],{29:$Vt2,31:$Vt2,85:$Vt2,112:$Vt2,159:$Vt2,160:$Vt2,161:$Vt2,163:$Vt2,164:$Vt2}),o($Vj2,[2,112]),o($Vu2,[2,401],{206:588}),o($Vk,[2,405],{209:589,210:590}),o($Vk,[2,403]),o($Vk,[2,404]),o($Vj2,[2,113]),o($Vj2,[2,400]),{13:$V9,16:$Va,44:215,45:$V72,48:[1,591],55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,203:536,212:592,231:$V82,234:535,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($Vb2,[2,426]),o($Vd2,[2,138]),o($Vd2,[2,139]),{232:[1,593]},o($Vk2,[2,292]),{47:[1,595],48:[1,594]},o($VN1,[2,9]),o($Va2,[2,392]),o($Va2,[2,393],{44:39,55:40,307:43,195:341,139:342,194:596,190:597,13:$V9,16:$Va,87:$Vb,197:$VR1,308:$Vc}),o($Va2,[2,110],{272:[1,598]}),o($Vv2,[2,397],{201:599,316:600,317:[1,601]}),{314:[1,602]},{29:[1,603]},o($Vt1,[2,58]),o($Vy1,[2,445]),o($Vy1,[2,447]),{48:[1,604],272:[1,605]},{48:[1,606]},{272:[1,607]},{272:[1,608]},o($VB1,[2,99]),o($VX1,[2,382]),o([13,16,39,47,48,87,193,197,242,246,250,263,265,272,290,297,298,299,300,301,302,308,314,338,341,342,343,344,345,346],[2,232]),o($VB1,[2,188]),o($VB1,[2,189]),{48:[1,609]},{48:[2,468]},{289:[1,610]},{13:$V9,16:$Va,55:492,82:$Vy,172:493,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,311:494,312:$Vk1,315:611},o($V61,[2,42]),o($Vf2,[2,304]),{13:$V9,16:$Va,55:414,82:$Vy,95:612,171:613,172:415,173:416,174:$V02,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V12},{31:[1,614],45:$Vo2,94:615},o($VL1,[2,129]),o($V22,[2,421]),{82:[1,616]},{82:[1,617]},o($Vp2,[2,296]),o($Vp2,[2,31]),o($Vp2,[2,32]),{31:[2,17]},{31:[2,276]},{31:[2,18]},{31:[2,278]},o($Vk,$VP1,{155:330,153:618,154:619,29:$Vw2,31:$Vw2,85:$Vw2,112:$Vw2,159:$Vw2,160:$Vw2,161:$Vw2,163:$Vw2,164:$Vw2}),o($Vq2,[2,358]),o($Vr2,[2,75]),o($Vr2,[2,76]),{29:$Vb1,57:620},{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:621,307:43,308:$Vc},o($Vs2,[2,366]),o($Vr2,[2,79]),{13:$V9,16:$Va,44:136,45:$Vx,46:622,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($Vr2,[2,91],{336:[1,623]}),o([29,31,85,112,159,160,161,163,164,232,318,335],[2,114],{207:624,193:[1,625]}),o($Vu2,[2,117]),{13:$V9,16:$Va,44:215,45:$V72,55:220,82:$Vy,87:$Vb,89:$Vg1,172:221,185:351,203:536,211:626,212:627,231:$V82,234:535,236:216,237:222,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,309:$Vi1,310:$Vj1,311:217,312:$Vk1},o($VT1,[2,134]),o($Vb2,[2,427]),o($VT1,[2,135]),o($Vk2,[2,26]),{44:628,87:$Vb},o($Va2,[2,106]),o($Va2,[2,394]),o($Vk,[2,396]),o($Vv2,[2,111]),o($Vv2,[2,398]),{13:$V9,16:$Va,44:39,55:40,87:$Vb,139:342,186:629,190:340,195:341,197:$VR1,307:43,308:$Vc},o($VU1,[2,217]),o($Vk,$Vr1,{144:248,140:630,143:631,31:[2,343]}),o($VB1,[2,97]),o($VX1,[2,380]),o($VB1,[2,180]),{13:$V9,16:$Va,44:136,45:$Vx,46:632,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},{13:$V9,16:$Va,44:136,45:$Vx,46:633,55:133,67:132,68:134,77:131,82:$Vy,87:$Vb,172:135,224:$Vz,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:$VA,264:130,265:$VB,266:137,267:139,268:$VC,269:$VD,270:$VE,271:$VF,273:$VG,274:$VH,275:146,276:$VI,277:$VJ,278:149,279:$VK,280:$VL,283:$VM,285:$VN,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V$,346:$V01,347:$V11,348:$V21,349:$V31,350:$V41,351:$V51},o($VB1,[2,190]),{290:[1,634]},{314:[1,635]},{13:$V9,16:$Va,48:[1,636],55:414,82:$Vy,171:637,172:415,173:416,174:$V02,255:154,257:155,291:150,294:$VO,295:$VP,296:$VQ,297:$VR,298:$VS,299:$VT,300:$VU,301:$VV,302:$VW,303:$VX,304:$VY,305:$VZ,306:$V_,307:43,308:$Vc,312:$V12},o($Vx2,[2,305]),o($V61,[2,86]),o($Vf2,[2,374]),o($V32,[2,37]),o($V32,[2,38]),o($V62,[2,72]),o($V62,[2,360]),o($Vr2,[2,77]),{29:$Vb1,57:638},{47:[1,639]},{29:[2,376]},o($Vu2,[2,402]),o($Vu2,[2,115],{215:10,208:528,214:529,44:530,205:640,13:$V3,16:$V3,45:$V3,197:$V3,224:$V3,229:$V3,308:$V3,87:$Vb}),o($Vu2,[2,118],{272:[1,641]}),o($Vy2,[2,407],{213:642,319:643,317:[1,644]}),{48:[1,645]},{318:[1,646]},{31:[1,647]},{31:[2,344]},{48:[1,648]},{48:[1,649]},{291:650,303:$VX,304:$VY,305:$VZ,306:$V_},o($Ve2,[2,218]),o($Vf2,[2,44]),o($Vx2,[2,306]),o($Vr2,[2,78]),{44:651,87:$Vb},o($Vu2,[2,116]),o($Vk,[2,406]),o($Vy2,[2,119]),o($Vy2,[2,408]),o($V6,$V3,{215:10,205:527,208:528,214:529,44:530,202:652,87:$Vb}),o($Vk2,[2,27]),o($Vv2,[2,230]),o($Vz2,[2,345],{141:653,335:[1,654]}),o($VB1,[2,181]),o($VB1,[2,182]),{48:[2,191]},{48:[1,655]},{318:[1,656]},o($Vk,$Vr1,{144:248,142:657,143:658,31:$VA2,112:$VA2}),o($Vz2,[2,346]),o($Vr2,[2,80]),o($Vy2,[2,231]),o($VW1,[2,67]),o($VW1,[2,348])],\ndefaultActions: {5:[2,240],6:[2,241],7:[2,242],9:[2,239],24:[2,1],25:[2,2],26:[2,244],87:[2,282],94:[2,384],100:[2,45],109:[2,325],166:[2,458],263:[2,439],336:[2,258],337:[2,101],487:[2,461],488:[2,462],560:[2,468],574:[2,17],575:[2,276],576:[2,18],577:[2,278],623:[2,376],631:[2,344],650:[2,191]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    SPARQL parser in the Jison parser generator format.\n  */\n\n  var Wildcard = require('./Wildcard').Wildcard;\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var base = '', basePath = '', baseRoot = '';\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // Resolves an IRI against a base path\n  function resolveIRI(iri) {\n    // Strip off possible angular brackets\n    if (iri[0] === '<')\n      iri = iri.substring(1, iri.length - 1);\n    // Return absolute IRIs unmodified\n    if (/^[a-z]+:/i.test(iri))\n      return iri;\n    if (!Parser.base)\n      throw new Error('Cannot resolve relative IRI ' + iri + ' because no base IRI was set.');\n    if (base !== Parser.base) {\n      base = Parser.base;\n      basePath = base.replace(/[^\\/:]*$/, '');\n      baseRoot = base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    }\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined:\n      return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#':\n      return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?':\n      return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root relative IRIs at the root of the base IRI\n    case '/':\n      return baseRoot + iri;\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      return basePath + iri;\n    }\n  }\n\n  // If the item is a variable, ensures it starts with a question mark\n  function toVar(variable) {\n    if (variable) {\n      var first = variable[0];\n      if (first === '?' || first === '$') return Parser.factory.variable(variable.substr(1));\n    }\n    return variable;\n  }\n\n  // Creates an operation with the given name and arguments\n  function operation(operatorName, args) {\n    return { type: 'operation', operator: operatorName, args: args || [] };\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr === '*'? new Wildcard() : expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Transforms a list of operations types and arguments into a tree of operations\n  function createOperationTree(initialExpression, operationList) {\n    for (var i = 0, l = operationList.length, item; i < l && (item = operationList[i]); i++)\n      initialExpression = operation(item[0], [initialExpression, item[1]]);\n    return initialExpression;\n  }\n\n  // Group datasets by default and named\n  function groupDatasets(fromClauses, groupName) {\n    var defaults = [], named = [], l = fromClauses.length, fromClause, group = {};\n    if (!l)\n      return null;\n    for (var i = 0; i < l && (fromClause = fromClauses[i]); i++)\n      (fromClause.named ? named : defaults).push(fromClause.iri);\n    group[groupName || 'from'] = { default: defaults, named: named };\n    return group;\n  }\n\n  // Converts the string to a number\n  function toInt(string) {\n    return parseInt(string, 10);\n  }\n\n  // Transforms a possibly single group into its patterns\n  function degroupSingle(group) {\n    return group.type === 'group' && group.patterns.length === 1 ? group.patterns[0] : group;\n  }\n\n  // Creates a literal with the given value and type\n  function createTypedLiteral(value, type) {\n    if (type && type.termType !== 'NamedNode'){\n      type = Parser.factory.namedNode(type);\n    }\n    return Parser.factory.literal(value, type);\n  }\n\n  // Creates a literal with the given value and language\n  function createLangLiteral(value, lang) {\n    return Parser.factory.literal(value, lang);\n  }\n\n  function nestedTriple(subject, predicate, object) {\n\n    // TODO: Remove this when it is caught by the grammar\n    if (!('termType' in predicate)) {\n      throw new Error('Nested triples cannot contain paths');\n    }\n\n    return Parser.factory.quad(subject, predicate, object);\n  }\n\n  // Creates a triple with the given subject, predicate, and object\n  function triple(subject, predicate, object, annotations) {\n    var triple = {};\n    if (subject     != null) triple.subject     = subject;\n    if (predicate   != null) triple.predicate   = predicate;\n    if (object      != null) triple.object      = object;\n    if (annotations != null) triple.annotations = annotations;\n    return triple;\n  }\n\n  // Creates a new blank node\n  function blank(name) {\n    if (typeof name === 'string') {  // Only use name if a name is given\n      if (name.startsWith('e_')) return Parser.factory.blankNode(name);\n      return Parser.factory.blankNode('e_' + name);\n    }\n    return Parser.factory.blankNode('g_' + blankId++);\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n\n  // Regular expression and replacement strings to escape strings\n  var escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g,\n      escapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                             't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      partialSurrogatesWithoutEndpoint = /[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/,\n      fromCharCode = String.fromCharCode;\n\n  // Translates escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    try {\n      string = string.replace(escapeSequence, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return fromCharCode(charCode);\n          return fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = escapeReplacements[escapedChar];\n          if (!replacement) throw new Error();\n          return replacement;\n        }\n      });\n    }\n    catch (error) { return ''; }\n\n    // Test for invalid unicode surrogate pairs\n    if (partialSurrogatesWithoutEndpoint.exec(string)) {\n      throw new Error('Invalid unicode codepoint of surrogate pair without corresponding codepoint in ' + string);\n    }\n\n    return string;\n  }\n\n  // Creates a list, collecting its (possibly blank) items and triples associated with those items\n  function createList(objects) {\n    var list = blank(), head = list, listItems = [], listTriples, triples = [];\n    objects.forEach(function (o) { listItems.push(o.entity); appendAllTo(triples, o.triples); });\n\n    // Build an RDF list out of the items\n    for (var i = 0, j = 0, l = listItems.length, listTriples = Array(l * 2); i < l;)\n      listTriples[j++] = triple(head, Parser.factory.namedNode(RDF_FIRST), listItems[i]),\n      listTriples[j++] = triple(head, Parser.factory.namedNode(RDF_REST),  head = ++i < l ? blank() : Parser.factory.namedNode(RDF_NIL));\n\n    // Return the list's identifier, its triples, and the triples associated with its items\n    return { entity: list, triples: appendAllTo(listTriples, triples) };\n  }\n\n  // Creates a blank node identifier, collecting triples with that blank node as subject\n  function createAnonymousObject(propertyList) {\n    var entity = blank();\n    return {\n      entity: entity,\n      triples: propertyList.map(function (t) { return extend(triple(entity), t); })\n    };\n  }\n\n  // Collects all (possibly blank) objects, and triples that have them as subject\n  function objectListToTriples(predicate, objectList, otherTriples) {\n    var objects = [], triples = [];\n    objectList.forEach(function (l) {\n      let annotation = null;\n      if (l.annotation) {\n        annotation = l.annotation\n        l = l.object;\n      }\n      objects.push(triple(null, predicate, l.entity, annotation));\n      appendAllTo(triples, l.triples);\n    });\n    return unionAll(objects, otherTriples || [], triples);\n  }\n\n  // Simplifies groups by merging adjacent BGPs\n  function mergeAdjacentBGPs(groups) {\n    var merged = [], currentBgp;\n    for (var i = 0, group; group = groups[i]; i++) {\n      switch (group.type) {\n        // Add a BGP's triples to the current BGP\n        case 'bgp':\n          if (group.triples.length) {\n            if (!currentBgp)\n              appendTo(merged, currentBgp = group);\n            else\n              appendAllTo(currentBgp.triples, group.triples);\n          }\n          break;\n        // All other groups break up a BGP\n        default:\n          // Only add the group if its pattern is non-empty\n          if (!group.patterns || group.patterns.length > 0) {\n            appendTo(merged, group);\n            currentBgp = null;\n          }\n      }\n    }\n    return merged;\n  }\n\n  // Return the id of an expression\n  function getExpressionId(expression) {\n    return expression.variable ? expression.variable.value : expression.value || expression.expression.value;\n  }\n\n  // Get all \"aggregate\"'s from an expression\n  function getAggregatesOfExpression(expression) {\n    if (!expression) {\n      return [];\n    }\n    if (expression.type === 'aggregate') {\n      return [expression];\n    } else if (expression.type === \"operation\") {\n      const aggregates = [];\n      for (const arg of expression.args) {\n        aggregates.push(...getAggregatesOfExpression(arg));\n      }\n      return aggregates;\n    }\n    return [];\n  }\n\n  // Get all variables used in an expression\n  function getVariablesFromExpression(expression) {\n    const variables = new Set();\n    const visitExpression = function (expr) {\n      if (!expr) { return; }\n      if (expr.termType === \"Variable\") {\n        variables.add(expr);\n      } else if (expr.type === \"operation\") {\n        expr.args.forEach(visitExpression);\n      }\n    };\n    visitExpression(expression);\n    return variables;\n  }\n\n  // Helper function to flatten arrays\n  function flatten(input, depth = 1, stack = []) {\n    for (const item of input) {\n        if (depth > 0 && item instanceof Array) {\n          flatten(item, depth - 1, stack);\n        } else {\n          stack.push(item);\n        }\n    }\n    return stack;\n  }\n\n  function isVariable(term) {\n    return term.termType === 'Variable';\n  }\n\n  function getBoundVarsFromGroupGraphPattern(pattern) {\n    if (pattern.triples) {\n      const boundVars = [];\n      for (const triple of pattern.triples) {\n        if (isVariable(triple.subject)) boundVars.push(triple.subject.value);\n        if (isVariable(triple.predicate)) boundVars.push(triple.predicate.value);\n        if (isVariable(triple.object)) boundVars.push(triple.object.value);\n      }\n      return boundVars;\n    } else if (pattern.patterns) {\n      const boundVars = [];\n      for (const pat of pattern.patterns) {\n        boundVars.push(...getBoundVarsFromGroupGraphPattern(pat));\n      }\n      return boundVars;\n    }\n    return [];\n  }\n\n  // Helper function to find duplicates in array\n  function getDuplicatesInArray(array) {\n    const sortedArray = array.slice().sort();\n    const duplicates = [];\n    for (let i = 0; i < sortedArray.length - 1; i++) {\n      if (sortedArray[i + 1] == sortedArray[i]) {\n        duplicates.push(sortedArray[i]);\n      }\n    }\n    return duplicates;\n  }\n\n  function ensureSparqlStar(value) {\n    if (!Parser.sparqlStar) {\n      throw new Error('SPARQL-star support is not enabled');\n    }\n    return value;\n  }\n\n  function _applyAnnotations(subject, annotations, arr) {\n    for (const annotation of annotations) {\n      const t = triple(\n        // If the annotation already has a subject then just push the\n        // annotation to the upper scope as it is a blank node introduced\n        // from a pattern like :s :p :o {| :p1 [ :p2 :o2; :p3 :o3 ] |}\n        'subject' in annotation ? annotation.subject : subject,\n        annotation.predicate,\n        annotation.object\n      )\n\n      arr.push(t);\n\n      if (annotation.annotations) {\n        _applyAnnotations(nestedTriple(\n        subject,\n        annotation.predicate,\n        annotation.object\n      ), annotation.annotations, arr)\n      }\n    }\n  }\n\n  function applyAnnotations(triples) {\n    if (Parser.sparqlStar) {\n      const newTriples = [];\n\n      triples.forEach(t => {\n        const s = triple(t.subject, t.predicate, t.object);\n\n        newTriples.push(s);\n\n        if (t.annotations) {\n          _applyAnnotations(nestedTriple(t.subject, t.predicate, t.object), t.annotations, newTriples);\n        }\n      });\n\n      return newTriples;\n    }\n    return triples;\n  }\n\n  function ensureSparqlStarNestedQuads(value) {\n    if (!Parser.sparqlStarNestedQuads) {\n      throw new Error('Lenient SPARQL-star support with nested quads is not enabled');\n    }\n    return value;\n  }\n\n  function ensureNoVariables(operations) {\n    for (const operation of operations) {\n      if (operation.type === 'graph' && operation.name.termType === 'Variable') {\n        throw new Error('Detected illegal variable in GRAPH');\n      }\n      if (operation.type === 'bgp' || operation.type === 'graph') {\n        for (const triple of operation.triples) {\n          if (triple.subject.termType === 'Variable' ||\n              triple.predicate.termType === 'Variable' ||\n              triple.object.termType === 'Variable') {\n            throw new Error('Detected illegal variable in BGP');\n          }\n        }\n      }\n    }\n    return operations;\n  }\n\n  function ensureNoBnodes(operations) {\n    for (const operation of operations) {\n      if (operation.type === 'bgp') {\n        for (const triple of operation.triples) {\n          if (triple.subject.termType === 'BlankNode' ||\n              triple.predicate.termType === 'BlankNode' ||\n              triple.object.termType === 'BlankNode') {\n            throw new Error('Detected illegal blank node in BGP');\n          }\n        }\n      }\n    }\n    return operations;\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true,\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* ignore */\nbreak;\ncase 1:return 12\nbreak;\ncase 2:return 15\nbreak;\ncase 3:return 41\nbreak;\ncase 4:return 325\nbreak;\ncase 5:return 326\nbreak;\ncase 6:return 45\nbreak;\ncase 7:return 47\nbreak;\ncase 8:return 48\nbreak;\ncase 9:return 39\nbreak;\ncase 10:return 24\nbreak;\ncase 11:return 28\nbreak;\ncase 12:return 29\nbreak;\ncase 13:return 31\nbreak;\ncase 14:return 32\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 53\nbreak;\ncase 17:return 327\nbreak;\ncase 18:return 63\nbreak;\ncase 19:return 64\nbreak;\ncase 20:return 70\nbreak;\ncase 21:return 73\nbreak;\ncase 22:return 76\nbreak;\ncase 23:return 78\nbreak;\ncase 24:return 81\nbreak;\ncase 25:return 83\nbreak;\ncase 26:return 85\nbreak;\ncase 27:return 193\nbreak;\ncase 28:return 100\nbreak;\ncase 29:return 328\nbreak;\ncase 30:return 121\nbreak;\ncase 31:return 329\nbreak;\ncase 32:return 330\nbreak;\ncase 33:return 110\nbreak;\ncase 34:return 331\nbreak;\ncase 35:return 109\nbreak;\ncase 36:return 332\nbreak;\ncase 37:return 333\nbreak;\ncase 38:return 113\nbreak;\ncase 39:return 115\nbreak;\ncase 40:return 116\nbreak;\ncase 41:return 131\nbreak;\ncase 42:return 123\nbreak;\ncase 43:return 126\nbreak;\ncase 44:return 128\nbreak;\ncase 45:return 132\nbreak;\ncase 46:return 112\nbreak;\ncase 47:return 334\nbreak;\ncase 48:return 335\nbreak;\ncase 49:return 159\nbreak;\ncase 50:return 161\nbreak;\ncase 51:return 164\nbreak;\ncase 52:return 174\nbreak;\ncase 53:return 160\nbreak;\ncase 54:return 336\nbreak;\ncase 55:return 163\nbreak;\ncase 56:return 312\nbreak;\ncase 57:return 314\nbreak;\ncase 58:return 317\nbreak;\ncase 59:return 318\nbreak;\ncase 60:return 272\nbreak;\ncase 61:return 197\nbreak;\ncase 62:return 337\nbreak;\ncase 63:return 338\nbreak;\ncase 64:return 229\nbreak;\ncase 65:return 340\nbreak;\ncase 66:return 263\nbreak;\ncase 67:return 224\nbreak;\ncase 68:return 231\nbreak;\ncase 69:return 232\nbreak;\ncase 70:return 242\nbreak;\ncase 71:return 246\nbreak;\ncase 72:return 290\nbreak;\ncase 73:return 341\nbreak;\ncase 74:return 342\nbreak;\ncase 75:return 343\nbreak;\ncase 76:return 344\nbreak;\ncase 77:return 345\nbreak;\ncase 78:return 250\nbreak;\ncase 79:return 346\nbreak;\ncase 80:return 265\nbreak;\ncase 81:return 276\nbreak;\ncase 82:return 277\nbreak;\ncase 83:return 268\nbreak;\ncase 84:return 269\nbreak;\ncase 85:return 270\nbreak;\ncase 86:return 271\nbreak;\ncase 87:return 347\nbreak;\ncase 88:return 348\nbreak;\ncase 89:return 273\nbreak;\ncase 90:return 274\nbreak;\ncase 91:return 350\nbreak;\ncase 92:return 349\nbreak;\ncase 93:return 351\nbreak;\ncase 94:return 279\nbreak;\ncase 95:return 280\nbreak;\ncase 96:return 283\nbreak;\ncase 97:return 285\nbreak;\ncase 98:return 289\nbreak;\ncase 99:return 293\nbreak;\ncase 100:return 296\nbreak;\ncase 101:return 13\nbreak;\ncase 102:return 16\nbreak;\ncase 103:return 308\nbreak;\ncase 104:return 309\nbreak;\ncase 105:return 87\nbreak;\ncase 106:return 292\nbreak;\ncase 107:return 82\nbreak;\ncase 108:return 294\nbreak;\ncase 109:return 295\nbreak;\ncase 110:return 297\nbreak;\ncase 111:return 298\nbreak;\ncase 112:return 299\nbreak;\ncase 113:return 300\nbreak;\ncase 114:return 301\nbreak;\ncase 115:return 302\nbreak;\ncase 116:return 'EXPONENT'\nbreak;\ncase 117:return 303\nbreak;\ncase 118:return 304\nbreak;\ncase 119:return 305\nbreak;\ncase 120:return 306\nbreak;\ncase 121:return 89\nbreak;\ncase 122:return 310\nbreak;\ncase 123:return 6\nbreak;\ncase 124:return 'INVALID'\nbreak;\ncase 125:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\n\\r]*))/i,/^(?:BASE)/i,/^(?:PREFIX)/i,/^(?:SELECT)/i,/^(?:DISTINCT)/i,/^(?:REDUCED)/i,/^(?:\\()/i,/^(?:AS)/i,/^(?:\\))/i,/^(?:\\*)/i,/^(?:CONSTRUCT)/i,/^(?:WHERE)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:DESCRIBE)/i,/^(?:ASK)/i,/^(?:FROM)/i,/^(?:NAMED)/i,/^(?:GROUP)/i,/^(?:BY)/i,/^(?:HAVING)/i,/^(?:ORDER)/i,/^(?:ASC)/i,/^(?:DESC)/i,/^(?:LIMIT)/i,/^(?:OFFSET)/i,/^(?:VALUES)/i,/^(?:;)/i,/^(?:LOAD)/i,/^(?:SILENT)/i,/^(?:INTO)/i,/^(?:CLEAR)/i,/^(?:DROP)/i,/^(?:CREATE)/i,/^(?:ADD)/i,/^(?:TO)/i,/^(?:MOVE)/i,/^(?:COPY)/i,/^(?:INSERT((\\s+|(#[^\\n\\r]*)\\n\\r?)+)DATA)/i,/^(?:DELETE((\\s+|(#[^\\n\\r]*)\\n\\r?)+)DATA)/i,/^(?:DELETE((\\s+|(#[^\\n\\r]*)\\n\\r?)+)WHERE)/i,/^(?:WITH)/i,/^(?:DELETE)/i,/^(?:INSERT)/i,/^(?:USING)/i,/^(?:DEFAULT)/i,/^(?:GRAPH)/i,/^(?:ALL)/i,/^(?:\\.)/i,/^(?:OPTIONAL)/i,/^(?:SERVICE)/i,/^(?:BIND)/i,/^(?:UNDEF)/i,/^(?:MINUS)/i,/^(?:UNION)/i,/^(?:FILTER)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:\\{\\|)/i,/^(?:\\|\\})/i,/^(?:,)/i,/^(?:a)/i,/^(?:\\|)/i,/^(?:\\/)/i,/^(?:\\^)/i,/^(?:\\?)/i,/^(?:\\+)/i,/^(?:!)/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\|\\|)/i,/^(?:&&)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:IN)/i,/^(?:NOT)/i,/^(?:-)/i,/^(?:BOUND)/i,/^(?:BNODE)/i,/^(?:(RAND|NOW|UUID|STRUUID))/i,/^(?:(LANG|DATATYPE|IRI|URI|ABS|CEIL|FLOOR|ROUND|STRLEN|STR|UCASE|LCASE|ENCODE_FOR_URI|YEAR|MONTH|DAY|HOURS|MINUTES|SECONDS|TIMEZONE|TZ|MD5|SHA1|SHA256|SHA384|SHA512|isIRI|isURI|isBLANK|isLITERAL|isNUMERIC))/i,/^(?:(SUBJECT|PREDICATE|OBJECT|isTRIPLE))/i,/^(?:(LANGMATCHES|CONTAINS|STRSTARTS|STRENDS|STRBEFORE|STRAFTER|STRLANG|STRDT|sameTerm))/i,/^(?:CONCAT)/i,/^(?:COALESCE)/i,/^(?:IF)/i,/^(?:TRIPLE)/i,/^(?:REGEX)/i,/^(?:SUBSTR)/i,/^(?:REPLACE)/i,/^(?:EXISTS)/i,/^(?:COUNT)/i,/^(?:SUM|MIN|MAX|AVG|SAMPLE)/i,/^(?:GROUP_CONCAT)/i,/^(?:SEPARATOR)/i,/^(?:\\^\\^)/i,/^(?:true|false)/i,/^(?:(<(?:[^<>\\\"\\{\\}\\|\\^`\\\\\\u0000-\\u0020])*>))/i,/^(?:((([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])(?:(?:(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])|\\.)*(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040]))?)?:))/i,/^(?:(((([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])(?:(?:(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])|\\.)*(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040]))?)?:)((?:((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|:|[0-9]|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(?:(?:(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])|\\.|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*(?:(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%)))))?)))/i,/^(?:(_:(?:((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|[0-9])(?:(?:(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])|\\.)*(((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|-|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040]))?))/i,/^(?:([\\?\\$]((?:((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|[0-9])(?:((?:([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_))|[0-9]|\\u00B7|[\\u0300-\\u036F\\u203F-\\u2040])*)))/i,/^(?:(@[a-zA-Z]+(?:-[a-zA-Z0-9]+)*))/i,/^(?:([0-9]+))/i,/^(?:([0-9]*\\.[0-9]+))/i,/^(?:([0-9]+\\.[0-9]*([eE][+-]?[0-9]+)|\\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+)))/i,/^(?:(\\+([0-9]+)))/i,/^(?:(\\+([0-9]*\\.[0-9]+)))/i,/^(?:(\\+([0-9]+\\.[0-9]*([eE][+-]?[0-9]+)|\\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:(-([0-9]+)))/i,/^(?:(-([0-9]*\\.[0-9]+)))/i,/^(?:(-([0-9]+\\.[0-9]*([eE][+-]?[0-9]+)|\\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:([eE][+-]?[0-9]+))/i,/^(?:('(?:(?:[^\\u0027\\u005C\\u000A\\u000D])|(\\\\[tbnrf\\\\\\\"']|\\\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*'))/i,/^(?:(\"(?:(?:[^\\u0022\\u005C\\u000A\\u000D])|(\\\\[tbnrf\\\\\\\"']|\\\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*\"))/i,/^(?:('''(?:(?:'|'')?(?:[^'\\\\]|(\\\\[tbnrf\\\\\\\"']|\\\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*'''))/i,/^(?:(\"\"\"(?:(?:\"|\"\")?(?:[^\\\"\\\\]|(\\\\[tbnrf\\\\\\\"']|\\\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*\"\"\"))/i,/^(?:(\\((\\u0020|\\u0009|\\u000D|\\u000A)*\\)))/i,/^(?:(\\[(\\u0020|\\u0009|\\u000D|\\u000A)*\\]))/i,/^(?:$)/i,/^(?:.)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();module.exports=SparqlParser\n","\n// Wildcard constructor\nclass Wildcard {\n  constructor() {\n    return WILDCARD || this;\n  }\n\n  equals(other) {\n    return other && (this.termType === other.termType);\n  }\n}\n\nObject.defineProperty(Wildcard.prototype, 'value', {\n  enumerable: true,\n  value: '*',\n});\n\nObject.defineProperty(Wildcard.prototype, 'termType', {\n  enumerable: true,\n  value: 'Wildcard',\n});\n\n\n// Wildcard singleton\nvar WILDCARD = new Wildcard();\n\nmodule.exports.Wildcard = Wildcard;\n","var Parser = require('./lib/SparqlParser').Parser;\nvar Generator = require('./lib/SparqlGenerator');\nvar Wildcard = require(\"./lib/Wildcard\").Wildcard;\nvar { DataFactory } = require('rdf-data-factory');\n\nmodule.exports = {\n  /**\n   * Creates a SPARQL parser with the given pre-defined prefixes and base IRI\n   * @param options {\n   *   prefixes?: { [prefix: string]: string },\n   *   baseIRI?: string,\n   *   factory?: import('rdf-js').DataFactory,\n   *   sparqlStar?: boolean,\n   *   skipValidation?: boolean,\n   *   skipUngroupedVariableCheck?: boolean\n   * }\n   */\n  Parser: function ({ prefixes, baseIRI, factory, sparqlStar, skipValidation, skipUngroupedVariableCheck, pathOnly } = {}) {\n\n    // Create a copy of the prefixes\n    var prefixesCopy = {};\n    for (var prefix in prefixes || {})\n      prefixesCopy[prefix] = prefixes[prefix];\n\n    // Create a new parser with the given prefixes\n    // (Workaround for https://github.com/zaach/jison/issues/241)\n    var parser = new Parser();\n    parser.parse = function () {\n      Parser.base = baseIRI || '';\n      Parser.prefixes = Object.create(prefixesCopy);\n      Parser.factory = factory || new DataFactory();\n      Parser.sparqlStar = Boolean(sparqlStar);\n      Parser.pathOnly = Boolean(pathOnly);\n      // We keep skipUngroupedVariableCheck for compatibility reasons.\n      Parser.skipValidation = Boolean(skipValidation) || Boolean(skipUngroupedVariableCheck)\n      return Parser.prototype.parse.apply(parser, arguments);\n    };\n    parser._resetBlanks = Parser._resetBlanks;\n    return parser;\n  },\n  Generator: Generator,\n  Wildcard: Wildcard,\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = exports.toSparqlJs = exports.toSparql = exports.Factory = exports.Algebra = exports.translate = void 0;\nconst sparqlAlgebra_1 = __importDefault(require(\"./lib/sparqlAlgebra\"));\nexports.translate = sparqlAlgebra_1.default;\nconst Algebra = __importStar(require(\"./lib/algebra\"));\nexports.Algebra = Algebra;\nconst factory_1 = __importDefault(require(\"./lib/factory\"));\nexports.Factory = factory_1.default;\nconst sparql_1 = require(\"./lib/sparql\");\nObject.defineProperty(exports, \"toSparql\", { enumerable: true, get: function () { return sparql_1.toSparql; } });\nObject.defineProperty(exports, \"toSparqlJs\", { enumerable: true, get: function () { return sparql_1.toSparqlJs; } });\nconst util_1 = __importDefault(require(\"./lib/util\"));\nexports.Util = util_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expressionTypes = exports.types = void 0;\nvar types;\n(function (types) {\n    types[\"ALT\"] = \"alt\";\n    types[\"ASK\"] = \"ask\";\n    types[\"BGP\"] = \"bgp\";\n    types[\"CONSTRUCT\"] = \"construct\";\n    types[\"DESCRIBE\"] = \"describe\";\n    types[\"DISTINCT\"] = \"distinct\";\n    types[\"EXPRESSION\"] = \"expression\";\n    types[\"EXTEND\"] = \"extend\";\n    types[\"FILTER\"] = \"filter\";\n    types[\"FROM\"] = \"from\";\n    types[\"GRAPH\"] = \"graph\";\n    types[\"GROUP\"] = \"group\";\n    types[\"INV\"] = \"inv\";\n    types[\"JOIN\"] = \"join\";\n    types[\"LEFT_JOIN\"] = \"leftjoin\";\n    types[\"LINK\"] = \"link\";\n    types[\"MINUS\"] = \"minus\";\n    types[\"NOP\"] = \"nop\";\n    types[\"NPS\"] = \"nps\";\n    types[\"ONE_OR_MORE_PATH\"] = \"OneOrMorePath\";\n    types[\"ORDER_BY\"] = \"orderby\";\n    types[\"PATH\"] = \"path\";\n    types[\"PATTERN\"] = \"pattern\";\n    types[\"PROJECT\"] = \"project\";\n    types[\"REDUCED\"] = \"reduced\";\n    types[\"SEQ\"] = \"seq\";\n    types[\"SERVICE\"] = \"service\";\n    types[\"SLICE\"] = \"slice\";\n    types[\"UNION\"] = \"union\";\n    types[\"VALUES\"] = \"values\";\n    types[\"ZERO_OR_MORE_PATH\"] = \"ZeroOrMorePath\";\n    types[\"ZERO_OR_ONE_PATH\"] = \"ZeroOrOnePath\";\n    types[\"COMPOSITE_UPDATE\"] = \"compositeupdate\";\n    types[\"DELETE_INSERT\"] = \"deleteinsert\";\n    types[\"LOAD\"] = \"load\";\n    types[\"CLEAR\"] = \"clear\";\n    types[\"CREATE\"] = \"create\";\n    types[\"DROP\"] = \"drop\";\n    types[\"ADD\"] = \"add\";\n    types[\"MOVE\"] = \"move\";\n    types[\"COPY\"] = \"copy\";\n})(types = exports.types || (exports.types = {}));\nvar expressionTypes;\n(function (expressionTypes) {\n    expressionTypes[\"AGGREGATE\"] = \"aggregate\";\n    expressionTypes[\"EXISTENCE\"] = \"existence\";\n    expressionTypes[\"NAMED\"] = \"named\";\n    expressionTypes[\"OPERATOR\"] = \"operator\";\n    expressionTypes[\"TERM\"] = \"term\";\n    expressionTypes[\"WILDCARD\"] = \"wildcard\";\n})(expressionTypes = exports.expressionTypes || (exports.expressionTypes = {}));\n//# sourceMappingURL=algebra.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst A = __importStar(require(\"./algebra\"));\nconst rdf_data_factory_1 = require(\"rdf-data-factory\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst sparqljs_1 = require(\"sparqljs\");\nclass Factory {\n    constructor(dataFactory) {\n        this.dataFactory = dataFactory || new rdf_data_factory_1.DataFactory();\n        this.stringType = this.createTerm('http://www.w3.org/2001/XMLSchema#string');\n    }\n    createAlt(input, flatten = true) { return this.flattenMulti({ type: A.types.ALT, input }, flatten); }\n    createAsk(input) { return { type: A.types.ASK, input }; }\n    createBoundAggregate(variable, aggregate, expression, distinct, separator) {\n        const result = this.createAggregateExpression(aggregate, expression, distinct, separator);\n        result.variable = variable;\n        return result;\n    }\n    createBgp(patterns) { return { type: A.types.BGP, patterns }; }\n    createConstruct(input, template) { return { type: A.types.CONSTRUCT, input, template }; }\n    createDescribe(input, terms) { return { type: A.types.DESCRIBE, input, terms }; }\n    createDistinct(input) { return { type: A.types.DISTINCT, input }; }\n    createExtend(input, variable, expression) { return { type: A.types.EXTEND, input, variable, expression }; }\n    createFrom(input, def, named) { return { type: A.types.FROM, input, default: def, named }; }\n    createFilter(input, expression) { return { type: A.types.FILTER, input, expression }; }\n    createGraph(input, name) { return { type: A.types.GRAPH, input, name }; }\n    createGroup(input, variables, aggregates) { return { type: A.types.GROUP, input, variables, aggregates }; }\n    createInv(path) { return { type: A.types.INV, path }; }\n    createJoin(input, flatten = true) { return this.flattenMulti({ type: A.types.JOIN, input }, flatten); }\n    createLeftJoin(left, right, expression) {\n        if (expression)\n            return { type: A.types.LEFT_JOIN, input: [left, right], expression };\n        return { type: A.types.LEFT_JOIN, input: [left, right] };\n    }\n    createLink(iri) { return { type: A.types.LINK, iri }; }\n    createMinus(left, right) { return { type: A.types.MINUS, input: [left, right] }; }\n    createNop() { return { type: A.types.NOP }; }\n    createNps(iris) { return { type: A.types.NPS, iris }; }\n    createOneOrMorePath(path) { return { type: A.types.ONE_OR_MORE_PATH, path }; }\n    createOrderBy(input, expressions) { return { type: A.types.ORDER_BY, input, expressions }; }\n    createPath(subject, predicate, object, graph) {\n        if (graph)\n            return { type: A.types.PATH, subject, predicate, object, graph };\n        return { type: A.types.PATH, subject, predicate, object, graph: this.dataFactory.defaultGraph() };\n    }\n    createPattern(subject, predicate, object, graph) {\n        const pattern = this.dataFactory.quad(subject, predicate, object, graph);\n        pattern.type = A.types.PATTERN;\n        return pattern;\n    }\n    createProject(input, variables) { return { type: A.types.PROJECT, input, variables }; }\n    createReduced(input) { return { type: A.types.REDUCED, input }; }\n    createSeq(input, flatten = true) { return this.flattenMulti({ type: A.types.SEQ, input }, flatten); }\n    createService(input, name, silent) { return { type: A.types.SERVICE, input, name, silent: Boolean(silent) }; }\n    createSlice(input, start, length) {\n        start = start || 0;\n        if (length !== undefined)\n            return { type: A.types.SLICE, input, start, length };\n        return { type: A.types.SLICE, input, start };\n    }\n    createUnion(input, flatten = true) { return this.flattenMulti({ type: A.types.UNION, input }, flatten); }\n    createValues(variables, bindings) { return { type: A.types.VALUES, variables, bindings }; }\n    createZeroOrMorePath(path) { return { type: A.types.ZERO_OR_MORE_PATH, path }; }\n    createZeroOrOnePath(path) { return { type: A.types.ZERO_OR_ONE_PATH, path }; }\n    createAggregateExpression(aggregator, expression, distinct, separator) {\n        if (separator)\n            return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.AGGREGATE, aggregator: aggregator, expression, separator, distinct };\n        return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.AGGREGATE, aggregator: aggregator, expression, distinct };\n    }\n    createExistenceExpression(not, input) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.EXISTENCE, not, input }; }\n    createNamedExpression(name, args) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.NAMED, name, args }; }\n    createOperatorExpression(operator, args) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.OPERATOR, operator, args }; }\n    createTermExpression(term) { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.TERM, term }; }\n    createWildcardExpression() { return { type: A.types.EXPRESSION, expressionType: A.expressionTypes.WILDCARD, wildcard: new sparqljs_1.Wildcard() }; }\n    createTerm(str) {\n        if (str[0] === '$') {\n            str = str.replace('$', '?');\n        }\n        return (0, rdf_string_1.stringToTerm)(str, this.dataFactory);\n    }\n    // Update functions\n    createCompositeUpdate(updates) { return { type: A.types.COMPOSITE_UPDATE, updates }; }\n    createDeleteInsert(deleteQuads, insertQuads, where) {\n        const result = { type: A.types.DELETE_INSERT };\n        if (deleteQuads)\n            result.delete = deleteQuads;\n        if (insertQuads)\n            result.insert = insertQuads;\n        if (where)\n            result.where = where;\n        return result;\n    }\n    createLoad(source, destination, silent) {\n        const result = { type: A.types.LOAD, source };\n        if (destination)\n            result.destination = destination;\n        return this.addSilent(result, Boolean(silent));\n    }\n    createClear(source, silent) {\n        return this.addSilent({ type: A.types.CLEAR, source }, Boolean(silent));\n    }\n    createCreate(source, silent) {\n        return this.addSilent({ type: A.types.CREATE, source }, Boolean(silent));\n    }\n    createDrop(source, silent) {\n        return this.addSilent({ type: A.types.DROP, source }, Boolean(silent));\n    }\n    createAdd(source, destination, silent) {\n        return this.addSilent({ type: A.types.ADD, source, destination }, Boolean(silent));\n    }\n    createMove(source, destination, silent) {\n        return this.addSilent({ type: A.types.MOVE, source, destination }, Boolean(silent));\n    }\n    createCopy(source, destination, silent) {\n        return this.addSilent({ type: A.types.COPY, source, destination }, Boolean(silent));\n    }\n    addSilent(input, silent) {\n        if (silent)\n            input.silent = silent;\n        return input;\n    }\n    flattenMulti(input, flatten) {\n        if (!flatten) {\n            return input;\n        }\n        const type = input.type;\n        const children = input.input;\n        let newChildren = [];\n        for (const child of children) {\n            if (child.type === type) {\n                newChildren.push(...child.input);\n            }\n            else {\n                newChildren.push(child);\n            }\n        }\n        input.input = newChildren;\n        return input;\n    }\n}\nexports.default = Factory;\n//# sourceMappingURL=factory.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSparqlJs = exports.toSparql = void 0;\nconst rdf_isomorphic_1 = require(\"rdf-isomorphic\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst sparqljs_1 = require(\"sparqljs\");\nconst Algebra = __importStar(require(\"./algebra\"));\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst util_1 = __importDefault(require(\"./util\"));\nconst types = Algebra.types;\nconst eTypes = Algebra.expressionTypes;\nlet context;\nconst factory = new factory_1.default();\nfunction toSparql(op, options = {}) {\n    let generator = new sparqljs_1.Generator(options);\n    return generator.stringify(toSparqlJs(op));\n}\nexports.toSparql = toSparql;\nfunction toSparqlJs(op) {\n    resetContext();\n    op = removeQuads(op);\n    let result = translateOperation(op);\n    if (result.type === 'group')\n        return result.patterns[0];\n    return result;\n}\nexports.toSparqlJs = toSparqlJs;\nfunction resetContext() {\n    context = { project: false, extend: [], group: [], aggregates: [], order: [] };\n}\nfunction translateOperation(op) {\n    // this allows us to differentiate between BIND and SELECT when translating EXTEND\n    // GRAPH was added because the way graphs get added back here is not the same as how they get added in the future\n    // ^ seems fine but might have to be changed if problems get detected in the future\n    if (op.type !== types.EXTEND && op.type !== types.ORDER_BY && op.type !== types.GRAPH)\n        context.project = false;\n    switch (op.type) {\n        case types.EXPRESSION: return translateExpression(op);\n        case types.ASK: return translateProject(op, types.ASK);\n        case types.BGP: return translateBgp(op);\n        case types.CONSTRUCT: return translateConstruct(op);\n        case types.DESCRIBE: return translateProject(op, types.DESCRIBE);\n        case types.DISTINCT: return translateDistinct(op);\n        case types.EXTEND: return translateExtend(op);\n        case types.FROM: return translateFrom(op);\n        case types.FILTER: return translateFilter(op);\n        case types.GRAPH: return translateGraph(op);\n        case types.GROUP: return translateGroup(op);\n        case types.JOIN: return translateJoin(op);\n        case types.LEFT_JOIN: return translateLeftJoin(op);\n        case types.MINUS: return translateMinus(op);\n        case types.NOP: return {};\n        case types.ORDER_BY: return translateOrderBy(op);\n        case types.PATH: return translatePath(op);\n        case types.PATTERN: return translatePattern(op);\n        case types.PROJECT: return translateProject(op, types.PROJECT);\n        case types.REDUCED: return translateReduced(op);\n        case types.SERVICE: return translateService(op);\n        case types.SLICE: return translateSlice(op);\n        case types.UNION: return translateUnion(op);\n        case types.VALUES: return translateValues(op);\n        // UPDATE operations\n        case types.COMPOSITE_UPDATE: return translateCompositeUpdate(op);\n        case types.DELETE_INSERT: return translateDeleteInsert(op);\n        case types.LOAD: return translateLoad(op);\n        case types.CLEAR: return translateClear(op);\n        case types.CREATE: return translateCreate(op);\n        case types.DROP: return translateDrop(op);\n        case types.ADD: return translateAdd(op);\n        case types.MOVE: return translateMove(op);\n        case types.COPY: return translateCopy(op);\n    }\n    throw new Error(`Unknown Operation type ${op.type}`);\n}\nfunction translateExpression(expr) {\n    switch (expr.expressionType) {\n        case eTypes.AGGREGATE: return translateAggregateExpression(expr);\n        case eTypes.EXISTENCE: return translateExistenceExpression(expr);\n        case eTypes.NAMED: return translateNamedExpression(expr);\n        case eTypes.OPERATOR: return translateOperatorExpression(expr);\n        case eTypes.TERM: return translateTermExpression(expr);\n        case eTypes.WILDCARD: return translateWildcardExpression(expr);\n    }\n    throw new Error(`Unknown Expression Operation type ${expr.expressionType}`);\n}\nfunction translatePathComponent(path) {\n    switch (path.type) {\n        case types.ALT: return translateAlt(path);\n        case types.INV: return translateInv(path);\n        case types.LINK: return translateLink(path);\n        case types.NPS: return translateNps(path);\n        case types.ONE_OR_MORE_PATH: return translateOneOrMorePath(path);\n        case types.SEQ: return translateSeq(path);\n        case types.ZERO_OR_MORE_PATH: return translateZeroOrMorePath(path);\n        case types.ZERO_OR_ONE_PATH: return translateZeroOrOnePath(path);\n    }\n    throw new Error(`Unknown Path type ${path.type}`);\n}\nfunction translateTerm(term) {\n    return (0, rdf_string_1.termToString)(term);\n}\n// ------------------------- EXPRESSIONS -------------------------\nfunction translateAggregateExpression(expr) {\n    const result = {\n        expression: translateExpression(expr.expression),\n        type: 'aggregate',\n        aggregation: expr.aggregator,\n        distinct: expr.distinct\n    };\n    if (expr.separator)\n        result.separator = expr.separator;\n    return result;\n}\nfunction translateExistenceExpression(expr) {\n    return {\n        type: 'operation',\n        operator: expr.not ? 'notexists' : 'exists',\n        args: [{\n                type: 'group',\n                patterns: util_1.default.flatten([translateOperation(expr.input)])\n            }]\n    };\n}\nfunction translateNamedExpression(expr) {\n    return {\n        type: 'functionCall',\n        // Wrong typings\n        function: expr.name,\n        args: expr.args.map(translateExpression)\n    };\n}\nfunction translateOperatorExpression(expr) {\n    if (expr.operator === 'desc') {\n        const result = { expression: translateExpression(expr.args[0]) };\n        result.descending = true;\n        return result;\n    }\n    const result = {\n        type: 'operation',\n        operator: expr.operator,\n        args: expr.args.map(translateExpression)\n    };\n    if (result.operator === 'in' || result.operator === 'notin')\n        result.args = [result.args[0]].concat([result.args.slice(1)]);\n    return result;\n}\nfunction translateTermExpression(expr) {\n    return expr.term;\n}\nfunction translateWildcardExpression(expr) {\n    return expr.wildcard;\n}\nfunction arrayToPattern(input) {\n    if (!Array.isArray(input))\n        return input;\n    if (input.length === 1)\n        return input[0];\n    return {\n        type: 'group',\n        patterns: input,\n    };\n}\n// ------------------------- OPERATIONS -------------------------\n// these get translated in the project function\nfunction translateBoundAggregate(op) {\n    return op;\n}\nfunction translateBgp(op) {\n    let patterns = op.patterns.map(translatePattern);\n    if (patterns.length === 0)\n        return null;\n    return {\n        type: 'bgp',\n        triples: patterns\n    };\n}\nfunction translateConstruct(op) {\n    return {\n        type: 'query',\n        prefixes: {},\n        queryType: 'CONSTRUCT',\n        template: op.template.map(translatePattern),\n        where: util_1.default.flatten([\n            translateOperation(op.input)\n        ])\n    };\n}\nfunction translateDistinct(op) {\n    let result = translateOperation(op.input);\n    // project is nested in group object\n    result.patterns[0].distinct = true;\n    return result;\n}\nfunction translateExtend(op) {\n    if (context.project) {\n        context.extend.push(op);\n        return translateOperation(op.input);\n    }\n    return util_1.default.flatten([\n        translateOperation(op.input),\n        {\n            type: 'bind',\n            variable: op.variable,\n            expression: translateExpression(op.expression)\n        }\n    ]);\n}\nfunction translateFrom(op) {\n    const result = translateOperation(op.input);\n    // Can't type as CONSTRUCT queries do not have `from` field in their type\n    let obj = result;\n    // project is nested in group object\n    if (result.type === 'group') {\n        obj = result.patterns[0];\n    }\n    obj.from = {\n        default: op.default,\n        named: op.named\n    };\n    return result;\n}\nfunction translateFilter(op) {\n    return {\n        type: 'group',\n        patterns: util_1.default.flatten([\n            translateOperation(op.input),\n            { type: 'filter', expression: translateExpression(op.expression) }\n        ])\n    };\n}\nfunction translateGraph(op) {\n    return {\n        type: 'graph',\n        patterns: util_1.default.flatten([translateOperation(op.input)]),\n        name: op.name\n    };\n}\nfunction translateGroup(op) {\n    const input = translateOperation(op.input);\n    const aggs = op.aggregates.map(translateBoundAggregate);\n    context.aggregates.push(...aggs);\n    // TODO: apply possible extends\n    context.group.push(...op.variables);\n    return input;\n}\nfunction translateJoin(op) {\n    const arr = util_1.default.flatten(op.input.map(translateOperation));\n    // Merge bgps\n    // This is possible if one side was a path and the other a bgp for example\n    return arr.reduce((result, val) => {\n        if (val.type !== 'bgp' || result.length == 0 || result[result.length - 1].type !== 'bgp') {\n            result.push(val);\n        }\n        else {\n            result[result.length - 1].triples.push(...val.triples);\n        }\n        return result;\n    }, []);\n}\nfunction translateLeftJoin(op) {\n    const leftjoin = {\n        type: 'optional',\n        patterns: [\n            translateOperation(op.input[1])\n        ]\n    };\n    if (op.expression) {\n        leftjoin.patterns.push({\n            type: 'filter',\n            expression: translateExpression(op.expression)\n        });\n    }\n    leftjoin.patterns = util_1.default.flatten(leftjoin.patterns);\n    return util_1.default.flatten([\n        translateOperation(op.input[0]),\n        leftjoin\n    ]);\n}\nfunction translateMinus(op) {\n    let patterns = translateOperation(op.input[1]);\n    if (patterns.type === 'group')\n        patterns = patterns.patterns;\n    if (!Array.isArray(patterns))\n        patterns = [patterns];\n    return util_1.default.flatten([\n        translateOperation(op.input[0]),\n        {\n            type: 'minus',\n            patterns: patterns\n        }\n    ]);\n}\nfunction translateOrderBy(op) {\n    context.order.push(...op.expressions);\n    return translateOperation(op.input);\n}\nfunction translatePath(op) {\n    return {\n        type: 'bgp',\n        triples: [{\n                subject: op.subject,\n                predicate: translatePathComponent(op.predicate),\n                object: op.object\n            }]\n    };\n}\nfunction translatePattern(op) {\n    return {\n        subject: op.subject,\n        predicate: op.predicate,\n        object: op.object\n    };\n}\nfunction replaceAggregatorVariables(s, map) {\n    let st = util_1.default.isSimpleTerm(s) ? translateTerm(s) : s;\n    if (typeof st === 'string') {\n        if (map[st])\n            return map[st];\n    }\n    else if (Array.isArray(s)) {\n        s = s.map(e => replaceAggregatorVariables(e, map));\n    }\n    else {\n        for (let key of Object.keys(s))\n            s[key] = replaceAggregatorVariables(s[key], map);\n    }\n    return s;\n}\nfunction translateProject(op, type) {\n    const result = {\n        type: 'query',\n        prefixes: {}\n    };\n    // Makes typing easier in some places\n    const select = result;\n    let variables;\n    if (type === types.PROJECT) {\n        result.queryType = 'SELECT';\n        variables = op.variables;\n    }\n    else if (type === types.ASK) {\n        result.queryType = 'ASK';\n    }\n    else if (type === types.DESCRIBE) {\n        result.queryType = 'DESCRIBE';\n        variables = op.terms;\n    }\n    // backup values in case of nested queries\n    // everything in extend, group, etc. is irrelevant for this project call\n    const extend = context.extend;\n    const group = context.group;\n    const aggregates = context.aggregates;\n    const order = context.order;\n    resetContext();\n    context.project = true;\n    let input = util_1.default.flatten([translateOperation(op.input)]);\n    if (input.length === 1 && input[0].type === 'group')\n        input = input[0].patterns;\n    result.where = input;\n    let aggregators = {};\n    // these can not reference each other\n    for (let agg of context.aggregates)\n        aggregators[translateTerm(agg.variable)] = translateExpression(agg);\n    // do these in reverse order since variables in one extend might apply to an expression in an other extend\n    let extensions = {};\n    for (let i = context.extend.length - 1; i >= 0; --i) {\n        let e = context.extend[i];\n        extensions[translateTerm(e.variable)] = replaceAggregatorVariables(translateExpression(e.expression), aggregators);\n    }\n    if (context.group.length > 0)\n        select.group = context.group.map(variable => {\n            let v = translateTerm(variable);\n            if (extensions[v]) {\n                let result = extensions[v];\n                delete extensions[v]; // make sure there is only 1 'AS' statement\n                return {\n                    variable,\n                    expression: result\n                };\n            }\n            return { expression: variable };\n        });\n    // descending expressions will already be in the correct format due to the structure of those\n    if (context.order.length > 0)\n        select.order = context.order.map(translateOperation).map(o => o.descending ? o : ({ expression: o }));\n    // this needs to happen after the group because it might depend on variables generated there\n    if (variables) {\n        select.variables = variables.map((term) => {\n            let v = translateTerm(term);\n            if (extensions[v]) {\n                let result = extensions[v];\n                delete extensions[v]; // remove used extensions so only unused ones remain\n                return {\n                    variable: term,\n                    expression: result,\n                };\n            }\n            return term;\n        });\n        // if the * didn't match any variables this would be empty\n        if (select.variables.length === 0)\n            select.variables = [new sparqljs_1.Wildcard()];\n    }\n    // It is possible that at this point some extensions have not yet been resolved.\n    // These would be bind operations that are not used in a GROUP BY or SELECT body.\n    // We still need to add them though, as they could be relevant to the other extensions.\n    const extensionEntries = Object.entries(extensions);\n    if (extensionEntries.length > 0) {\n        select.where = select.where || [];\n        for (const [key, value] of extensionEntries) {\n            select.where.push({\n                type: 'bind',\n                variable: (0, rdf_string_1.stringToTerm)(key),\n                expression: value\n            });\n        }\n    }\n    // convert filter to 'having' if it contains an aggregator variable\n    // could always convert, but is nicer to use filter when possible\n    if (result.where.length > 0 && result.where[result.where.length - 1].type === 'filter') {\n        const filter = result.where[result.where.length - 1];\n        if (objectContainsValues(filter, Object.keys(aggregators))) {\n            select.having = util_1.default.flatten([replaceAggregatorVariables(filter.expression, aggregators)]);\n            result.where.splice(-1);\n        }\n    }\n    context.extend = extend;\n    context.group = group;\n    context.aggregates = aggregates;\n    context.order = order;\n    // subqueries need to be in a group, this will be removed again later for the root query\n    return { type: 'group', patterns: [select] };\n}\nfunction objectContainsValues(o, vals) {\n    if (util_1.default.isSimpleTerm(o))\n        return vals.indexOf(translateTerm(o)) >= 0;\n    if (Array.isArray(o))\n        return o.some(e => objectContainsValues(e, vals));\n    if (o === Object(o))\n        return Object.keys(o).some(key => objectContainsValues(o[key], vals));\n    return vals.indexOf(o) >= 0;\n}\nfunction translateReduced(op) {\n    let result = translateOperation(op.input);\n    // project is nested in group object\n    result.patterns[0].reduced = true;\n    return result;\n}\nfunction translateService(op) {\n    let patterns = translateOperation(op.input);\n    if (patterns.type === 'group')\n        patterns = patterns.patterns;\n    if (!Array.isArray(patterns))\n        patterns = [patterns];\n    return {\n        type: 'service',\n        // Typings are wrong, name can also be a variable\n        name: op.name,\n        silent: op.silent,\n        patterns\n    };\n}\nfunction translateSlice(op) {\n    let result = translateOperation(op.input);\n    // results can be nested in a group object\n    let obj = result;\n    if (result.type && result.type === 'group')\n        obj = result.patterns[0];\n    if (op.start !== 0)\n        obj.offset = op.start;\n    if (op.length !== undefined)\n        obj.limit = op.length;\n    return result;\n}\nfunction translateUnion(op) {\n    return {\n        type: 'union',\n        patterns: op.input.map(translateOperation).map(arrayToPattern),\n    };\n}\nfunction translateValues(op) {\n    // TODO: check if handled correctly when outside of select block\n    return {\n        type: 'values',\n        values: op.bindings.map(binding => {\n            let result = {};\n            for (let v of op.variables) {\n                let s = `?${v.value}`;\n                if (binding[s])\n                    result[s] = binding[s];\n                else\n                    result[s] = undefined;\n            }\n            return result;\n        })\n    };\n}\n// PATH COMPONENTS\nfunction translateAlt(path) {\n    const mapped = path.input.map(translatePathComponent);\n    if (mapped.every(entry => 'pathType' in entry && entry.pathType === '!')) {\n        return {\n            type: 'path',\n            pathType: '!',\n            items: [{\n                    type: 'path',\n                    pathType: '|',\n                    items: util_1.default.flatten(mapped.map(entry => entry.items))\n                }]\n        };\n    }\n    return {\n        type: 'path',\n        pathType: '|',\n        items: mapped\n    };\n}\nfunction translateInv(path) {\n    if (path.path.type === types.NPS) {\n        const inv = path.path.iris.map((iri) => {\n            return {\n                type: 'path',\n                pathType: '^',\n                items: [iri]\n            };\n        });\n        if (inv.length <= 1)\n            return {\n                type: 'path',\n                pathType: '!',\n                items: inv\n            };\n        return {\n            type: 'path',\n            pathType: '!',\n            items: [{\n                    type: 'path',\n                    pathType: '|',\n                    items: inv\n                }]\n        };\n    }\n    return {\n        type: 'path',\n        pathType: '^',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateLink(path) {\n    return path.iri;\n}\nfunction translateNps(path) {\n    if (path.iris.length <= 1)\n        return {\n            type: 'path',\n            pathType: '!',\n            items: path.iris\n        };\n    return {\n        type: 'path',\n        pathType: '!',\n        items: [{\n                type: 'path',\n                pathType: '|',\n                items: path.iris\n            }]\n    };\n}\nfunction translateOneOrMorePath(path) {\n    return {\n        type: 'path',\n        pathType: '+',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateSeq(path) {\n    return {\n        type: 'path',\n        pathType: '/',\n        items: path.input.map(translatePathComponent)\n    };\n}\nfunction translateZeroOrMorePath(path) {\n    return {\n        type: 'path',\n        pathType: '*',\n        items: [translatePathComponent(path.path)]\n    };\n}\nfunction translateZeroOrOnePath(path) {\n    // Typings are missing '?' operator\n    return {\n        type: 'path',\n        // Typings are missing this path\n        pathType: '?',\n        items: [translatePathComponent(path.path)]\n    };\n}\n// UPDATE OPERATIONS\nfunction translateCompositeUpdate(op) {\n    const updates = op.updates.map(update => {\n        const result = translateOperation(update);\n        return result.updates[0];\n    });\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateDeleteInsert(op) {\n    var _a;\n    let where = op.where;\n    let use = undefined;\n    if (where && where.type === types.FROM) {\n        let from = where;\n        where = from.input;\n        use = { default: from.default, named: from.named };\n    }\n    const updates = [{\n            updateType: 'insertdelete',\n            delete: convertUpdatePatterns(op.delete || []),\n            insert: convertUpdatePatterns(op.insert || []),\n        }];\n    // Typings don't support 'using' yet\n    if (use)\n        updates[0].using = use;\n    // corresponds to empty array in SPARQL.js\n    if (!where || (where.type === types.BGP && where.patterns.length === 0))\n        updates[0].where = [];\n    else {\n        const graphs = [];\n        let result = translateOperation(removeQuadsRecursive(where, graphs));\n        if (result.type === 'group')\n            updates[0].where = result.patterns;\n        else\n            updates[0].where = [result];\n        // graph might not be applied yet since there was no project\n        // this can only happen if there was a single graph\n        if (graphs.length > 0) {\n            if (graphs.length !== 1)\n                throw new Error('This is unexpected and might indicate an error in graph handling for updates.');\n            // ignore if default graph\n            if (((_a = graphs[0]) === null || _a === void 0 ? void 0 : _a.value) !== '')\n                updates[0].where = [{ type: 'graph', patterns: updates[0].where, name: graphs[0] }];\n        }\n    }\n    // not really necessary but can give cleaner looking queries\n    if (!op.delete && !op.where) {\n        updates[0].updateType = 'insert';\n        delete updates[0].delete;\n        delete updates[0].where;\n    }\n    else if (!op.insert && !op.where) {\n        delete updates[0].insert;\n        delete updates[0].where;\n        if (op.delete.some(pattern => pattern.subject.termType === 'Variable' ||\n            pattern.predicate.termType === 'Variable' ||\n            pattern.object.termType === 'Variable'))\n            updates[0].updateType = 'deletewhere';\n        else\n            updates[0].updateType = 'delete';\n    }\n    else if (!op.insert && op.where && op.where.type === 'bgp') {\n        if ((0, rdf_isomorphic_1.isomorphic)(op.delete, op.where.patterns)) {\n            delete updates[0].where;\n            updates[0].updateType = 'deletewhere';\n        }\n    }\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateLoad(op) {\n    // Typings are wrong, destiniation is optional\n    const updates = [{ type: 'load', silent: Boolean(op.silent), source: op.source }];\n    if (op.destination)\n        updates[0].destination = op.destination;\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateClear(op) {\n    return translateClearCreateDrop(op, 'clear');\n}\nfunction translateCreate(op) {\n    return translateClearCreateDrop(op, 'create');\n}\nfunction translateDrop(op) {\n    return translateClearCreateDrop(op, 'drop');\n}\nfunction translateClearCreateDrop(op, type) {\n    const updates = [{ type, silent: Boolean(op.silent) }];\n    // Typings are wrong, type is not required, see for example \"clear-drop\" test\n    if (op.source === 'DEFAULT')\n        updates[0].graph = { default: true };\n    else if (op.source === 'NAMED')\n        updates[0].graph = { named: true };\n    else if (op.source === 'ALL')\n        updates[0].graph = { all: true };\n    else\n        updates[0].graph = { type: 'graph', name: op.source };\n    return { prefixes: {}, type: 'update', updates };\n}\nfunction translateAdd(op) {\n    return translateUpdateGraphShortcut(op, 'add');\n}\nfunction translateMove(op) {\n    return translateUpdateGraphShortcut(op, 'move');\n}\nfunction translateCopy(op) {\n    return translateUpdateGraphShortcut(op, 'copy');\n}\nfunction translateUpdateGraphShortcut(op, type) {\n    const updates = [{ type, silent: Boolean(op.silent) }];\n    updates[0].source = op.source === 'DEFAULT' ? { type: 'graph', default: true } : { type: 'graph', name: op.source };\n    updates[0].destination = op.destination === 'DEFAULT' ? { type: 'graph', default: true } : { type: 'graph', name: op.destination };\n    return { prefixes: {}, type: 'update', updates };\n}\n// similar to removeQuads but more simplified for UPDATEs\nfunction convertUpdatePatterns(patterns) {\n    if (!patterns)\n        return [];\n    const graphs = {};\n    patterns.forEach(pattern => {\n        const graph = pattern.graph.value;\n        if (!graphs[graph])\n            graphs[graph] = [];\n        graphs[graph].push(pattern);\n    });\n    return Object.keys(graphs).map(graph => {\n        if (graph === '')\n            return { type: 'bgp', triples: graphs[graph].map(translatePattern) };\n        return { type: 'graph', triples: graphs[graph].map(translatePattern), name: graphs[graph][0].graph };\n    });\n}\nfunction removeQuads(op) {\n    return removeQuadsRecursive(op, []);\n}\n// remove quads\nfunction removeQuadsRecursive(op, graphs) {\n    if (Array.isArray(op))\n        return op.map(sub => removeQuadsRecursive(sub, graphs));\n    if (!op.type)\n        return op;\n    // UPDATE operations with Patterns handle graphs a bit differently\n    if (op.type === types.DELETE_INSERT)\n        return op;\n    if ((op.type === types.PATTERN || op.type === types.PATH) && op.graph) {\n        graphs.push(op.graph);\n        // Remove non-default graphs\n        if (op.graph.name !== '')\n            return op.type === types.PATTERN ?\n                factory.createPattern(op.subject, op.predicate, op.object) :\n                factory.createPath(op.subject, op.predicate, op.object);\n        return op;\n    }\n    const result = {};\n    const keyGraphs = {}; // unique graph per key\n    const globalNames = {}; // track all the unique graph names for the entire Operation\n    for (let key of Object.keys(op)) {\n        const newGraphs = [];\n        result[key] = removeQuadsRecursive(op[key], newGraphs);\n        if (newGraphs.length > 0) {\n            keyGraphs[key] = newGraphs;\n            for (const graph of newGraphs) {\n                globalNames[graph.value] = graph;\n            }\n        }\n    }\n    const graphNameSet = Object.keys(globalNames);\n    if (graphNameSet.length > 0) {\n        // We also need to create graph statement if we are at the edge of certain operations\n        if (graphNameSet.length === 1 && ![types.PROJECT, types.SERVICE].includes(op.type))\n            graphs.push(globalNames[graphNameSet[0]]);\n        else if (op.type === types.BGP) {\n            // This is the specific case that got changed because of using quads.\n            return splitBgpToGraphs(op, keyGraphs.patterns);\n        }\n        else {\n            // multiple graphs (or project), need to create graph objects for them\n            for (let key of Object.keys(keyGraphs)) {\n                const value = result[key];\n                if (Array.isArray(value))\n                    result[key] = value.map((child, idx) => keyGraphs[key][0].value === '' ? child : factory.createGraph(child, keyGraphs[key][idx]));\n                else if (keyGraphs[key][0].value !== '')\n                    result[key] = factory.createGraph(value, keyGraphs[key][0]);\n            }\n        }\n    }\n    return result;\n}\n// `graphs` should be an array of length identical to `op.patterns`, containing the corresponding graph for each triple.\nfunction splitBgpToGraphs(op, graphs) {\n    var _a;\n    // Split patterns per graph\n    const graphPatterns = {};\n    for (let i = 0; i < op.patterns.length; ++i) {\n        const pattern = op.patterns[i];\n        const graphName = graphs[i].value;\n        graphPatterns[graphName] = (_a = graphPatterns[graphName]) !== null && _a !== void 0 ? _a : { patterns: [], graph: graphs[i] };\n        graphPatterns[graphName].patterns.push(pattern);\n    }\n    // Create graph objects for every cluster\n    let children = [];\n    for (const [graphName, { patterns, graph }] of Object.entries(graphPatterns)) {\n        const bgp = factory.createBgp(patterns);\n        children.push(graphName === '' ? bgp : factory.createGraph(bgp, graph));\n    }\n    // Join the graph objects\n    let join = children[0];\n    for (let i = 1; i < children.length; ++i)\n        join = factory.createJoin([join, children[i]]);\n    return join;\n}\n//# sourceMappingURL=sparql.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst equal = require(\"fast-deep-equal/es6\");\nconst rdf_string_1 = require(\"rdf-string\");\nconst Algebra = __importStar(require(\"./algebra\"));\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst util_1 = __importDefault(require(\"./util\"));\nconst Parser = require('sparqljs').Parser;\nconst types = Algebra.types;\nlet variables = new Set();\nlet varCount = 0;\nlet useQuads = false;\nlet factory;\n/**\n * Translates the given SPARQL query to SPARQL Algebra.\n * @param sparql - Either a SPARQL string or an object generated by sparql.js\n * @param options - Optional options object. Current options:\n *                    * dataFactory: The Datafactory used to generate terms. Default @rdfjs/data-model.\n *                    * quads: Boolean indicating whether triples should be converted to Quads (consumes GRAPH statements). Default false.\n *                    * prefixes: Pre-defined prefixes for the given query. Default empty.\n *                    * baseIRI: Base IRI that should be used for the query. Default undefined (throws error if required).\n * @returns {Operation}\n */\nfunction translate(sparql, options) {\n    options = options || {};\n    factory = new factory_1.default(options.dataFactory);\n    let query;\n    if (isString(sparql)) {\n        let parser = new Parser(options);\n        // resets the identifier counter used for blank nodes\n        // provides nicer and more consistent output if there are multiple calls\n        parser._resetBlanks();\n        query = parser.parse(sparql);\n    }\n    else {\n        query = sparql;\n    }\n    return translateQuery(query, options.quads, options.blankToVariable);\n}\nexports.default = translate;\nfunction translateQuery(sparql, quads, blankToVariable) {\n    // this set is filled in during the inScopeVariables call\n    variables = new Set();\n    varCount = 0;\n    useQuads = Boolean(quads);\n    // Assume this is an empty query\n    if (!sparql.type)\n        return factory.createNop();\n    if (sparql.type !== 'query' && sparql.type !== 'update')\n        throw new Error('Translate only works on complete query or update objects.');\n    let res;\n    // find ALL variables here to fill `variables` array\n    findAllVariables(sparql);\n    if (sparql.type === 'query') {\n        // group and where are identical, having only 1 makes parsing easier, can be undefined in DESCRIBE\n        const group = { type: 'group', patterns: sparql.where || [] };\n        res = translateGraphPattern(group);\n        res = translateAggregates(sparql, res);\n    }\n    else if (sparql.type === 'update') {\n        res = translateUpdate(sparql);\n    }\n    if (blankToVariable) {\n        res = translateBlankNodesToVariables(res);\n    }\n    return res;\n}\nfunction isString(str) {\n    return typeof str === 'string';\n}\nfunction isTerm(term) {\n    return Boolean(term === null || term === void 0 ? void 0 : term.termType);\n}\n// This is not completely correct but this way we also catch SPARQL.js triples\nfunction isTriple(triple) {\n    return triple.subject && triple.predicate && triple.object;\n}\nfunction isVariable(term) {\n    return (term === null || term === void 0 ? void 0 : term.termType) === 'Variable';\n}\n// Will be used to make sure new variables don't overlap\nfunction findAllVariables(thingy) {\n    if (isTerm(thingy)) {\n        if (isVariable(thingy)) {\n            // Variables don't store the `?`\n            variables.add(`?${thingy.value}`);\n        }\n    }\n    else if (Array.isArray(thingy)) {\n        for (const entry of thingy)\n            findAllVariables(entry);\n    }\n    else if (thingy && typeof thingy === 'object') {\n        for (let key of Object.keys(thingy)) {\n            // Some variables are hidden in keys (specifically for VALUES)\n            if (key.startsWith('?')) {\n                variables.add(key);\n            }\n            else if (key.startsWith('$')) {\n                variables.add(`?${key.slice(1)}`);\n            }\n            findAllVariables(thingy[key]);\n        }\n    }\n}\n// 18.2.1\nfunction inScopeVariables(thingy) {\n    let inScope = {};\n    if (isTriple(thingy)) {\n        // Note that this could both be an actual Quad or a SPARQL.js triple (without graph)\n        const result = [\n            inScopeVariables(thingy.subject),\n            inScopeVariables(thingy.predicate),\n            inScopeVariables(thingy.object),\n            thingy.graph ? inScopeVariables(thingy.graph) : {}\n        ];\n        Object.assign(inScope, ...result);\n    }\n    else if (isTerm(thingy)) {\n        if (isVariable(thingy))\n            inScope[thingy.value] = thingy;\n    }\n    else if (thingy.type === 'bgp') {\n        // Slightly cheating but this is a subset of what we support so is fine\n        const quads = thingy.triples;\n        Object.assign(inScope, ...quads.map(inScopeVariables));\n    }\n    else if (thingy.type === 'path') {\n        // A path predicate should not have variables but just iterating so we could theoretically support this\n        Object.assign(inScope, ...thingy.items.map(inScopeVariables));\n    }\n    else if (thingy.type === 'group' || thingy.type === 'union' || thingy.type === 'optional') {\n        Object.assign(inScope, ...thingy.patterns.map(inScopeVariables));\n    }\n    else if (thingy.type === 'service' || thingy.type === 'graph') {\n        Object.assign(inScope, inScopeVariables(thingy.name));\n        Object.assign(inScope, ...thingy.patterns.map(inScopeVariables));\n    }\n    else if (thingy.type === 'bind') {\n        Object.assign(inScope, inScopeVariables(thingy.variable));\n    }\n    else if (thingy.type === 'values') {\n        if (thingy.values.length > 0) {\n            const vars = Object.keys(thingy.values[0]).map(v => factory.createTerm(v));\n            Object.assign(inScope, ...vars.map(inScopeVariables));\n        }\n    }\n    else if (thingy.type === 'query') {\n        if (thingy.queryType === 'SELECT' || thingy.queryType === 'DESCRIBE') {\n            if (thingy.where && thingy.variables.some(util_1.default.isWildcard))\n                Object.assign(inScope, ...thingy.where.map(inScopeVariables));\n            for (const v of thingy.variables) {\n                if (isVariable(v))\n                    Object.assign(inScope, inScopeVariables(v));\n                else if (v.variable)\n                    Object.assign(inScope, inScopeVariables(v.variable));\n            }\n            if (thingy.queryType === 'SELECT') {\n                if (thingy.group) {\n                    // Grouping can be a VariableExpression, typings are wrong\n                    for (const g of thingy.group) {\n                        if (g.variable)\n                            Object.assign(inScope, inScopeVariables(g.variable));\n                    }\n                }\n                if (thingy.values) {\n                    const values = { type: 'values', values: thingy.values };\n                    Object.assign(inScope, inScopeVariables(values));\n                }\n            }\n        }\n    }\n    return inScope;\n}\nfunction translateGraphPattern(thingy) {\n    // 18.2.2.1\n    // already done by sparql parser\n    // 18.2.2.3\n    // 18.2.2.4\n    // 18.2.2.5\n    // In Sparql.js, a group with a single BGP in it is a single object.\n    if (thingy.type === 'bgp') {\n        return translateBgp(thingy);\n    }\n    // 18.2.2.6 - GroupOrUnionGraphPattern\n    if (thingy.type === 'union')\n        return factory.createUnion(thingy.patterns.map((p) => {\n            // sparqljs doesn't always indicate the children are groups\n            if (p.type !== 'group')\n                p = { type: 'group', patterns: [p] };\n            return translateGraphPattern(p);\n        }));\n    // 18.2.2.6 - GraphGraphPattern\n    if (thingy.type === 'graph') {\n        // Sparql.js combines the group graph pattern and the graph itself in the same object.\n        // We split here so the group graph pattern can be interpreted correctly.\n        const group = { type: 'group', patterns: thingy.patterns };\n        let result = translateGraphPattern(group);\n        // Output depends on if we use quads or not\n        if (useQuads)\n            result = recurseGraph(result, thingy.name);\n        else\n            result = factory.createGraph(result, thingy.name);\n        return result;\n    }\n    // 18.2.2.6 - InlineData\n    if (thingy.type === 'values')\n        return translateInlineData(thingy);\n    // 18.2.2.6 - SubSelect\n    if (thingy.type === 'query')\n        return translateQuery(thingy, useQuads, false);\n    if (thingy.type === 'group') {\n        // 18.2.2.2\n        let filters = [];\n        let nonfilters = [];\n        for (let pattern of thingy.patterns)\n            (pattern.type === 'filter' ? filters : nonfilters).push(pattern);\n        // 18.2.2.6 - GroupGraphPattern\n        let result = nonfilters.reduce(accumulateGroupGraphPattern, factory.createBgp([]));\n        // 18.2.2.7\n        let expressions = filters.map(filter => translateExpression(filter.expression));\n        if (expressions.length > 0)\n            result = factory.createFilter(result, expressions.reduce((acc, exp) => factory.createOperatorExpression('&&', [acc, exp])));\n        return result;\n    }\n    throw new Error(`Unexpected type: ${thingy.type}`);\n}\nfunction translateExpression(exp) {\n    if (util_1.default.isSimpleTerm(exp))\n        return factory.createTermExpression(exp);\n    if (util_1.default.isQuad(exp)) {\n        if (util_1.default.hasQuadVariables(exp))\n            return factory.createOperatorExpression('triple', [\n                translateExpression(exp.subject),\n                translateExpression(exp.predicate),\n                translateExpression(exp.object),\n            ]);\n        else\n            return factory.createTermExpression(exp);\n    }\n    if (util_1.default.isWildcard(exp))\n        return factory.createWildcardExpression();\n    if ('aggregation' in exp)\n        return factory.createAggregateExpression(exp.aggregation, translateExpression(exp.expression), Boolean(exp.distinct), exp.separator);\n    if ('function' in exp)\n        // Outdated typings\n        return factory.createNamedExpression(exp.function, exp.args.map(translateExpression));\n    if ('operator' in exp) {\n        if (exp.operator === 'exists' || exp.operator === 'notexists')\n            return factory.createExistenceExpression(exp.operator === 'notexists', translateGraphPattern(exp.args[0]));\n        if (exp.operator === 'in' || exp.operator === 'notin')\n            exp.args = [exp.args[0]].concat(exp.args[1]); // sparql.js uses 2 arguments with the second one being a list\n        return factory.createOperatorExpression(exp.operator, exp.args.map(translateExpression));\n    }\n    throw new Error(`Unknown expression: ${JSON.stringify(exp)}`);\n}\nfunction translateBgp(thingy) {\n    let patterns = [];\n    let joins = [];\n    for (let t of thingy.triples) {\n        if ('pathType' in t.predicate) {\n            // translatePath returns a mix of Quads and Paths\n            let path = translatePath(t);\n            for (let p of path) {\n                if (p.type === types.PATH) {\n                    if (patterns.length > 0)\n                        joins.push(factory.createBgp(patterns));\n                    patterns = [];\n                    joins.push(p);\n                }\n                else\n                    patterns.push(p);\n            }\n        }\n        else\n            patterns.push(translateQuad(t));\n    }\n    if (patterns.length > 0)\n        joins.push(factory.createBgp(patterns));\n    if (joins.length === 1)\n        return joins[0];\n    return factory.createJoin(joins);\n}\nfunction translatePath(triple) {\n    let sub = triple.subject;\n    let pred = translatePathPredicate(triple.predicate);\n    let obj = triple.object;\n    return simplifyPath(sub, pred, obj);\n}\nfunction translatePathPredicate(predicate) {\n    if (util_1.default.isSimpleTerm(predicate)) {\n        if (predicate.termType === 'NamedNode')\n            return factory.createLink(predicate);\n        else\n            throw new Error(`Path predicate should be a NamedNode, got ${JSON.stringify(predicate)}`);\n    }\n    if (predicate.pathType === '^')\n        return factory.createInv(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '!') {\n        // negation is either over a single predicate or a list of disjuncted properties\n        let normals = [];\n        let inverted = [];\n        let items;\n        if ('pathType' in predicate.items[0] && predicate.items[0].pathType === '|')\n            items = predicate.items[0].items; // the | element\n        else\n            items = predicate.items;\n        for (let item of items) {\n            if (util_1.default.isSimpleTerm(item))\n                normals.push(item);\n            else if (item.pathType === '^')\n                inverted.push(item.items[0]);\n            else\n                throw new Error(`Unexpected item: ${JSON.stringify(item)}`);\n        }\n        // NPS elements do not have the LINK function\n        let normalElement = factory.createNps(normals);\n        let invertedElement = factory.createInv(factory.createNps(inverted));\n        if (inverted.length === 0)\n            return normalElement;\n        if (normals.length === 0)\n            return invertedElement;\n        return factory.createAlt([normalElement, invertedElement,]);\n    }\n    if (predicate.pathType === '/')\n        return factory.createSeq(predicate.items.map(translatePathPredicate));\n    if (predicate.pathType === '|')\n        return factory.createAlt(predicate.items.map(translatePathPredicate));\n    if (predicate.pathType === '*')\n        return factory.createZeroOrMorePath(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '+')\n        return factory.createOneOrMorePath(translatePathPredicate(predicate.items[0]));\n    if (predicate.pathType === '?')\n        return factory.createZeroOrOnePath(translatePathPredicate(predicate.items[0]));\n    throw new Error(`Unable to translate path expression ${JSON.stringify(predicate)}`);\n}\nfunction simplifyPath(subject, predicate, object) {\n    if (predicate.type === types.LINK)\n        return [factory.createPattern(subject, predicate.iri, object)];\n    if (predicate.type === types.INV)\n        return simplifyPath(object, predicate.path, subject);\n    if (predicate.type === types.SEQ) {\n        let joiner = subject;\n        return util_1.default.flatten(predicate.input.map((subOp, i) => {\n            const nextJoiner = i === predicate.input.length - 1 ? object : generateFreshVar();\n            const simplifiedPath = simplifyPath(joiner, subOp, nextJoiner);\n            if (nextJoiner.termType === 'Variable') {\n                joiner = nextJoiner;\n            }\n            return simplifiedPath;\n        }));\n    }\n    return [factory.createPath(subject, predicate, object)];\n}\nfunction generateFreshVar() {\n    let v = `?var${varCount++}`;\n    if (variables.has(v))\n        return generateFreshVar();\n    variables.add(v);\n    return factory.createTerm(v);\n}\nfunction translateQuad(quad) {\n    if ('pathType' in quad.predicate) {\n        throw new Error('Trying to translate property path to quad.');\n    }\n    // Graphs are needed here\n    // TODO: investigate if typings are wrong or if we internally add graphs to these\n    return factory.createPattern(quad.subject, quad.predicate, quad.object, quad.graph);\n}\nlet typeVals = Object.values(types);\nfunction recurseGraph(thingy, graph, replacement) {\n    if (thingy.type === types.GRAPH) {\n        if (replacement) {\n            // At this point we would lose track of the replacement which would result in incorrect results\n            // This would indicate the library is not being used as intended though\n            throw new Error('Recursing through nested GRAPH statements with a replacement is impossible.');\n        }\n        // In case there were nested GRAPH statements that were not recursed yet for some reason\n        thingy = recurseGraph(thingy.input, thingy.name);\n    }\n    else if (thingy.type === types.SERVICE) {\n        // Service blocks are not affected by enclosing GRAPH statements, so nothing is modified in this block.\n        // See https://github.com/joachimvh/SPARQLAlgebra.js/pull/104#issuecomment-1838016303\n    }\n    else if (thingy.type === types.BGP)\n        thingy.patterns = thingy.patterns.map(quad => {\n            if (replacement) {\n                if (quad.subject.equals(graph))\n                    quad.subject = replacement;\n                if (quad.predicate.equals(graph))\n                    quad.predicate = replacement;\n                if (quad.object.equals(graph))\n                    quad.object = replacement;\n            }\n            if (quad.graph.termType === 'DefaultGraph')\n                quad.graph = graph;\n            return quad;\n        });\n    else if (thingy.type === types.PATH) {\n        if (replacement) {\n            if (thingy.subject.equals(graph))\n                thingy.subject = replacement;\n            if (thingy.object.equals(graph))\n                thingy.object = replacement;\n        }\n        if (thingy.graph.termType === 'DefaultGraph')\n            thingy.graph = graph;\n    }\n    // need to replace variables in subqueries should the graph also be a variable of the same name\n    // unless the subquery projects that variable\n    else if (thingy.type === types.PROJECT && !replacement) {\n        if (!thingy.variables.some(v => v.equals(graph)))\n            replacement = generateFreshVar();\n        thingy.input = recurseGraph(thingy.input, graph, replacement);\n    }\n    // this can happen if the query extends an expression to the name of the graph\n    // since the extend happens here there should be no further occurrences of this name\n    // if there are it's the same situation as above\n    else if (thingy.type === types.EXTEND && !replacement) {\n        if (thingy.variable.equals(graph))\n            replacement = generateFreshVar();\n        thingy.input = recurseGraph(thingy.input, graph, replacement);\n    }\n    else {\n        for (let key of Object.keys(thingy)) {\n            if (Array.isArray(thingy[key]))\n                thingy[key] = thingy[key].map((x) => recurseGraph(x, graph, replacement));\n            else if (typeVals.indexOf(thingy[key].type) >= 0) // can't do instanceof on an interface\n                thingy[key] = recurseGraph(thingy[key], graph, replacement);\n            else if (replacement && isVariable(thingy[key]) && thingy[key].equals(graph))\n                thingy[key] = replacement;\n        }\n    }\n    return thingy;\n}\nfunction accumulateGroupGraphPattern(G, E) {\n    if (E.type === 'optional') {\n        // optional input needs to be interpreted as a group\n        const A = translateGraphPattern({ type: 'group', patterns: E.patterns });\n        if (A.type === types.FILTER) {\n            G = factory.createLeftJoin(G, A.input, A.expression);\n        }\n        else\n            G = factory.createLeftJoin(G, A);\n    }\n    else if (E.type === 'minus') {\n        // minus input needs to be interpreted as a group\n        const A = translateGraphPattern({ type: 'group', patterns: E.patterns });\n        G = factory.createMinus(G, A);\n    }\n    else if (E.type === 'bind')\n        G = factory.createExtend(G, E.variable, translateExpression(E.expression));\n    else if (E.type === 'service') {\n        // transform to group so childnodes get parsed correctly\n        const group = { type: 'group', patterns: E.patterns };\n        const A = factory.createService(translateGraphPattern(group), E.name, E.silent);\n        G = simplifiedJoin(G, A);\n    }\n    else {\n        const A = translateGraphPattern(E);\n        G = simplifiedJoin(G, A);\n    }\n    return G;\n}\nfunction simplifiedJoin(G, A) {\n    // Note: this is more simplification than requested in 18.2.2.8, but no reason not to do it.\n    if (G.type === types.BGP && A.type === types.BGP)\n        G = factory.createBgp([...G.patterns, ...A.patterns]);\n    // 18.2.2.8 (simplification)\n    else if (G.type === types.BGP && G.patterns.length === 0)\n        G = A;\n    else if (A.type === types.BGP && A.patterns.length === 0) { } // do nothing\n    else\n        G = factory.createJoin([G, A]);\n    return G;\n}\nfunction translateInlineData(values) {\n    let variables = (values.values.length === 0 ? [] : Object.keys(values.values[0])).map(factory.createTerm.bind(factory));\n    let bindings = values.values.map((binding) => {\n        let keys = Object.keys(binding);\n        keys = keys.filter(k => binding[k] !== undefined);\n        let map = {};\n        for (let key of keys)\n            map[key] = binding[key];\n        return map;\n    });\n    return factory.createValues(variables, bindings);\n}\n// --------------------------------------- AGGREGATES\nfunction translateAggregates(query, res) {\n    // Typings for ConstructQuery are wrong and missing several fields so we will cast quite often to SelectQuery to have partial typings\n    const select = query;\n    // 18.2.4.1\n    const E = [];\n    const A = {};\n    select.variables = select.variables && select.variables.map(val => mapAggregate(val, A));\n    select.having = select.having && select.having.map(val => mapAggregate(val, A));\n    select.order = select.order && select.order.map(val => mapAggregate(val, A));\n    // if there are any aggregates or if we have a groupBy (both result in a GROUP)\n    if (select.group || Object.keys(A).length > 0) {\n        const aggregates = Object.keys(A).map(v => translateBoundAggregate(A[v], factory.createTerm(v)));\n        const vars = [];\n        if (select.group) {\n            for (const e of select.group) {\n                if (util_1.default.isSimpleTerm(e.expression)) {\n                    vars.push(e.expression); // this will always be a var, otherwise sparql would be invalid\n                }\n                else {\n                    // Incorrect typings, e can have a variable, see for example group-variable test in sparql.js\n                    const v = 'variable' in e ? e.variable : generateFreshVar();\n                    res = factory.createExtend(res, v, translateExpression(e.expression));\n                    vars.push(v);\n                }\n            }\n        }\n        res = factory.createGroup(res, vars, aggregates);\n    }\n    // 18.2.4.2\n    if (select.having)\n        for (let filter of select.having)\n            res = factory.createFilter(res, translateExpression(filter));\n    // 18.2.4.3\n    if (query.values)\n        res = factory.createJoin([res, translateInlineData(query)]);\n    // 18.2.4.4\n    let PV = [];\n    if (query.queryType === 'SELECT' || query.queryType === 'DESCRIBE') {\n        // Sort variables for consistent output\n        if (query.variables.some((e) => e && util_1.default.isWildcard(e)))\n            PV = Object.values(inScopeVariables(query))\n                .sort((left, right) => left.value.localeCompare(right.value));\n        else {\n            // Wildcard has been filtered out above\n            for (let v of query.variables) {\n                // can have non-variables with DESCRIBE\n                if (isVariable(v) || !('variable' in v))\n                    PV.push(v);\n                else if (v.variable) // ... AS ?x\n                 {\n                    PV.push(v.variable);\n                    E.push(v);\n                }\n            }\n        }\n    }\n    // TODO: Jena simplifies by having a list of extends\n    for (let v of E)\n        res = factory.createExtend(res, v.variable, translateExpression(v.expression));\n    // 18.2.5\n    // not using toList and toMultiset\n    // 18.2.5.1\n    if (select.order)\n        res = factory.createOrderBy(res, select.order.map((exp) => {\n            let result = translateExpression(exp.expression);\n            if (exp.descending)\n                result = factory.createOperatorExpression('desc', [result]);\n            return result;\n        }));\n    // 18.2.5.2\n    // construct does not need a project (select, ask and describe do)\n    if (query.queryType === 'SELECT')\n        // Named nodes are only possible in a DESCRIBE so this cast is safe\n        res = factory.createProject(res, PV);\n    // 18.2.5.3\n    if (select.distinct)\n        res = factory.createDistinct(res);\n    // 18.2.5.4\n    if (select.reduced)\n        res = factory.createReduced(res);\n    // NEW: support for ask/construct/describe queries\n    if (query.queryType === 'CONSTRUCT')\n        res = factory.createConstruct(res, (query.template || []).map(translateQuad));\n    else if (query.queryType === 'ASK')\n        res = factory.createAsk(res);\n    else if (query.queryType === 'DESCRIBE')\n        res = factory.createDescribe(res, PV);\n    // Slicing needs to happen after construct/describe\n    // 18.2.5.5\n    if (select.offset || select.limit)\n        res = factory.createSlice(res, select.offset || 0, select.limit);\n    if (select.from)\n        res = factory.createFrom(res, select.from.default, select.from.named);\n    return res;\n}\n// rewrites some of the input sparql object to make use of aggregate variables\nfunction mapAggregate(thingy, aggregates) {\n    if ('type' in thingy && thingy.type === 'aggregate') {\n        let found = false;\n        let v;\n        for (let key of Object.keys(aggregates)) {\n            if (equal(aggregates[key], thingy)) {\n                v = factory.createTerm(key);\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            v = generateFreshVar();\n            aggregates[(0, rdf_string_1.termToString)(v)] = thingy;\n        }\n        return v;\n    }\n    // non-aggregate expression\n    if ('expression' in thingy && thingy.expression)\n        return { ...thingy, expression: mapAggregate(thingy.expression, aggregates) };\n    if ('args' in thingy && thingy.args)\n        return { ...thingy, args: thingy.args.map(subthingy => mapAggregate(subthingy, aggregates)) };\n    // Normal variable/wildcard\n    return thingy;\n}\nfunction translateBoundAggregate(thingy, v) {\n    if (thingy.type !== 'aggregate' || !thingy.aggregation)\n        throw new Error(`Unexpected input: ${JSON.stringify(thingy)}`);\n    const A = translateExpression(thingy);\n    A.variable = v;\n    return A;\n}\nfunction translateUpdate(thingy) {\n    if (thingy.updates.length === 1)\n        return translateSingleUpdate(thingy.updates[0]);\n    return factory.createCompositeUpdate(thingy.updates.map(translateSingleUpdate));\n}\nfunction translateSingleUpdate(thingy) {\n    if ('type' in thingy) {\n        if (thingy.type === 'load')\n            return translateUpdateGraphLoad(thingy);\n        if (thingy.type === 'clear' || thingy.type === 'create' || thingy.type === 'drop')\n            return translateUpdateGraph(thingy);\n        if (thingy.type === 'add' || thingy.type === 'copy' || thingy.type === 'move')\n            return translateUpdateGraphShortcut(thingy);\n    }\n    else if (thingy.updateType === 'insertdelete' || thingy.updateType === 'deletewhere' || thingy.updateType === 'delete' || thingy.updateType === 'insert')\n        return translateInsertDelete(thingy);\n    throw new Error(`Unknown update type ${JSON.stringify(thingy)}`);\n}\nfunction translateInsertDelete(thingy) {\n    if (!useQuads)\n        throw new Error('INSERT/DELETE operations are only supported with quads option enabled');\n    let deleteTriples = [];\n    let insertTriples = [];\n    let where;\n    if (thingy.delete)\n        deleteTriples = util_1.default.flatten(thingy.delete.map(input => translateUpdateTriplesBlock(input, thingy.graph)));\n    if (thingy.insert)\n        insertTriples = util_1.default.flatten(thingy.insert.map(input => translateUpdateTriplesBlock(input, thingy.graph)));\n    if (thingy.where && thingy.where.length > 0) {\n        where = translateGraphPattern({ type: 'group', patterns: thingy.where });\n        // Wrong typings, see test \"using\" in Sparql.js\n        const use = thingy.using;\n        if (use)\n            where = factory.createFrom(where, use.default, use.named);\n        else if (thingy.graph)\n            // This is equivalent\n            where = recurseGraph(where, thingy.graph);\n    }\n    else if (thingy.updateType === 'deletewhere' && deleteTriples.length > 0) {\n        where = factory.createBgp(deleteTriples);\n    }\n    return factory.createDeleteInsert(deleteTriples.length > 0 ? deleteTriples : undefined, insertTriples.length > 0 ? insertTriples : undefined, where);\n}\n// UPDATE parsing will always return quads and have no GRAPH elements\nfunction translateUpdateTriplesBlock(thingy, graph) {\n    let currentGraph = graph;\n    if (thingy.type === 'graph')\n        currentGraph = thingy.name;\n    let currentTriples = thingy.triples;\n    if (currentGraph)\n        currentTriples = currentTriples.map(triple => Object.assign(triple, { graph: currentGraph }));\n    return currentTriples.map(translateQuad);\n}\nfunction translateUpdateGraph(thingy) {\n    let source;\n    if (util_1.default.isSimpleTerm(thingy.graph))\n        source = thingy.graph;\n    else if (thingy.graph.all)\n        source = 'ALL';\n    else if (thingy.graph.default)\n        source = 'DEFAULT';\n    else if (thingy.graph.named)\n        source = 'NAMED';\n    else\n        source = thingy.graph.name;\n    switch (thingy.type) {\n        case 'clear': return factory.createClear(source, thingy.silent);\n        case 'create': return factory.createCreate(source, thingy.silent);\n        case 'drop': return factory.createDrop(source, thingy.silent);\n    }\n}\nfunction translateUpdateGraphLoad(thingy) {\n    return factory.createLoad(thingy.source, thingy.destination, thingy.silent);\n}\nfunction translateUpdateGraphShortcut(thingy) {\n    const source = thingy.source.default ? 'DEFAULT' : thingy.source.name;\n    const destination = thingy.destination.default ? 'DEFAULT' : thingy.destination.name;\n    switch (thingy.type) {\n        case 'copy': return factory.createCopy(source, destination, thingy.silent);\n        case 'move': return factory.createMove(source, destination, thingy.silent);\n        case 'add': return factory.createAdd(source, destination, thingy.silent);\n    }\n}\nfunction translateBlankNodesToVariables(res) {\n    const blankToVariableMapping = {};\n    const variablesRaw = Array.from(variables).reduce((acc, variable) => {\n        acc[variable] = true;\n        return acc;\n    }, {});\n    return util_1.default.mapOperation(res, {\n        [Algebra.types.DELETE_INSERT]: (op) => {\n            // Make sure blank nodes remain in the INSERT block, but do update the WHERE block\n            return {\n                result: factory.createDeleteInsert(op.delete, op.insert, op.where && translateBlankNodesToVariables(op.where)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.PATH]: (op, factory) => {\n            return {\n                result: factory.createPath(blankToVariable(op.subject), op.predicate, blankToVariable(op.object), blankToVariable(op.graph)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.PATTERN]: (op, factory) => {\n            return {\n                result: factory.createPattern(blankToVariable(op.subject), blankToVariable(op.predicate), blankToVariable(op.object), blankToVariable(op.graph)),\n                recurse: false,\n            };\n        },\n        [Algebra.types.CONSTRUCT]: (op) => {\n            // Blank nodes in CONSTRUCT templates must be maintained\n            return {\n                result: factory.createConstruct(translateBlankNodesToVariables(op.input), op.template),\n                recurse: false,\n            };\n        },\n    });\n    function blankToVariable(term) {\n        if (term.termType === 'BlankNode') {\n            let variable = blankToVariableMapping[term.value];\n            if (!variable) {\n                variable = util_1.default.createUniqueVariable(term.value, variablesRaw, factory.dataFactory);\n                variablesRaw[variable.value] = true;\n                blankToVariableMapping[term.value] = variable;\n            }\n            return variable;\n        }\n        return term;\n    }\n}\n//# sourceMappingURL=sparqlAlgebra.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst algebra_1 = require(\"./algebra\");\nconst factory_1 = __importDefault(require(\"./factory\"));\nconst rdf_terms_1 = require(\"rdf-terms\");\nclass Util {\n    /**\n     * Flattens an array of arrays to an array.\n     * @param arr - Array of arrays\n     */\n    static flatten(arr) {\n        return Array.prototype.concat(...arr).filter(x => x);\n    }\n    /**\n     * Outputs a JSON object corresponding to the input algebra-like.\n     */\n    static objectify(algebra) {\n        if (algebra.termType) {\n            if (algebra.termType === 'Quad') {\n                return {\n                    type: 'pattern',\n                    termType: 'Quad',\n                    subject: Util.objectify(algebra.subject),\n                    predicate: Util.objectify(algebra.predicate),\n                    object: Util.objectify(algebra.object),\n                    graph: Util.objectify(algebra.graph),\n                };\n            }\n            else {\n                let result = { termType: algebra.termType, value: algebra.value };\n                if (algebra.language)\n                    result.language = algebra.language;\n                if (algebra.datatype)\n                    result.datatype = Util.objectify(algebra.datatype);\n                return result;\n            }\n        }\n        if (Array.isArray(algebra))\n            return algebra.map(e => Util.objectify(e));\n        if (algebra === Object(algebra)) {\n            let result = {};\n            for (let key of Object.keys(algebra))\n                result[key] = Util.objectify(algebra[key]);\n            return result;\n        }\n        return algebra;\n    }\n    /**\n     * Detects all in-scope variables.\n     * In practice this means iterating through the entire algebra tree, finding all variables,\n     * and stopping when a project function is found.\n     * @param {Operation} op - Input algebra tree.\n     * @returns {Variable[]} - List of unique in-scope variables.\n     */\n    static inScopeVariables(op) {\n        const variables = [];\n        function addVariable(v) {\n            if (!variables.find(v2 => v.value === v2.value))\n                variables.push(v);\n        }\n        function recurseTerm(quad) {\n            if (quad.subject.termType === 'Variable')\n                addVariable(quad.subject);\n            if (quad.predicate.termType === 'Variable')\n                addVariable(quad.predicate);\n            if (quad.object.termType === 'Variable')\n                addVariable(quad.object);\n            if (quad.graph.termType === 'Variable')\n                addVariable(quad.graph);\n            if (quad.subject.termType === 'Quad')\n                recurseTerm(quad.subject);\n            if (quad.predicate.termType === 'Quad')\n                recurseTerm(quad.predicate);\n            if (quad.object.termType === 'Quad')\n                recurseTerm(quad.object);\n            if (quad.graph.termType === 'Quad')\n                recurseTerm(quad.graph);\n        }\n        // https://www.w3.org/TR/sparql11-query/#variableScope\n        Util.recurseOperation(op, {\n            [algebra_1.types.EXPRESSION]: (op) => {\n                if (op.expressionType === algebra_1.expressionTypes.AGGREGATE && op.variable) {\n                    addVariable(op.variable);\n                }\n                return true;\n            },\n            [algebra_1.types.EXTEND]: (op) => {\n                addVariable(op.variable);\n                return true;\n            },\n            [algebra_1.types.GRAPH]: (op) => {\n                if (op.name.termType === 'Variable')\n                    addVariable(op.name);\n                return true;\n            },\n            [algebra_1.types.GROUP]: (op) => {\n                op.variables.forEach(addVariable);\n                return true;\n            },\n            [algebra_1.types.PATH]: (op) => {\n                if (op.subject.termType === 'Variable')\n                    addVariable(op.subject);\n                if (op.object.termType === 'Variable')\n                    addVariable(op.object);\n                if (op.graph.termType === 'Variable')\n                    addVariable(op.graph);\n                if (op.subject.termType === 'Quad')\n                    recurseTerm(op.subject);\n                if (op.object.termType === 'Quad')\n                    recurseTerm(op.object);\n                if (op.graph.termType === 'Quad')\n                    recurseTerm(op.graph);\n                return true;\n            },\n            [algebra_1.types.PATTERN]: (op) => {\n                recurseTerm(op);\n                return true;\n            },\n            [algebra_1.types.PROJECT]: (op) => {\n                op.variables.forEach(addVariable);\n                return false;\n            },\n            [algebra_1.types.SERVICE]: (op) => {\n                if (op.name.termType === 'Variable')\n                    addVariable(op.name);\n                return true;\n            },\n            [algebra_1.types.VALUES]: (op) => {\n                op.variables.forEach(addVariable);\n                return true;\n            },\n        });\n        return variables;\n    }\n    /**\n     * Recurses through the given algebra tree\n     * A map of callback functions can be provided for individual Operation types to gather data.\n     * The return value of those callbacks should indicate whether recursion should be applied or not.\n     * Making modifications will change the original input object.\n     * @param {Operation} op - The Operation to recurse on.\n     * @param { [type: string]: (op: Operation) => boolean } callbacks - A map of required callback Operations.\n     */\n    static recurseOperation(op, callbacks) {\n        let result = op;\n        let doRecursion = true;\n        const callback = callbacks[op.type];\n        if (callback)\n            // Not sure how to get typing correct for op here\n            doRecursion = callback(op);\n        if (!doRecursion)\n            return;\n        let recurseOp = (op) => Util.recurseOperation(op, callbacks);\n        switch (result.type) {\n            case algebra_1.types.ALT:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.ASK:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.BGP:\n                result.patterns.forEach(recurseOp);\n                break;\n            case algebra_1.types.CONSTRUCT:\n                recurseOp(result.input);\n                result.template.map(recurseOp);\n                break;\n            case algebra_1.types.DESCRIBE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.DISTINCT:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.EXPRESSION:\n                if (result.expressionType === algebra_1.expressionTypes.EXISTENCE) {\n                    recurseOp(result.input);\n                }\n                break;\n            case algebra_1.types.EXTEND:\n                recurseOp(result.input);\n                recurseOp(result.expression);\n                break;\n            case algebra_1.types.FILTER:\n                recurseOp(result.input);\n                recurseOp(result.expression);\n                break;\n            case algebra_1.types.FROM:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.GRAPH:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.GROUP:\n                recurseOp(result.input);\n                result.aggregates.forEach(recurseOp);\n                break;\n            case algebra_1.types.INV:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.JOIN:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.LEFT_JOIN:\n                result.input.map(recurseOp);\n                if (result.expression)\n                    recurseOp(result.expression);\n                break;\n            case algebra_1.types.LINK:\n                break;\n            case algebra_1.types.MINUS:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.NOP:\n                break;\n            case algebra_1.types.NPS:\n                break;\n            case algebra_1.types.ONE_OR_MORE_PATH:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.ORDER_BY:\n                recurseOp(result.input);\n                result.expressions.forEach(recurseOp);\n                break;\n            case algebra_1.types.PATH:\n                recurseOp(result.predicate);\n                break;\n            case algebra_1.types.PATTERN:\n                break;\n            case algebra_1.types.PROJECT:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.REDUCED:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.SEQ:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.SERVICE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.SLICE:\n                recurseOp(result.input);\n                break;\n            case algebra_1.types.UNION:\n                result.input.map(recurseOp);\n                break;\n            case algebra_1.types.VALUES:\n                break;\n            case algebra_1.types.ZERO_OR_MORE_PATH:\n                recurseOp(result.path);\n                break;\n            case algebra_1.types.ZERO_OR_ONE_PATH:\n                recurseOp(result.path);\n                break;\n            // UPDATE operations\n            case algebra_1.types.COMPOSITE_UPDATE:\n                result.updates.forEach(update => recurseOp(update));\n                break;\n            case algebra_1.types.DELETE_INSERT:\n                if (result.delete)\n                    result.delete.forEach(pattern => recurseOp(pattern));\n                if (result.insert)\n                    result.insert.forEach(pattern => recurseOp(pattern));\n                if (result.where)\n                    recurseOp(result.where);\n                break;\n            // all of these only have graph IDs as values\n            case algebra_1.types.LOAD: break;\n            case algebra_1.types.CLEAR: break;\n            case algebra_1.types.CREATE: break;\n            case algebra_1.types.DROP: break;\n            case algebra_1.types.ADD: break;\n            case algebra_1.types.MOVE: break;\n            case algebra_1.types.COPY: break;\n            default: throw new Error(`Unknown Operation type ${result.type}`);\n        }\n    }\n    /**\n     * Creates a deep copy of the given Operation.\n     * Creates shallow copies of the non-Operation values.\n     * A map of callback functions can be provided for individual Operation types\n     * to specifically modify the given objects before triggering recursion.\n     * The return value of those callbacks should indicate whether recursion should be applied to this returned object or not.\n     * @param {Operation} op - The Operation to recurse on.\n     * @param callbacks - A map of required callback Operations.\n     * @param {Factory} factory - Factory used to create new Operations. Will use default factory if none is provided.\n     * @returns {Operation} - The copied result.\n     */\n    static mapOperation(op, callbacks, factory) {\n        let result = op;\n        let doRecursion = true;\n        let copyMetadata = true;\n        factory = factory || new factory_1.default();\n        const callback = callbacks[op.type];\n        if (callback) {\n            // Not sure how to get typing correct for op here\n            const recurseResult = callback(op, factory);\n            result = recurseResult.result;\n            doRecursion = recurseResult.recurse;\n            copyMetadata = recurseResult.copyMetadata !== false;\n        }\n        let toCopyMetadata;\n        if (copyMetadata && (result.metadata || op.metadata)) {\n            toCopyMetadata = { ...result.metadata, ...op.metadata };\n        }\n        if (!doRecursion) {\n            // Inherit metadata\n            if (toCopyMetadata) {\n                result.metadata = toCopyMetadata;\n            }\n            return result;\n        }\n        let mapOp = (op) => Util.mapOperation(op, callbacks, factory);\n        // Several casts here might be wrong though depending on the callbacks output\n        switch (result.type) {\n            case algebra_1.types.ALT:\n                result = factory.createAlt(result.input.map(mapOp));\n                break;\n            case algebra_1.types.ASK:\n                result = factory.createAsk(mapOp(result.input));\n                break;\n            case algebra_1.types.BGP:\n                result = factory.createBgp(result.patterns.map(mapOp));\n                break;\n            case algebra_1.types.CONSTRUCT:\n                result = factory.createConstruct(mapOp(result.input), result.template.map(mapOp));\n                break;\n            case algebra_1.types.DESCRIBE:\n                result = factory.createDescribe(mapOp(result.input), result.terms);\n                break;\n            case algebra_1.types.DISTINCT:\n                result = factory.createDistinct(mapOp(result.input));\n                break;\n            case algebra_1.types.EXPRESSION:\n                result = Util.mapExpression(result, callbacks, factory);\n                break;\n            case algebra_1.types.EXTEND:\n                result = factory.createExtend(mapOp(result.input), result.variable, mapOp(result.expression));\n                break;\n            case algebra_1.types.FILTER:\n                result = factory.createFilter(mapOp(result.input), mapOp(result.expression));\n                break;\n            case algebra_1.types.FROM:\n                result = factory.createFrom(mapOp(result.input), [...result.default], [...result.named]);\n                break;\n            case algebra_1.types.GRAPH:\n                result = factory.createGraph(mapOp(result.input), result.name);\n                break;\n            case algebra_1.types.GROUP:\n                result = factory.createGroup(mapOp(result.input), [].concat(result.variables), result.aggregates.map(mapOp));\n                break;\n            case algebra_1.types.INV:\n                result = factory.createInv(mapOp(result.path));\n                break;\n            case algebra_1.types.JOIN:\n                result = factory.createJoin(result.input.map(mapOp));\n                break;\n            case algebra_1.types.LEFT_JOIN:\n                result = factory.createLeftJoin(mapOp(result.input[0]), mapOp(result.input[1]), result.expression ? mapOp(result.expression) : undefined);\n                break;\n            case algebra_1.types.LINK:\n                result = factory.createLink(result.iri);\n                break;\n            case algebra_1.types.MINUS:\n                result = factory.createMinus(mapOp(result.input[0]), mapOp(result.input[1]));\n                break;\n            case algebra_1.types.NOP:\n                result = factory.createNop();\n                break;\n            case algebra_1.types.NPS:\n                result = factory.createNps([].concat(result.iris));\n                break;\n            case algebra_1.types.ONE_OR_MORE_PATH:\n                result = factory.createOneOrMorePath(mapOp(result.path));\n                break;\n            case algebra_1.types.ORDER_BY:\n                result = factory.createOrderBy(mapOp(result.input), result.expressions.map(mapOp));\n                break;\n            case algebra_1.types.PATH:\n                result = factory.createPath(result.subject, mapOp(result.predicate), result.object, result.graph);\n                break;\n            case algebra_1.types.PATTERN:\n                result = factory.createPattern(result.subject, result.predicate, result.object, result.graph);\n                break;\n            case algebra_1.types.PROJECT:\n                result = factory.createProject(mapOp(result.input), [...result.variables]);\n                break;\n            case algebra_1.types.REDUCED:\n                result = factory.createReduced(mapOp(result.input));\n                break;\n            case algebra_1.types.SEQ:\n                result = factory.createSeq(result.input.map(mapOp));\n                break;\n            case algebra_1.types.SERVICE:\n                result = factory.createService(mapOp(result.input), result.name, result.silent);\n                break;\n            case algebra_1.types.SLICE:\n                result = factory.createSlice(mapOp(result.input), result.start, result.length);\n                break;\n            case algebra_1.types.UNION:\n                result = factory.createUnion(result.input.map(mapOp));\n                break;\n            case algebra_1.types.VALUES:\n                result = factory.createValues([].concat(result.variables), result.bindings.map(b => Object.assign({}, b)));\n                break;\n            case algebra_1.types.ZERO_OR_MORE_PATH:\n                result = factory.createZeroOrMorePath(mapOp(result.path));\n                break;\n            case algebra_1.types.ZERO_OR_ONE_PATH:\n                result = factory.createZeroOrOnePath(mapOp(result.path));\n                break;\n            // UPDATE operations\n            case algebra_1.types.COMPOSITE_UPDATE:\n                result = factory.createCompositeUpdate(result.updates.map(mapOp));\n                break;\n            case algebra_1.types.DELETE_INSERT:\n                result = factory.createDeleteInsert(result.delete ? result.delete.map(mapOp) : undefined, result.insert ? result.insert.map(mapOp) : undefined, result.where ? mapOp(result.where) : undefined);\n                break;\n            case algebra_1.types.LOAD:\n                result = factory.createLoad(result.source, result.destination, result.silent);\n                break;\n            case algebra_1.types.CLEAR:\n                result = factory.createClear(result.source, result.silent);\n                break;\n            case algebra_1.types.CREATE:\n                result = factory.createCreate(result.source, result.silent);\n                break;\n            case algebra_1.types.DROP:\n                result = factory.createDrop(result.source, result.silent);\n                break;\n            case algebra_1.types.ADD:\n                result = factory.createAdd(result.source, result.destination);\n                break;\n            case algebra_1.types.MOVE:\n                result = factory.createMove(result.source, result.destination);\n                break;\n            case algebra_1.types.COPY:\n                result = factory.createCopy(result.source, result.destination);\n                break;\n            default: throw new Error(`Unknown Operation type ${result.type}`);\n        }\n        // Inherit metadata\n        if (toCopyMetadata) {\n            result.metadata = toCopyMetadata;\n        }\n        return result;\n    }\n    /**\n     * Similar to the {@link mapOperation} function but specifically for expressions.\n     * Both functions call each other while copying.\n     * Should not be called directly since it does not execute the callbacks, these happen in {@link mapOperation}.\n     * @param {Expression} expr - The Operation to recurse on.\n     * @param callbacks - A map of required callback Operations.\n     * @param {Factory} factory - Factory used to create new Operations. Will use default factory if none is provided.\n     * @returns {Operation} - The copied result.\n     */\n    static mapExpression(expr, callbacks, factory) {\n        let result = expr;\n        let doRecursion = true;\n        factory = factory || new factory_1.default();\n        const callback = callbacks[expr.expressionType];\n        if (callback)\n            ({ result, recurse: doRecursion } = callback(expr, factory));\n        if (!doRecursion)\n            return result;\n        let mapOp = (op) => Util.mapOperation(op, callbacks, factory);\n        switch (expr.expressionType) {\n            case algebra_1.expressionTypes.AGGREGATE:\n                if (expr.variable) {\n                    return factory.createBoundAggregate(expr.variable, expr.aggregator, mapOp(expr.expression), expr.distinct, expr.separator);\n                }\n                return factory.createAggregateExpression(expr.aggregator, mapOp(expr.expression), expr.distinct, expr.separator);\n            case algebra_1.expressionTypes.EXISTENCE:\n                return factory.createExistenceExpression(expr.not, mapOp(expr.input));\n            case algebra_1.expressionTypes.NAMED:\n                return factory.createNamedExpression(expr.name, expr.args.map(mapOp));\n            case algebra_1.expressionTypes.OPERATOR:\n                return factory.createOperatorExpression(expr.operator, expr.args.map(mapOp));\n            case algebra_1.expressionTypes.TERM:\n                return factory.createTermExpression(expr.term);\n            case algebra_1.expressionTypes.WILDCARD:\n                return factory.createWildcardExpression();\n            default: throw new Error(`Unknown Expression type ${expr.expressionType}`);\n        }\n    }\n    /**\n     * Creates a deep clone of the operation.\n     * This is syntactic sugar for calling {@link mapOperation} without callbacks.\n     * @param {Operation} op - The operation to copy.\n     * @returns {Operation} - The deep copy.\n     */\n    static cloneOperation(op) {\n        return Util.mapOperation(op, {});\n    }\n    /**\n     * Creates a deep clone of the expression.\n     * This is syntactic sugar for calling {@link mapExpression} without callbacks.\n     * @param {Expression} expr - The operation to copy.\n     * @returns {Expression} - The deep copy.\n     */\n    static cloneExpression(expr) {\n        return Util.mapExpression(expr, {});\n    }\n    static createUniqueVariable(label, variables, dataFactory) {\n        let counter = 0;\n        let labelLoop = label;\n        while (variables[labelLoop]) {\n            labelLoop = `${label}${counter++}`;\n        }\n        return dataFactory.variable(labelLoop);\n    }\n    // separate terms from wildcard since we handle them differently\n    static isSimpleTerm(term) {\n        return term.termType !== undefined && term.termType !== 'Quad' && term.termType !== 'Wildcard';\n    }\n    static isQuad(term) {\n        return term.termType === 'Quad';\n    }\n    static hasQuadVariables(quad) {\n        return (0, rdf_terms_1.someTermsNested)(quad, term => term.termType === 'Variable');\n    }\n    static isWildcard(term) {\n        return term.termType === 'Wildcard';\n    }\n}\nexports.default = Util;\n//# sourceMappingURL=util.js.map","\"use strict\";\n/**\n * An asynchronous iterator library for advanced object pipelines\n * @module asynciterator\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIterator = exports.isIterable = exports.isSourceExpression = exports.isPromise = exports.isEventEmitter = exports.isFunction = exports.range = exports.union = exports.fromIterable = exports.fromIterator = exports.fromArray = exports.single = exports.empty = exports.wrap = exports.WrappingIterator = exports.ClonedIterator = exports.UnionIterator = exports.MultiTransformIterator = exports.SimpleTransformIterator = exports.TransformIterator = exports.BufferedIterator = exports.MappingIterator = exports.DESTINATION = exports.identity = exports.IntegerIterator = exports.ArrayIterator = exports.SingletonIterator = exports.EmptyIterator = exports.AsyncIterator = exports.DESTROYED = exports.ENDED = exports.CLOSED = exports.CLOSING = exports.OPEN = exports.INIT = exports.setTaskScheduler = exports.getTaskScheduler = exports.scheduleTask = exports.LinkedList = void 0;\nconst events_1 = require(\"events\");\nconst linkedlist_1 = require(\"./linkedlist.js\");\nObject.defineProperty(exports, \"LinkedList\", { enumerable: true, get: function () { return linkedlist_1.LinkedList; } });\nconst taskscheduler_1 = require(\"./taskscheduler.js\");\nlet taskScheduler = taskscheduler_1.createTaskScheduler();\n/** Schedules the given task for asynchronous execution. */\nfunction scheduleTask(task) {\n    taskScheduler(task);\n}\nexports.scheduleTask = scheduleTask;\n/** Returns the asynchronous task scheduler. */\nfunction getTaskScheduler() {\n    return taskScheduler;\n}\nexports.getTaskScheduler = getTaskScheduler;\n/** Sets the asynchronous task scheduler. */\nfunction setTaskScheduler(scheduler) {\n    taskScheduler = scheduler;\n}\nexports.setTaskScheduler = setTaskScheduler;\n/**\n  ID of the INIT state.\n  An iterator is initializing if it is preparing main item generation.\n  It can already produce items.\n  @type integer\n*/\nexports.INIT = 1 << 0;\n/**\n  ID of the OPEN state.\n  An iterator is open if it can generate new items.\n  @type integer\n*/\nexports.OPEN = 1 << 1;\n/**\n  ID of the CLOSING state.\n  An iterator is closing if item generation is pending but will not be scheduled again.\n  @type integer\n*/\nexports.CLOSING = 1 << 2;\n/**\n  ID of the CLOSED state.\n  An iterator is closed if it no longer actively generates new items.\n  Items might still be available.\n  @type integer\n*/\nexports.CLOSED = 1 << 3;\n/**\n  ID of the ENDED state.\n  An iterator has ended if no further items will become available.\n  The 'end' event is guaranteed to have been called when in this state.\n  @type integer\n*/\nexports.ENDED = 1 << 4;\n/**\n  ID of the DESTROYED state.\n  An iterator has been destroyed\n  after calling {@link module:asynciterator.AsyncIterator#destroy}.\n  The 'end' event has not been called, as pending elements were voided.\n  @type integer\n*/\nexports.DESTROYED = 1 << 5;\n/**\n  An asynchronous iterator provides pull-based access to a stream of objects.\n  @extends module:asynciterator.EventEmitter\n*/\nclass AsyncIterator extends events_1.EventEmitter {\n    /** Creates a new `AsyncIterator`. */\n    constructor(initialState = exports.OPEN) {\n        super();\n        this._readable = false;\n        this._state = initialState;\n        this.on('newListener', waitForDataListener);\n    }\n    /**\n      Changes the iterator to the given state if possible and necessary,\n      possibly emitting events to signal that change.\n      @protected\n      @param {integer} newState The ID of the new state\n      @param {boolean} [eventAsync=false] Whether resulting events should be emitted asynchronously\n      @returns {boolean} Whether the state was changed\n      @emits module:asynciterator.AsyncIterator.end\n    */\n    _changeState(newState, eventAsync = false) {\n        // Validate the state change\n        const valid = newState > this._state && this._state < exports.ENDED;\n        if (valid) {\n            this._state = newState;\n            // Emit the `end` event when changing to ENDED\n            if (newState === exports.ENDED) {\n                if (!eventAsync)\n                    this.emit('end');\n                else\n                    taskScheduler(() => this.emit('end'));\n            }\n        }\n        return valid;\n    }\n    /**\n      Tries to read the next item from the iterator.\n      This is the main method for reading the iterator in _on-demand mode_,\n      where new items are only created when needed by consumers.\n      If no items are currently available, this methods returns `null`.\n      The {@link module:asynciterator.event:readable} event\n      will then signal when new items might be ready.\n      To read all items from the iterator,\n      switch to _flow mode_ by subscribing\n      to the {@link module:asynciterator.event:data} event.\n      When in flow mode, do not use the `read` method.\n      @returns {object?} The next item, or `null` if none is available\n    */\n    read() {\n        return null;\n    }\n    /**\n      The iterator emits a `readable` event when it might have new items available\n      after having had no items available right before this event.\n      If the iterator is not in flow mode, items can be retrieved\n      by calling {@link module:asynciterator.AsyncIterator#read}.\n      @event module:asynciterator.readable\n    */\n    /**\n      The iterator emits a `data` event with a new item as soon as it becomes available.\n      When one or more listeners are attached to the `data` event,\n      the iterator switches to _flow mode_,\n      generating and emitting new items as fast as possible.\n      This drains the source and might create backpressure on the consumers,\n      so only subscribe to this event if this behavior is intended.\n      In flow mode, don't use {@link module:asynciterator.AsyncIterator#read}.\n      To switch back to _on-demand mode_, remove all listeners from the `data` event.\n      You can then obtain items through `read` again.\n      @event module:asynciterator.data\n      @param {object} item The new item\n    */\n    /**\n      Invokes the callback for each remaining item in the iterator.\n      Switches the iterator to flow mode.\n      @param {Function} callback A function that will be called with each item\n      @param {object?} self The `this` pointer for the callback\n    */\n    forEach(callback, self) {\n        this.on('data', bind(callback, self));\n    }\n    /**\n      Stops the iterator from generating new items.\n      Already generated items or terminating items can still be emitted.\n      After this, the iterator will end asynchronously.\n      @emits module:asynciterator.AsyncIterator.end\n    */\n    close() {\n        if (this._changeState(exports.CLOSED))\n            this._endAsync();\n    }\n    /**\n      Destroy the iterator and stop it from generating new items.\n      This will not do anything if the iterator was already ended or destroyed.\n      All internal resources will be released an no new items will be emitted,\n      even not already generated items.\n      Implementors should not override this method,\n      but instead implement {@link module:asynciterator.AsyncIterator#_destroy}.\n      @param {Error} [cause] An optional error to emit.\n      @emits module:asynciterator.AsyncIterator.end\n      @emits module:asynciterator.AsyncIterator.error Only if an error is passed.\n    */\n    destroy(cause) {\n        if (!this.done) {\n            this._destroy(cause, error => {\n                cause = cause || error;\n                if (cause)\n                    this.emit('error', cause);\n                this._end(true);\n            });\n        }\n    }\n    /**\n      Called by {@link module:asynciterator.AsyncIterator#destroy}.\n      Implementers can override this, but this should not be called directly.\n      @param {?Error} cause The reason why the iterator is destroyed.\n      @param {Function} callback A callback function with an optional error argument.\n    */\n    _destroy(cause, callback) {\n        callback();\n    }\n    /**\n      Ends the iterator and cleans up.\n      Should never be called before {@link module:asynciterator.AsyncIterator#close};\n      typically, `close` is responsible for calling `_end`.\n      @param {boolean} [destroy] If the iterator should be forcefully destroyed.\n      @protected\n      @emits module:asynciterator.AsyncIterator.end\n    */\n    _end(destroy = false) {\n        if (this._changeState(destroy ? exports.DESTROYED : exports.ENDED)) {\n            this._readable = false;\n            this.removeAllListeners('readable');\n            this.removeAllListeners('data');\n            this.removeAllListeners('end');\n        }\n    }\n    /**\n      Asynchronously calls `_end`.\n      @protected\n    */\n    _endAsync() {\n        taskScheduler(() => this._end());\n    }\n    /**\n      The `end` event is emitted after the last item of the iterator has been read.\n      @event module:asynciterator.end\n    */\n    /**\n      Gets or sets whether this iterator might have items available for read.\n      A value of `false` means there are _definitely_ no items available;\n      a value of `true` means items _might_ be available.\n      @type boolean\n      @emits module:asynciterator.AsyncIterator.readable\n    */\n    get readable() {\n        return this._readable;\n    }\n    set readable(readable) {\n        readable = Boolean(readable) && !this.done;\n        // Set the readable value only if it has changed\n        if (this._readable !== readable) {\n            this._readable = readable;\n            // If the iterator became readable, emit the `readable` event\n            if (readable)\n                taskScheduler(() => this.emit('readable'));\n        }\n    }\n    /**\n      Gets whether the iterator has stopped generating new items.\n      @type boolean\n      @readonly\n    */\n    get closed() {\n        return this._state >= exports.CLOSING;\n    }\n    /**\n      Gets whether the iterator has finished emitting items.\n      @type boolean\n      @readonly\n    */\n    get ended() {\n        return this._state === exports.ENDED;\n    }\n    /**\n      Gets whether the iterator has been destroyed.\n      @type boolean\n      @readonly\n    */\n    get destroyed() {\n        return this._state === exports.DESTROYED;\n    }\n    /**\n      Gets whether the iterator will not emit anymore items,\n      either due to being closed or due to being destroyed.\n      @type boolean\n      @readonly\n    */\n    get done() {\n        return this._state >= exports.ENDED;\n    }\n    /* Generates a textual representation of the iterator. */\n    toString() {\n        const details = this._toStringDetails();\n        return `[${this.constructor.name}${details ? ` ${details}` : ''}]`;\n    }\n    /**\n      Generates details for a textual representation of the iterator.\n      @protected\n    */\n    _toStringDetails() {\n        return '';\n    }\n    /**\n      Consume all remaining items of the iterator into an array that will be returned asynchronously.\n      @param {object} [options] Settings for array creation\n      @param {integer} [options.limit] The maximum number of items to place in the array.\n     */\n    toArray(options) {\n        const items = [];\n        const limit = typeof (options === null || options === void 0 ? void 0 : options.limit) === 'number' ? options.limit : Infinity;\n        return this.ended || limit <= 0 ? Promise.resolve(items) : new Promise((resolve, reject) => {\n            // Collect and return all items up to the limit\n            const resolveItems = () => resolve(items);\n            const pushItem = (item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    this.removeListener('error', reject);\n                    this.removeListener('data', pushItem);\n                    this.removeListener('end', resolveItems);\n                    resolve(items);\n                }\n            };\n            // Start item collection\n            this.on('error', reject);\n            this.on('data', pushItem);\n            this.on('end', resolveItems);\n        });\n    }\n    /**\n      Retrieves the property with the given name from the iterator.\n      If no callback is passed, it returns the value of the property\n      or `undefined` if the property is not set.\n      If a callback is passed, it returns `undefined`\n      and calls the callback with the property the moment it is set.\n      @param {string} propertyName The name of the property to retrieve\n      @param {Function?} [callback] A one-argument callback to receive the property value\n      @returns {object?} The value of the property (if set and no callback is given)\n    */\n    getProperty(propertyName, callback) {\n        const properties = this._properties;\n        // If no callback was passed, return the property value\n        if (!callback)\n            return properties && properties[propertyName];\n        // If the value has been set, send it through the callback\n        if (properties && (propertyName in properties)) {\n            taskScheduler(() => callback(properties[propertyName]));\n        }\n        // If the value was not set, store the callback for when the value will be set\n        else {\n            let propertyCallbacks;\n            if (!(propertyCallbacks = this._propertyCallbacks))\n                this._propertyCallbacks = propertyCallbacks = Object.create(null);\n            if (propertyName in propertyCallbacks)\n                propertyCallbacks[propertyName].push(callback);\n            else\n                propertyCallbacks[propertyName] = [callback];\n        }\n        return undefined;\n    }\n    /**\n      Sets the property with the given name to the value.\n      @param {string} propertyName The name of the property to set\n      @param {object?} value The new value of the property\n    */\n    setProperty(propertyName, value) {\n        const properties = this._properties || (this._properties = Object.create(null));\n        properties[propertyName] = value;\n        // Execute getter callbacks that were waiting for this property to be set\n        const propertyCallbacks = this._propertyCallbacks || {};\n        const callbacks = propertyCallbacks[propertyName];\n        if (callbacks) {\n            delete propertyCallbacks[propertyName];\n            taskScheduler(() => {\n                for (const callback of callbacks)\n                    callback(value);\n            });\n            // Remove _propertyCallbacks if no pending callbacks are left\n            for (propertyName in propertyCallbacks)\n                return;\n            delete this._propertyCallbacks;\n        }\n    }\n    /**\n      Retrieves all properties of the iterator.\n      @returns {object} An object with property names as keys.\n    */\n    getProperties() {\n        const properties = this._properties;\n        const copy = {};\n        for (const name in properties)\n            copy[name] = properties[name];\n        return copy;\n    }\n    /**\n      Sets all of the given properties.\n      @param {object} properties Key/value pairs of properties to set\n    */\n    setProperties(properties) {\n        for (const propertyName in properties)\n            this.setProperty(propertyName, properties[propertyName]);\n    }\n    /**\n      Copies the given properties from the source iterator.\n      @param {module:asynciterator.AsyncIterator} source The iterator to copy from\n      @param {Array} propertyNames List of property names to copy\n    */\n    copyProperties(source, propertyNames) {\n        for (const propertyName of propertyNames) {\n            source.getProperty(propertyName, value => this.setProperty(propertyName, value));\n        }\n    }\n    /**\n      Transforms items from this iterator.\n      After this operation, only read the returned iterator instead of the current one.\n      @param {object|Function} [options] Settings of the iterator, or the transformation function\n      @param {integer} [options.maxbufferSize=4] The maximum number of items to keep in the buffer\n      @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n      @param {integer} [options.offset] The number of items to skip\n      @param {integer} [options.limit] The maximum number of items\n      @param {Function} [options.filter] A function to synchronously filter items from the source\n      @param {Function} [options.map] A function to synchronously transform items from the source\n      @param {Function} [options.transform] A function to asynchronously transform items from the source\n      @param {boolean} [options.optional=false] If transforming is optional, the original item is pushed when its mapping yields `null` or its transformation yields no items\n      @param {Array|module:asynciterator.AsyncIterator} [options.prepend] Items to insert before the source items\n      @param {Array|module:asynciterator.AsyncIterator} [options.append]  Items to insert after the source items\n      @returns {module:asynciterator.AsyncIterator} A new iterator that maps the items from this iterator\n    */\n    transform(options) {\n        return new SimpleTransformIterator(this, options);\n    }\n    /**\n      Maps items from this iterator using the given function.\n      After this operation, only read the returned iterator instead of the current one.\n      @param {Function} map A mapping function to call on this iterator's (remaining) items\n      @param {object?} self The `this` pointer for the mapping function\n      @returns {module:asynciterator.AsyncIterator} A new iterator that maps the items from this iterator\n    */\n    map(map, self) {\n        return new MappingIterator(this, bind(map, self));\n    }\n    filter(filter, self) {\n        return this.map(function (item) {\n            return filter.call(self || this, item) ? item : null;\n        });\n    }\n    /**\n     * Returns a new iterator containing all of the unique items in the original iterator.\n     * @param by - The derived value by which to determine uniqueness (e.g., stringification).\n                   Defaults to the identity function.\n     * @returns An iterator with duplicates filtered out.\n     */\n    uniq(by = identity) {\n        const uniques = new Set();\n        return this.filter(function (item) {\n            const hashed = by.call(this, item);\n            if (!uniques.has(hashed)) {\n                uniques.add(hashed);\n                return true;\n            }\n            return false;\n        });\n    }\n    /**\n      Prepends the items after those of the current iterator.\n      After this operation, only read the returned iterator instead of the current one.\n      @param {Array|module:asynciterator.AsyncIterator} items Items to insert before this iterator's (remaining) items\n      @returns {module:asynciterator.AsyncIterator} A new iterator that prepends items to this iterator\n    */\n    prepend(items) {\n        return this.transform({ prepend: items });\n    }\n    /**\n      Appends the items after those of the current iterator.\n      After this operation, only read the returned iterator instead of the current one.\n      @param {Array|module:asynciterator.AsyncIterator} items Items to insert after this iterator's (remaining) items\n      @returns {module:asynciterator.AsyncIterator} A new iterator that appends items to this iterator\n    */\n    append(items) {\n        return this.transform({ append: items });\n    }\n    /**\n      Surrounds items of the current iterator with the given items.\n      After this operation, only read the returned iterator instead of the current one.\n      @param {Array|module:asynciterator.AsyncIterator} prepend Items to insert before this iterator's (remaining) items\n      @param {Array|module:asynciterator.AsyncIterator} append Items to insert after this iterator's (remaining) items\n      @returns {module:asynciterator.AsyncIterator} A new iterator that appends and prepends items to this iterator\n    */\n    surround(prepend, append) {\n        return this.transform({ prepend, append });\n    }\n    /**\n      Skips the given number of items from the current iterator.\n      The current iterator may not be read anymore until the returned iterator ends.\n      @param {integer} offset The number of items to skip\n      @returns {module:asynciterator.AsyncIterator} A new iterator that skips the given number of items\n    */\n    skip(offset) {\n        return this.map(item => offset-- > 0 ? null : item);\n    }\n    /**\n      Limits the current iterator to the given number of items.\n      The current iterator may not be read anymore until the returned iterator ends.\n      @param {integer} limit The maximum number of items\n      @returns {module:asynciterator.AsyncIterator} A new iterator with at most the given number of items\n    */\n    take(limit) {\n        return this.transform({ limit });\n    }\n    /**\n      Limits the current iterator to the given range.\n      The current iterator may not be read anymore until the returned iterator ends.\n      @param {integer} start Index of the first item to return\n      @param {integer} end Index of the last item to return\n      @returns {module:asynciterator.AsyncIterator} A new iterator with items in the given range\n    */\n    range(start, end) {\n        return this.transform({ offset: start, limit: Math.max(end - start + 1, 0) });\n    }\n    /**\n      Creates a copy of the current iterator,\n      containing all items emitted from this point onward.\n      Further copies can be created; they will all start from this same point.\n      After this operation, only read the returned copies instead of the original iterator.\n      @returns {module:asynciterator.AsyncIterator} A new iterator that contains all future items of this iterator\n    */\n    clone() {\n        return new ClonedIterator(this);\n    }\n    /**\n     * An AsyncIterator is async iterable.\n     * This allows iterators to be used via the for-await syntax.\n     *\n     * In cases where the returned EcmaScript AsyncIterator will not be fully consumed,\n     * it is recommended to manually listen for error events on the main AsyncIterator\n     * to avoid uncaught error messages.\n     *\n     * @returns {ESAsyncIterator<T>} An EcmaScript AsyncIterator\n     */\n    [Symbol.asyncIterator]() {\n        const it = this;\n        let currentResolve = null;\n        let currentReject = null;\n        let pendingError = null;\n        it.addListener('readable', tryResolve);\n        it.addListener('end', tryResolve);\n        it.addListener('error', tryReject);\n        // Tries to emit an item or signal the end of the iterator\n        function tryResolve() {\n            if (currentResolve !== null) {\n                if (pendingError !== null) {\n                    tryReject(pendingError);\n                }\n                else if (it.done) {\n                    currentResolve({ done: true, value: undefined });\n                    currentResolve = currentReject = null;\n                    removeListeners();\n                }\n                else {\n                    const value = it.read();\n                    if (value !== null) {\n                        currentResolve({ done: false, value });\n                        currentResolve = currentReject = null;\n                    }\n                }\n            }\n        }\n        // Tries to emit an error\n        function tryReject(error) {\n            if (currentReject !== null) {\n                currentReject(error);\n                currentResolve = currentReject = pendingError = null;\n                removeListeners();\n            }\n            else if (pendingError === null) {\n                pendingError = error;\n            }\n        }\n        // Cleans up all attached listeners\n        function removeListeners() {\n            it.removeListener('readable', tryResolve);\n            it.removeListener('end', tryResolve);\n            it.removeListener('error', tryReject);\n        }\n        // An EcmaScript AsyncIterator exposes the next() function that can be invoked repeatedly\n        return {\n            next() {\n                return new Promise((resolve, reject) => {\n                    currentResolve = resolve;\n                    currentReject = reject;\n                    tryResolve();\n                });\n            },\n        };\n    }\n}\nexports.AsyncIterator = AsyncIterator;\n// Starts emitting `data` events when `data` listeners are added\nfunction waitForDataListener(eventName) {\n    if (eventName === 'data') {\n        this.removeListener('newListener', waitForDataListener);\n        addSingleListener(this, 'readable', emitData);\n        if (this.readable)\n            taskScheduler(() => emitData.call(this));\n    }\n}\n// Emits new items though `data` events as long as there are `data` listeners\nfunction emitData() {\n    // While there are `data` listeners and items, emit them\n    let item;\n    while (this.listenerCount('data') !== 0 && (item = this.read()) !== null)\n        this.emit('data', item);\n    // Stop draining the source if there are no more `data` listeners\n    if (this.listenerCount('data') === 0 && !this.done) {\n        this.removeListener('readable', emitData);\n        addSingleListener(this, 'newListener', waitForDataListener);\n    }\n}\n// Adds the listener to the event, if it has not been added previously.\nfunction addSingleListener(source, eventName, listener) {\n    if (!source.listeners(eventName).includes(listener))\n        source.on(eventName, listener);\n}\n/**\n  An iterator that doesn't emit any items.\n  @extends module:asynciterator.AsyncIterator\n*/\nclass EmptyIterator extends AsyncIterator {\n    /** Creates a new `EmptyIterator`. */\n    constructor() {\n        super();\n        this._changeState(exports.ENDED, true);\n    }\n}\nexports.EmptyIterator = EmptyIterator;\n/**\n  An iterator that emits a single item.\n  @extends module:asynciterator.AsyncIterator\n*/\nclass SingletonIterator extends AsyncIterator {\n    /**\n      Creates a new `SingletonIterator`.\n      @param {object} item The item that will be emitted.\n    */\n    constructor(item) {\n        super();\n        this._item = item;\n        if (item === null)\n            this.close();\n        else\n            this.readable = true;\n    }\n    /* Reads the item from the iterator. */\n    read() {\n        const item = this._item;\n        this._item = null;\n        this.close();\n        return item;\n    }\n    /* Generates details for a textual representation of the iterator. */\n    _toStringDetails() {\n        return this._item === null ? '' : `(${this._item})`;\n    }\n}\nexports.SingletonIterator = SingletonIterator;\n/**\n  An iterator that emits the items of a given array.\n  @extends module:asynciterator.AsyncIterator\n*/\nclass ArrayIterator extends AsyncIterator {\n    /**\n      Creates a new `ArrayIterator`.\n      @param {Array} items The items that will be emitted.\n      @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n      @param {boolean} [options.preserve=true] If false, the passed array can be safely modified\n    */\n    constructor(items = [], { autoStart = true, preserve = true } = {}) {\n        super();\n        const buffer = preserve || !Array.isArray(items) ? [...items] : items;\n        this._index = 0;\n        this._sourceStarted = autoStart !== false;\n        this._truncateThreshold = preserve ? -1 : 64;\n        if (this._sourceStarted && buffer.length === 0)\n            this.close();\n        else\n            this._buffer = buffer;\n        this.readable = true;\n    }\n    /* Reads an item from the iterator. */\n    read() {\n        if (!this._sourceStarted)\n            this._sourceStarted = true;\n        let item = null;\n        if (this._buffer) {\n            // Emit the current item\n            if (this._index < this._buffer.length)\n                item = this._buffer[this._index++];\n            // Close when all elements have been returned\n            if (this._index === this._buffer.length) {\n                delete this._buffer;\n                this.close();\n            }\n            // Do need keep old items around indefinitely\n            else if (this._index === this._truncateThreshold) {\n                this._buffer.splice(0, this._truncateThreshold);\n                this._index = 0;\n            }\n        }\n        return item;\n    }\n    /* Generates details for a textual representation of the iterator. */\n    _toStringDetails() {\n        return `(${this._buffer ? this._buffer.length - this._index : 0})`;\n    }\n    /* Called by {@link module:asynciterator.AsyncIterator#destroy} */\n    _destroy(cause, callback) {\n        delete this._buffer;\n        callback();\n    }\n    /**\n     Consume all remaining items of the iterator into an array that will be returned asynchronously.\n     @param {object} [options] Settings for array creation\n     @param {integer} [options.limit] The maximum number of items to place in the array.\n     */\n    toArray(options = {}) {\n        if (!this._buffer)\n            return Promise.resolve([]);\n        // Determine start and end index\n        const { length } = this._buffer;\n        const start = this._index;\n        const end = typeof options.limit !== 'number' ? length : start + options.limit;\n        // Slice the items off the buffer\n        const items = this._buffer.slice(start, end);\n        this._index = end;\n        // Close this iterator when we're past the end\n        if (end >= length)\n            this.close();\n        return Promise.resolve(items);\n    }\n}\nexports.ArrayIterator = ArrayIterator;\n/**\n  An iterator that enumerates integers in a certain range.\n  @extends module:asynciterator.AsyncIterator\n*/\nclass IntegerIterator extends AsyncIterator {\n    /**\n      Creates a new `IntegerIterator`.\n      @param {object} [options] Settings of the iterator\n      @param {integer} [options.start=0] The first number to emit\n      @param {integer} [options.end=Infinity] The last number to emit\n      @param {integer} [options.step=1] The increment between two numbers\n    */\n    constructor({ start = 0, step = 1, end } = {}) {\n        super();\n        // Determine the first number\n        if (Number.isFinite(start))\n            start = Math.trunc(start);\n        this._next = start;\n        // Determine step size\n        if (Number.isFinite(step))\n            step = Math.trunc(step);\n        this._step = step;\n        // Determine the last number\n        const ascending = step >= 0;\n        const direction = ascending ? Infinity : -Infinity;\n        if (Number.isFinite(end))\n            end = Math.trunc(end);\n        else if (end !== -direction)\n            end = direction;\n        this._last = end;\n        // Start iteration if there is at least one item; close otherwise\n        if (!Number.isFinite(start) || (ascending ? start > end : start < end))\n            this.close();\n        else\n            this.readable = true;\n    }\n    /* Reads an item from the iterator. */\n    read() {\n        if (this.closed)\n            return null;\n        const current = this._next, step = this._step, last = this._last, next = this._next += step;\n        if (step >= 0 ? next > last : next < last)\n            this.close();\n        return current;\n    }\n    /* Generates details for a textual representation of the iterator. */\n    _toStringDetails() {\n        return `(${this._next}...${this._last})`;\n    }\n}\nexports.IntegerIterator = IntegerIterator;\n/** Function that maps an element to itself. */\nfunction identity(item) {\n    return item;\n}\nexports.identity = identity;\n/** Key indicating the current consumer of a source. */\nexports.DESTINATION = Symbol('destination');\n/**\n An iterator that synchronously transforms every item from its source\n by applying a mapping function.\n @extends module:asynciterator.AsyncIterator\n*/\nclass MappingIterator extends AsyncIterator {\n    /**\n     * Applies the given mapping to the source iterator.\n     */\n    constructor(source, map = identity, options = {}) {\n        super();\n        this._map = map;\n        this._source = ensureSourceAvailable(source);\n        this._destroySource = options.destroySource !== false;\n        // Close if the source is already empty\n        if (source.done) {\n            this.close();\n        }\n        // Otherwise, wire up the source for reading\n        else {\n            this._source[exports.DESTINATION] = this;\n            this._source.on('end', destinationClose);\n            this._source.on('error', destinationEmitError);\n            this._source.on('readable', destinationSetReadable);\n            this.readable = this._source.readable;\n        }\n    }\n    /* Tries to read the next item from the iterator. */\n    read() {\n        if (!this.done) {\n            // Try to read an item that maps to a non-null value\n            if (this._source.readable) {\n                let item, mapped;\n                while ((item = this._source.read()) !== null) {\n                    if ((mapped = this._map(item)) !== null)\n                        return mapped;\n                }\n            }\n            this.readable = false;\n            // Close this iterator if the source is empty\n            if (this._source.done)\n                this.close();\n        }\n        return null;\n    }\n    /* Cleans up the source iterator and ends. */\n    _end(destroy) {\n        this._source.removeListener('end', destinationClose);\n        this._source.removeListener('error', destinationEmitError);\n        this._source.removeListener('readable', destinationSetReadable);\n        delete this._source[exports.DESTINATION];\n        if (this._destroySource)\n            this._source.destroy();\n        super._end(destroy);\n    }\n}\nexports.MappingIterator = MappingIterator;\n// Validates an AsyncIterator for use as a source within another AsyncIterator\nfunction ensureSourceAvailable(source, allowDestination = false) {\n    if (!source || !isFunction(source.read) || !isFunction(source.on))\n        throw new TypeError(`Invalid source: ${source}`);\n    if (!allowDestination && source[exports.DESTINATION])\n        throw new Error('The source already has a destination');\n    return source;\n}\n/**\n  An iterator that maintains an internal buffer of items.\n  This class serves as a base class for other iterators\n  with a typically complex item generation process.\n  @extends module:asynciterator.AsyncIterator\n*/\nclass BufferedIterator extends AsyncIterator {\n    /**\n      Creates a new `BufferedIterator`.\n      @param {object} [options] Settings of the iterator\n      @param {integer} [options.maxBufferSize=4] The number of items to preload in the internal buffer\n      @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n    */\n    constructor({ maxBufferSize = 4, autoStart = true } = {}) {\n        super(exports.INIT);\n        this._buffer = new linkedlist_1.LinkedList();\n        this._maxBufferSize = 4;\n        this._reading = true;\n        this._pushedCount = 0;\n        this.maxBufferSize = maxBufferSize;\n        taskScheduler(() => this._init(autoStart));\n        this._sourceStarted = autoStart !== false;\n    }\n    /**\n      The maximum number of items to preload in the internal buffer.\n      A `BufferedIterator` tries to fill its buffer as far as possible.\n      Set to `Infinity` to fully drain the source.\n      @type number\n    */\n    get maxBufferSize() {\n        return this._maxBufferSize;\n    }\n    set maxBufferSize(maxBufferSize) {\n        // Allow only positive integers and infinity\n        if (maxBufferSize !== Infinity) {\n            maxBufferSize = !Number.isFinite(maxBufferSize) ? 4 :\n                Math.max(Math.trunc(maxBufferSize), 1);\n        }\n        // Only set the maximum buffer size if it changes\n        if (this._maxBufferSize !== maxBufferSize) {\n            this._maxBufferSize = maxBufferSize;\n            // Ensure sufficient elements are buffered\n            if (this._state === exports.OPEN)\n                this._fillBuffer();\n        }\n    }\n    /**\n      Initializing the iterator by calling {@link BufferedIterator#_begin}\n      and changing state from INIT to OPEN.\n      @protected\n      @param {boolean} autoStart Whether reading of items should immediately start after OPEN.\n    */\n    _init(autoStart) {\n        // Perform initialization tasks\n        let doneCalled = false;\n        this._reading = true;\n        this._begin(() => {\n            if (doneCalled)\n                throw new Error('done callback called multiple times');\n            doneCalled = true;\n            // Open the iterator and start buffering\n            this._reading = false;\n            this._changeState(exports.OPEN);\n            if (autoStart)\n                this._fillBufferAsync();\n            // If reading should not start automatically, the iterator doesn't become readable.\n            // Therefore, mark the iterator as (potentially) readable so consumers know it might be read.\n            else\n                this.readable = true;\n        });\n    }\n    /**\n      Writes beginning items and opens iterator resources.\n      Should never be called before {@link BufferedIterator#_init};\n      typically, `_init` is responsible for calling `_begin`.\n      @protected\n      @param {function} done To be called when initialization is complete\n    */\n    _begin(done) {\n        done();\n    }\n    /**\n      Tries to read the next item from the iterator.\n      If the buffer is empty,\n      this method calls {@link BufferedIterator#_read} to fetch items.\n      @returns {object?} The next item, or `null` if none is available\n    */\n    read() {\n        if (this.done)\n            return null;\n        // An explicit read kickstarts the source\n        if (!this._sourceStarted)\n            this._sourceStarted = true;\n        // Try to retrieve an item from the buffer\n        const buffer = this._buffer;\n        let item;\n        if (buffer.empty) {\n            item = null;\n            this.readable = false;\n        }\n        else {\n            item = buffer.shift();\n        }\n        // If the buffer is becoming empty, either fill it or end the iterator\n        if (!this._reading && buffer.length < this._maxBufferSize) {\n            // If the iterator is not closed and thus may still generate new items, fill the buffer\n            if (!this.closed)\n                this._fillBufferAsync();\n            // No new items will be generated, so if none are buffered, the iterator ends here\n            else if (buffer.empty)\n                this._endAsync();\n        }\n        return item;\n    }\n    /**\n      Tries to generate the given number of items.\n      Implementers should add `count` items through {@link BufferedIterator#_push}.\n      @protected\n      @param {integer} count The number of items to generate\n      @param {function} done To be called when reading is complete\n    */\n    _read(count, done) {\n        done();\n    }\n    /**\n      Adds an item to the internal buffer.\n      @protected\n      @param {object} item The item to add\n      @emits module:asynciterator.AsyncIterator.readable\n    */\n    _push(item) {\n        if (!this.done) {\n            this._pushedCount++;\n            this._buffer.push(item);\n            this.readable = true;\n        }\n    }\n    /**\n      Fills the internal buffer until `this._maxBufferSize` items are present.\n      This method calls {@link BufferedIterator#_read} to fetch items.\n      @protected\n      @emits module:asynciterator.AsyncIterator.readable\n    */\n    _fillBuffer() {\n        let neededItems;\n        // Avoid recursive reads\n        if (this._reading) {\n            // Do nothing\n        }\n        // If iterator closing started in the meantime, don't generate new items anymore\n        else if (this.closed) {\n            this._completeClose();\n        }\n        // Otherwise, try to fill empty spaces in the buffer by generating new items\n        else if ((neededItems = Math.min(this._maxBufferSize - this._buffer.length, 128)) > 0) {\n            // Acquire reading lock and start reading, counting pushed items\n            this._pushedCount = 0;\n            this._reading = true;\n            this._read(neededItems, () => {\n                // Verify the callback is only called once\n                if (!neededItems)\n                    throw new Error('done callback called multiple times');\n                neededItems = 0;\n                // Release reading lock\n                this._reading = false;\n                // If the iterator was closed while reading, complete closing\n                if (this.closed) {\n                    this._completeClose();\n                }\n                // If the iterator pushed one or more items,\n                // it might currently be able to generate additional items\n                // (even though all pushed items might already have been read)\n                else if (this._pushedCount) {\n                    this.readable = true;\n                    // If the buffer is insufficiently full, continue filling\n                    if (this._buffer.length < this._maxBufferSize / 2)\n                        this._fillBufferAsync();\n                }\n            });\n        }\n    }\n    /**\n      Schedules `_fillBuffer` asynchronously.\n    */\n    _fillBufferAsync() {\n        // Acquire reading lock to avoid recursive reads\n        if (!this._reading) {\n            this._reading = true;\n            taskScheduler(() => {\n                // Release reading lock so _fillBuffer` can take it\n                this._reading = false;\n                this._fillBuffer();\n            });\n        }\n    }\n    /**\n      Stops the iterator from generating new items\n      after a possible pending read operation has finished.\n      Already generated, pending, or terminating items can still be emitted.\n      After this, the iterator will end asynchronously.\n      @emits module:asynciterator.AsyncIterator.end\n    */\n    close() {\n        // If the iterator is not currently reading, we can close immediately\n        if (!this._reading)\n            this._completeClose();\n        // Closing cannot complete when reading, so temporarily assume CLOSING state\n        // `_fillBuffer` becomes responsible for calling `_completeClose`\n        else\n            this._changeState(exports.CLOSING);\n    }\n    /**\n      Stops the iterator from generating new items,\n      switching from `CLOSING` state into `CLOSED` state.\n      @protected\n      @emits module:asynciterator.AsyncIterator.end\n    */\n    _completeClose() {\n        if (this._changeState(exports.CLOSED)) {\n            // Write possible terminating items\n            this._reading = true;\n            this._flush(() => {\n                if (!this._reading)\n                    throw new Error('done callback called multiple times');\n                this._reading = false;\n                // If no items are left, end the iterator\n                // Otherwise, `read` becomes responsible for ending the iterator\n                if (this._buffer.empty)\n                    this._endAsync();\n            });\n        }\n    }\n    /* Called by {@link module:asynciterator.AsyncIterator#destroy} */\n    _destroy(cause, callback) {\n        this._buffer.clear();\n        callback();\n    }\n    /**\n      Writes terminating items and closes iterator resources.\n      Should never be called before {@link BufferedIterator#close};\n      typically, `close` is responsible for calling `_flush`.\n      @protected\n      @param {function} done To be called when termination is complete\n    */\n    _flush(done) {\n        done();\n    }\n    /**\n      Generates details for a textual representation of the iterator.\n      @protected\n     */\n    _toStringDetails() {\n        const buffer = this._buffer;\n        return `{${buffer.empty ? '' : `next: ${buffer.first}, `}buffer: ${buffer.length}}`;\n    }\n}\nexports.BufferedIterator = BufferedIterator;\n/**\n  An iterator that generates items based on a source iterator.\n  This class serves as a base class for other iterators.\n  @extends module:asynciterator.BufferedIterator\n*/\nclass TransformIterator extends BufferedIterator {\n    /**\n      Creates a new `TransformIterator`.\n      @param {module:asynciterator.AsyncIterator|Readable} [source] The source this iterator generates items from\n      @param {object} [options] Settings of the iterator\n      @param {integer} [options.maxBufferSize=4] The maximum number of items to keep in the buffer\n      @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n      @param {boolean} [options.optional=false] If transforming is optional, the original item is pushed when its transformation yields no items\n      @param {boolean} [options.destroySource=true] Whether the source should be destroyed when this transformed iterator is closed or destroyed\n      @param {module:asynciterator.AsyncIterator} [options.source] The source this iterator generates items from\n    */\n    constructor(source, options = source || {}) {\n        super(options);\n        this._boundPush = (item) => this._push(item);\n        // Shift parameters if needed\n        if (!isSourceExpression(source))\n            source = options.source;\n        // The passed source is an AsyncIterator or readable stream\n        if (isEventEmitter(source)) {\n            this.source = source;\n        }\n        // The passed value is a promise or source creation function\n        else if (source) {\n            this._createSource = isPromise(source) ? () => source : source;\n            if (this._sourceStarted)\n                this._loadSourceAsync();\n        }\n        // Set other options\n        this._optional = Boolean(options.optional);\n        this._destroySource = options.destroySource !== false;\n    }\n    /**\n      The source this iterator generates items from.\n      @type module:asynciterator.AsyncIterator\n    */\n    get source() {\n        if (isFunction(this._createSource))\n            this._loadSourceAsync();\n        return this._source;\n    }\n    set source(value) {\n        // Validate and set source\n        const source = this._source = this._validateSource(value);\n        source[exports.DESTINATION] = this;\n        // Do not read the source if this iterator already ended\n        if (this.done) {\n            if (this._destroySource)\n                source.destroy();\n        }\n        // Close this iterator if the source already ended\n        else if (source.done) {\n            this.close();\n        }\n        // Otherwise, react to source events\n        else {\n            source.on('end', destinationCloseWhenDone);\n            source.on('readable', destinationFillBuffer);\n            source.on('error', destinationEmitError);\n        }\n    }\n    /**\n      Initializes a source that was set through a promise\n      @protected\n    */\n    _loadSourceAsync() {\n        if (isFunction(this._createSource)) {\n            // Assign the source after resolving\n            Promise.resolve(this._createSource()).then(source => {\n                delete this._createSource;\n                this.source = source;\n                this._fillBuffer();\n            }, error => this.emit('error', error));\n            // Signal that source creation is pending\n            this._createSource = null;\n        }\n    }\n    /**\n      Validates whether the given iterator can be used as a source.\n      @protected\n      @param {object} source The source to validate\n      @param {boolean} allowDestination Whether the source can already have a destination\n    */\n    _validateSource(source, allowDestination = false) {\n        if (this._source || typeof this._createSource !== 'undefined')\n            throw new Error('The source cannot be changed after it has been set');\n        return ensureSourceAvailable(source, allowDestination);\n    }\n    /**\n      Tries to read transformed items.\n    */\n    _read(count, done) {\n        const next = () => {\n            // Continue transforming until at least `count` items have been pushed\n            if (this._pushedCount < count && !this.closed)\n                taskScheduler(() => this._readAndTransform(next, done));\n            else\n                done();\n        };\n        this._readAndTransform(next, done);\n    }\n    /**\n      Reads a transforms an item\n    */\n    _readAndTransform(next, done) {\n        // If the source exists and still can read items,\n        // try to read and transform the next item.\n        let item;\n        const source = this.source;\n        if (!source || source.done || (item = source.read()) === null)\n            done();\n        else if (!this._optional)\n            this._transform(item, next, this._boundPush);\n        else\n            this._optionalTransform(item, next);\n    }\n    /**\n      Tries to transform the item;\n      if the transformation yields no items, pushes the original item.\n    */\n    _optionalTransform(item, done) {\n        const pushedCount = this._pushedCount;\n        this._transform(item, () => {\n            if (pushedCount === this._pushedCount)\n                this._push(item);\n            done();\n        }, this._boundPush);\n    }\n    /**\n      Generates items based on the item from the source.\n      Implementers should add items through {@link BufferedIterator#_push}.\n      The default implementation pushes the source item as-is.\n      @protected\n      @param {object} item The last read item from the source\n      @param {function} done To be called when reading is complete\n      @param {function} push A callback to push zero or more transformation results.\n    */\n    _transform(item, done, push) {\n        push(item);\n        done();\n    }\n    /**\n      Closes the iterator when pending items are transformed.\n      @protected\n    */\n    _closeWhenDone() {\n        this.close();\n    }\n    /* Cleans up the source iterator and ends. */\n    _end(destroy) {\n        const source = this._source;\n        if (source) {\n            source.removeListener('end', destinationCloseWhenDone);\n            source.removeListener('error', destinationEmitError);\n            source.removeListener('readable', destinationFillBuffer);\n            delete source[exports.DESTINATION];\n            if (this._destroySource)\n                source.destroy();\n        }\n        super._end(destroy);\n    }\n}\nexports.TransformIterator = TransformIterator;\nfunction destinationSetReadable() {\n    this[exports.DESTINATION].readable = true;\n}\nfunction destinationEmitError(error) {\n    this[exports.DESTINATION].emit('error', error);\n}\nfunction destinationClose() {\n    this[exports.DESTINATION].close();\n}\nfunction destinationCloseWhenDone() {\n    this[exports.DESTINATION]._closeWhenDone();\n}\nfunction destinationFillBuffer() {\n    if (this[exports.DESTINATION]._sourceStarted !== false)\n        this[exports.DESTINATION]._fillBuffer();\n}\n/**\n  An iterator that generates items based on a source iterator\n  and simple transformation steps passed as arguments.\n  @extends module:asynciterator.TransformIterator\n*/\nclass SimpleTransformIterator extends TransformIterator {\n    /**\n      Creates a new `SimpleTransformIterator`.\n      @param {module:asynciterator.AsyncIterator|Readable} [source] The source this iterator generates items from\n      @param {object|Function} [options] Settings of the iterator, or the transformation function\n      @param {integer} [options.maxbufferSize=4] The maximum number of items to keep in the buffer\n      @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n      @param {module:asynciterator.AsyncIterator} [options.source] The source this iterator generates items from\n      @param {integer} [options.offset] The number of items to skip\n      @param {integer} [options.limit] The maximum number of items\n      @param {Function} [options.filter] A function to synchronously filter items from the source\n      @param {Function} [options.map] A function to synchronously transform items from the source\n      @param {Function} [options.transform] A function to asynchronously transform items from the source\n      @param {boolean} [options.optional=false] If transforming is optional, the original item is pushed when its mapping yields `null` or its transformation yields no items\n      @param {Array|module:asynciterator.AsyncIterator} [options.prepend] Items to insert before the source items\n      @param {Array|module:asynciterator.AsyncIterator} [options.append]  Items to insert after the source items\n    */\n    constructor(source, options) {\n        super(source, options);\n        this._offset = 0;\n        this._limit = Infinity;\n        this._filter = (item) => true;\n        // Set transformation steps from the options\n        options = options || (!isSourceExpression(source) ? source : null);\n        if (options) {\n            const transform = isFunction(options) ? options : options.transform;\n            const { limit, offset, filter, map, prepend, append } = options;\n            // Don't emit any items when bounds are unreachable\n            if (offset === Infinity || limit === -Infinity) {\n                this._limit = 0;\n            }\n            else {\n                if (Number.isFinite(offset))\n                    this._offset = Math.max(Math.trunc(offset), 0);\n                if (Number.isFinite(limit))\n                    this._limit = Math.max(Math.trunc(limit), 0);\n                if (isFunction(filter))\n                    this._filter = filter;\n                if (isFunction(map))\n                    this._map = map;\n                this._transform = isFunction(transform) ? transform : null;\n            }\n            if (prepend)\n                this._prepender = isEventEmitter(prepend) ? prepend : fromArray(prepend);\n            if (append)\n                this._appender = isEventEmitter(append) ? append : fromArray(append);\n        }\n    }\n    /* Tries to read and transform items */\n    _read(count, done) {\n        const next = () => this._readAndTransformSimple(count, nextAsync, done);\n        this._readAndTransformSimple(count, nextAsync, done);\n        function nextAsync() {\n            taskScheduler(next);\n        }\n    }\n    /* Reads and transform items */\n    _readAndTransformSimple(count, next, done) {\n        // Verify we have a readable source\n        let item;\n        const { source } = this;\n        if (!source || source.done) {\n            done();\n            return;\n        }\n        // Verify we are still below the limit\n        if (this._limit === 0)\n            this.close();\n        // Try to read the next item until at least `count` items have been pushed\n        while (!this.closed && this._pushedCount < count && (item = source.read()) !== null) {\n            // Verify the item passes the filter and we've reached the offset\n            if (!this._filter(item) || this._offset !== 0 && this._offset--)\n                continue;\n            // Synchronously map the item\n            const mappedItem = typeof this._map === 'undefined' ? item : this._map(item);\n            // Skip `null` items, pushing the original item if the mapping was optional\n            if (mappedItem === null) {\n                if (this._optional)\n                    this._push(item);\n            }\n            // Skip the asynchronous phase if no transformation was specified\n            else if (!isFunction(this._transform)) {\n                this._push(mappedItem);\n            }\n            // Asynchronously transform the item, and wait for `next` to call back\n            else {\n                if (!this._optional)\n                    this._transform(mappedItem, next, this._boundPush);\n                else\n                    this._optionalTransform(mappedItem, next);\n                return;\n            }\n            // Stop when we've reached the limit\n            if (--this._limit === 0)\n                this.close();\n        }\n        done();\n    }\n    // Prepends items to the iterator\n    _begin(done) {\n        this._insert(this._prepender, done);\n        delete this._prepender;\n    }\n    // Appends items to the iterator\n    _flush(done) {\n        this._insert(this._appender, done);\n        delete this._appender;\n    }\n    // Inserts items in the iterator\n    _insert(inserter, done) {\n        const push = (item) => this._push(item);\n        if (!inserter || inserter.done) {\n            done();\n        }\n        else {\n            inserter.on('data', push);\n            inserter.on('end', end);\n        }\n        function end() {\n            inserter.removeListener('data', push);\n            inserter.removeListener('end', end);\n            done();\n        }\n    }\n}\nexports.SimpleTransformIterator = SimpleTransformIterator;\n/**\n  An iterator that generates items by transforming each item of a source\n  with a different iterator.\n  @extends module:asynciterator.TransformIterator\n*/\nclass MultiTransformIterator extends TransformIterator {\n    /**\n     Creates a new `MultiTransformIterator`.\n     @param {module:asynciterator.AsyncIterator|Readable} [source] The source this iterator generates items from\n     @param {object|Function} [options] Settings of the iterator, or the transformation function\n     @param {integer} [options.maxbufferSize=4] The maximum number of items to keep in the buffer\n     @param {boolean} [options.autoStart=true] Whether buffering starts directly after construction\n     @param {module:asynciterator.AsyncIterator} [options.source] The source this iterator generates items from\n     @param {integer} [options.offset] The number of items to skip\n     @param {integer} [options.limit] The maximum number of items\n     @param {Function} [options.filter] A function to synchronously filter items from the source\n     @param {Function} [options.map] A function to synchronously transform items from the source\n     @param {Function} [options.transform] A function to asynchronously transform items from the source\n     @param {boolean} [options.optional=false] If transforming is optional, the original item is pushed when its mapping yields `null` or its transformation yields no items\n     @param {Function} [options.multiTransform] A function to asynchronously transform items to iterators from the source\n     @param {Array|module:asynciterator.AsyncIterator} [options.prepend] Items to insert before the source items\n     @param {Array|module:asynciterator.AsyncIterator} [options.append]  Items to insert after the source items\n     */\n    constructor(source, options) {\n        super(source, options);\n        this._transformerQueue = [];\n        // Set transformation steps from the options\n        if (options) {\n            const multiTransform = isFunction(options) ? options : options.multiTransform;\n            if (multiTransform)\n                this._createTransformer = multiTransform;\n        }\n    }\n    /* Tries to read and transform items */\n    _read(count, done) {\n        // Remove transformers that have ended\n        const transformerQueue = this._transformerQueue, optional = this._optional;\n        let head, item;\n        while ((head = transformerQueue[0]) && head.transformer.done) {\n            // If transforming is optional, push the original item if none was pushed\n            if (optional && head.item !== null) {\n                count--;\n                this._push(head.item);\n            }\n            // Remove listeners from the transformer\n            transformerQueue.shift();\n            const { transformer } = head;\n            transformer.removeListener('end', destinationFillBuffer);\n            transformer.removeListener('readable', destinationFillBuffer);\n            transformer.removeListener('error', destinationEmitError);\n        }\n        // Create new transformers if there are less than the maximum buffer size\n        const { source } = this;\n        while (source && !source.done && transformerQueue.length < this.maxBufferSize) {\n            // Read an item to create the next transformer\n            item = source.read();\n            if (item === null)\n                break;\n            // Create the transformer and listen to its events\n            const transformer = (this._createTransformer(item) ||\n                new EmptyIterator());\n            transformer[exports.DESTINATION] = this;\n            transformer.on('end', destinationFillBuffer);\n            transformer.on('readable', destinationFillBuffer);\n            transformer.on('error', destinationEmitError);\n            transformerQueue.push({ transformer, item });\n        }\n        // Try to read `count` items from the transformer\n        head = transformerQueue[0];\n        if (head) {\n            const { transformer } = head;\n            while (count-- > 0 && (item = transformer.read()) !== null) {\n                this._push(item);\n                // If a transformed item was pushed, no need to push the original anymore\n                if (optional)\n                    head.item = null;\n            }\n        }\n        // End the iterator if the source has ended\n        else if (source && source.done) {\n            this.close();\n        }\n        done();\n    }\n    /**\n      Creates a transformer for the given item.\n      @param {object} item The last read item from the source\n      @returns {module:asynciterator.AsyncIterator} An iterator that transforms the given item\n    */\n    _createTransformer(item) {\n        return new SingletonIterator(item);\n    }\n    /* Closes the iterator when pending items are transformed. */\n    _closeWhenDone() {\n        // Only close if all transformers are read\n        if (!this._transformerQueue.length)\n            this.close();\n    }\n    _end(destroy) {\n        super._end(destroy);\n        // Also destroy the open transformers left in the queue\n        if (this._destroySource) {\n            for (const item of this._transformerQueue)\n                item.transformer.destroy();\n        }\n    }\n}\nexports.MultiTransformIterator = MultiTransformIterator;\n/**\n  An iterator that generates items by reading from multiple other iterators.\n  @extends module:asynciterator.BufferedIterator\n*/\nclass UnionIterator extends BufferedIterator {\n    /**\n      Creates a new `UnionIterator`.\n      @param {module:asynciterator.AsyncIterator|Array} [sources] The sources to read from\n      @param {object} [options] Settings of the iterator\n      @param {boolean} [options.destroySource=true] Whether the sources should be destroyed when transformed iterator is closed or destroyed\n    */\n    constructor(sources, options = {}) {\n        super(options);\n        this._sources = [];\n        this._currentSource = -1;\n        const autoStart = options.autoStart !== false;\n        // Sources have been passed as an iterator\n        if (isEventEmitter(sources)) {\n            sources.on('error', error => this.emit('error', error));\n            this._pending = { loading: false, sources: sources };\n            if (autoStart)\n                this._loadSources();\n        }\n        // Sources have been passed as a non-empty array\n        else if (Array.isArray(sources) && sources.length > 0) {\n            for (const source of sources)\n                this._addSource(source);\n        }\n        // Sources are an empty list\n        else if (autoStart) {\n            this.close();\n        }\n        // Set other options\n        this._destroySources = options.destroySources !== false;\n    }\n    // Loads pending sources into the sources list\n    _loadSources() {\n        // Obtain sources iterator\n        const sources = this._pending.sources;\n        this._pending.loading = true;\n        // Close immediately if done\n        if (sources.done) {\n            delete this._pending;\n            this.close();\n        }\n        // Otherwise, set up source reading\n        else {\n            sources.on('data', source => {\n                this._addSource(source);\n                this._fillBufferAsync();\n            });\n            sources.on('end', () => {\n                delete this._pending;\n                this._fillBuffer();\n            });\n        }\n    }\n    // Adds the given source to the internal sources array\n    _addSource(source) {\n        if (isPromise(source))\n            source = wrap(source);\n        if (!source.done) {\n            this._sources.push(source);\n            source[exports.DESTINATION] = this;\n            source.on('error', destinationEmitError);\n            source.on('readable', destinationFillBuffer);\n            source.on('end', destinationRemoveEmptySources);\n        }\n    }\n    // Removes sources that will no longer emit items\n    _removeEmptySources() {\n        this._sources = this._sources.filter((source, index) => {\n            // Adjust the index of the current source if needed\n            if (source.done && index <= this._currentSource)\n                this._currentSource--;\n            return !source.done;\n        });\n        this._fillBuffer();\n    }\n    // Reads items from the next sources\n    _read(count, done) {\n        var _a;\n        // Start source loading if needed\n        if (((_a = this._pending) === null || _a === void 0 ? void 0 : _a.loading) === false)\n            this._loadSources();\n        // Try to read `count` items\n        let lastCount = 0, item;\n        while (lastCount !== (lastCount = count)) {\n            // Try every source at least once\n            for (let i = 0; i < this._sources.length && count > 0; i++) {\n                // Pick the next source\n                this._currentSource = (this._currentSource + 1) % this._sources.length;\n                const source = this._sources[this._currentSource];\n                // Attempt to read an item from that source\n                if ((item = source.read()) !== null) {\n                    count--;\n                    this._push(item);\n                }\n            }\n        }\n        // Close this iterator if all of its sources have been read\n        if (!this._pending && this._sources.length === 0)\n            this.close();\n        done();\n    }\n    _end(destroy = false) {\n        super._end(destroy);\n        // Destroy all sources that are still readable\n        if (this._destroySources) {\n            for (const source of this._sources)\n                source.destroy();\n            // Also close the sources stream if applicable\n            if (this._pending) {\n                this._pending.sources.destroy();\n                delete this._pending;\n            }\n        }\n    }\n}\nexports.UnionIterator = UnionIterator;\nfunction destinationRemoveEmptySources() {\n    this[exports.DESTINATION]._removeEmptySources();\n}\n/**\n  An iterator that copies items from another iterator.\n  @extends module:asynciterator.TransformIterator\n*/\nclass ClonedIterator extends TransformIterator {\n    /**\n      Creates a new `ClonedIterator`.\n      @param {module:asynciterator.AsyncIterator|Readable} [source] The source this iterator copies items from\n    */\n    constructor(source) {\n        super(source, { autoStart: false });\n        this._readPosition = 0;\n        this._reading = false;\n        // As cloned iterators are not auto-started, they must always be marked as readable.\n        if (source)\n            this.readable = true;\n    }\n    _init() {\n        // skip buffered iterator initialization, since we read from history\n    }\n    close() {\n        // skip buffered iterator cleanup\n        AsyncIterator.prototype.close.call(this);\n    }\n    // The source this iterator copies items from\n    get source() {\n        return super.source;\n    }\n    set source(value) {\n        // Validate and set the source\n        const source = this._source = this._validateSource(value);\n        // Create a history reader for the source if none already existed\n        const history = (source && source[exports.DESTINATION]) ||\n            (source[exports.DESTINATION] = new HistoryReader(source));\n        // Do not read the source if this iterator already ended\n        if (this.done) {\n            if (this._destroySource)\n                source.destroy();\n        }\n        // Close this clone if history is empty and the source has ended\n        else if (history.endsAt(0)) {\n            this.close();\n        }\n        else {\n            // Subscribe to history events\n            history.register(this);\n            // If there are already items in history, this clone is readable\n            // If the source has a lazy start, always mark this iterator as readable without eagerly triggering a read.\n            if (source._sourceStarted === false || history.readAt(0) !== null)\n                this.readable = true;\n        }\n        // Hook pending property callbacks to the source\n        const propertyCallbacks = this._propertyCallbacks;\n        for (const propertyName in propertyCallbacks) {\n            const callbacks = propertyCallbacks[propertyName];\n            for (const callback of callbacks)\n                this._getSourceProperty(propertyName, callback);\n        }\n    }\n    /**\n      Validates whether the given iterator can be used as a source.\n      @protected\n      @param {object} source The source to validate\n      @param {boolean} allowDestination Whether the source can already have a destination\n    */\n    _validateSource(source, allowDestination = false) {\n        const history = (source && source[exports.DESTINATION]);\n        return super._validateSource(source, !history || history instanceof HistoryReader);\n    }\n    // Retrieves the property with the given name from the clone or its source.\n    getProperty(propertyName, callback) {\n        const { source } = this, properties = this._properties, hasProperty = properties && (propertyName in properties);\n        // If no callback was passed, return the property value\n        if (!callback) {\n            return hasProperty ? properties && properties[propertyName] :\n                source && source.getProperty(propertyName);\n        }\n        // Try to look up the property in this clone\n        super.getProperty(propertyName, callback);\n        // If the property is not set on this clone, it might become set on the source first\n        if (source && !hasProperty)\n            this._getSourceProperty(propertyName, callback);\n        return undefined;\n    }\n    // Retrieves the property with the given name from the source\n    _getSourceProperty(propertyName, callback) {\n        this.source.getProperty(propertyName, value => {\n            // Only send the source's property if it was not set on the clone in the meantime\n            if (!this._properties || !(propertyName in this._properties))\n                callback(value);\n        });\n    }\n    // Retrieves all properties of the iterator and its source.\n    getProperties() {\n        const base = this.source ? this.source.getProperties() : {}, properties = this._properties;\n        for (const name in properties)\n            base[name] = properties[name];\n        return base;\n    }\n    /* Generates details for a textual representation of the iterator. */\n    _toStringDetails() {\n        return `{source: ${this.source ? this.source.toString() : 'none'}}`;\n    }\n    /* Tries to read an item */\n    read() {\n        // An explicit read kickstarts the source\n        if (!this._sourceStarted)\n            this._sourceStarted = true;\n        const source = this.source;\n        let item = null;\n        if (!this.done && source) {\n            // Try to read an item at the current point in history\n            const history = source[exports.DESTINATION];\n            if ((item = history.readAt(this._readPosition)) !== null)\n                this._readPosition++;\n            else\n                this.readable = false;\n            // Close the iterator if we are at the end of the source\n            if (history.endsAt(this._readPosition))\n                this.close();\n        }\n        return item;\n    }\n    /* End the iterator and cleans up. */\n    _end(destroy) {\n        // Unregister from a possible history reader\n        const source = this.source;\n        const history = source === null || source === void 0 ? void 0 : source[exports.DESTINATION];\n        if (history)\n            history.unregister(this);\n        // Don't call TransformIterator#_end,\n        // as it would make the source inaccessible for other clones\n        BufferedIterator.prototype._end.call(this, destroy);\n    }\n}\nexports.ClonedIterator = ClonedIterator;\n// Stores the history of a source, so it can be cloned\nclass HistoryReader {\n    constructor(source) {\n        this._history = [];\n        this._trackers = new Set();\n        this._source = source;\n        // If the source is still live, set up clone tracking;\n        // otherwise, the clones just read from the finished history\n        if (!source.done) {\n            // When the source becomes readable, makes all clones readable\n            const setReadable = () => {\n                for (const tracker of this._trackers)\n                    tracker.readable = true;\n            };\n            // When the source errors, re-emits the error\n            const emitError = (error) => {\n                for (const tracker of this._trackers)\n                    tracker.emit('error', error);\n            };\n            // When the source ends, closes all clones that are fully read\n            const end = () => {\n                // Close the clone if all items had been emitted\n                for (const tracker of this._trackers) {\n                    if (tracker._sourceStarted !== false &&\n                        tracker._readPosition === this._history.length)\n                        tracker.close();\n                }\n                this._trackers.clear();\n                // Remove source listeners, since no further events will be emitted\n                source.removeListener('end', end);\n                source.removeListener('error', emitError);\n                source.removeListener('readable', setReadable);\n            };\n            // Listen to source events to trigger events in subscribed clones\n            source.on('end', end);\n            source.on('error', emitError);\n            source.on('readable', setReadable);\n        }\n    }\n    // Registers a clone for history updates\n    register(clone) {\n        // Tracking is only needed if the source is still live\n        if (!this._source.done)\n            this._trackers.add(clone);\n    }\n    // Unregisters a clone for history updates\n    unregister(clone) {\n        this._trackers.delete(clone);\n    }\n    // Tries to read the item at the given history position\n    readAt(pos) {\n        let item = null;\n        // Retrieve an item from history when available\n        if (pos < this._history.length)\n            item = this._history[pos];\n        // Read a new item from the source when possible\n        else if (!this._source.done && (item = this._source.read()) !== null)\n            this._history[pos] = item;\n        return item;\n    }\n    // Determines whether the given position is the end of the source\n    endsAt(pos) {\n        return this._source.done && this._history.length === pos;\n    }\n}\n/**\n * An iterator that takes a variety of iterable objects as a source.\n */\nclass WrappingIterator extends AsyncIterator {\n    constructor(source, opts) {\n        super();\n        this._source = null;\n        this._destroySource = (opts === null || opts === void 0 ? void 0 : opts.destroySource) !== false;\n        // If promise, set up a temporary source and replace when ready\n        if (isPromise(source)) {\n            this._source = new AsyncIterator();\n            source.then(value => {\n                this._source = null;\n                this.source = value;\n            }).catch(error => this.emit('error', error));\n        }\n        // Otherwise, set the source synchronously\n        else if (source) {\n            this.source = source;\n        }\n    }\n    set source(value) {\n        let source = value;\n        if (this._source !== null)\n            throw new Error('The source cannot be changed after it has been set');\n        // Process an iterable source\n        if (isIterable(source))\n            source = source[Symbol.iterator]();\n        // Process an iterator source\n        if (isIterator(source)) {\n            let iterator = source;\n            source = new events_1.EventEmitter();\n            source.read = () => {\n                if (iterator !== null) {\n                    // Skip any null values inside of the iterator\n                    let next;\n                    while (!(next = iterator.next()).done) {\n                        if (next.value !== null)\n                            return next.value;\n                    }\n                    // No remaining values, so stop iterating\n                    iterator = null;\n                    this.close();\n                }\n                return null;\n            };\n        }\n        // Process any other readable source\n        else {\n            source = ensureSourceAvailable(source);\n        }\n        // Do not change sources if the iterator is already done\n        if (this.done) {\n            if (this._destroySource && isFunction(source.destroy))\n                source.destroy();\n            return;\n        }\n        // Set up event handling\n        source[exports.DESTINATION] = this;\n        source.on('end', destinationClose);\n        source.on('error', destinationEmitError);\n        source.on('readable', destinationSetReadable);\n        // Enable reading from source\n        this._source = source;\n        this.readable = source.readable !== false;\n    }\n    read() {\n        if (this._source !== null && this._source.readable !== false) {\n            const item = this._source.read();\n            if (item !== null)\n                return item;\n            this.readable = false;\n        }\n        return null;\n    }\n    _end(destroy = false) {\n        if (this._source !== null) {\n            this._source.removeListener('end', destinationClose);\n            this._source.removeListener('error', destinationEmitError);\n            this._source.removeListener('readable', destinationSetReadable);\n            delete this._source[exports.DESTINATION];\n            if (this._destroySource && isFunction(this._source.destroy))\n                this._source.destroy();\n            this._source = null;\n        }\n        super._end(destroy);\n    }\n}\nexports.WrappingIterator = WrappingIterator;\n/**\n  Creates an iterator that wraps around a given iterator or readable stream.\n  Use this to convert an iterator-like object into a full-featured AsyncIterator.\n  After this operation, only read the returned iterator instead of the given one.\n  @function\n  @param [source] The source this iterator generates items from\n  @param {object} [options] Settings of the iterator\n  @returns {module:asynciterator.AsyncIterator} A new iterator with the items from the given iterator\n*/\nfunction wrap(source, options) {\n    // For backward compatibility, always use TransformIterator when options are specified\n    if (options && ('autoStart' in options || 'optional' in options || 'source' in options || 'maxBufferSize' in options)) {\n        if (source && !isEventEmitter(source))\n            source = new WrappingIterator(source);\n        return new TransformIterator(source, options);\n    }\n    // Empty iterator if no source specified\n    if (!source)\n        return empty();\n    // Unwrap promised sources\n    if (isPromise(source))\n        return new WrappingIterator(source, options);\n    // Directly return any AsyncIterator\n    if (source instanceof AsyncIterator)\n        return source;\n    // Other iterable objects\n    if (Array.isArray(source))\n        return fromArray(source);\n    if (isIterable(source) || isIterator(source) || isEventEmitter(source))\n        return new WrappingIterator(source, options);\n    // Other types are unsupported\n    throw new TypeError(`Invalid source: ${source}`);\n}\nexports.wrap = wrap;\n/**\n  Creates an empty iterator.\n */\nfunction empty() {\n    return new EmptyIterator();\n}\nexports.empty = empty;\n/**\n  Creates an iterator with a single item.\n  @param {object} item the item\n */\nfunction single(item) {\n    return new SingletonIterator(item);\n}\nexports.single = single;\n/**\n  Creates an iterator for the given array.\n  @param {Array} items the items\n */\nfunction fromArray(items) {\n    return new ArrayIterator(items);\n}\nexports.fromArray = fromArray;\n/**\n Creates an iterator for the given Iterator.\n @param {Iterable} source the iterator\n */\nfunction fromIterator(source) {\n    return new WrappingIterator(source);\n}\nexports.fromIterator = fromIterator;\n/**\n Creates an iterator for the given Iterable.\n @param {Iterable} source the iterable\n */\nfunction fromIterable(source) {\n    return new WrappingIterator(source);\n}\nexports.fromIterable = fromIterable;\n/**\n  Creates an iterator containing all items from the given iterators.\n  @param {Array} items the items\n */\nfunction union(sources) {\n    return new UnionIterator(sources);\n}\nexports.union = union;\n/**\n  Creates an iterator of integers for the given numeric range.\n  @param {Array} items the items\n */\nfunction range(start, end, step) {\n    return new IntegerIterator({ start, end, step });\n}\nexports.range = range;\n// Returns a function that calls `fn` with `self` as `this` pointer. */\nfunction bind(fn, self) {\n    return self ? fn.bind(self) : fn;\n}\n// Determines whether the given object is a function\nfunction isFunction(object) {\n    return typeof object === 'function';\n}\nexports.isFunction = isFunction;\n// Determines whether the given object is an EventEmitter\nfunction isEventEmitter(object) {\n    return isFunction(object === null || object === void 0 ? void 0 : object.on);\n}\nexports.isEventEmitter = isEventEmitter;\n// Determines whether the given object is a promise\nfunction isPromise(object) {\n    return isFunction(object === null || object === void 0 ? void 0 : object.then);\n}\nexports.isPromise = isPromise;\n// Determines whether the given object is a source expression\nfunction isSourceExpression(object) {\n    return object && (isEventEmitter(object) || isPromise(object) || isFunction(object));\n}\nexports.isSourceExpression = isSourceExpression;\n// Determines whether the given object supports the iterable protocol\nfunction isIterable(object) {\n    return object && (Symbol.iterator in object);\n}\nexports.isIterable = isIterable;\n// Determines whether the given object supports the iterator protocol\nfunction isIterator(object) {\n    return isFunction(object === null || object === void 0 ? void 0 : object.next);\n}\nexports.isIterator = isIterator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedList = void 0;\n/**\n * A list with O(1) push and shift operations.\n */\nclass LinkedList {\n    constructor() {\n        this._length = 0;\n        this._head = null;\n        this._tail = null;\n    }\n    get length() { return this._length; }\n    get first() { var _a; return (_a = this._head) === null || _a === void 0 ? void 0 : _a.value; }\n    get last() { var _a; return (_a = this._tail) === null || _a === void 0 ? void 0 : _a.value; }\n    get empty() { return this._head === null; }\n    push(value) {\n        const node = { value, next: null };\n        if (this._tail === null)\n            this._head = this._tail = node;\n        else\n            this._tail.next = this._tail = node;\n        this._length++;\n    }\n    shift() {\n        if (this._head === null)\n            return undefined;\n        const { value, next } = this._head;\n        this._head = next;\n        if (next === null)\n            this._tail = null;\n        this._length--;\n        return value;\n    }\n    clear() {\n        this._length = 0;\n        this._head = this._tail = null;\n    }\n}\nexports.LinkedList = LinkedList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTaskScheduler = void 0;\nconst resolved = Promise.resolve(undefined);\n// Returns a function that asynchronously schedules a task\nfunction createTaskScheduler() {\n    // Use or create a microtask scheduler\n    const scheduleMicrotask = typeof queueMicrotask === 'function' ?\n        queueMicrotask : (task) => resolved.then(task);\n    // Use or create a macrotask scheduler\n    const scheduleMacrotask = typeof setImmediate === 'function' ?\n        setImmediate : (task) => setTimeout(task, 0);\n    // Interrupt with a macrotask every once in a while to avoid freezing\n    let i = 0;\n    let queue = null;\n    return (task) => {\n        // Tasks are currently being queued to avoid freezing\n        if (queue !== null)\n            queue.push(task);\n        // Tasks are being scheduled normally as microtasks\n        else if (++i < 100)\n            scheduleMicrotask(task);\n        // A macrotask interruption is needed\n        else {\n            // Hold all tasks in a queue, and reschedule them after a macrotask\n            queue = [task];\n            scheduleMacrotask(() => {\n                // Work through the queue\n                for (const queued of queue)\n                    scheduleMicrotask(queued);\n                queue = null;\n                // Reset the interruption schedule\n                i = 0;\n            });\n        }\n    };\n}\nexports.createTaskScheduler = createTaskScheduler;\n","\"use strict\";\n/**\n * @module LRUCache\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = void 0;\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nclass LRUCache {\n    // properties coming in from the options of these, only max and maxSize\n    // really *need* to be protected. The rest can be modified, as they just\n    // set defaults for various methods.\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the remaining TTL time for a given entry key\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.delete(this.#keyList[index]);\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string description of an object.\n     * Called by the built-in method Object.prototype.toString.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to Array.find().  fn is called as fn(value, key, cache).\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from\n     * most recently used to least recently used.  fn is called as\n     * fn(value, key, cache).  Does not update age or recenty of use.\n     * Does not iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.delete(this.#keyList[i]);\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Like {@link LRUCache#dump}, but just for a\n     * single key. Always returns stale values, if their info is found in the\n     * cache, so be sure to check for expired TTLs if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to cache.load()\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     * Note that the shape of the resulting cache may be different if the\n     * same options are not used in both caches.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.delete(k);\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.delete(k);\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.delete(k);\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.delete(k);\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.clear();\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, 'delete');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, 'delete']);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, 'delete');\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, 'delete']);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(128);\n"],"names":["DynamicNestedLoopJoin","HashJoin","NestedLoopJoin","SymmetricHashJoin","MergeStream","module","exports","AsyncIterator","MultiTransformIterator","SimpleTransformIterator","constructor","left","funRight","funJoin","options","super","this","_createTransformer","leftItem","transform","rightItem","done","push","result","right","funHash","addedDataListener","leftMap","Map","match","matches","matchIdx","on","error","destroy","readable","hasResults","_end","bind","eventName","_addDataListenerIfNeeded","ended","length","read","item","hash","get","_addDataListener","has","set","scheduleTask","close","clone","usedLeft","rightMap","_cleanup","i","map","streams","Array","isArray","prototype","slice","call","arguments","stream","emit","_removeStream","idx","indexOf","splice","attempts","variables","df_475_1","require","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_init__3_0_0_components_ActorInit_jsonld_ActorInit_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_context_preprocess__3_0_0_components_ActorContextPreprocess_jsonld_ActorContextPreprocess_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_bindings__3_0_0_components_ActorHashBindings_jsonld_ActorHashBindings_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_hash_quads__3_0_0_components_ActorHashQuads_jsonld_ActorHashQuads_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_optimize_query_operation__3_0_0_components_ActorOptimizeQueryOperation_jsonld_ActorOptimizeQueryOperation_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_parse__3_0_0_components_ActorQueryParse_jsonld_ActorQueryParse_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_entries_sort__3_0_0_components_ActorRdfJoinEntriesSort_jsonld_ActorRdfJoinEntriesSort_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join_selectivity__3_0_0_components_ActorRdfJoinSelectivity_jsonld_ActorRdfJoinSelectivity_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_metadata_accumulate__3_0_0_components_ActorRdfMetadataAccumulate_jsonld_ActorRdfMetadataAccumulate_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_update_quads__3_0_0_components_ActorRdfUpdateQuads_jsonld_ActorRdfUpdateQuads_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_operation__3_0_0_components_ActorQueryOperation_jsonld_ActorQueryOperation_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_process__3_0_0_components_ActorQueryProcess_jsonld_ActorQueryProcess_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_source_identify__3_0_0_components_ActorQuerySourceIdentify_jsonld_ActorQuerySourceIdentify_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_rdf_join__3_0_0_components_ActorRdfJoin_jsonld_ActorRdfJoin_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_http_invalidate__3_0_0_components_ActorHttpInvalidate_jsonld_ActorHttpInvalidate_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_query_result_serialize__3_0_0_components_ActorQueryResultSerialize_jsonld_ActorQueryResultSerialize_default_bus","https___linkedsoftwaredependencies_org_bundles_npm__comunica_bus_merge_bindings_context__3_0_0_components_ActorMergeBindingsContext_jsonld_ActorMergeBindingsContext_default_bus","urn_comunica_default_context_preprocess_actors_query_source_skolemize","urn_comunica_default_context_preprocess_mediators_main","urn_comunica_default_hash_bindings_mediators_main","urn_comunica_default_hash_quads_mediators_main","urn_comunica_default_optimize_query_operation_actors_group_sources","urn_comunica_default_optimize_query_operation_mediators_main","urn_comunica_default_query_parse_mediators_main","urn_comunica_default_rdf_join_entries_sort_mediators_main","urn_comunica_default_rdf_join_selectivity_mediators_main","urn_comunica_default_rdf_metadata_accumulate_mediators_main","urn_comunica_default_rdf_update_quads_mediators_main","urn_comunica_default_query_operation_mediators_main","urn_comunica_default_query_process_mediators_main","urn_comunica_default_query_source_identify_mediators_main","urn_comunica_default_rdf_join_mediators_main","https___linkedsoftwaredependencies_org_bundles_npm__comunica_actor_context_preprocess_query_source_identify__3_0_0_components_ActorContextPreprocessQuerySourceIdentify_jsonld_IActorContextPreprocessQuerySourceIdentifyArgs_default_invalidator","urn_comunica_default_http_invalidate_mediators_main","urn_comunica_default_query_result_serialize_mediators_serialize","urn_comunica_default_query_result_serialize_mediators_mediaType","urn_comunica_default_query_result_serialize_mediators_mediaTypeFormat","urn_comunica_default_merge_bindings_context_mediators_main","urn_comunica_default_optimize_query_operation_actors_filter_pushdown","urn_comunica_default_init_actors_query","urn_comunica_default_optimize_query_operation_actors_prune_empty_source_operations","urn_comunica_default_optimize_query_operation_actors_join_connected","urn_comunica_default_optimize_query_operation_actors_bgp_to_join","urn_comunica_default_optimize_query_operation_actors_join_bgp","urn_comunica_default_optimize_query_operation_actors_assign_sources_exhaustive","actor_init_query_1","engineDefault","QueryEngine","QueryEngineBase","engine","__exportStar","bus_query_operation_1","context_entries_1","asynciterator_1","rdf_data_factory_1","rdf_string_1","sparqlalgebrajs_1","PathVariableObjectIterator_1","DF","DataFactory","ActorAbstractPath","ActorQueryOperationTypedMediated","args","predicateType","testOperation","operation","_context","predicate","type","Error","generateVariable","path","name","subject","value","object","variable","isPathArbitraryLengthDistinct","context","KeysQueryOperation","isPathArbitraryLengthDistinctKey","undefined","ActorQueryOperation","getSafeBindings","mediatorQueryOperation","mediate","FACTORY","createDistinct","predicateStarGraphVariable","graph","bindingsFactory","sources","getPathSources","predVar","createPath","findGraphs","createUnion","assignPatternSources","createPattern","results","passedGraphs","Set","bindingsStream","multiTransform","bindings","graphValue","EmptyIterator","add","TransformIterator","async","it","BufferedIterator","getObjectsPredicateStar","count","next","maxBufferSize","autoStart","metadata","getObjectsPredicateStarEval","emitFirstSubject","termType","PathVariableObjectIterator","Promise","resolve","getProperty","metadataInner","cardinality","termHashes","counter","termString","termToString","_push","thisVariable","getSubjectAndObjectBindingsPredicateStar","subjectVar","objectVar","subjectVal","objectVal","termHashesGlobal","termHashesCurrentSubject","objects","promise","reject","objectsArray","Algebra","types","ALT","SEQ","input","flatMap","subOp","INV","ONE_OR_MORE_PATH","ZERO_OR_MORE_PATH","ZERO_OR_ONE_PATH","LINK","NPS","source","getOperationSource","pattern","assignOperationSource","Factory","maxRunningOperations","runningOperations","pendingOperations","pushAsResult","_read","self","pendingOperation","pop","runningOperation","_fillBufferAsync","setProperty","lastCount","then","bus_context_preprocess_1","core_1","ActorContextPreprocessConvertShortcuts","ActorContextPreprocess","test","_action","run","action","expandShortcuts","contextKeyShortcuts","key","keys","ActionContextKey","delete","lru_cache_1","ActorContextPreprocessQuerySourceIdentify","cache","cacheSize","LRUCache","max","httpInvalidator","addInvalidateListener","url","clear","KeysInitQuery","querySourcesUnidentified","querySourcesUnidentifiedExpanded","all","querySource","expandSource","querySources","identifySource","querySourceUnidentified","mediatorContextPreprocess","ActionContext","ensureActionContext","sourcePromise","mediatorQuerySourceIdentify","QuerySourceSkolemized_1","utils_1","ActorContextPreprocessQuerySourceSkolemize","KeysQuerySourceIdentify","sourceIds","getSafe","sourceWrapper","QuerySourceSkolemized","getSourceId","metadata_1","innerSource","sourceId","getSelectorShape","queryBindings","operationMapped","deskolemizeOperation","ArrayIterator","state","MetadataValidationState","canContainUndefs","skolemizeBindingsStream","queryBoolean","queryQuads","skolemizeQuadStream","queryVoid","referenceValue","toString","data_factory_1","rdf_terms_1","skolemizeTerm","term","BlankNodeScoped","namedNode","SKOLEM_PREFIX","skolemizeQuad","quad","mapTermsNested","skolemizeBindings","deskolemizeTerm","skolemized","startsWith","colonSeparator","termLabel","blankNode","deskolemizeTermNestedThrowing","subTerm","deskolemized","ret","size","iterator","inheritMetadata","Util","mapOperation","PATTERN","op","factory","Object","assign","recurse","PATH","ActorContextPreprocessSetDefaults","defaultFunctionArgumentsCache","initialize","setDefault","queryTimestamp","Date","KeysCore","log","logger","functionArgumentsCache","hypermediaSourcesAggregatedStores","queryFormat","language","version","graphqlSingularizeVariables","ActorContextPreprocessSourceToDestination","KeysRdfUpdateQuads","destination","bus_hash_bindings_1","hash_js_1","canonicalize","ActorHashBindingsSha1","ActorHashBindings","allowHashCollisions","hashFunction","sha1","update","fromEntries","digest","hashCollisions","bus_hash_quads_1","ActorHashQuadsSha1","ActorHashQuads","JSON","stringify","quadToStringQuad","ActorInitQueryBase_1","process","globalThis","ActorInitQuery","ActorInitQueryBase","bus_init_1","ActorInit","actorInitQuery","query","queryOfType","expectedType","resultType","execute","output","queryOrExplain","explain","explainMode","actionContext","noCache","invalidateHttpCache","mediatorQueryProcess","internalToFinalResult","getResultMediaTypes","mediatorQueryResultSerializeMediaTypeCombiner","mediaTypes","getResultMediaTypeFormats","mediatorQueryResultSerializeMediaTypeFormatCombiner","mediaTypeFormats","resultToString","queryResult","mediaType","handle","finalToInternalResult","mediatorQueryResultSerialize","handleMediaType","mediatorHttpInvalidate","internalResult","quadStream","finalResult","QueryEngineBase_1","enumerable","bus_optimize_query_operation_1","bus_rdf_update_quads_1","ActorOptimizeQueryOperationAssignSourcesExhaustive","ActorOptimizeQueryOperation","getDataDestinationValue","shape","doesShapeAcceptOperation","assignExhaustive","queryString","subOperation","createAlt","SERVICE","CONSTRUCT","createConstruct","template","DELETE_INSERT","createDeleteInsert","insert","where","ActorOptimizeQueryOperationBgpToJoin","bgp","createJoin","patterns","Keys_1","ActorOptimizeQueryOperationConstructDistinct","distinctConstruct","construct","AF","ActorOptimizeQueryOperationDescribeToConstructsSubject","DESCRIBE","operationOriginal","operations","terms","filter","forEach","templatePattern","BGP","variablePatterns","JOIN","ActorOptimizeQueryOperationFilterPushdown","splitConjunctive","expression","expressionType","expressionTypes","OPERATOR","operator","logDebug","reduce","createFilter","getSources","sourceShapes","repeat","iterations","maxIterations","shouldAttemptPushDown","getExpressionVariables","isModified","filterPushdown","mergeConjunctive","FILTER","nestedExpressions","getNestedFilterExpressions","previous","current","createOperatorExpression","aggressivePushdown","some","sourceAdder","src","recurseOperation","AGGREGATE","WILDCARD","EXISTENCE","inScopeVariables","NAMED","uniqTerms","arg","TERM","getOverlappingOperations","expressionVariables","fullyOverlapping","partiallyOverlapping","notOverlapping","inputVariables","variablesSubSetOf","variablesIntersect","isExpressionFalse","EXPRESSION","EXTEND","createExtend","joins","NOP","PROJECT","createProject","UNION","unions","VALUES","LEFT_JOIN","pushIntoLeftJoins","rightVariables","createLeftJoin","pushEqualityIntoPatterns","pushableResult","getEqualityExpressionPushableIntoPattern","originalMetadata","equals","MINUS","ASK","DISTINCT","FROM","GRAPH","GROUP","ORDER_BY","REDUCED","SLICE","COMPOSITE_UPDATE","LOAD","CLEAR","CREATE","DROP","ADD","MOVE","COPY","isLiteralWithCanonicalLexicalForm","datatype","varsA","varsB","varA","varB","varsNeedles","varsHaystack","every","childData","ActorOptimizeQueryOperationGroupSources","groupOperation","groupedInput","scopedSource","removeOperationSource","inputs","subInput","clusters","clusterOperationsWithEqualSources","newInputs","moveSourceAnnotationUpwardsIfPossible","multiFactoryMethod","createSeq","groupOperationMulti","factoryMethod","flatten","nestedMerges","cluster","merged","operationsIn","sourceOperations","sourcelessOperations","entries","ActorOptimizeQueryOperationJoinBgp","join","createBgp","ActorOptimizeQueryOperationJoinConnected","oldClusters","newClusters","clusterIteration","subJoins","oldCluster","entry","joined","newEntry","haveOverlappingVariables","variablesA","variablesB","variableA","ActorOptimizeQueryOperationPruneEmptySourceOperations","collectedOperations","collectMultiOperationInputs","emptyOperations","checkOperation","collectedOperation","iri","hasSourceResults","mapMultiOperation","children","hasEmptyOperation","emptyOperation","subSubOperation","inputType","multiOperationFactory","nonEmptyInputs","traverse","useAskIfSupported","askOperation","createAsk","ActorOptimizeQueryOperationRewriteAdd","defaultGraph","ActorOptimizeQueryOperationRewriteCopy","createCompositeUpdate","createDrop","createAdd","silent","ActorOptimizeQueryOperationRewriteMove","updates","ActorQueryOperationAsk","_operation","runOperation","take","toArray","ActorQueryOperationBgpJoin","BindingsToQuadsIterator_1","ActorQueryOperationConstruct","getVariables","concat","apply","getTermsNested","meta","order","availableOrders","BindingsToQuadsIterator","blankNodeCounter","bindTerm","bindQuad","boundTerm","localizeBlankNode","localizeQuad","bindTemplate","x","Boolean","ActorQueryOperationDistinctHash","mediatorHashQuads","outputQuads","getSafeQuads","newHashFilterQuads","outputBindings","newHashFilter","mediatorHashBindings","hashes","_quad","bindings_factory_1","expression_evaluator_1","ActorQueryOperationExtend","BindingsFactory","create","mediatorMergeBindingsContext","AsyncEvaluator","getAsyncExpressionContext","innerVariable","config","evaluator","evaluate","isExpressionError","logWarn","message","bindingsToString","outputMetadata","ActorQueryOperationFilter","outputRaw","validateQueryOutput","evaluateAsEBV","ActorQueryOperationFromQuad","copyOperation","recursiveCb","copiedOperation","ALGEBRA_TYPES","includes","applyOperationDefaultGraph","defaultGraphs","joinOperations","bgps","unionOperations","paths","applyOperationNamedGraph","namedGraphs","patternGraph","values","createValues","pat","namedGraph","createOperation","default","named","GroupsState_1","ActorQueryOperationGroup","aggregate","aggregates","agg","sparqleeConfig","groups","GroupsState","bindingsStreamInner","collectResults","consumeBindings","catch","groupsInitializer","groupVariables","waitCounter","resultHasBeenCalled","check","resultCheck","grouper","_","groupHash","hashBindings","res","groupInitializer","groupInitializerDefined","group","aggregators","put","subtractWaitCounterAndCollect","AsyncAggregateEvaluator","handleResultCollection","rows","groupBindings","returnBindings","single","emptyValue","waitResolver","ActorQueryOperationJoin","mediatorJoin","ActorQueryOperationLeftJoin","ActorQueryOperationMinus","ActorQueryOperationNop","SingletonIterator","SortIterator_1","ActorQueryOperationOrderBy","window","Number","POSITIVE_INFINITY","expr","expressions","extractSortExpression","isAscending","transformedStream","sortedStream","SortIterator","compare","orderTypes","sort","windowLength","isFinite","sorted","mid","Math","trunc","_flush","actor_abstract_path_1","actor_query_operation_union_1","ActorQueryOperationPathAlt","subOperations","subPredicate","UnionIterator","subMeta","ActorQueryOperationUnion","unionMetadata","mediatorRdfMetadataAccumulate","ActorQueryOperationPathInv","invPath","ActorQueryOperationPathLink","ActorQueryOperationPathNps","blank","iris","ActorQueryOperationPathOneOrMore","distinct","starEval","createOneOrMorePath","createInv","ActorQueryOperationPathSeq","joiner","generatedVariableNames","nextJoiner","generatedVariableName","joinMetadata","ActorQueryOperationPathZeroOrMore","sVar","oVar","entities","subjectGraphHash","objectGraphHash","pred","ActorQueryOperationPathZeroOrOne","extra","bindingsOne","varP","bindingsZero","createTermExpression","prepend","ActorQueryOperationProject","deleteVariables","subVariable","deleteVariable","scopedBlankNodesCache","BlankNodeBindingsScoped","scopedBlankNode","ActorQueryOperationReducedHash","ActorQueryOperationService","forceSparqlEndpoint","ActorQueryOperationSlice","limitIndicator","sliceStream","sliceMetadata","hasLength","start","end","offset","limit","subMetadata","min","ActorQueryOperationSource","httpRequests","physicalQueryPlanLogger","logOperation","physicalQueryPlanNode","mergedContext","merge","getMetadataQuads","getMetadataBindings","unionVariables","flat","metadatas","accumulatedMetadata","mode","appendingMetadata","invalidateListener","invalidate","outputsRaw","outputType","outputs","ActorQueryOperationClear","throwOnReadOnly","graphs","mediatorUpdateQuads","deleteGraphs","requireExistence","dropGraphs","ActorQueryOperationUpdateCompositeUpdate","subResult","getSafeVoid","ActorQueryOperationCreate","createGraphs","requireNonExistence","actor_query_operation_construct_1","ActorQueryOperationUpdateDeleteInsert","whereBindings","quadStreamInsert","quadStreamDelete","ActorQueryOperationDrop","ActorQueryOperationLoad","subContext","lenient","ActorQueryOperationValues","ActorQueryOperationTyped","bus_query_parse_1","sparqljs_1","ActorQueryParseSparql","ActorQueryParse","prefixes","freeze","parsedSyntax","Parser","baseIRI","sparqlStar","parse","base","translate","quads","blankToVariable","bus_query_process_1","ActorQueryProcessSequential","ActorQueryProcess","optimize","queryParseOutput","mediatorQueryParse","initialBindings","materializeOperation","mediatorOptimizeQueryOperation","bus_query_source_identify_1","QuerySourceRdfJs_1","ActorQuerySourceIdentifyRdfJs","ActorQuerySourceIdentify","QuerySourceRdfJs","nullifyVariables","quotedTripleFiltering","someTermsNested","hasDuplicateVariables","filterTermsNested","SELECTOR_SHAPE","features","rawStream","wrap","filterMatchingQuotedQuads","setMetadata","quadsToBindings","unionDefaultGraph","countQuads","wouldRequirePostFiltering","someTerms","operationType","variablesOptional","bus_rdf_join_entries_sort_1","ActorRdfJoinEntriesSortCardinality","ActorRdfJoinEntriesSort","entryLeft","entryRight","bus_rdf_join_1","asyncjoin_1","ActorRdfJoinHash","ActorRdfJoin","logicalType","physicalName","limitEntries","requiresVariableOverlap","getOutput","getMetadatas","overlappingVariables","joinBindings","constructResultMetadata","getJoinCoefficients","requestInitialTimes","getRequestInitialTimes","requestItemTimes","getRequestItemTimes","persistedItems","blockingItems","requestTime","ActorRdfJoinMultiBindSource","canHandleUndefs","entriesUnsorted","getEntriesWithMetadatas","sortJoinEntries","element","smallestStream","smallestMetadata","remainingEntries","createOperationFromEntries","chunkedStreams","ChunkedIterator","blockSize","chunk","physicalPlanMetadata","bindIndex","mediatorJoinEntriesSort","operationModified","remainingRequestInitialTimes","remainingRequestItemTimes","testingOperation","selectorShape","selectivities","mediatorJoinSelectivity","selectivity","selectivityModifier","cardinalityRemaining","sum","ActorRdfJoinMultiBind","minMaxCardinalityRatio","isLeaf","createBindStream","bindOrder","baseStream","operationBinder","optional","autoStartSubBindings","binder","bindFilter","bindingsMerger","subBindings","joinLeftMetadata","joinRightMetadatas","operationBindings","bindOperation","bindOperationCardinality","canBindWithOperation","valid","receiveInitialCostRemaining","receiveItemCostRemaining","ActorRdfJoinMultiEmpty","getCardinality","joinVariables","_metadatas","ActorRdfJoinMultiSmallestFilterBindings","limitEntriesMin","entriesSorted","first","second","secondIndex","secondSharedVariables","sharedVariables","variableFirst","variableSecond","remaining","secondIn","remainingIn","smallestStream1","commonVariables","smallestStream1Projected","binding","commonVariable","filterBindings","joinedEntry","KeysRdfJoin","lastPhysicalJoin","unshift","firstIndex","remain","mul","ActorRdfJoinMultiSmallest","smallestEntry1","smallestEntry2","firstEntry","entriesWithMetadata","acc","ActorRdfJoinNestedLoop","ActorRdfJoinNone","ActorRdfJoinSingle","includeInLogs","ActorRdfJoinSymmetricHash","BindingsIndex_1","ActorRdfJoinMinusHashUndef","buffer","index","BindingsIndex","ClosableTransformIterator","data","contains","onClose","bufferMetadata","hashTerm","isBindingsValid","dataIt","dataKey","subDataIt","containsRecursive","validKeys","dataIndexes","subDatas","subKey","ActorRdfJoinMinusHash","hashNonClashing","actor_rdf_join_inner_multi_bind_1","ActorRdfJoinOptionalBind","BindingsIndexDef_1","BindingsIndexUndef_1","ActorRdfJoinOptionalHash","blocking","constructIndex","undef","BindingsIndexUndef","BindingsIndexDef","getFirst","indexBindings","b","indexActive","iterators","hashFn","v","getRecursive","matchingRecursive","getRecursiveFirst","ActorRdfJoinOptionalNestedLoop","bus_rdf_join_selectivity_1","ActorRdfJoinSelectivityVariableCounting","ActorRdfJoinSelectivity","accuracy","getPatternCost","cost","getJoinTypes","operation1","operation2","joinTypes","JoinTypes","unboundSS","unboundSP","unboundSO","unboundSG","boundSS","boundSP","boundSO","boundSG","unboundPS","unboundPP","unboundPO","unboundPG","boundPS","boundPP","boundPO","boundPG","unboundOS","unboundOP","unboundOO","unboundOG","boundOS","boundOP","boundOO","boundOG","unboundGS","unboundGP","unboundGO","unboundGG","boundGS","boundGP","boundGO","boundGG","getOperationsPairwiseJoinCost","MAX_PAIRWISE_COST","joinType","getOperationsJoinCost","totalCost","costEntries","pattern1","pattern2","factor","bus_rdf_metadata_accumulate_1","ActorRdfMetadataAccumulateCanContainUndefs","ActorRdfMetadataAccumulate","ActorRdfMetadataAccumulateCardinality","dataset","subsetOf","ActorRdfMetadataAccumulatePageSize","pageSize","ActorRdfMetadataAccumulateRequestTime","RdfJsQuadDestination_1","ActorRdfUpdateQuadsRdfJsStore","ActorRdfUpdateQuadsDestination","getContextDestination","remove","getDestination","RdfJsQuadDestination","event_emitter_promisify_1","store","promisifyEventEmitter","import","_requireExistence","_dropGraphs","deleteGraph","allQuads","stringToTerm","eventEmitter","once","immutable_1","bindingsToString_1","Bindings","dataFactory","contextHolder","mapIterable","iteratorToIterable","fn","Symbol","other","createBindingsWithContexts","mergeWith","merger","mergeContext","contextMergeHandlers","otherContext","allKeys","newContextData","handledKeys","keysSetOtherContext","keysBothContext","occursInBoth","setContextEntry","setContextEntryRaw","deleteContextEntry","deleteContextEntryRaw","getContext","getContextEntry","iterable","callback","Bindings_1","mergeHandlers","fromBindings","fromRecord","record","raw","Actor","ActorHttpInvalidate","ActorHttpInvalidate_1","ActorHttpInvalidateListenable","invalidateListeners","listener","bnodeCounter","getSafeBoolean","getBaseExpressionContext","now","extensionFunctionCreator","extensionFunctions","functionNamedNode","getExpressionContext","_mediatorQueryOperation","bnode","exists","createExistenceResolver","not","readOnly","child","ActorQueryOperation_1","operationName","cachifyMetadata","ActorQueryOperationTyped_1","TRUE","literal","materializeTerm","createValuesFromBindings","newBinding","strictTargetVariables","originalBindings","extend","createGroup","project","bindingKey","curVariable","recursionResult","recursionResultExpression","recursionResultInput","valueBindings","keyString","aggregator","BusQueryOperation","BusIndexed","actorIdentifierFields","actionIdentifierFields","ClosableIterator","_source","DESTINATION","destinationClose","destinationEmitError","destinationSetReadable","removeListener","QuadTermUtil_1","isTermVariable","getDuplicateElementLinks","variableElements","duplicateVariables","forEachTermsNested","val","duplicateElementLinks","elements","remainingElements","elementVariables","forceEstimateCardinality","getMetadataCb","metadataRaw","quadsMetadataToBindingsMetadata","validateMetadataQuads","metadataQuads","quadsOrderToBindingsOrder","orderDef","quadsOrder","mappedVariables","variableName","direction","filterNonDefaultQuads","reduceTermsNested","filteredOutput","keyLeft","keysLeft","split","valueLeft","getValueNestedPath","keysRight","matchPatternMappings","instrumentIterator_1","baseArray","array","el","constructState","partialMetadata","cardinalityJoined","cardinalityThis","variableOccurrences","multiOccurrenceVariables","entriesWithoutCommonVariables","hasCommon","leftWithoutCommonVariables","parentPhysicalQueryPlanNode","planMetadata","stashChildren","node","logicalOperator","instrumentIterator","counters","appendMetadata","cardinalityReal","timeSelf","timeLife","cardinalities","joinCoefficients","unstashChild","consumeChunkAsIterator","_transform","instrumentIteratorInner","top","_profileInstrumented","readOld","startTime","performance","ActorRdfUpdateQuads","actor_context_preprocess_query_source_skolemize_1","ActorRdfUpdateQuads_1","deskolemizeStream","id","deskolemizeQuad","deskolemize","isDataDestinationRawType","dataDestination","fileUrl","hashPosition","CONTEXT_KEY_LOGGER","includeCredentials","auth","fetch","httpTimeout","httpBodyTimeout","httpRetryCount","httpRetryDelay","httpRetryOnServerError","recoverBrokenLinks","datetime","httpProxyHandler","cliArgsHandlers","jsonLdContext","documentLoader","strictValues","parserOptions","processingHtmlScript","extractAllScripts","sourcesBinding","setRaw","getRaw","hasRaw","contexts","keyName","toJS","for","maybeActionContext","ContextEntries_1","beforeActors","bus","subscribe","addDependencies","getContextLogger","runObservable","onRun","deinitialize","getDefaultLogData","dataActual","actor","logTrace","trace","debug","logInfo","info","warn","logError","logFatal","fatal","actors","observers","dependencyLinks","reorderForDependencies","subscribeObserver","observer","unsubscribe","unsubscribeObserver","publish","reply","dependent","dependencies","dependency","existingDependencies","actorsAfter","actorAfter","dependentPos","activeActorAfterId","validLink","activeActorAfter","Bus_1","Bus","actorsIndex","actorId","getActorIdentifier","actionId","getActionIdentifier","_undefined_","field","ActionContext_1","mediateActor","mediateWith","singleBindingsScope","RdfString","TermTransformer_1","Consts_1","TypeHandling_1","sharedContext","separator","termTransformer","TermTransformer","superTypeProvider","termToNumericOrError","isSubTypeOf","TypeAlias","SPARQL_NUMERIC","transformLiteral","aggregatorComponent","variableValues","component","canSkip","addSeen","E","functions_1","Helpers_1","C","Aggregator_1","Average","AggregatorComponent","summer","regularFunctions","RegularOperator","ADDITION","divider","DIVISION","integer","toRDF","internalTerm","IntegerLiteral","Count","GroupConcat","lastLanguageValid","lastLanguage","string","langString","Ordering_1","Max","Min","Sample","Sum","bindingValues","putBindings","handleDistinct","bindingList","snd","localeCompare","Average_1","Count_1","GroupConcat_1","Max_1","Min_1","Sample_1","Sum_1","avg","group_concat","sample","BaseAggregateEvaluator_1","SyncEvaluator_1","AggregateEvaluator","BaseAggregateEvaluator","throwError","SyncEvaluator","completeContext","errorOccurred","isWildcard","wildcardAggregator","startTerm","safeThrow","err","AsyncEvaluator_1","AlgebraTransformer_1","DateTimeHelpers_1","AsyncRecursiveEvaluator_1","typeCache","discoverer","getSuperType","defaultTimeZone","extractTimeZone","algExpr","creator","baseContext","transformer","AlgebraTransformer","transformAlgebra","AsyncRecursiveEvaluator","mapping","coerceEBV","evaluateAsInternal","SyncRecursiveEvaluator_1","SyncRecursiveEvaluator","Err","BaseExpressionEvaluator_1","BaseExpressionEvaluator","subEvaluators","ExpressionType","Term","_mapping","Variable","Operator","evalOperator","SpecialOperator","evalSpecialOperator","Named","evalNamed","Existence","evalExistence","Aggregate","evalAggregate","AsyncExtension","evalAsyncExtension","InvalidExpressionType","argPromises","argResults","applyAsync","_evalAsyncArgs","NoExistenceHook","BooleanLiteral","NoAggregator","transformRDFTermUnsafe","aggregators_1","WildcardCountAggregator_1","Aggregator","WildcardCountAggregator","EmptyAggregateError","expressionToVar","UnboundVariableError","SyncExtension","evalSyncExtension","applySynchronously","Expressions_1","Serialization_1","str","InvalidArgumentTypes","STR","EBVCoercionError","valueTerm","RDFsubject","RDFpredicate","RDFobject","Literal","typedValue","dataType","strValue","NumericLiteral","replace","specificFormatter","TypeURL","XSD_INTEGER","toFixed","XSD_DECIMAL","XSD_FLOAT","XSD_DOUBLE","jsExponential","toExponential","jsMantisse","jsExponent","exponent","XSD_BOOLEAN","RDF_LANG_STRING","XSD_STRING","XSD_DATE_TIME","serializeDateTime","XSD_TIME","serializeTime","XSD_DATE","serializeDate","DurationLiteral","XSD_DURATION","serializeDuration","XSD_DAY_TIME_DURATION","XSD_YEAR_MONTH_DURATION","NonLexicalLiteral","openWorldType","lit","BaseFunction","definition","monomorph","handleInvalidTypes","concreteFunction","arity","overloads","search","functionClass","checkArity","expressions_1","OverloadTree_1","identifier","Builder","overloadTree","OverloadTree","collected","collect","wrapInvalidLexicalProtected","func","InvalidLexicalForm","argTypes","addInvalidHandling","addOverload","copy","from","to","impl","getImplementationExact","UnexpectedError","onUnary","onUnaryTyped","onBinary","onBinaryTyped","onTernaryTyped","a1","a2","a3","onTernary","onQuaternaryTyped","a4","onTerm1","onTerm3","t1","t2","t3","onQuad1","onLiteral1","onBoolean1","onBoolean1Typed","onString1","onString1Typed","onLangString1","onStringly1","SPARQL_STRINGLY","onStringly1Typed","onNumeric1","onDateTime1","numericConverter","evalHelper","decimal","float","double","arithmetic","numberTest","numeric","bool","stringTest","booleanTest","dateTimeTest","num","DecimalLiteral","FloatLiteral","DoubleLiteral","StringLiteral","lang","LangStringLiteral","date","DateTimeLiteral","variableExpression","Parsing_1","xsdToString","declare","xsdToFloat","parseXSDFloat","CastError","xsdToDouble","xsdToDecimal","parseXSDDecimal","xsdToInteger","parseXSDInteger","xsdToDatetime","dateTime","parseDateTime","hours","minutes","seconds","xsdToBoolean","xsdToTime","TimeLiteral","parseTime","xsdToDate","DateLiteral","parseDate","xsdToDuration","parseDuration","xsdToDayTimeDuration","DayTimeDurationLiteral","trimToDayTimeDuration","parseDayTimeDuration","xsdToYearMonthDuration","YearMonthDurationLiteral","trimToYearMonthDuration","parseYearMonthDuration","depth","implementation","generalOverloads","literalOverLoads","promotionCount","getSubtree","overrideType","generalType","asGeneralType","cacheIter","searchIndex","literalExpression","isLiteralTermExpression","searchStack","getSubTreeWithArg","startIndex","addToCache","getDefault","lruCache","argumentTypes","_addOverload","argumentType","_argumentTypes","nextTree","newNode","asOverrideType","typePromotion","addPromotedOverload","typeToPromote","conversionFunction","funcConf","concreteType","asKnownLiteralType","subExtensionTable","superTypeDictTable","getSuperTypes","matchType","tree","prioA","matchTypeA","prioB","matchTypeB","sortedType","bignumber_js_1","relative_to_absolute_iri_1","spark_md5_1","uuid","SpecAlgos_1","Core_1","X","_1","NOT","unaryPlus","UPLUS","unaryMinus","UMINUS","multiplication","MULTIPLICATION","BigNumber","times","toNumber","division","div","ExpressionError","addition","plus","dur","addDurationToDateTime","defaultedDurationRepresentation","defaultedDateTimeRepresentation","time","subtraction","SUBTRACTION","minus","date1","date2","elapsedDuration","negateDuration","equality","EQUAL","toUTCDate","getTime","RegularFunction","_left","_right","RDFEqualTypeError","RDFTermEqual","dur1","dur2","yearMonthDurationsToMonths","defaultedYearMonthDurationRepresentation","dayTimeDurationsToSeconds","defaultedDayTimeDurationRepresentation","time1","time2","inequality","NOT_EQUAL","lesserThan","LT","dur1L","dur2L","greaterThan","GT","lesserThanEqual","LTE","greaterThanEqual","GTE","isIRI","IS_IRI","isBlank","IS_BLANK","isLiteral","IS_LITERAL","isNumeric","IS_NUMERIC","LANG","DATATYPE","NamedNode","IRI","STRDT","STRLANG","toLowerCase","UUID","v4","STRUUID","STRLEN","SUBSTR","startingLoc","sub","UCASE","toUpperCase","LCASE","STRSTARTS","arg1","arg2","IncompatibleLanguageOperation","STRENDS","endsWith","CONTAINS","STRBEFORE","STRAFTER","ENCODE_FOR_URI","encodeURI","langmatches","LANG_MATCHES","tag","range","langMatches","REGEX","text","flags","REPLACE","replacement","abs","ABS","round","ROUND","ceil","CEIL","floor","FLOOR","rand","RAND","random","NOW","toDateTimeRepresentation","timeZone","year","YEAR","month","MONTH","day","DAY","HOURS","MINUTES","SECONDS","timezone","TIMEZONE","duration","zoneHours","zoneMinutes","InvalidTimezoneCall","tz","TZ","extractRawTimeZone","MD5","SHA1","SHA256","sha256","SHA384","sha384","SHA512","sha512","triple","TRIPLE","Quad","SUBJECT","PREDICATE","OBJECT","istriple","IS_TRIPLE","uplus","uminus","isiri","isuri","isblank","isliteral","isnumeric","uri","strdt","strlang","struuid","strlen","substr","ucase","lcase","strstarts","strends","strbefore","strafter","encode_for_uri","regex","md5","bound","bound_","BOUND","ifSPARQL","valFirst","coalesce","errors","CoalesceError","logicalOr","leftExpr","rightExpr","logicalAnd","sameTerm","inSPARQL","inRecursiveAsync","inRecursiveSync","needle","InError","nextExpression","shift","notInSPARQL","_in","specialFunctions","IN","isIn","concatTree","CONCAT","pLits","pTerm","lits","langAllEqual","bnodeTree","BNODE","strInput","BlankNode","BNODE_","if","sameterm","in","notin","_isWildCard","_matchLangTag","RegExp","reg","global","langTags","rangeTags","lI","rI","NamedFunctions_1","RegularFunctions_1","SpecialFunctions_1","definitions","specialDefinitions","SpecialFunction","namedDefinitions","NamedFunction","AggregateEvaluator_1","Errors_1","AsyncAggregateEvaluator_1","algebraConfig","creatorConfig","transformTerm","transformOperator","transformNamed","transformExistence","transformAggregate","transformWildcard","wildcard","SpecialOperators","specialOp","specialArgs","specialFunc","InvalidArity","Operators","UnknownOperator","regularOp","regularArgs","regularFunc","hasCorrectArity","wrapSyncFunction","ExtensionFunctionError","wrapAsyncFunction","funcName","namedArgs","NamedOperators","namedFunc","namedFunctions","syncExtensionFunc","simpleAppl","asyncExtensionFunc","asyncAppl","UnknownNamedOperator","RDFString","P","InvalidExpression","InvalidTermType","superTypeDict","getSuperTypeDict","dateVal","isNaN","intVal","isFloat","isDouble","doubleVal","SetFunction","RegularOperators","rep","toJSDate","jumpDeltaOfDate","setFullYear","getFullYear","temp","years","days","getMonth","getDate","getHours","getMinutes","getSeconds","defaultTimezone","localTime","minutesCorrectionLocal","getTimezoneOffset","hourCorrectionUTC","minutesCorrectionUTC","zoneContained","exec","pp","arg0","cast","dateString","payload","functionError","stack","comparePrimitives","valueA","valueB","termA","termB","strict","typeDiscoveryCallback","_TERM_ORDERING_PRIORITY","orderSubject","orderPredicate","orderObject","litA","litB","isGreater","isEqual","myLitA","myLitB","compareType","orderLiteralTypes","InvalidCompareArgumentTypes","DefaultGraph","parseTimeZone","timeZoneStr","replaceAll","dateStr","formatted","ParseError","dateStrings","maximumDayInMonthFor","__parseTime","timeStr","timeStrings","durationStr","dayNotation","timeNotation","formattedDayDur","durationStrings","formattedTimeDur","sign","simplifyDurationRepresentation","numb","NaN","NEGATIVE_INFINITY","parseInt","dateTimeStr","numSerializer","toLocaleString","minimumIntegerDigits","useGrouping","serializeTimeZone","zeroString","fDiv","high","low","intDiv","remainder","yearValue","monthValue","additionalYears","newDate","tempDiv","carry","d1","d2","diff","cached","__depth","subExtension","knownValue","extensionTableInit","_key","extensionTableInput","extensionTableBuilderInitKey","baseRes","baseType","XSD_DATE_TIME_STAMP","XSD_NORMALIZED_STRING","XSD_TOKEN","XSD_LANGUAGE","XSD_NM_TOKEN","XSD_NAME","XSD_NC_NAME","XSD_ENTITY","XSD_ID","XSD_ID_REF","XSD_NON_POSITIVE_INTEGER","XSD_NEGATIVE_INTEGER","XSD_LONG","XSD_INT","XSD_SHORT","XSD_BYTE","XSD_NON_NEGATIVE_INTEGER","XSD_POSITIVE_INTEGER","XSD_UNSIGNED_LONG","XSD_UNSIGNED_INT","XSD_UNSIGNED_SHORT","XSD_UNSIGNED_BYTE","XSD_G_MONTH","XSD_G_MONTHDAY","XSD_G_YEAR","XSD_G_YEAR_MONTH","XSD_G_DAY","XSD_ANY_URI","typeAliasCheck","initTypeAliasCheck","asTermType","types_1","LoggerVoid","Logger","MediatorAll","Mediator","validActors","testResults","testResult","MediatorCombinePipeline","filterErrors","_testResults","getOrder","elem","TypeError","actor1","actor2","MediatorCombineUnion","combiner","createCombiner","MediatorJoinCoefficientsFixed","promises","coefficients","costs","coeff","cpuWeight","memoryWeight","timeWeight","ioWeight","maxCost","minIndex","minValue","bestActor","MediatorNumber","indexPicker","createIndexPicker","tests","prev","curr","getOrDefault","defaultValue","ignoreErrors","dummy","MediatorRace","subError","validateMetadataBindings","lastReturn","lastReturnValue","getLevelOrdinal","level","LEVELS","globalObject","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","a","s","z","j","r","charCodeAt","y","xc","c","yc","k","e","l","intCheck","String","isOdd","charAt","toFixedPoint","len","zs","configObject","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","substring","DEBUG","format","rm","c0","ne","maxOrMin","normalise","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","dp","Uint32Array","toBaseOut","baseIn","baseOut","arrL","arr","reverse","callerIsToString","pow","multiply","m","xlo","xhi","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","integerValue","isEqualTo","eq","isGreaterThan","gt","isGreaterThanOrEqualTo","gte","isLessThan","lt","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","md","d0","exp","n0","n1","toPrecision","toJSON","serialize","Function","cv","ci","defineProperty","event","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","init","emitter","errorListener","resolver","eventTargetAgnosticAddListener","handler","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","events","existing","warning","newListener","warned","w","console","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","equal","ArrayBuffer","isView","utils","common","sha","ripemd","hmac","sha224","ripemd160","assert","BlockHash","pending","pendingTotal","outSize","hmacStrength","padLength","endian","_delta8","_delta32","msg","enc","join32","_update","_pad","_digest","bytes","Hmac","Hash","inner","outer","_init","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","h","f","K","Kh","inherits","A","B","D","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","W","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","g","T1","T2","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","zero2","word","zero8","toHex","buf","pos","lo","hi","DELETE","SHIFT","SIZE","MASK","NOT_SET","SetRef","ref","OwnerID","ensureSize","iter","__iterate","returnTrue","wrapIndex","uint32Index","wholeSlice","begin","resolveBegin","resolveIndex","resolveEnd","defaultIndex","Infinity","IS_COLLECTION_SYMBOL","isCollection","maybeCollection","IS_KEYED_SYMBOL","isKeyed","maybeKeyed","IS_INDEXED_SYMBOL","isIndexed","maybeIndexed","isAssociative","maybeAssociative","Collection","Seq","KeyedCollection","KeyedSeq","__proto__","IndexedCollection","IndexedSeq","SetCollection","SetSeq","Keyed","Indexed","IS_SEQ_SYMBOL","isSeq","maybeSeq","IS_RECORD_SYMBOL","isRecord","maybeRecord","isImmutable","maybeImmutable","IS_ORDERED_SYMBOL","isOrdered","maybeOrdered","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","iteratorValue","iteratorResult","iteratorDone","hasIterator","maybeIterable","getIteratorFn","isIterator","maybeIterator","getIterator","iteratorFn","KEYS","ENTRIES","inspect","toSource","isArrayLike","emptySequence","toSeq","seq","maybeIndexedSeqFromValue","fromEntrySeq","isKeysIterable","toSetSeq","ObjectSeq","seqFromValue","__toString","cacheResult","_cache","__iterateUncached","entrySeq","__iterator","__iteratorUncached","toKeyedSeq","keyedSeqFromValue","toIndexedSeq","indexedSeqFromValue","of","ArraySeq","_array","notSetValue","ii","_object","_keys","EMPTY_SEQ","CollectionSeq","collection","_collection","step","IS_MAP_SYMBOL","isMap","maybeMap","isOrderedMap","maybeOrderedMap","isValueObject","maybeValue","hashCode","is","imul","smi","i32","defaultValueOf","o","hashNullish","hashed","hashNumber","STRING_HASH_CACHE_MIN_STRLEN","stringHashCache","hashString","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","nodeType","uniqueID","documentElement","getIENodeHash","nextHash","isExtensible","configurable","writable","hashJSObj","sym","symbolMap","hashSymbol","nullish","_objHashUID","WeakMap","ToKeyedSequence","indexed","useKeys","_iter","_useKeys","valueSeq","this$1$1","reversedSequence","reverseFactory","mapper","mappedSequence","mapFactory","ToIndexedSequence","ToSetSequence","FromEntriesSequence","validateEntry","indexedCollection","flipFactory","flipSequence","makeSequence","flip","cacheResultThrough","filterFactory","filterSequence","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","skipWhileFactory","skipSequence","skipping","flattenFactory","flatSequence","stopped","flatDeep","currentDepth","sortFactory","comparator","defaultComparator","isKeyedCollection","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","iters","zipAll","zipSequence","sizes","isDone","steps","reify","collectionClass","arrCopy","newArr","invariant","condition","assertNotInfinite","coerceKeyPath","keyPath","isPlainObject","proto","parentProto","nextProto","isDataStructure","quoteString","_ignoreError","shallowCopy","collectionCopy","updateIn$1","updater","updatedValue","updateInDeeply","inImmutable","wasNotSet","existingValue","newValue","nextExisting","nextUpdated","emptyMap","setIn$1","setIn","removeIn","deleteIn","update$1","updateIn","merge$1","mergeIntoKeyedWith","mergeWith$1","collections","collection$1","__ownerID","withMutations","mergeIntoCollection","oldVal","mergeWithSources","mergeDeep$1","mergeDeepWithSources","mergeDeepWith$1","deepMerger","oldValue","newDataStructure","oldSeq","newSeq","deepMergerWith","mergeItem","hasVal","nextVal","mergeDeep","mergeDeepWith","mergeIn","mergeDeepIn","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","__altered","keyValues","_root","updateMap","deleteAll","__hash","OrderedMap","sortBy","MapIterator","iterate","ownerID","makeMap","MapPrototype","removeAll","ArrayMapNode","keyHash","didChangeSize","didAlter","removed","MAX_ARRAY_MAP_SIZE","ValueNode","createNodes","isEditable","newEntries","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","updateNode","MAX_BITMAP_INDEXED_SIZE","including","expandedNodes","HashArrayMapNode","expandNodes","isLeafNode","newBitmap","newNodes","setAt","canEdit","newLen","newArray","after","spliceOut","spliceIn","newCount","MIN_HASH_ARRAY_MAP_SIZE","excluding","packedII","packedNodes","packNodes","HashCollisionNode","mergeIntoNode","keyMatch","maxIndex","EMPTY_MAP","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","subNode","__prev","root","newRoot","newSize","idx1","idx2","IS_LIST_SYMBOL","isList","maybeList","List","empty","emptyList","makeList","VNode","setSize","listNodeFor","_origin","setListBounds","newTail","_tail","getTailOffset","_capacity","updateVNode","_level","updateList","oldSize","arguments$1","seqs","argument","iterateList","DONE","ListPrototype","removeBefore","originIndex","newChild","removingFirst","oldChild","editable","editableVNode","removeAfter","sizeIndex","EMPTY_LIST","tailPos","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","origin","capacity","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","EMPTY_ORDERED_MAP","emptyOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","omap","toMap","IS_STACK_SYMBOL","isStack","maybeStack","Stack","emptyStack","pushAll","head","_head","peek","makeStack","EMPTY_STACK","StackPrototype","unshiftAll","IS_SET_SYMBOL","isSet","maybeSet","isOrderedSet","maybeOrderedSet","deepEqual","notAssociative","flipped","allEqual","bSize","mixin","ctor","methods","keyCopier","result$1","emptySet","fromKeys","keySeq","intersect","sets","SetPrototype","union","updateSet","didChanges","mapEntries","mapped","toRemove","OrderedSet","__make","__empty","EMPTY_SET","makeSet","EMPTY_RANGE","Range","_start","_step","searchValue","possibleIndex","offsetValue","lastIndexOf","getIn$1","searchKeyPath","getIn","hasIn$1","toObject","isIterable","useTuples","toOrderedMap","toOrderedSet","toSet","toStack","toList","__toStringMapper","singleton","concatSeq","concatFactory","returnValue","partition","isKeyedIter","coerce","partitionFactory","find","findEntry","sideEffect","isFirst","reducer","initialReduction","reduceRight","butLast","isEmpty","countBy","countByFactory","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","flatMapFactory","searchKey","groupBy","groupByFactory","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","takeLast","takeWhile","takeSequence","iterating","takeWhileFactory","takeUntil","ordered","keyed","murmurHashOfSize","hashMerge","hashCollection","CollectionPrototype","chain","mapKeys","KeyedCollectionPrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interposedSequence","interposeFactory","interleave","zipped","interleaved","zip","defaultZipper","zipWith","IndexedCollectionPrototype","SetCollectionPrototype","reduction","useFirst","emptyOrderedSet","EMPTY_ORDERED_SET","OrderedSetPrototype","makeOrderedSet","PairSorting","LeftThenRight","RightThenLeft","Record","defaultValues","hasInitialized","throwOnInvalidDefaultValues","RecordType","indices","RecordTypePrototype","_indices","_name","_defaultValues","propName","recordName","setProp","_values","RecordPrototype","displayName","recordSeq","newValues","makeRecord","getDescriptiveName","likeRecord","EMPTY_REPEAT","Repeat","_value","fromJS","converter","fromJSWith","defaultConverter","parentValue","converted","Iterable","superCtor","super_","TempCtor","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","cwd","chdir","dir","umask","__createBinding","k2","BlankNode_1","DefaultGraph_1","Literal_1","NamedNode_1","Quad_1","Variable_1","dataFactoryCounter","blankNodePrefix","languageOrDatatype","INSTANCE","fromTerm","original","fromQuad","resetBlankNodeCounter","RDF_LANGUAGE_STRING","isTermGrounded","termToSignature","quadToSignature","sha1hex","hashTerms","getGraphBlankNodes","uniqGraph","deindexGraph","indexGraph","getQuadsWithoutBlankNodes","getQuadsWithBlankNodes","hasValue","hashValues","getBijectionInner","getBijection","isomorphic","graphA","graphB","nonBlankIndexA","nonBlankIndexB","blankQuadsA","blankQuadsB","blankNodesA","blankNodesB","groundedHashesA","groundedHashesB","hashesA","ungroundedHashesA","hashesB","ungroundedHashesB","hashKeyA","bijection","blankNodeA","blankNodeAString","blankNodeAHash","blankNodeBString","arraysEqual","blankNodeB","array1","array2","hashValue","everyTerms","indexedGraph","stringQuadToQuad","getBlankNodes","groundedHashes","ungroundedHashes","hashNeeded","initialGroundedNodesCount","grounded","uniques","termKey","quadSignatures","quadTerm","getTerms","getLiteralValue","getLiteralType","getLiteralLanguage","TermUtil_1","literalValue","trim","stringTerms","ignoreTags","lastIndex","inQuote","char","escaped","stringQuad","desc","getOwnPropertyDescriptor","__esModule","matchPatternComplete","matchPattern","matchTerm","everyTermsNested","reduceTerms","mapTerms","filterQuadTermNamesNested","filterQuadTermNames","filterTerms","forEachTerms","collectNamedTerms","getNamedTerms","TRIPLE_TERM_NAMES","QUAD_TERM_NAMES","ignoreDefaultGraph","checker","namedTerms","defaultCb","namedTerm","cb","names","keysS","keysP","keysO","keysG","initialValue","opt","_pattern","_a","_b","skipVarMapping","returnMappings","getQuads","getDefaultGraphs","getLiterals","getNamedNodes","getTermsOfType","TERM_TYPES","removeDotSegments","segmentBuffers","isCharacterAllowedAfterRelativePathSegment","removeDotSegmentsOfPath","colonPosition","searchOffset","pathSeparator","character","relativeIRI","baseFragmentPos","baseQueryPos","relativeColonPos","valueColonPos","baseColonPos","baseIRIScheme","baseSlashAfterColonPos","baseIRIPath","baseIRILastSlashPos","hex_chr","md5cycle","md5blk","md5blks","md5blk_array","md51","tmp","rhex","hex","toUtf8","unescape","encodeURIComponent","hexToBinaryString","fromCharCode","SparkMD5","reset","clamp","targetArray","sourceArray","byteLength","Uint8Array","append","appendBinary","contents","_buff","_length","_hash","buff","_finish","getState","setState","hashBinary","content","returnUInt8Array","subarray","utf8Str2ArrayBuffer","md51_array","__setModuleDefault","__importStar","__importDefault","toSparqlJs","toSparql","sparqlAlgebra_1","factory_1","sparql_1","util_1","stringType","createTerm","flattenMulti","createBoundAggregate","createAggregateExpression","createDescribe","createFrom","def","createGraph","createLink","createMinus","createNop","createNps","createOrderBy","createReduced","createService","createSlice","createZeroOrMorePath","createZeroOrOnePath","createExistenceExpression","createNamedExpression","createWildcardExpression","Wildcard","deleteQuads","insertQuads","createLoad","addSilent","createClear","createCreate","createMove","createCopy","newChildren","rdf_isomorphic_1","eTypes","resetContext","translateOperation","removeQuadsRecursive","removeQuads","translateExpression","translateProject","translatePattern","triples","translateBgp","queryType","translateConstruct","translateDistinct","translateExtend","translateFrom","translateFilter","translateGraph","aggs","translateBoundAggregate","translateGroup","translateJoin","leftjoin","translateLeftJoin","translateMinus","translateOrderBy","translatePathComponent","translatePath","reduced","translateReduced","translateService","translateSlice","arrayToPattern","translateUnion","translateValues","translateCompositeUpdate","use","updateType","convertUpdatePatterns","using","translateDeleteInsert","translateLoad","translateClearCreateDrop","translateClear","translateCreate","translateDrop","translateUpdateGraphShortcut","translateAdd","translateMove","translateCopy","aggregation","translateAggregateExpression","translateExistenceExpression","function","translateNamedExpression","translateOperatorExpression","translateTermExpression","translateWildcardExpression","pathType","items","translateAlt","inv","translateInv","translateLink","translateNps","translateOneOrMorePath","translateSeq","translateZeroOrMorePath","translateZeroOrOnePath","translateTerm","replaceAggregatorVariables","st","isSimpleTerm","select","extensions","descending","objectContainsValues","having","vals","keyGraphs","globalNames","newGraphs","graphNameSet","graphPatterns","graphName","splitBgpToGraphs","Generator","varCount","useQuads","translateQuery","sparql","thingy","findAllVariables","translateGraphPattern","mapAggregate","vars","generateFreshVar","translateInlineData","PV","isVariable","translateQuad","translateAggregates","translateSingleUpdate","translateBlankNodesToVariables","isTerm","inScope","simplifyPath","translatePathPredicate","recurseGraph","filters","nonfilters","accumulateGroupGraphPattern","isQuad","hasQuadVariables","normals","inverted","normalElement","invertedElement","simplifiedPath","parser","_resetBlanks","typeVals","G","simplifiedJoin","subthingy","translateUpdateGraphLoad","translateUpdateGraph","deleteTriples","insertTriples","translateUpdateTriplesBlock","translateInsertDelete","currentGraph","currentTriples","blankToVariableMapping","variablesRaw","createUniqueVariable","algebra_1","objectify","algebra","addVariable","v2","recurseTerm","callbacks","doRecursion","recurseOp","copyMetadata","recurseResult","toCopyMetadata","mapOp","mapExpression","cloneOperation","cloneExpression","label","labelLoop","_options","_prefixByIri","prefixIris","isString","iriList","_prefixRegex","_usedPrefixes","_sparqlStar","_indent","indent","_newline","newline","_explicitDatatype","explicitDatatype","toQuery","mapJoin","toEntity","toExpression","variableToString","toUpdate","baseAndPrefixes","allPrefixes","toPattern","encodeTriples","parts","equalTerms","keyword","inline","valuesList","lparen","rparen","service","escape","escapeReplacer","lexical","encodeIRI","escapeReplacements","term1","term2","sep","prefixMatch","currentOptions","createGenerator","SparqlParser","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","$V12","$V22","$V32","$V42","$V52","$V62","$V72","$V82","$V92","$Va2","$Vb2","$Vc2","$Vd2","$Ve2","$Vf2","$Vg2","$Vh2","$Vi2","$Vj2","$Vk2","$Vl2","$Vm2","$Vn2","$Vo2","$Vp2","$Vq2","$Vr2","$Vs2","$Vt2","$Vu2","$Vv2","$Vw2","$Vx2","$Vy2","$Vz2","$VA2","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","propertyList","entity","$0","pathOnly","insertBnodesAll","insertBnodes","$","resolveIRI","groupDatasets","skipValidation","getAggregatesOfExpression","selectVar","groupVar","getExpressionId","usedVars","getVariablesFromExpression","usedVar","subqueries","selectedVarIds","subqueryIds","selectedVarId","appendAllTo","duplicates","sortedArray","getDuplicatesInArray","lowercase","toInt","toVar","valuesObject","appendTo","ensureNoVariables","ensureNoBnodes","unionAll","boundVars","getBoundVarsFromGroupGraphPattern","boundVar","ensureSparqlStar","degroupSingle","applyAnnotations","objectListToTriples","RDF_TYPE","annotation","listItems","listTriples","RDF_FIRST","RDF_REST","RDF_NIL","createList","createOperationTree","negatedLiteral","createTypedLiteral","unescapeString","namePos","expansion","uriString","nestedTriple","table","defaultActions","parseError","recoverable","vstack","lstack","recovering","lexer","sharedState","setInput","yylloc","yyloc","token","ranges","symbol","preErrorSymbol","newState","expected","yyval","lex","errStr","showPosition","line","loc","first_line","last_line","first_column","last_column","RDF","XSD","basePath","baseRoot","operatorName","attr","initialExpression","operationList","fromClauses","groupName","fromClause","defaults","annotations","blankId","escapeSequence","partialSurrogatesWithoutEndpoint","trimLength","sequence","unicode4","unicode8","escapedChar","charCode","objectList","otherTriples","visitExpression","_applyAnnotations","newTriples","EOF","_input","_more","_backtrack","matched","conditionStack","unput","lines","oldLines","backtrack_lexer","less","pastInput","past","upcomingInput","pre","test_match","indexed_rule","backup","tempMatch","rules","_currentRules","flex","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","skipUngroupedVariableCheck","prefixesCopy","_nil","_parse","_stringify","_v","_v2","_v3","_v4","_validate","_version","_interopRequireDefault","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","cnt","md5ff","md5gg","md5hh","md5ii","length32","hexTab","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","_default","randomUUID","rnds8","ROTL","H","N","M","unsafeStringify","byteToHex","_rng","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","_md","URL","DNS","hashfunc","generateUUID","namespace","_namespace","stringToBytes","_native","rnds","_sha","_regex","extensionEntries","isSourceExpression","isPromise","isEventEmitter","isFunction","fromIterable","fromIterator","fromArray","WrappingIterator","ClonedIterator","MappingIterator","identity","IntegerIterator","DESTROYED","ENDED","CLOSED","CLOSING","OPEN","INIT","setTaskScheduler","getTaskScheduler","LinkedList","events_1","linkedlist_1","taskScheduler","createTaskScheduler","task","scheduler","initialState","_readable","_state","waitForDataListener","_changeState","eventAsync","_endAsync","cause","_destroy","closed","destroyed","details","_toStringDetails","resolveItems","pushItem","propertyName","properties","_properties","propertyCallbacks","_propertyCallbacks","getProperties","setProperties","copyProperties","propertyNames","uniq","by","surround","asyncIterator","currentResolve","currentReject","pendingError","tryResolve","tryReject","removeListeners","addSingleListener","emitData","_item","preserve","_index","_sourceStarted","_truncateThreshold","_buffer","_next","ascending","_last","ensureSourceAvailable","_destroySource","destroySource","allowDestination","_maxBufferSize","_reading","_pushedCount","_fillBuffer","doneCalled","_begin","neededItems","_completeClose","_boundPush","_createSource","_loadSourceAsync","_optional","_validateSource","destinationCloseWhenDone","destinationFillBuffer","_readAndTransform","_optionalTransform","pushedCount","_closeWhenDone","_offset","_limit","_filter","_prepender","_appender","_readAndTransformSimple","nextAsync","mappedItem","_insert","inserter","_transformerQueue","transformerQueue","_sources","_currentSource","_pending","loading","_loadSources","_addSource","_destroySources","destroySources","destinationRemoveEmptySources","_removeEmptySources","_readPosition","history","HistoryReader","endsAt","register","readAt","_getSourceProperty","hasProperty","unregister","_history","_trackers","setReadable","tracker","emitError","opts","resolved","scheduleMicrotask","queueMicrotask","scheduleMacrotask","setImmediate","queued","perf","PROCESS","emitWarning","code","AC","AbortController","AS","AbortSignal","onabort","_onabort","reason","aborted","warnACPolyfill","signal","abort","printACPolyfillWarning","LRU_CACHE_IGNORE_AC_WARNING","isPosInt","getUintArray","Uint16Array","ZeroArray","fill","heap","static","HeapCls","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","noDisposeOnSet","noUpdateTTL","maxEntrySize","sizeCalculation","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchAbort","allowStaleOnFetchRejection","ignoreFetchAbort","unsafeExposeInternals","starts","ttls","keyMap","keyList","valList","free","isBackgroundFetch","backgroundFetch","moveToTail","indexes","rindexes","isStale","maxSize","calculatedSize","fetchMethod","dispose","disposeAfter","UintArray","shouldWarn","getRemainingTTL","unref","status","cachedNow","getNow","age","remainingTTL","entrySize","totalCalculatedSize","_i","_s","_st","_k","rentries","rkeys","rvalues","toStringTag","getOptions","__staleWhileFetching","thisp","rforEach","purgeStale","deleted","dump","load","setOptions","maxEntrySizeExceeded","__abortController","hasOptions","peekOptions","ac","fetchOpts","updateCache","ignoreAbort","fetchAborted","fetchError","fetchAbortIgnored","fetchResolved","fetchFail","bf","fetchUpdated","allowStaleAborted","noDelete","returnedStale","__returned","fetchDispatched","rej","fmp","fetchRejected","fetchOptions","forceRefresh","stale","staleVal","fetching","pi","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","prop","__webpack_exports__"],"sourceRoot":""}